{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Huang Hao' Blog I am a graduated student in Tianjin University. Here is my Blog. Enjoy the tour of exploring.","title":"Huang Hao' Blog"},{"location":"#huang-hao-blog","text":"I am a graduated student in Tianjin University. Here is my Blog. Enjoy the tour of exploring.","title":"Huang Hao' Blog"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/","text":"\u51f8\u4f18\u5316\u5b66\u4e60\u7b14\u8bb0 \u62c9\u683c\u6717\u65e5\u4e58\u6570\u6cd5 \u6781\u5927\u503c \u6781\u5c0f\u503c \u6700\u5927\u503c \u6700\u5c0f\u503c \u8d39\u9a6c\u5b9a\u7406 \u5229\u7528\u8d39\u9a6c\u5b9a\u7406\u627e\u6700\u5927\u503c \u591a\u5143\u51fd\u6570\u7684\u6781\u503c\u4e0e\u6700\u503c \u62c9\u683c\u6717\u65e5\u4e58\u6570 KKT\u5b9a\u7406 \u62c9\u683c\u6717\u65e5\u5b9a\u7406\u662f\u4e3a\u4e86\u6c42\u591a\u5143\u51fd\u6570\u7684\u6700\u503c KKT\u662f\u62c9\u683c\u6717\u65e5\u5b9a\u7406\u7684\u63a8\u5e7f \u6570\u5b66\u4f18\u5316\uff1a \u4f18\u5316\u95ee\u9898 \u4f18\u5316\u53d8\u91cf \u76ee\u6807\u51fd\u6570 \u7ea6\u675f\u51fd\u6570 \u6700\u4f18\u89e3\u3001\u89e3 \u7ebf\u6027\u89c4\u5212 \u76ee\u6807\u51fd\u6570\u548c\u7ea6\u675f\u51fd\u6570\u90fd\u662f\u7ebf\u6027\u51fd\u6570\u3002 \u51f8\u51fd\u6570 \u6240\u4ee5\u8bf4\uff0c\u7ebf\u6027\u89c4\u5212\u662f\u51f8\u4f18\u5316\u95ee\u9898\u3002\u51f8\u4f18\u5316\u95ee\u9898\u662f\u7ebf\u6027\u89c4\u5212\u7684\u6269\u5c55\u3002 \u6700\u5c0f\u4e8c\u4e58\u95ee\u9898 \u89e3\u6790\u89e3\uff1a A\u7684\u8f6c\u7f6e\u7528\u4e8e\u6784\u9020\u65b9\u9635 \u7ebf\u6027\u89c4\u5212 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c \\(x=[x_1,x_2,...,x_n]\\) \u90fd\u7ed9\u7684\u662f\u4e00\u4e2a\u884c\u5411\u91cf\u3002\u4f46\u662f\u6709\u65f6\u4e00\u4e2a\u52a0\u7c97\u7684 x \uff0c\u6307\u7684\u662f\u5217\u5411\u91cf\u3002 \u6c42\u89e3\u7ebf\u6027\u89c4\u5212\uff0c\u5355\u7eaf\u5f62\u6cd5\uff0c\u5185\u70b9\u6cd5 \u51f8\u4f18\u5316 \u975e\u7ebf\u6027\u4f18\u5316 \u975e\u7ebf\u6027\u51fd\u6570\u7684\u7ea6\u675f\u51fd\u6570\u662f\u975e\u7ebf\u6027\u7684\uff0c\u6240\u4ee5\u4e0d\u4e00\u5b9a\u662f\u51f8\u51fd\u6570\uff08\u975e\u7ebf\u6027\u4f18\u5316\u548c\u51f8\u4f18\u5316\u662f\u6709\u4ea4\u96c6\u7684\uff09 \u5c40\u90e8\u4f18\u5316 \u8d77\u59cb\u4f4d\u7f6e \u5927\u90e8\u5206\u5c40\u90e8\u65b9\u6cd5\u4ec5\u4ec5\u8981\u6c42\u76ee\u6807\u51fd\u6570\u548c\u7ea6\u675f\u51fd\u6570\u53ef\u5fae \u5168\u5c40\u4f18\u5316 \u975e\u51f8\u4f18\u5316\u4e2d\u7684\u51f8\u4f18\u5316 \u5c06\u51f8\u4f18\u5316\u548c\u5c40\u90e8\u4f18\u5316\u7ed3\u5408\u8d77\u6765\u3002 \u5c40\u90e8\u4f18\u5316\uff0c\u5229\u7528\u51f8\u4f18\u5316\u8fdb\u884c\u521d\u59cb\u503c\u7684\u9009\u62e9 \u975e\u51f8\u4f18\u5316\u4e2d\u7684\u51f8\u542f\u53d1\u5f0f\u7b97\u6cd5 \u5168\u5c40\u4f18\u5316\u7684\u754c \u51f8\u96c6 \u4ecb\u7ecd\u4e00\u4e9b\u6982\u5ff5\u4e0e\u5b9a\u4e49 \u76f4\u7ebf \u8fc7 \\(x_1,x_2\\) \u7684\u76f4\u7ebf \uff1a \u4eff\u5c04\u96c6\u5408 \u4e00\u4e2a\u4eff\u5c04\u96c6\u5408\uff1aC\u4e2d\u4efb\u610f\u4e24\u70b9\u6784\u6210\u7684\u76f4\u7ebf\uff0c\u4ecd\u7136\u5728C\u4e2d \u4f8b\u5b50\uff1a \u76f4\u7ebf\uff0c\u5e73\u9762 \u4eff\u5c04\u5305 C\u662f\u4efb\u610f\u96c6\u5408\uff0cC\u4e2d\u6240\u6709\u4eff\u5c04\u7ec4\u5408\u7ec4\u6210\u7684\u96c6\u5408\u4e3aaff C\u4eff\u5c04\u5305\u3002\uff08\u4e00\u79cd\u6269\u5927\u60c5\u51b5\uff09 \u4e24\u4e2a\u70b9\u7684\u4eff\u5c04\u5305\u662f\u4e00\u6761\u76f4\u7ebf \u4e09\u4e2a\u70b9\u7684\u4eff\u5c04\u5305\u662f\u5e73\u9762 \u4eff\u5c04\u7ef4\u5ea6 C\u7684\u653e\u5c04\u7ef4\u5ea6\u4e3a\u5176\u4eff\u5c04\u5305\u7684\u7ef4\u5ea6\u3002 \u51f8\u96c6 \u51f8\u7ec4\u5408 \u5982\u679cC\u662f\u51f8\u96c6\uff0c \\(x_1,..x_k\\) \u5c5e\u4e8eC\uff0c\u90a3\u4e48\u51f8\u7ec4\u5408\u4e5f\u5c5e\u4e8eC \u51f8\u5305 \u51f8\u5305\u603b\u662f\u51f8\u7684 \u4e5f\u5c31\u662f\u4e00\u79cd\u677e\u5f1b\u6761\u4ef6\uff0c\u5c06C\u96c6\u5408\uff0c\u8f6c\u5316\u4e3a\u51f8\u96c6\u3002 convC\u662f\u5305\u542bC\u7684\u6700\u5c0f\u51f8\u96c6\u3002 \u4f8b\u5b50\uff1a \u9525 \u9525\u7ec4\u5408 \u8d85\u5e73\u9762 \u534a\u7a7a\u95f4 \u591a\u9762\u4f53 \u7d27\u51d1\u8868\u8fbe\u5f0f\uff1a \u5bf9\u9762\u4f53\u662f\u6709\u9650\u4e2a\u7684\u534a\u7a7a\u95f4\u548c\u8d85\u5e73\u9762\u7684\u96c6\u5408 \u5355\u7eaf\u5f62 \u5355\u7eaf\u5f62\u662f\u4e00\u7c7b\u91cd\u8981\u7684\u591a\u9762\u4f53\u3002 \u7ebf\u6bb5 \u4e09\u89d2\u5f62 \u56db\u9762\u4f53 \u7ebf\u6027\u89c4\u5212 \u8f6c\u5316\u4e3a\u6807\u51c6\u5f62\u5f0f max \u589e\u52a0\u53d8\u91cf\uff0c\u4f7f\u5f97\u7ea6\u675f\u6761\u4ef6\u4e3a\u7b49\u5f0f b>0 \u57fa\u672c\u6982\u5ff5 \u53ef\u884c\u89e3 \u6700\u4f18\u89e3 \u57fa \u5047\u8bbeA\u4e3a\u7ea6\u675f\u65b9\u7a0b \\(m\\times n\\) \u7684\u4e3e\u8bc1\uff0c\u5176\u79e9\u4e3a \\(m\\) , \u5982\u679cB\u662f\u77e9\u9635A\u4e2d\u7684\u4e00\u4e2a \\(m\\times m\\) \u7684\u6ee1\u79e9\u5b50\u77e9\u9635\uff0c\u5219B\u4e3a\u4e00\u4e2a\u57fa\u3002 M * N \u7684\u7cfb\u6570\u77e9\u9635 \u91cc\u9762\u7684\u4e00\u4e2aM*M\u7684\u6ee1\u79e9\u5b50\u77e9\u9635 \u5c31\u662f\u4e00\u4e2a\u57fa \u5982\u679c\u4eba\u4e3a\u7684\u5b9a\u4e49\u975e\u57fa\u53d8\u91cf\u4e3a0\uff0c\u4e24\u4e2a\u65b9\u7a0b\u662f\u540c\u89e3\u7684\u3002 \u57fa\u89e3 \\(C_n^m\\) \u4e2a\u57fa\u89e3 \u96c6\u89e3\u662f\u9876\u70b9\u4f4d\u7f6e \u5f3a\u7ea6\u675f\u65b9\u7a0b\u7684\u6240\u6709\u4ea4\u70b9 \u57fa\u53ef\u884c\u89e3 \u6ee1\u8db3\u975e\u8d1f\u7ea6\u675f\u7684\u57fa\u89e3\u4e3a\u57fa\u53ef\u884c\u89e3 \u53ef\u884c\u57df\u7684\u9876\u70b9 \u89e3\u6cd5\u4e00\uff1a\u56fe\u89e3\u6cd5 \u89e3\u6cd5\u4e8c\uff1a\u5355\u7eaf\u5f62\u6cd5 \u539f\u7406\u8be6\u89e3 \u7531\u5b9a\u7406\u53ef\u77e5\uff0c\u5982\u679c\u8bf4\u7ebf\u6027\u89c4\u5212\u5b58\u5728\u6700\u4f18\u89e3\uff0c\u90a3\u4e48\u4e00\u5b9a \u6709\u4e00\u4e2a\u57fa\u53ef\u884c\u89e3\u662f\u6700\u4f18\u89e3 \uff0c\u6362\u800c\u8a00\u4e4b\uff0c\u6709\u4e00\u4e2a\u9876\u70b9\u80af\u5b9a\u662f\u6700\u4f18\u89e3\u3002\u4e00\u5171\u6709 \\(C_n^m\\) \u4e2a\u9876\u70b9 \u7cfb\u6570\u7684\u589e\u5e7f\u77e9\u9635\u53ef\u4ee5\u5199\u4e3a\uff1a \u200b \u8fd9\u4e2a\u60c5\u51b5\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u57fa\u53ef\u884c\u89e3\u4e3a\uff1a \u63a2\u7d22\u4e0b\u4e00\u4e2a\u57fa\u53ef\u884c\u89e3\u3002 \u5224\u65ad\u662f\u5426\u4e3a\u6700\u4f18\u89e3\u3002 \u5224\u522b\u6570 \\(\\theta_i\\) : \u57fa\u53d8\u91cf\u7684\u68c0\u9a8c\u6570\u5fc5\u4e3a0 \u5b58\u5728 \\(\\theta_i\\) \u5927\u4e8e0\uff0c\u5c31\u8bf4\u660e\u4e0d\u662f\u6700\u4f18\u89e3 \u5f53\u4f60\u5f15\u5165\u4e00\u4e2a\u5355\u4f4d\u7684\u53d8\u91cf\u7684\u65f6\u5019\u80fd\u7ed9\u76ee\u6807\u51fd\u6570\u5e26\u6765\u591a\u5927\u6539\u53d8\u3002 \u5355\u7eaf\u5f62 $$ \\sigma_{j}=c_{j}-\\boldsymbol{C} {\\boldsymbol{B}} \\boldsymbol{B}^{-1} \\boldsymbol{P} {j}=c_{j}-\\sum_{i=1}^{m} a_{i j} y_{i} $$ \\(c_j\\) \u4ea7\u54c1\u5229\u6da6 \\(z_j\\) \u751f\u4ea7\u8be5\u4ea7\u54c1\u6d88\u8017\u5404\u79cd\u8d44\u6e90\u7684\u5f71\u5b50\u4ef7\u683c \u4e00\u822c\u7ebf\u6027\u89c4\u5212\uff1a\u786e\u5b9a\u8d44\u6e90\u5206\u914d\u60c5\u51b5\uff0c\u6bcf\u4e2ax\u90fd\u662f\u4e00\u79cd\u4ea7\u54c1 \u5bf9\u5076\u95ee\u9898\uff1a\u6bcf\u4e2ay\u90fd\u662f\u5bf9\u8d44\u6e90\u7684\u4f30\u503c \u5c0f\u7ed3 \u89e3\u6cd5\u4e09\uff1a\u5355\u7eaf\u5f62\u6cd5\uff0c\u4eba\u5de5\u53d8\u91cf\u6cd5 \u89e3\u6cd5\u56db\uff1a\u5355\u7eaf\u5f62\u6cd5\uff0c \u4e8c\u9636\u6bb5\u6cd5 \u6570\u636e\u5305\u7edc\u5206\u6790\uff08DEA\u5206\u6790\uff09 \u56db\u6240\u5b66\u6821\u90fd\u57f9\u517b800\u540d\u5b66\u751f\uff0c\u4e3a\u4e86\u7f29\u51cf\u6210\u672c\uff0c\u6559\u804c\u5de5\u548c\u5efa\u7b51\u9762\u79ef\u90fd\u8981\u5c3d\u53ef\u80fd\u5c0f\uff0c\u6240\u4ee5\u5c31\u5f62\u6210\u4e86 \u751f\u4ea7\u524d\u6cbf\u9762 \u7ebf\u6027\u89c4\u5212\u7684\u5bf9\u5076\u7406\u8bba \u5bf9\u5076\u95ee\u9898\u7684\u57fa\u672c\u6027\u8d28 \u5f31\u5bf9\u5076\u6027 \u539f\u95ee\u9898\u6700\u4f18\u89e3\u7684\u53e3\u6807\u51fd\u6570\u4f2f\u662f\u827e\u5bf9\u5076\u95ee\u9898\u53e3\u6807\u51fd\u6570\u503c\u7684\u4e0b\u754c\uff1b\u53cd\u4e4b\u5bf9\u5076\u95ee\u9898\u6700\u4f18\u89e3\u7684\u53e3\u6807\u51fd\u6570\u503c\u662f\u5176\u539f\u95ee\u9898\u53e3\u6807\u51fd\u6570\u503c\u7684\u4e0a\u754c\u3002 \u6700\u4f18\u6027 \u5f3a\u5bf9\u5076\u6027 \uff1a\u82e5\u539f\u95ee\u9898\u53ca\u5176\u5bf9\u5076\u95ee\u9898\u5747\u5177\u6709\u53ef\u884c\u89e3\uff0c\u5219\u4e24\u8005\u5747\u5177\u6709 \u6700\u4f18\u89e3\uff0c\u4e14\u5b83\u4eec\u6700\u4f18\u89e3\u7684\u53e3\u6807\u51fd\u6570\u503c\u76f8\u7b49\u3002 \u4e92\u8865\u677e\u5f1b\u6027 \u5f71\u5b50\u4ef7\u683c \u751f\u4ea7\u5bb6\u7535\uff0c\u6709\u4e24\u79cd\u5bb6\u7535\uff0c\u5229\u6da6\u5206\u522b\u4e3a2\uff0c1\uff1a \u6362\u4e2a\u89d2\u5ea6\u601d\u8003\uff1a \u6536\u8d2d\u8be5\u516c\u53f8\uff0c\u5fc5\u987b\u51fa\u4ef7\u8981\u9ad8\u4e8e\u5b83\u7684\u751f\u4ea7\u5229\u6da6\uff1a \u8fd9\u6837\u5c31\u53ef\u4ee5\u7b97\u51fa\u6536\u8d2d\u516c\u53f8\u7684\u6700\u4f4e\u4ef7\u3002 \u901a\u8fc7\u8ba1\u7b97\u51fa \\(y_1,y_2,y_3\\) \u53ef\u4ee5\u8ba1\u7b97\u51fa\u516c\u53f8\u4e09\u79cd\u8d44\u6e90\u7684\u4f30\u4ef7\uff0c\u4e5f\u79f0\u4e4b\u4e3a\u5f71\u5b50\u4ef7\u683c\u3002 \u7075\u654f\u5ea6\u5206\u6790 \u8fd0\u8f93\u95ee\u9898 \u6574\u6570\u89c4\u5212","title":"\u51f8\u4f18\u5316\u5b66\u4e60\u7b14\u8bb0"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_1","text":"","title":"\u51f8\u4f18\u5316\u5b66\u4e60\u7b14\u8bb0"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_2","text":"\u6781\u5927\u503c \u6781\u5c0f\u503c \u6700\u5927\u503c \u6700\u5c0f\u503c \u8d39\u9a6c\u5b9a\u7406 \u5229\u7528\u8d39\u9a6c\u5b9a\u7406\u627e\u6700\u5927\u503c","title":"\u62c9\u683c\u6717\u65e5\u4e58\u6570\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_3","text":"","title":"\u591a\u5143\u51fd\u6570\u7684\u6781\u503c\u4e0e\u6700\u503c"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_4","text":"","title":"\u62c9\u683c\u6717\u65e5\u4e58\u6570"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#kkt","text":"\u62c9\u683c\u6717\u65e5\u5b9a\u7406\u662f\u4e3a\u4e86\u6c42\u591a\u5143\u51fd\u6570\u7684\u6700\u503c KKT\u662f\u62c9\u683c\u6717\u65e5\u5b9a\u7406\u7684\u63a8\u5e7f","title":"KKT\u5b9a\u7406"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_5","text":"","title":"\u6570\u5b66\u4f18\u5316\uff1a"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_6","text":"\u4f18\u5316\u53d8\u91cf \u76ee\u6807\u51fd\u6570 \u7ea6\u675f\u51fd\u6570 \u6700\u4f18\u89e3\u3001\u89e3","title":"\u4f18\u5316\u95ee\u9898"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_7","text":"\u76ee\u6807\u51fd\u6570\u548c\u7ea6\u675f\u51fd\u6570\u90fd\u662f\u7ebf\u6027\u51fd\u6570\u3002","title":"\u7ebf\u6027\u89c4\u5212"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_8","text":"\u6240\u4ee5\u8bf4\uff0c\u7ebf\u6027\u89c4\u5212\u662f\u51f8\u4f18\u5316\u95ee\u9898\u3002\u51f8\u4f18\u5316\u95ee\u9898\u662f\u7ebf\u6027\u89c4\u5212\u7684\u6269\u5c55\u3002","title":"\u51f8\u51fd\u6570"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_9","text":"\u89e3\u6790\u89e3\uff1a A\u7684\u8f6c\u7f6e\u7528\u4e8e\u6784\u9020\u65b9\u9635","title":"\u6700\u5c0f\u4e8c\u4e58\u95ee\u9898"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_10","text":"\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c \\(x=[x_1,x_2,...,x_n]\\) \u90fd\u7ed9\u7684\u662f\u4e00\u4e2a\u884c\u5411\u91cf\u3002\u4f46\u662f\u6709\u65f6\u4e00\u4e2a\u52a0\u7c97\u7684 x \uff0c\u6307\u7684\u662f\u5217\u5411\u91cf\u3002 \u6c42\u89e3\u7ebf\u6027\u89c4\u5212\uff0c\u5355\u7eaf\u5f62\u6cd5\uff0c\u5185\u70b9\u6cd5","title":"\u7ebf\u6027\u89c4\u5212"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_11","text":"","title":"\u51f8\u4f18\u5316"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_12","text":"\u975e\u7ebf\u6027\u51fd\u6570\u7684\u7ea6\u675f\u51fd\u6570\u662f\u975e\u7ebf\u6027\u7684\uff0c\u6240\u4ee5\u4e0d\u4e00\u5b9a\u662f\u51f8\u51fd\u6570\uff08\u975e\u7ebf\u6027\u4f18\u5316\u548c\u51f8\u4f18\u5316\u662f\u6709\u4ea4\u96c6\u7684\uff09 \u5c40\u90e8\u4f18\u5316 \u8d77\u59cb\u4f4d\u7f6e \u5927\u90e8\u5206\u5c40\u90e8\u65b9\u6cd5\u4ec5\u4ec5\u8981\u6c42\u76ee\u6807\u51fd\u6570\u548c\u7ea6\u675f\u51fd\u6570\u53ef\u5fae \u5168\u5c40\u4f18\u5316","title":"\u975e\u7ebf\u6027\u4f18\u5316"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_13","text":"\u5c06\u51f8\u4f18\u5316\u548c\u5c40\u90e8\u4f18\u5316\u7ed3\u5408\u8d77\u6765\u3002 \u5c40\u90e8\u4f18\u5316\uff0c\u5229\u7528\u51f8\u4f18\u5316\u8fdb\u884c\u521d\u59cb\u503c\u7684\u9009\u62e9 \u975e\u51f8\u4f18\u5316\u4e2d\u7684\u51f8\u542f\u53d1\u5f0f\u7b97\u6cd5 \u5168\u5c40\u4f18\u5316\u7684\u754c","title":"\u975e\u51f8\u4f18\u5316\u4e2d\u7684\u51f8\u4f18\u5316"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_14","text":"\u4ecb\u7ecd\u4e00\u4e9b\u6982\u5ff5\u4e0e\u5b9a\u4e49","title":"\u51f8\u96c6"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_15","text":"\u8fc7 \\(x_1,x_2\\) \u7684\u76f4\u7ebf \uff1a","title":"\u76f4\u7ebf"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_16","text":"\u4e00\u4e2a\u4eff\u5c04\u96c6\u5408\uff1aC\u4e2d\u4efb\u610f\u4e24\u70b9\u6784\u6210\u7684\u76f4\u7ebf\uff0c\u4ecd\u7136\u5728C\u4e2d \u4f8b\u5b50\uff1a \u76f4\u7ebf\uff0c\u5e73\u9762","title":"\u4eff\u5c04\u96c6\u5408"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_17","text":"C\u662f\u4efb\u610f\u96c6\u5408\uff0cC\u4e2d\u6240\u6709\u4eff\u5c04\u7ec4\u5408\u7ec4\u6210\u7684\u96c6\u5408\u4e3aaff C\u4eff\u5c04\u5305\u3002\uff08\u4e00\u79cd\u6269\u5927\u60c5\u51b5\uff09 \u4e24\u4e2a\u70b9\u7684\u4eff\u5c04\u5305\u662f\u4e00\u6761\u76f4\u7ebf \u4e09\u4e2a\u70b9\u7684\u4eff\u5c04\u5305\u662f\u5e73\u9762","title":"\u4eff\u5c04\u5305"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_18","text":"C\u7684\u653e\u5c04\u7ef4\u5ea6\u4e3a\u5176\u4eff\u5c04\u5305\u7684\u7ef4\u5ea6\u3002","title":"\u4eff\u5c04\u7ef4\u5ea6"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_19","text":"","title":"\u51f8\u96c6"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_20","text":"\u5982\u679cC\u662f\u51f8\u96c6\uff0c \\(x_1,..x_k\\) \u5c5e\u4e8eC\uff0c\u90a3\u4e48\u51f8\u7ec4\u5408\u4e5f\u5c5e\u4e8eC","title":"\u51f8\u7ec4\u5408"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_21","text":"\u51f8\u5305\u603b\u662f\u51f8\u7684 \u4e5f\u5c31\u662f\u4e00\u79cd\u677e\u5f1b\u6761\u4ef6\uff0c\u5c06C\u96c6\u5408\uff0c\u8f6c\u5316\u4e3a\u51f8\u96c6\u3002 convC\u662f\u5305\u542bC\u7684\u6700\u5c0f\u51f8\u96c6\u3002 \u4f8b\u5b50\uff1a","title":"\u51f8\u5305"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_22","text":"","title":"\u9525"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_23","text":"","title":"\u9525\u7ec4\u5408"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_24","text":"","title":"\u8d85\u5e73\u9762"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_25","text":"","title":"\u534a\u7a7a\u95f4"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_26","text":"\u7d27\u51d1\u8868\u8fbe\u5f0f\uff1a \u5bf9\u9762\u4f53\u662f\u6709\u9650\u4e2a\u7684\u534a\u7a7a\u95f4\u548c\u8d85\u5e73\u9762\u7684\u96c6\u5408","title":"\u591a\u9762\u4f53"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_27","text":"\u5355\u7eaf\u5f62\u662f\u4e00\u7c7b\u91cd\u8981\u7684\u591a\u9762\u4f53\u3002 \u7ebf\u6bb5 \u4e09\u89d2\u5f62 \u56db\u9762\u4f53","title":"\u5355\u7eaf\u5f62"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_28","text":"","title":"\u7ebf\u6027\u89c4\u5212"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_29","text":"max \u589e\u52a0\u53d8\u91cf\uff0c\u4f7f\u5f97\u7ea6\u675f\u6761\u4ef6\u4e3a\u7b49\u5f0f b>0","title":"\u8f6c\u5316\u4e3a\u6807\u51c6\u5f62\u5f0f"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_30","text":"\u53ef\u884c\u89e3 \u6700\u4f18\u89e3 \u57fa \u5047\u8bbeA\u4e3a\u7ea6\u675f\u65b9\u7a0b \\(m\\times n\\) \u7684\u4e3e\u8bc1\uff0c\u5176\u79e9\u4e3a \\(m\\) , \u5982\u679cB\u662f\u77e9\u9635A\u4e2d\u7684\u4e00\u4e2a \\(m\\times m\\) \u7684\u6ee1\u79e9\u5b50\u77e9\u9635\uff0c\u5219B\u4e3a\u4e00\u4e2a\u57fa\u3002 M * N \u7684\u7cfb\u6570\u77e9\u9635 \u91cc\u9762\u7684\u4e00\u4e2aM*M\u7684\u6ee1\u79e9\u5b50\u77e9\u9635 \u5c31\u662f\u4e00\u4e2a\u57fa \u5982\u679c\u4eba\u4e3a\u7684\u5b9a\u4e49\u975e\u57fa\u53d8\u91cf\u4e3a0\uff0c\u4e24\u4e2a\u65b9\u7a0b\u662f\u540c\u89e3\u7684\u3002 \u57fa\u89e3 \\(C_n^m\\) \u4e2a\u57fa\u89e3 \u96c6\u89e3\u662f\u9876\u70b9\u4f4d\u7f6e \u5f3a\u7ea6\u675f\u65b9\u7a0b\u7684\u6240\u6709\u4ea4\u70b9 \u57fa\u53ef\u884c\u89e3 \u6ee1\u8db3\u975e\u8d1f\u7ea6\u675f\u7684\u57fa\u89e3\u4e3a\u57fa\u53ef\u884c\u89e3 \u53ef\u884c\u57df\u7684\u9876\u70b9","title":"\u57fa\u672c\u6982\u5ff5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_31","text":"","title":"\u89e3\u6cd5\u4e00\uff1a\u56fe\u89e3\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_32","text":"","title":"\u89e3\u6cd5\u4e8c\uff1a\u5355\u7eaf\u5f62\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_33","text":"\u7531\u5b9a\u7406\u53ef\u77e5\uff0c\u5982\u679c\u8bf4\u7ebf\u6027\u89c4\u5212\u5b58\u5728\u6700\u4f18\u89e3\uff0c\u90a3\u4e48\u4e00\u5b9a \u6709\u4e00\u4e2a\u57fa\u53ef\u884c\u89e3\u662f\u6700\u4f18\u89e3 \uff0c\u6362\u800c\u8a00\u4e4b\uff0c\u6709\u4e00\u4e2a\u9876\u70b9\u80af\u5b9a\u662f\u6700\u4f18\u89e3\u3002\u4e00\u5171\u6709 \\(C_n^m\\) \u4e2a\u9876\u70b9 \u7cfb\u6570\u7684\u589e\u5e7f\u77e9\u9635\u53ef\u4ee5\u5199\u4e3a\uff1a \u200b \u8fd9\u4e2a\u60c5\u51b5\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u57fa\u53ef\u884c\u89e3\u4e3a\uff1a \u63a2\u7d22\u4e0b\u4e00\u4e2a\u57fa\u53ef\u884c\u89e3\u3002 \u5224\u65ad\u662f\u5426\u4e3a\u6700\u4f18\u89e3\u3002","title":"\u539f\u7406\u8be6\u89e3"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_34","text":"\\(\\theta_i\\) : \u57fa\u53d8\u91cf\u7684\u68c0\u9a8c\u6570\u5fc5\u4e3a0 \u5b58\u5728 \\(\\theta_i\\) \u5927\u4e8e0\uff0c\u5c31\u8bf4\u660e\u4e0d\u662f\u6700\u4f18\u89e3 \u5f53\u4f60\u5f15\u5165\u4e00\u4e2a\u5355\u4f4d\u7684\u53d8\u91cf\u7684\u65f6\u5019\u80fd\u7ed9\u76ee\u6807\u51fd\u6570\u5e26\u6765\u591a\u5927\u6539\u53d8\u3002","title":"\u5224\u522b\u6570"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_35","text":"$$ \\sigma_{j}=c_{j}-\\boldsymbol{C} {\\boldsymbol{B}} \\boldsymbol{B}^{-1} \\boldsymbol{P} {j}=c_{j}-\\sum_{i=1}^{m} a_{i j} y_{i} $$ \\(c_j\\) \u4ea7\u54c1\u5229\u6da6 \\(z_j\\) \u751f\u4ea7\u8be5\u4ea7\u54c1\u6d88\u8017\u5404\u79cd\u8d44\u6e90\u7684\u5f71\u5b50\u4ef7\u683c \u4e00\u822c\u7ebf\u6027\u89c4\u5212\uff1a\u786e\u5b9a\u8d44\u6e90\u5206\u914d\u60c5\u51b5\uff0c\u6bcf\u4e2ax\u90fd\u662f\u4e00\u79cd\u4ea7\u54c1 \u5bf9\u5076\u95ee\u9898\uff1a\u6bcf\u4e2ay\u90fd\u662f\u5bf9\u8d44\u6e90\u7684\u4f30\u503c","title":"\u5355\u7eaf\u5f62"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_36","text":"","title":"\u5c0f\u7ed3"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_37","text":"","title":"\u89e3\u6cd5\u4e09\uff1a\u5355\u7eaf\u5f62\u6cd5\uff0c\u4eba\u5de5\u53d8\u91cf\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_38","text":"","title":"\u89e3\u6cd5\u56db\uff1a\u5355\u7eaf\u5f62\u6cd5\uff0c \u4e8c\u9636\u6bb5\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#dea","text":"\u56db\u6240\u5b66\u6821\u90fd\u57f9\u517b800\u540d\u5b66\u751f\uff0c\u4e3a\u4e86\u7f29\u51cf\u6210\u672c\uff0c\u6559\u804c\u5de5\u548c\u5efa\u7b51\u9762\u79ef\u90fd\u8981\u5c3d\u53ef\u80fd\u5c0f\uff0c\u6240\u4ee5\u5c31\u5f62\u6210\u4e86 \u751f\u4ea7\u524d\u6cbf\u9762","title":"\u6570\u636e\u5305\u7edc\u5206\u6790\uff08DEA\u5206\u6790\uff09"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_39","text":"","title":"\u7ebf\u6027\u89c4\u5212\u7684\u5bf9\u5076\u7406\u8bba"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_40","text":"\u5f31\u5bf9\u5076\u6027 \u539f\u95ee\u9898\u6700\u4f18\u89e3\u7684\u53e3\u6807\u51fd\u6570\u4f2f\u662f\u827e\u5bf9\u5076\u95ee\u9898\u53e3\u6807\u51fd\u6570\u503c\u7684\u4e0b\u754c\uff1b\u53cd\u4e4b\u5bf9\u5076\u95ee\u9898\u6700\u4f18\u89e3\u7684\u53e3\u6807\u51fd\u6570\u503c\u662f\u5176\u539f\u95ee\u9898\u53e3\u6807\u51fd\u6570\u503c\u7684\u4e0a\u754c\u3002 \u6700\u4f18\u6027 \u5f3a\u5bf9\u5076\u6027 \uff1a\u82e5\u539f\u95ee\u9898\u53ca\u5176\u5bf9\u5076\u95ee\u9898\u5747\u5177\u6709\u53ef\u884c\u89e3\uff0c\u5219\u4e24\u8005\u5747\u5177\u6709 \u6700\u4f18\u89e3\uff0c\u4e14\u5b83\u4eec\u6700\u4f18\u89e3\u7684\u53e3\u6807\u51fd\u6570\u503c\u76f8\u7b49\u3002 \u4e92\u8865\u677e\u5f1b\u6027","title":"\u5bf9\u5076\u95ee\u9898\u7684\u57fa\u672c\u6027\u8d28"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_41","text":"\u751f\u4ea7\u5bb6\u7535\uff0c\u6709\u4e24\u79cd\u5bb6\u7535\uff0c\u5229\u6da6\u5206\u522b\u4e3a2\uff0c1\uff1a \u6362\u4e2a\u89d2\u5ea6\u601d\u8003\uff1a \u6536\u8d2d\u8be5\u516c\u53f8\uff0c\u5fc5\u987b\u51fa\u4ef7\u8981\u9ad8\u4e8e\u5b83\u7684\u751f\u4ea7\u5229\u6da6\uff1a \u8fd9\u6837\u5c31\u53ef\u4ee5\u7b97\u51fa\u6536\u8d2d\u516c\u53f8\u7684\u6700\u4f4e\u4ef7\u3002 \u901a\u8fc7\u8ba1\u7b97\u51fa \\(y_1,y_2,y_3\\) \u53ef\u4ee5\u8ba1\u7b97\u51fa\u516c\u53f8\u4e09\u79cd\u8d44\u6e90\u7684\u4f30\u4ef7\uff0c\u4e5f\u79f0\u4e4b\u4e3a\u5f71\u5b50\u4ef7\u683c\u3002","title":"\u5f71\u5b50\u4ef7\u683c"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_42","text":"","title":"\u7075\u654f\u5ea6\u5206\u6790"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_43","text":"","title":"\u8fd0\u8f93\u95ee\u9898"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_44","text":"","title":"\u6574\u6570\u89c4\u5212"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/","text":"\u300a\u64cd\u4f5c\u7cfb\u7edf\u300b \u5b9a\u4e49 \u64cd\u4f5c\u7cfb\u7edf\u662f\u4e00\u4e2a\u63a7\u5236\u7a0b\u5e8f\uff1b \u7ba1\u7406\u5e94\u7528\u7a0b\u5e8f\uff1b \u4e3a\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u670d\u52a1\uff1b \u6740\u6b7b\u5e94\u7528\u7a0b\u5e8f\uff1b \u8d44\u6e90\u7ba1\u7406\uff1b \u7ba1\u7406\u5916\u8bbe\uff0c\u5206\u914d\u8d44\u6e90\uff1b \u5c42\u6b21 \u786c\u4ef6\u4e4b\u4e0a \u5e94\u7528\u7a0b\u5e8f\u4e4b\u4e0b \u5185\u90e8\u7ec4\u4ef6 CPU\u8c03\u5ea6\u5668 \u7269\u7406\u5185\u5b58 \u865a\u62df\u5185\u5b58 \u6587\u4ef6\u7cfb\u7edf\u7ba1\u7406 \u4e2d\u65ad\u5904\u7406\u4e0e\u8bbe\u5907\u9a71\u52a8 \u6982\u5ff5 \u5e76\u53d1\uff1a\u4e00\u6bb5\u65f6\u95f4\u5185\uff0c\u591a\u4e2a\u7a0b\u5e8f\u8fd0\u884c \u5e76\u884c\uff1a\u4e00\u4e2a\u65f6\u95f4\u70b9\uff0c\u591a\u4e2a\u7a0b\u5e8f\u8fd0\u884c \u865a\u62df\u5316\uff1a\u4e00\u53f0\u7269\u7406\u673a\u5668\u865a\u62df\u4e3a\u591a\u53f0\u673a\u5668 \u7c7b\u522b UNIX BSD\u5bb6\u65cf unix \u4f2f\u514b\u5229\u5bb6\u65cf Linux\u5bb6\u65cf windows\u5bb6\u65cf \u53d1\u5c55 60\u5e74\u4ee3 \u6279\u5904\u7406 \u5185\u5b58\u5bb9\u91cf\u8d8a\u6765\u8d8a\u5927\uff0cCPU\u6267\u884c\u591a\u4e2a\u7a0b\u5e8f --\u5e76\u53d1 IO\u6267\u884c\u6162\uff0c\u4f7f\u5f97\u7b49\u5f85\u65f6\u95f4\u8ba9\u5176\u4ed6\u7a0b\u5e8f\u6765\u6267\u884c \uff08\u8c03\u5ea6\uff0c\u4e2d\u65ad\uff09 \u5206\u65f6\u7cfb\u7edf\uff0c\u5206\u65f6\u8c03\u52a8\u3002 \u5343\u5206\u4e4b\u4e00\u79d2----\u65f6\u95f4\u7247\uff0c\u8f6e\u6d41\u5207\u6362\u8fd0\u884c\u3002\u201c\u65f6\u949f\u201d\u5b9a\u671f\u4ea7\u751f\u4e2d\u65ad \u5206\u5e03\u5f0f\u64cd\u4f5c\u7cfb\u7edf \u67b6\u6784 \u677e\u8026\u5408 \u7d27\u8026\u5408 \u865a\u62df\u673a \u542f\u52a8 disk \u5b58\u653eOS\uff0cbootloader BIOS \u57fa\u672cIO\u7cfb\u7edf \u52a0\u7535\u81ea\u68c0 \u5bfb\u627e\u663e\u5361\u548c\u6267\u884cBIOS \u5148\u52a0\u8f7dbootloader\uff0cbootloader\u52a0\u8f7dos \u4e2d\u65ad\uff0c\u5f02\u5e38\uff0c\u7cfb\u7edf\u8c03\u7528 \u7cfb\u7edf\u8c03\u7528\uff1a \u5e94\u7528\u7a0b\u5e8f\u5411OS\u53d1\u51fa\u670d\u52a1\u8bf7\u6c42 \u5f02\u5e38\uff1a \u975e\u6cd5\u7a0b\u5e8f\uff0c\u975e\u6cd5\u6307\u4ee4 \u4e2d\u65ad\uff1a \u6765\u6e90\u4e8e\u5916\u8bbe \u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u5185\u6838\u662f\u88ab\u4fe1\u4efb\u7684\u7b2c\u4e09\u65b9 \u53ea\u6709\u5185\u6838\u53ef\u4ee5\u6267\u884c\u7279\u6743\u6307\u4ee4 \u4e3a\u4e86\u65b9\u4fbf\u5e94\u7528\u7a0b\u5e8f \u5904\u7406\u65f6\u95f4\uff1a \u4e2d\u65ad\uff1a\u5f02\u6b65 \u5f02\u5e38\uff1a\u540c\u6b65 \u7cfb\u7edf\u8c03\u7528\uff1a\u5f02\u6b65\u4e0e\u540c\u6b65 \u54cd\u5e94\uff1a \u4e2d\u65ad\uff1a\u5e94\u7528\u7a0b\u5e8f\u65e0\u6cd5\u611f\u77e5 \u5f02\u5e38\uff1a\u6740\u6b7b\u6216\u91cd\u65b0\u6267\u884c \u7cfb\u7edf\u8c03\u7528\uff1a\u7b49\u5f85\u548c\u6301\u7eed \u4e2d\u65ad \u786c\u4ef6\uff1a\u8bbe\u7f6e\u4e2d\u65ad\u6807\u8bb0\uff08cpu\u521d\u59cb\u5316\uff09\u3002 \u64cd\u4f5c\u7cfb\u7edf\uff1a\u4fdd\u5b58\u7a0b\u5e8f\u6267\u884c\u7684\u73b0\u573a\u3002 \u8f6f\u4ef6\uff1a\u4fdd\u5b58\u5f53\u524d\u5904\u7406\u72b6\u6001\uff0c\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\uff0c\u6e05\u9664\u4e2d\u65ad\u6807\u8bb0\uff0c\u56de\u590d \u5f02\u5e38 \u5f02\u5e38\u73b0\u573a \u5f02\u5e38\u5904\u7406 \u6062\u590d\u73b0\u573a \u7cfb\u7edf\u8c03\u7528 \u7cfb\u7edf\u8c03\u7528\u63a5\u53e3 print \u8c03\u7528\u7cfb\u7edf\u63a5\u53e3 write Win32 API \u7528\u4e8e windows https://docs.microsoft.com/en-us/windows/win32/apiindex/windows-api-list POSIX API Java API \u7528\u4e8e java \u865a\u62df\u673a \u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u4ee5\u53ca\u5185\u5b58\u5206\u5c42\u4f53\u7cfb \u4e3b\u5b58\u5c31\u662f\u7269\u7406\u5185\u5b58\uff0c\u6bd4\u5bc4\u5b58\u5668\u4e0ecache\u5927\u5f88\u591a\uff0c\u4f46\u901f\u5ea6\u4e0d\u5982\u5bc4\u5b58\u5668\u4e0ecache\u3002 \u8d8a\u9760\u8fd1CPU\u8d8a\u5feb\uff0c\u4f46\u662f\u5bb9\u91cf\u8d8a\u5c0f -- \u5c42\u6b21\u7ed3\u6784 \u5730\u5740\u7a7a\u95f4\u4e0e\u5730\u5740\u751f\u6210 \u7269\u7406\u5730\u5740\u7a7a\u95f4\uff0c\u786c\u4ef6\u652f\u6301\u7684\u5730\u5740\u7a7a\u95f4\uff1b \u903b\u8f91\u5730\u5740\u7a7a\u95f4\uff0c\u5e94\u7528\u7a0b\u5e8f\u6240\u62e5\u6709\u7684\u5185\u5b58\u8303\u56f4\u3002 \u903b\u8f91\u5730\u5740\u7a7a\u95f4\u90fd\u662f\u843d\u5b9e\u5728\u7269\u7406\u5730\u5740\u7a7a\u95f4\u5185\u7684 \u6848\u4f8b\uff1ac\u7a0b\u5e8f c\u7f16\u8bd1\u4e3a\u6c47\u7f16\uff0c\u6c47\u7f16\u7528\u6c47\u7f16\u5668\u8f6c\u5316\u4e3a\u673a\u5668\u8bed\u8a00 \u903b\u8f91\u5730\u5740---\u6620\u5c04--->\u7269\u7406\u5730\u5740 CPU \u7684MMU\u67e5\u627e\u6620\u5c04\u8868 \u5185\u5b58\u788e\u7247\u95ee\u9898 \u7a7a\u95f2\u5185\u5b58\u4e0d\u80fd\u88ab\u5229\u7528 \u5916\u90e8\u788e\u7247 \u5185\u90e8\u788e\u7247 \u5206\u533a\u7684\u52a8\u6001\u5206\u914d \u7528\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u8fdb\u884c\u7ba1\u7406 \u9996\u6b21\u9002\u914d\u7b97\u6cd5 \u7b80\u5355\uff0c\u5bb9\u6613\u4ea7\u751f\u5916\u788e\u7247\uff0c\u4e0d\u786e\u5b9a\u6027 \u6700\u4f18\u9002\u914d\u7b97\u6cd5 \u627e\u5230\u6700\u9002\u5408\u7684\u7a7a\u95f2\u5757 \u907f\u514d\u5207\u5272\u5927\u7a7a\u95f2\u5757\uff0c\u6700\u5c0f\u5316\u5916\u90e8\u788e\u7247\u3002\u9700\u8981\u6309size\u6392\u5e8f\uff0c\u5bb9\u6613\u4ea7\u751f\u5fae\u5c0f\u5916\u788e\u7247 \u6700\u574f\u9002\u914d\u7b97\u6cd5 \u5bb9\u6613\u7834\u788e\u5927\u7684\u7a7a\u95f2\u5757\u3002 \u538b\u7f29\u5f0f\u4e0e\u4ea4\u6362\u5f0f\u788e\u7247\u6574\u7406 SWAP \u6362\u5165\u6362\u51fa https://www.bilibili.com/video/BV1wq4y1M7qf?p=15&spm_id_from=pageDriver \u975e\u8fde\u7eed\u5185\u5b58\u5206\u914d \u8fde\u7eed\u5185\u5b58\u5206\u914d\uff1a\u7ed9\u5e94\u7528\u7a0b\u5e8f\u5206\u914d\u7684\u5730\u5740\u7a7a\u95f4\u662f\u8fde\u7eed\u7684 \u5efa\u7acb\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u4e4b\u95f4\u7684\u8f6c\u6362 \u8f6f\u4ef6\u65b9\u6848 \u786c\u4ef6\u65b9\u6848 \u4e24\u79cd\u786c\u4ef6\u65b9\u6848\uff1a\u5206\u6bb5\uff0c\u5206\u9875 \u5206\u6bb5 \u6bb5\u8868\u4e2d\u5b58\u50a8\uff1a \u8d77\u59cb\uff0c\u957f\u5ea6 \u6bb5\u8868\u662fOS\u65e9\u5c31\u5efa\u7acb\u597d\u7684\uff0c\u4f9d\u636e\u5177\u4f53\u786c\u4ef6 \u5206\u9875 \u5206\u9875\u7684\u5730\u5740\u7a7a\u95f4 \u5206\u9875\u5bfb\u5740 \u9875\u53f7\uff0c\u9875\u504f\u79fb \u9875\u7684\u5927\u5c0f\u4e0d\u53d8\uff0c\u9875---\u300b\u7269\u7406\u9875\uff1a\u8d1e\u7684\u6620\u5c04\u5173\u7cfb \u9875\u8868\u7531\u64cd\u4f5c\u7cfb\u7edf\u5efa\u7acb \u591a\u7ea7\u9875\u8868 \u8282\u7701\u7a7a\u95f4 \u53cd\u5411\u9875\u8868\uff0c\u6839\u636e\u7269\u7406\u5730\u5740\u627e\u5230\u9875\u8d1e\u53f7 \u5173\u8054\u5185\u5b58\u65b9\u6848\u3002 \u57fa\u4e8e\u54c8\u5e0c\u67e5\u627e \u865a\u62df\u5185\u5b58 \u624b\u52a8\u8986\u76d6 \u81ea\u52a8\u4ea4\u6362 \u81ea\u52a8\u7684\u865a\u62df\u5185\u5b58 https://www.bilibili.com/video/BV1wq4y1M7qf?p=21 \u8986\u76d6\u6280\u672f \u4ea4\u6362\u6280\u672f \u865a\u62df\u5185\u5b58\u7ba1\u7406\u6280\u672f \u5185\u5b58\u4e0d\u591f\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u91c7\u7528\u8986\u76d6\u6280\u672f\u548c\u4ea4\u6362\u6280\u672f \u865a\u5b58\u6280\u672f\uff1a \u4e0d\u662f\u628a\u7a0b\u5e8f\u7684\u6240\u6709\u5185\u5bb9\u90fd\u653e\u5728\u5185\u5b58\u4e2d\uff1b \u52a8\u6001\u5b9e\u73b0\u5185\u5b58\u4e0e\u5916\u5b58\u4e4b\u95f4\u7684\u4ea4\u6362\u3002 \u7a0b\u5e8f\u7684\u5c40\u90e8\u6027\u539f\u7406\uff1a\u7a0b\u5e8f\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u7684\u4e00\u4e2a\u8f83\u77ed\u7684\u65f6\u671f\uff0c\u6240\u6267\u884c\u7684\u6307\u4ee4\u5730\u5740\u548c\u6307\u4ee4\u7684\u64cd\u4f5c\u5730\u5740\uff0c\u5206\u522b\u5c40\u9650\u4e8e\u4e00\u5b9a\u7684\u7a7a\u95f4\u3002 \u8fdb\u7a0b process \u8fdb\u7a0b\u662f\u4e00\u4e2a\u52a8\u6001\u7684\u8fc7\u7a0b\u3002 \u8fdb\u7a0b\u63a7\u5236\u5757 PCB process control block \u4e09\u4e2a\u4fe1\u606f\uff1a \u8fdb\u7a0b\u6807\u8bc6 PID \u5904\u7406\u673a\u72b6\u6001\u4fe1\u606f\u4fdd\u5b58\u533a \u7528\u6237\u53ef\u89c1\u5bc4\u5b58\u5668 \u63a7\u5236\u548c\u72b6\u6001\u5bc4\u5b58\u5668 \u6808\u6307\u9488 \u7ec4\u7ec7\u65b9\u5f0f\uff1a \u94fe\u8868 \u7d22\u5f15\u8868 \u8fdb\u7a0b\u7684\u751f\u547d\u5468\u671f \u8fdb\u7a0b\u521b\u5efa \u8fdb\u7a0b\u8fd0\u884c \u8fdb\u7a0b\u7b49\u5f85 \u8fdb\u7a0b\u5524\u9192 \u8fdb\u7a0b\u7ed3\u675f \u8fdb\u7a0b\u72b6\u6001\u53d8\u5316\u6a21\u578b \u65f6\u95f4\u7247\u5b8c\uff0c\u591a\u4e2a\u7a0b\u5e8f\u9ad8\u901f\u5207\u6362\u8fd0\u884c\u3002 \u8fdb\u7a0b\u6302\u8d77 \u6302\u8d77\u4e0e\u8fdb\u7a0b\u7684\u963b\u585e\u4e0d\u540c\u3002 \u8fdb\u7a0b\u6302\u8d77\u610f\u5473\u7740\u8fdb\u7a0b\u6ca1\u6709\u5360\u7528\u5185\u5b58\u7a7a\u95f4\uff0c\u5904\u4e8e\u6302\u8d77\u7684\u8fdb\u7a0b\u6620\u50cf\u5728\u786c\u76d8\u4e0a\u3002 \u64cd\u4f5c\u7cfb\u7edf\u8981\u7ef4\u62a4\u4e00\u7cfb\u5217\u8fdb\u7a0b\u3002 \u7ebf\u7a0b read()\u963b\u585e\u4e86\u6574\u4e2a\u7a0b\u5e8f\u8fdb\u884c \u7ebf\u7a0b\uff1a\u5982\u540c\u8fdb\u7a0b\u4e00\u6837\u5e76\u53d1\u8fd0\u884c \u4f46\u662f\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\u76f8\u540c\u7684\u5730\u5740\u7a7a\u95f4\u3002 \u7ebf\u7a0b\u7684\u4f18\u70b9\uff1a \u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u53ef\u4ee5\u540c\u65f6\u5b58\u5728\u591a\u4e2a\u7ebf\u7a0b \u5404\u4e2a\u7ebf\u7a0b\u5e76\u53d1\u8fdb\u884c \u5404\u4e2a\u7ebf\u7a0b\u5171\u4eab\u8d44\u6e90 \u7f3a\u70b9\uff1a \u4e00\u4e2a\u7ebf\u7a0b\u5d29\u6e83\uff0c\u4f1a\u5bfc\u81f4\u5176\u6240\u5c5e\u7684\u8fdb\u7a0b\u6240\u6709\u7684\u7ebf\u7a0b\u5d29\u6e83\u3002 \u591a\u7ebf\u7a0b \u9002\u7528\u4e8e\u9ad8\u6027\u80fd\u8ba1\u7b97 \u591a\u8fdb\u7a0b \u9002\u7528\u4e8e\u7f51\u7edc\u6d4f\u89c8\u5668 \u7ebf\u7a0b\u7684\u5b9e\u73b0 \u7528\u6237\u7ebf\u7a0b \u5185\u6838\u7ebf\u7a0b \u4e0a\u4e0b\u6587\u5207\u6362 ### \u8fdb\u7a0b\u52a0\u8f7d CPU\u8c03\u5ea6 \u8fdb\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362 CPU\u8c03\u5ea6\uff1a\u4ece\u5c31\u7eea\u961f\u5217\u4e2d\u6311\u9009\u4e00\u4e2a\u8fdb\u7a0b/\u7ebf\u7a0b\u4f5c\u4e3aCPU\u5c06\u8981\u8fd0\u884c\u7684\u4e0b\u4e00\u4e2a\u8fdb\u7a0b \u8c03\u5ea6\u7a0b\u5e8f\uff1a\u6311\u9009\u8fdb\u7a0b\u7684\u5185\u6838\u51fd\u6570 \u4ec0\u4e48\u65f6\u5019\u8c03\u5ea6 \u8c03\u5ea6\u539f\u5219 \u5145\u5206\u5730\u5229\u7528CPU\u3002 \u8bc4\u4ef7\u6307\u6807\uff1a \u8c03\u5ea6\u7b97\u6cd5 First Come First Server \u4e0d\u540c\u7684\u8c03\u5ea6\u987a\u5e8f\uff0c\u5468\u8f6c\u65f6\u95f4\u4f1a\u6709\u53d8\u5316\uff01\u56e0\u4e3a\u5468\u8f6c\u65f6\u95f4\u5305\u62ec\u4e86\u7b49\u5f85\u65f6\u95f4\u3002 https://www.bilibili.com/video/BV1wq4y1M7qf?p=50","title":"\u300a\u64cd\u4f5c\u7cfb\u7edf\u300b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_1","text":"","title":"\u300a\u64cd\u4f5c\u7cfb\u7edf\u300b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_2","text":"\u64cd\u4f5c\u7cfb\u7edf\u662f\u4e00\u4e2a\u63a7\u5236\u7a0b\u5e8f\uff1b \u7ba1\u7406\u5e94\u7528\u7a0b\u5e8f\uff1b \u4e3a\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u670d\u52a1\uff1b \u6740\u6b7b\u5e94\u7528\u7a0b\u5e8f\uff1b \u8d44\u6e90\u7ba1\u7406\uff1b \u7ba1\u7406\u5916\u8bbe\uff0c\u5206\u914d\u8d44\u6e90\uff1b","title":"\u5b9a\u4e49"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_3","text":"\u786c\u4ef6\u4e4b\u4e0a \u5e94\u7528\u7a0b\u5e8f\u4e4b\u4e0b","title":"\u5c42\u6b21"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_4","text":"CPU\u8c03\u5ea6\u5668 \u7269\u7406\u5185\u5b58 \u865a\u62df\u5185\u5b58 \u6587\u4ef6\u7cfb\u7edf\u7ba1\u7406 \u4e2d\u65ad\u5904\u7406\u4e0e\u8bbe\u5907\u9a71\u52a8","title":"\u5185\u90e8\u7ec4\u4ef6"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_5","text":"\u5e76\u53d1\uff1a\u4e00\u6bb5\u65f6\u95f4\u5185\uff0c\u591a\u4e2a\u7a0b\u5e8f\u8fd0\u884c \u5e76\u884c\uff1a\u4e00\u4e2a\u65f6\u95f4\u70b9\uff0c\u591a\u4e2a\u7a0b\u5e8f\u8fd0\u884c \u865a\u62df\u5316\uff1a\u4e00\u53f0\u7269\u7406\u673a\u5668\u865a\u62df\u4e3a\u591a\u53f0\u673a\u5668","title":"\u6982\u5ff5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_6","text":"UNIX BSD\u5bb6\u65cf unix \u4f2f\u514b\u5229\u5bb6\u65cf Linux\u5bb6\u65cf windows\u5bb6\u65cf","title":"\u7c7b\u522b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_7","text":"60\u5e74\u4ee3 \u6279\u5904\u7406 \u5185\u5b58\u5bb9\u91cf\u8d8a\u6765\u8d8a\u5927\uff0cCPU\u6267\u884c\u591a\u4e2a\u7a0b\u5e8f --\u5e76\u53d1 IO\u6267\u884c\u6162\uff0c\u4f7f\u5f97\u7b49\u5f85\u65f6\u95f4\u8ba9\u5176\u4ed6\u7a0b\u5e8f\u6765\u6267\u884c \uff08\u8c03\u5ea6\uff0c\u4e2d\u65ad\uff09 \u5206\u65f6\u7cfb\u7edf\uff0c\u5206\u65f6\u8c03\u52a8\u3002 \u5343\u5206\u4e4b\u4e00\u79d2----\u65f6\u95f4\u7247\uff0c\u8f6e\u6d41\u5207\u6362\u8fd0\u884c\u3002\u201c\u65f6\u949f\u201d\u5b9a\u671f\u4ea7\u751f\u4e2d\u65ad \u5206\u5e03\u5f0f\u64cd\u4f5c\u7cfb\u7edf","title":"\u53d1\u5c55"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_8","text":"\u677e\u8026\u5408 \u7d27\u8026\u5408 \u865a\u62df\u673a","title":"\u67b6\u6784"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_9","text":"disk \u5b58\u653eOS\uff0cbootloader BIOS \u57fa\u672cIO\u7cfb\u7edf \u52a0\u7535\u81ea\u68c0 \u5bfb\u627e\u663e\u5361\u548c\u6267\u884cBIOS \u5148\u52a0\u8f7dbootloader\uff0cbootloader\u52a0\u8f7dos","title":"\u542f\u52a8"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_10","text":"\u7cfb\u7edf\u8c03\u7528\uff1a \u5e94\u7528\u7a0b\u5e8f\u5411OS\u53d1\u51fa\u670d\u52a1\u8bf7\u6c42 \u5f02\u5e38\uff1a \u975e\u6cd5\u7a0b\u5e8f\uff0c\u975e\u6cd5\u6307\u4ee4 \u4e2d\u65ad\uff1a \u6765\u6e90\u4e8e\u5916\u8bbe \u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u5185\u6838\u662f\u88ab\u4fe1\u4efb\u7684\u7b2c\u4e09\u65b9 \u53ea\u6709\u5185\u6838\u53ef\u4ee5\u6267\u884c\u7279\u6743\u6307\u4ee4 \u4e3a\u4e86\u65b9\u4fbf\u5e94\u7528\u7a0b\u5e8f \u5904\u7406\u65f6\u95f4\uff1a \u4e2d\u65ad\uff1a\u5f02\u6b65 \u5f02\u5e38\uff1a\u540c\u6b65 \u7cfb\u7edf\u8c03\u7528\uff1a\u5f02\u6b65\u4e0e\u540c\u6b65 \u54cd\u5e94\uff1a \u4e2d\u65ad\uff1a\u5e94\u7528\u7a0b\u5e8f\u65e0\u6cd5\u611f\u77e5 \u5f02\u5e38\uff1a\u6740\u6b7b\u6216\u91cd\u65b0\u6267\u884c \u7cfb\u7edf\u8c03\u7528\uff1a\u7b49\u5f85\u548c\u6301\u7eed","title":"\u4e2d\u65ad\uff0c\u5f02\u5e38\uff0c\u7cfb\u7edf\u8c03\u7528"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_11","text":"\u786c\u4ef6\uff1a\u8bbe\u7f6e\u4e2d\u65ad\u6807\u8bb0\uff08cpu\u521d\u59cb\u5316\uff09\u3002 \u64cd\u4f5c\u7cfb\u7edf\uff1a\u4fdd\u5b58\u7a0b\u5e8f\u6267\u884c\u7684\u73b0\u573a\u3002 \u8f6f\u4ef6\uff1a\u4fdd\u5b58\u5f53\u524d\u5904\u7406\u72b6\u6001\uff0c\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\uff0c\u6e05\u9664\u4e2d\u65ad\u6807\u8bb0\uff0c\u56de\u590d","title":"\u4e2d\u65ad"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_12","text":"\u5f02\u5e38\u73b0\u573a \u5f02\u5e38\u5904\u7406 \u6062\u590d\u73b0\u573a","title":"\u5f02\u5e38"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_13","text":"\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3 print \u8c03\u7528\u7cfb\u7edf\u63a5\u53e3 write Win32 API \u7528\u4e8e windows https://docs.microsoft.com/en-us/windows/win32/apiindex/windows-api-list POSIX API Java API \u7528\u4e8e java \u865a\u62df\u673a","title":"\u7cfb\u7edf\u8c03\u7528"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_14","text":"\u4e3b\u5b58\u5c31\u662f\u7269\u7406\u5185\u5b58\uff0c\u6bd4\u5bc4\u5b58\u5668\u4e0ecache\u5927\u5f88\u591a\uff0c\u4f46\u901f\u5ea6\u4e0d\u5982\u5bc4\u5b58\u5668\u4e0ecache\u3002 \u8d8a\u9760\u8fd1CPU\u8d8a\u5feb\uff0c\u4f46\u662f\u5bb9\u91cf\u8d8a\u5c0f -- \u5c42\u6b21\u7ed3\u6784","title":"\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u4ee5\u53ca\u5185\u5b58\u5206\u5c42\u4f53\u7cfb"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_15","text":"\u7269\u7406\u5730\u5740\u7a7a\u95f4\uff0c\u786c\u4ef6\u652f\u6301\u7684\u5730\u5740\u7a7a\u95f4\uff1b \u903b\u8f91\u5730\u5740\u7a7a\u95f4\uff0c\u5e94\u7528\u7a0b\u5e8f\u6240\u62e5\u6709\u7684\u5185\u5b58\u8303\u56f4\u3002 \u903b\u8f91\u5730\u5740\u7a7a\u95f4\u90fd\u662f\u843d\u5b9e\u5728\u7269\u7406\u5730\u5740\u7a7a\u95f4\u5185\u7684 \u6848\u4f8b\uff1ac\u7a0b\u5e8f c\u7f16\u8bd1\u4e3a\u6c47\u7f16\uff0c\u6c47\u7f16\u7528\u6c47\u7f16\u5668\u8f6c\u5316\u4e3a\u673a\u5668\u8bed\u8a00 \u903b\u8f91\u5730\u5740---\u6620\u5c04--->\u7269\u7406\u5730\u5740 CPU \u7684MMU\u67e5\u627e\u6620\u5c04\u8868","title":"\u5730\u5740\u7a7a\u95f4\u4e0e\u5730\u5740\u751f\u6210"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_16","text":"\u7a7a\u95f2\u5185\u5b58\u4e0d\u80fd\u88ab\u5229\u7528 \u5916\u90e8\u788e\u7247 \u5185\u90e8\u788e\u7247","title":"\u5185\u5b58\u788e\u7247\u95ee\u9898"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_17","text":"\u7528\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u8fdb\u884c\u7ba1\u7406 \u9996\u6b21\u9002\u914d\u7b97\u6cd5 \u7b80\u5355\uff0c\u5bb9\u6613\u4ea7\u751f\u5916\u788e\u7247\uff0c\u4e0d\u786e\u5b9a\u6027 \u6700\u4f18\u9002\u914d\u7b97\u6cd5 \u627e\u5230\u6700\u9002\u5408\u7684\u7a7a\u95f2\u5757 \u907f\u514d\u5207\u5272\u5927\u7a7a\u95f2\u5757\uff0c\u6700\u5c0f\u5316\u5916\u90e8\u788e\u7247\u3002\u9700\u8981\u6309size\u6392\u5e8f\uff0c\u5bb9\u6613\u4ea7\u751f\u5fae\u5c0f\u5916\u788e\u7247 \u6700\u574f\u9002\u914d\u7b97\u6cd5 \u5bb9\u6613\u7834\u788e\u5927\u7684\u7a7a\u95f2\u5757\u3002","title":"\u5206\u533a\u7684\u52a8\u6001\u5206\u914d"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_18","text":"SWAP \u6362\u5165\u6362\u51fa https://www.bilibili.com/video/BV1wq4y1M7qf?p=15&spm_id_from=pageDriver","title":"\u538b\u7f29\u5f0f\u4e0e\u4ea4\u6362\u5f0f\u788e\u7247\u6574\u7406"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_19","text":"\u8fde\u7eed\u5185\u5b58\u5206\u914d\uff1a\u7ed9\u5e94\u7528\u7a0b\u5e8f\u5206\u914d\u7684\u5730\u5740\u7a7a\u95f4\u662f\u8fde\u7eed\u7684 \u5efa\u7acb\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u4e4b\u95f4\u7684\u8f6c\u6362 \u8f6f\u4ef6\u65b9\u6848 \u786c\u4ef6\u65b9\u6848 \u4e24\u79cd\u786c\u4ef6\u65b9\u6848\uff1a\u5206\u6bb5\uff0c\u5206\u9875","title":"\u975e\u8fde\u7eed\u5185\u5b58\u5206\u914d"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_20","text":"\u6bb5\u8868\u4e2d\u5b58\u50a8\uff1a \u8d77\u59cb\uff0c\u957f\u5ea6 \u6bb5\u8868\u662fOS\u65e9\u5c31\u5efa\u7acb\u597d\u7684\uff0c\u4f9d\u636e\u5177\u4f53\u786c\u4ef6","title":"\u5206\u6bb5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_21","text":"\u5206\u9875\u7684\u5730\u5740\u7a7a\u95f4 \u5206\u9875\u5bfb\u5740 \u9875\u53f7\uff0c\u9875\u504f\u79fb \u9875\u7684\u5927\u5c0f\u4e0d\u53d8\uff0c\u9875---\u300b\u7269\u7406\u9875\uff1a\u8d1e\u7684\u6620\u5c04\u5173\u7cfb \u9875\u8868\u7531\u64cd\u4f5c\u7cfb\u7edf\u5efa\u7acb \u591a\u7ea7\u9875\u8868 \u8282\u7701\u7a7a\u95f4 \u53cd\u5411\u9875\u8868\uff0c\u6839\u636e\u7269\u7406\u5730\u5740\u627e\u5230\u9875\u8d1e\u53f7 \u5173\u8054\u5185\u5b58\u65b9\u6848\u3002 \u57fa\u4e8e\u54c8\u5e0c\u67e5\u627e","title":"\u5206\u9875"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_22","text":"\u624b\u52a8\u8986\u76d6 \u81ea\u52a8\u4ea4\u6362 \u81ea\u52a8\u7684\u865a\u62df\u5185\u5b58 https://www.bilibili.com/video/BV1wq4y1M7qf?p=21","title":"\u865a\u62df\u5185\u5b58"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_23","text":"","title":"\u8986\u76d6\u6280\u672f"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_24","text":"","title":"\u4ea4\u6362\u6280\u672f"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_25","text":"\u5185\u5b58\u4e0d\u591f\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u91c7\u7528\u8986\u76d6\u6280\u672f\u548c\u4ea4\u6362\u6280\u672f \u865a\u5b58\u6280\u672f\uff1a \u4e0d\u662f\u628a\u7a0b\u5e8f\u7684\u6240\u6709\u5185\u5bb9\u90fd\u653e\u5728\u5185\u5b58\u4e2d\uff1b \u52a8\u6001\u5b9e\u73b0\u5185\u5b58\u4e0e\u5916\u5b58\u4e4b\u95f4\u7684\u4ea4\u6362\u3002 \u7a0b\u5e8f\u7684\u5c40\u90e8\u6027\u539f\u7406\uff1a\u7a0b\u5e8f\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u7684\u4e00\u4e2a\u8f83\u77ed\u7684\u65f6\u671f\uff0c\u6240\u6267\u884c\u7684\u6307\u4ee4\u5730\u5740\u548c\u6307\u4ee4\u7684\u64cd\u4f5c\u5730\u5740\uff0c\u5206\u522b\u5c40\u9650\u4e8e\u4e00\u5b9a\u7684\u7a7a\u95f4\u3002","title":"\u865a\u62df\u5185\u5b58\u7ba1\u7406\u6280\u672f"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_26","text":"process \u8fdb\u7a0b\u662f\u4e00\u4e2a\u52a8\u6001\u7684\u8fc7\u7a0b\u3002","title":"\u8fdb\u7a0b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_27","text":"PCB process control block \u4e09\u4e2a\u4fe1\u606f\uff1a \u8fdb\u7a0b\u6807\u8bc6 PID \u5904\u7406\u673a\u72b6\u6001\u4fe1\u606f\u4fdd\u5b58\u533a \u7528\u6237\u53ef\u89c1\u5bc4\u5b58\u5668 \u63a7\u5236\u548c\u72b6\u6001\u5bc4\u5b58\u5668 \u6808\u6307\u9488 \u7ec4\u7ec7\u65b9\u5f0f\uff1a \u94fe\u8868 \u7d22\u5f15\u8868","title":"\u8fdb\u7a0b\u63a7\u5236\u5757"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_28","text":"\u8fdb\u7a0b\u521b\u5efa \u8fdb\u7a0b\u8fd0\u884c \u8fdb\u7a0b\u7b49\u5f85 \u8fdb\u7a0b\u5524\u9192 \u8fdb\u7a0b\u7ed3\u675f","title":"\u8fdb\u7a0b\u7684\u751f\u547d\u5468\u671f"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_29","text":"\u65f6\u95f4\u7247\u5b8c\uff0c\u591a\u4e2a\u7a0b\u5e8f\u9ad8\u901f\u5207\u6362\u8fd0\u884c\u3002","title":"\u8fdb\u7a0b\u72b6\u6001\u53d8\u5316\u6a21\u578b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_30","text":"\u6302\u8d77\u4e0e\u8fdb\u7a0b\u7684\u963b\u585e\u4e0d\u540c\u3002 \u8fdb\u7a0b\u6302\u8d77\u610f\u5473\u7740\u8fdb\u7a0b\u6ca1\u6709\u5360\u7528\u5185\u5b58\u7a7a\u95f4\uff0c\u5904\u4e8e\u6302\u8d77\u7684\u8fdb\u7a0b\u6620\u50cf\u5728\u786c\u76d8\u4e0a\u3002 \u64cd\u4f5c\u7cfb\u7edf\u8981\u7ef4\u62a4\u4e00\u7cfb\u5217\u8fdb\u7a0b\u3002","title":"\u8fdb\u7a0b\u6302\u8d77"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_31","text":"read()\u963b\u585e\u4e86\u6574\u4e2a\u7a0b\u5e8f\u8fdb\u884c \u7ebf\u7a0b\uff1a\u5982\u540c\u8fdb\u7a0b\u4e00\u6837\u5e76\u53d1\u8fd0\u884c \u4f46\u662f\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\u76f8\u540c\u7684\u5730\u5740\u7a7a\u95f4\u3002 \u7ebf\u7a0b\u7684\u4f18\u70b9\uff1a \u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u53ef\u4ee5\u540c\u65f6\u5b58\u5728\u591a\u4e2a\u7ebf\u7a0b \u5404\u4e2a\u7ebf\u7a0b\u5e76\u53d1\u8fdb\u884c \u5404\u4e2a\u7ebf\u7a0b\u5171\u4eab\u8d44\u6e90 \u7f3a\u70b9\uff1a \u4e00\u4e2a\u7ebf\u7a0b\u5d29\u6e83\uff0c\u4f1a\u5bfc\u81f4\u5176\u6240\u5c5e\u7684\u8fdb\u7a0b\u6240\u6709\u7684\u7ebf\u7a0b\u5d29\u6e83\u3002 \u591a\u7ebf\u7a0b \u9002\u7528\u4e8e\u9ad8\u6027\u80fd\u8ba1\u7b97 \u591a\u8fdb\u7a0b \u9002\u7528\u4e8e\u7f51\u7edc\u6d4f\u89c8\u5668","title":"\u7ebf\u7a0b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_32","text":"\u7528\u6237\u7ebf\u7a0b \u5185\u6838\u7ebf\u7a0b","title":"\u7ebf\u7a0b\u7684\u5b9e\u73b0"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_33","text":"### \u8fdb\u7a0b\u52a0\u8f7d","title":"\u4e0a\u4e0b\u6587\u5207\u6362"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#cpu","text":"\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362 CPU\u8c03\u5ea6\uff1a\u4ece\u5c31\u7eea\u961f\u5217\u4e2d\u6311\u9009\u4e00\u4e2a\u8fdb\u7a0b/\u7ebf\u7a0b\u4f5c\u4e3aCPU\u5c06\u8981\u8fd0\u884c\u7684\u4e0b\u4e00\u4e2a\u8fdb\u7a0b \u8c03\u5ea6\u7a0b\u5e8f\uff1a\u6311\u9009\u8fdb\u7a0b\u7684\u5185\u6838\u51fd\u6570 \u4ec0\u4e48\u65f6\u5019\u8c03\u5ea6","title":"CPU\u8c03\u5ea6"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_34","text":"\u5145\u5206\u5730\u5229\u7528CPU\u3002 \u8bc4\u4ef7\u6307\u6807\uff1a","title":"\u8c03\u5ea6\u539f\u5219"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_35","text":"First Come First Server \u4e0d\u540c\u7684\u8c03\u5ea6\u987a\u5e8f\uff0c\u5468\u8f6c\u65f6\u95f4\u4f1a\u6709\u53d8\u5316\uff01\u56e0\u4e3a\u5468\u8f6c\u65f6\u95f4\u5305\u62ec\u4e86\u7b49\u5f85\u65f6\u95f4\u3002 https://www.bilibili.com/video/BV1wq4y1M7qf?p=50","title":"\u8c03\u5ea6\u7b97\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%9A%E5%8E%9F%E7%90%86%E5%85%A5%E9%97%A8%E3%80%8B/","text":"\u300a\u6df1\u5165\u6d45\u51fa\u5f3a\u5316\u5b66\u4e60\uff1a\u539f\u7406\u5165\u95e8\u300b \u9a6c\u5c14\u79d1\u592b\u51b3\u7b56\u8fc7\u7a0b \u9a6c\u5c14\u79d1\u592b\u6027 \uff1a\u6307\u7684\u662f\u7cfb\u7edf\u7684\u4e0b\u4e00\u4e2a\u72b6\u6001 \\(s_{t+1}\\) \u4ec5\u4e0e\u5f53\u524d\u72b6\u6001 \\(s_{t}\\) \u6709\u5173\uff0c\u800c\u4e0e\u4ee5\u524d\u7684\u72b6\u6001\u65e0\u5173\u3002 $$ p(s_{t+1}|s_t)=p(s_{t+1}|s_1,...,s_t) $$ \u9a6c\u5c14\u79d1\u592b\u8fc7\u7a0b \uff1a\u9a6c\u5c14\u79d1\u592b\u8fc7\u7a0b\u7528\u4e8c\u5143\u7ec4\u8868\u793a\uff0c(S,P)\uff0c\u5176\u4e2dS\u662f\u6709\u9650\u72b6\u6001\u96c6\u5408\uff0cP\u662f\u72b6\u6001\u8f6c\u79fb\u77e9\u9635\u3002 \u9a6c\u5c14\u79d1\u592b\u51b3\u7b56\u51b3\u7b56\u8fc7\u7a0b \uff1a \\((S,A,P,R,\\lambda)\\) (\u72b6\u6001\u96c6\uff0c\u52a8\u4f5c\u96c6\uff0c\u72b6\u6001\u8f6c\u79fb\u77e9\u9635\uff0c\u56de\u62a5\u51fd\u6570\uff0c\u6298\u6263\u56e0\u5b50) \u9a6c\u5c14\u79d1\u592b\u51b3\u7b56\u8fc7\u7a0b\u7684\u72b6\u6001\u8f6c\u79fb\u77e9\u9635\u662f\u5305\u542b\u52a8\u4f5c\u7684 \u5f3a\u5316\u5b66\u4e60\u7684\u57fa\u672c\u6982\u5ff5 \u7ed9\u5b9a\u4e00\u4e2a\u9a6c\u5c14\u79d1\u592b\u51b3\u7b56\u8fc7\u7a0b\uff0c\u5bfb\u627e\u6700\u4f18\u7b56\u7565\u3002 \u7b56\u7565 \u7b56\u7565 \u662f\u72b6\u6001\u5230\u52a8\u4f5c\u7684\u6620\u5c04\uff0c\u5e38\u7528 \\(\\pi\\) \u8868\u793a\u3002\u5b83\u6307\u7684\u662f\u7ed9\u5b9a\u72b6\u6001s\u65f6\uff0c\u52a8\u4f5c\u96c6\u4e0a\u7684\u4e00\u4e2a\u5206\u5e03\uff0c\u5373\uff1a $$ \\pi(a|s)=p(A_t=a|S_t=s) $$ \u5f3a\u5316\u5b66\u4e60\u4e00\u822c\u91c7\u7528\u968f\u673a\u7b56\u7565\uff0c\u539f\u56e0\u662f\u968f\u673a\u7b56\u7565\u53ef\u4ee5\u5c06\u63a2\u7d22\u8026\u5408\u5230\u91c7\u6837\u8fc7\u7a0b\u4e2d\u3002 \u5f53\u7ed9\u5b9a\u7b56\u7565 \\(\\pi\\) \u7684\u65f6\u5019\uff0c\u72b6\u6001\u5e8f\u5217\u53ef\u80fd\u4e3a\uff1a $$ \\begin{aligned} &s_{1} \\rightarrow s_{2} \\rightarrow s_{3} \\rightarrow s_{4} \\rightarrow s_{5} \\ &s_{1} \\rightarrow s_{2} \\rightarrow s_{3} \\rightarrow s_{5} \\ &\\vdots \\end{aligned} $$ \u56e0\u4e3a\u7b56\u7565\u4e0e\u72b6\u6001\u8f6c\u79fb\u90fd\u5177\u6709\u968f\u673a\u6027\uff01\u6240\u4ee5\u7d2f\u79ef\u56de\u62a5\uff1a $$ G_{t}=R_{t+1}+\\gamma R_{t+2}+\\cdots=\\sum_{k=0}^{\\infty} \\gamma^{k} R_{t+k+1} $$ \u662f\u968f\u673a\u7684\uff0c\u4e3a\u4e86\u8bc4\u4ef7\u72b6\u6001 \\(s_1\\) \uff0c\u9700\u8981\u627e\u5230\u4e00\u4e2a\u786e\u5b9a\u7684\u503c\uff0c\u6240\u4ee5\u7528\u7d2f\u79ef\u56de\u62a5\u7684\u671f\u671b\u6765\u8868\u793a\u3002 \u72b6\u6001\u4ef7\u503c\u51fd\u6570 \u7ed9\u5b9a\u7b56\u7565 \\(\\pi\\) \uff0c\u7d2f\u79ef\u56de\u62a5\u670d\u4ece\u4e00\u4e2a\u6982\u7387\u5206\u5e03\uff0c\u7d2f\u8ba1\u6c47\u62a5\u5728s\u5904\u7684\u671f\u671b\u503c\u5b9a\u4e49\u4e3a\uff1a $$ v_{\\pi}(s)=\\mathrm{E} {\\pi}\\left[\\sum {k=0}^{\\infty} \\gamma^{k} R_{t+k+1} \\mid S_{t}=s\\right] $$ \u8fd9\u5c31\u662f\u72b6\u6001\u4ef7\u503c\u51fd\u6570\u3002 \u72b6\u6001\u884c\u4e3a\u4ef7\u503c\u51fd\u6570 \\[ q_{\\pi}(s, a)=E_{\\pi}\\left[\\sum_{k=0}^{\\infty} \\gamma^{k} R_{t+k+1} \\mid S_{t}=s, A_{t}=a\\right] \\] \u72b6\u6001\u884c\u4e3a\u4ef7\u503c\u51fd\u6570\uff0c\u5b83\u63cf\u8ff0\u7684\u662f\u5728\u7ed9\u5b9a\u72b6\u6001\uff0c\u7ed9\u5b9a\u7b56\u7565\uff0c\u8be5\u52a8\u4f5c\u7684\u4ef7\u503c\u3002 \u8d1d\u5c14\u66fc\u65b9\u7a0b \\[ \\begin{aligned} &v(s)=E\\left[G_{t} \\mid S_{t}=s\\right] \\\\ &=E\\left[R_{t+1}+\\gamma R_{t+2}+\\cdots \\mid S_{t}=s\\right] \\\\ &=E\\left[R_{t+1}+\\gamma\\left(R_{t+2}+\\gamma R_{t+3}+\\cdots\\right) \\mid S_{t}=s\\right] \\\\ &=E\\left[R_{t+1}+\\gamma G_{t+1} \\mid S_{t}=s\\right] \\\\ &=E\\left[R_{t+1}+\\gamma v\\left(S_{t+1}\\right) \\mid S_{t}=s\\right] \\end{aligned} \\] \u6700\u4f18\u72b6\u6001\u4ef7\u503c\u51fd\u6570 \u6700\u4f18\u72b6\u6001\u4ef7\u503c\u51fd\u6570\u4e3a\u6240\u6709\u7b56\u7565\u4e2d\uff0c\u503c\u6700\u5927\u7684\u503c\u51fd\u6570\uff1a $$ v^{*}(s)=\\max {\\pi} v {\\pi}(s) $$ \u6700\u4f18\u72b6\u6001\u884c\u4e3a\u4ef7\u503c\u51fd\u6570\uff1a \\[ q^{*}(s, a)=\\max _{\\pi} q_{\\pi}(s, a) \\] \u5c0f\u7ed3 bootstraping \u7b97\u6cd5 \u72b6\u6001\u4ef7\u503c\u51fd\u6570\u53ef\u4ee5\u6539\u5199\u4e3a\u4ee5\u4e0b\u5f62\u5f0f\uff1a $$ v_{\\pi}(s)=\\sum_{a \\in A} \\pi(a \\mid s)\\left(R_{s}^{a}+\\gamma \\sum_{s^{\\prime} \\in S} P_{s s^{\\prime}}^{a}v_{\\pi}\\left(s^{\\prime}\\right)\\right) $$ \u53ef\u4ee5\u770b\u5230\uff0c\u4ef7\u503c\u51fd\u6570\u662f\u672a\u77e5\u7684\uff0c\u8fd9\u8be5\u5982\u4f55\u89e3\u5462\uff1f \u8fd9\u4e2a\u5f0f\u5b50\u91cc\u5df2\u77e5\uff0c \\(R_{s}^{a}, \\pi, P^{a}_{ss'}\\) \uff0c\u672a\u77e5 \\(v_\\pi\\) \u8fd9\u662f\u4e00\u79cd\u8fed\u4ee3\u7b97\u6cd5\uff0c\u4e0d\u65ad\u5730\u66f4\u65b0 \\(v()\\) \u3002 \u901a\u8fc7\u8fd9\u4e2a\u7b56\u7565\u8bc4\u4f30\u7b97\u6cd5\uff0c\u53ef\u4ee5\u5f97\u5230\u67d0\u4e2a\u52a8\u4f5c\u51fd\u6570\u7684\u503c\u51fd\u6570\u3002 \u5728\u901a\u8fc7\u8fd9\u4e2a\u503c\u51fd\u6570\u6765\u6539\u5584\u7b56\u7565\uff1a \u5982\u679c\u91c7\u7528\u8d2a\u5a6a\u5f97\u65b9\u5f0f\uff0c\u90a3\u4e48\uff1a \u5982\u679c\u53ea\u8bc4\u4f30\u4e00\u6b21\u540e\u5c31\u5bf9\u7b56\u7565\u8fdb\u884c\u6539\u5584\uff0c\u5219\u79f0\u4e3a\u503c\u51fd\u6570\u8fed\u4ee3\u7b97\u6cd5\uff1a \u503c\u51fd\u6570\u8fed\u4ee3\u7b97\u6cd5\uff1a \u503c\u51fd\u6570\u8bc4\u4f30\u8fc7\u7a0b\u4e2d\uff0c\u5305\u62ec\u4e24\u4e2a\u8fed\u4ee3\u5faa\u73af\uff1a \u5916\u5c42\u662f\u4e3a\u4e86\u4fdd\u8bc1\u503c\u51fd\u6570\u7684\u51c6\u786e\u6027 \u5185\u5c42\u662f\u662f\u5bf9\u6240\u6709\u72b6\u6001\u7a7a\u95f4\u7684\u626b\u63cf \u8fd9\u91cc\u53cd\u6620\u51fa\u4e86dp\u7b97\u6cd5\u4e0e\u65e0\u6a21\u578b\u7684\u5f3a\u5316\u5b66\u4e60\u7684\u672c\u8d28\u533a\u522b\uff1a\u72b6\u6001\u8f6c\u79fb\u77e9\u9635P\uff01 dp\u5df2\u77e5\u6a21\u578b\uff0c\u6240\u4ee5\u53ef\u4ee5\u786e\u5207\u5730\u77e5\u9053\u6bcf\u4e00\u6b65\u6267\u884c\u540e\u7684\u72b6\u6001\uff0c\u8fd9\u4e2a\u6027\u8d28\u4f7f\u5f97\u667a\u80fd\u4f53\u4e0d\u9700\u8981\u91c7\u53d6\u4efb\u4f55\u884c\u52a8\u5c31\u80fd\u5bf9\u672a\u6765\u8fdb\u884c\u8bc4\u4f30\u3002","title":"\u300a\u6df1\u5165\u6d45\u51fa\u5f3a\u5316\u5b66\u4e60\uff1a\u539f\u7406\u5165\u95e8\u300b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%9A%E5%8E%9F%E7%90%86%E5%85%A5%E9%97%A8%E3%80%8B/#_1","text":"\u9a6c\u5c14\u79d1\u592b\u51b3\u7b56\u8fc7\u7a0b \u9a6c\u5c14\u79d1\u592b\u6027 \uff1a\u6307\u7684\u662f\u7cfb\u7edf\u7684\u4e0b\u4e00\u4e2a\u72b6\u6001 \\(s_{t+1}\\) \u4ec5\u4e0e\u5f53\u524d\u72b6\u6001 \\(s_{t}\\) \u6709\u5173\uff0c\u800c\u4e0e\u4ee5\u524d\u7684\u72b6\u6001\u65e0\u5173\u3002 $$ p(s_{t+1}|s_t)=p(s_{t+1}|s_1,...,s_t) $$ \u9a6c\u5c14\u79d1\u592b\u8fc7\u7a0b \uff1a\u9a6c\u5c14\u79d1\u592b\u8fc7\u7a0b\u7528\u4e8c\u5143\u7ec4\u8868\u793a\uff0c(S,P)\uff0c\u5176\u4e2dS\u662f\u6709\u9650\u72b6\u6001\u96c6\u5408\uff0cP\u662f\u72b6\u6001\u8f6c\u79fb\u77e9\u9635\u3002 \u9a6c\u5c14\u79d1\u592b\u51b3\u7b56\u51b3\u7b56\u8fc7\u7a0b \uff1a \\((S,A,P,R,\\lambda)\\) (\u72b6\u6001\u96c6\uff0c\u52a8\u4f5c\u96c6\uff0c\u72b6\u6001\u8f6c\u79fb\u77e9\u9635\uff0c\u56de\u62a5\u51fd\u6570\uff0c\u6298\u6263\u56e0\u5b50) \u9a6c\u5c14\u79d1\u592b\u51b3\u7b56\u8fc7\u7a0b\u7684\u72b6\u6001\u8f6c\u79fb\u77e9\u9635\u662f\u5305\u542b\u52a8\u4f5c\u7684","title":"\u300a\u6df1\u5165\u6d45\u51fa\u5f3a\u5316\u5b66\u4e60\uff1a\u539f\u7406\u5165\u95e8\u300b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%9A%E5%8E%9F%E7%90%86%E5%85%A5%E9%97%A8%E3%80%8B/#_2","text":"\u7ed9\u5b9a\u4e00\u4e2a\u9a6c\u5c14\u79d1\u592b\u51b3\u7b56\u8fc7\u7a0b\uff0c\u5bfb\u627e\u6700\u4f18\u7b56\u7565\u3002","title":"\u5f3a\u5316\u5b66\u4e60\u7684\u57fa\u672c\u6982\u5ff5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%9A%E5%8E%9F%E7%90%86%E5%85%A5%E9%97%A8%E3%80%8B/#_3","text":"\u7b56\u7565 \u662f\u72b6\u6001\u5230\u52a8\u4f5c\u7684\u6620\u5c04\uff0c\u5e38\u7528 \\(\\pi\\) \u8868\u793a\u3002\u5b83\u6307\u7684\u662f\u7ed9\u5b9a\u72b6\u6001s\u65f6\uff0c\u52a8\u4f5c\u96c6\u4e0a\u7684\u4e00\u4e2a\u5206\u5e03\uff0c\u5373\uff1a $$ \\pi(a|s)=p(A_t=a|S_t=s) $$ \u5f3a\u5316\u5b66\u4e60\u4e00\u822c\u91c7\u7528\u968f\u673a\u7b56\u7565\uff0c\u539f\u56e0\u662f\u968f\u673a\u7b56\u7565\u53ef\u4ee5\u5c06\u63a2\u7d22\u8026\u5408\u5230\u91c7\u6837\u8fc7\u7a0b\u4e2d\u3002 \u5f53\u7ed9\u5b9a\u7b56\u7565 \\(\\pi\\) \u7684\u65f6\u5019\uff0c\u72b6\u6001\u5e8f\u5217\u53ef\u80fd\u4e3a\uff1a $$ \\begin{aligned} &s_{1} \\rightarrow s_{2} \\rightarrow s_{3} \\rightarrow s_{4} \\rightarrow s_{5} \\ &s_{1} \\rightarrow s_{2} \\rightarrow s_{3} \\rightarrow s_{5} \\ &\\vdots \\end{aligned} $$ \u56e0\u4e3a\u7b56\u7565\u4e0e\u72b6\u6001\u8f6c\u79fb\u90fd\u5177\u6709\u968f\u673a\u6027\uff01\u6240\u4ee5\u7d2f\u79ef\u56de\u62a5\uff1a $$ G_{t}=R_{t+1}+\\gamma R_{t+2}+\\cdots=\\sum_{k=0}^{\\infty} \\gamma^{k} R_{t+k+1} $$ \u662f\u968f\u673a\u7684\uff0c\u4e3a\u4e86\u8bc4\u4ef7\u72b6\u6001 \\(s_1\\) \uff0c\u9700\u8981\u627e\u5230\u4e00\u4e2a\u786e\u5b9a\u7684\u503c\uff0c\u6240\u4ee5\u7528\u7d2f\u79ef\u56de\u62a5\u7684\u671f\u671b\u6765\u8868\u793a\u3002","title":"\u7b56\u7565"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%9A%E5%8E%9F%E7%90%86%E5%85%A5%E9%97%A8%E3%80%8B/#_4","text":"\u7ed9\u5b9a\u7b56\u7565 \\(\\pi\\) \uff0c\u7d2f\u79ef\u56de\u62a5\u670d\u4ece\u4e00\u4e2a\u6982\u7387\u5206\u5e03\uff0c\u7d2f\u8ba1\u6c47\u62a5\u5728s\u5904\u7684\u671f\u671b\u503c\u5b9a\u4e49\u4e3a\uff1a $$ v_{\\pi}(s)=\\mathrm{E} {\\pi}\\left[\\sum {k=0}^{\\infty} \\gamma^{k} R_{t+k+1} \\mid S_{t}=s\\right] $$ \u8fd9\u5c31\u662f\u72b6\u6001\u4ef7\u503c\u51fd\u6570\u3002","title":"\u72b6\u6001\u4ef7\u503c\u51fd\u6570"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%9A%E5%8E%9F%E7%90%86%E5%85%A5%E9%97%A8%E3%80%8B/#_5","text":"\\[ q_{\\pi}(s, a)=E_{\\pi}\\left[\\sum_{k=0}^{\\infty} \\gamma^{k} R_{t+k+1} \\mid S_{t}=s, A_{t}=a\\right] \\] \u72b6\u6001\u884c\u4e3a\u4ef7\u503c\u51fd\u6570\uff0c\u5b83\u63cf\u8ff0\u7684\u662f\u5728\u7ed9\u5b9a\u72b6\u6001\uff0c\u7ed9\u5b9a\u7b56\u7565\uff0c\u8be5\u52a8\u4f5c\u7684\u4ef7\u503c\u3002","title":"\u72b6\u6001\u884c\u4e3a\u4ef7\u503c\u51fd\u6570"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%9A%E5%8E%9F%E7%90%86%E5%85%A5%E9%97%A8%E3%80%8B/#_6","text":"\\[ \\begin{aligned} &v(s)=E\\left[G_{t} \\mid S_{t}=s\\right] \\\\ &=E\\left[R_{t+1}+\\gamma R_{t+2}+\\cdots \\mid S_{t}=s\\right] \\\\ &=E\\left[R_{t+1}+\\gamma\\left(R_{t+2}+\\gamma R_{t+3}+\\cdots\\right) \\mid S_{t}=s\\right] \\\\ &=E\\left[R_{t+1}+\\gamma G_{t+1} \\mid S_{t}=s\\right] \\\\ &=E\\left[R_{t+1}+\\gamma v\\left(S_{t+1}\\right) \\mid S_{t}=s\\right] \\end{aligned} \\]","title":"\u8d1d\u5c14\u66fc\u65b9\u7a0b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%9A%E5%8E%9F%E7%90%86%E5%85%A5%E9%97%A8%E3%80%8B/#_7","text":"\u6700\u4f18\u72b6\u6001\u4ef7\u503c\u51fd\u6570\u4e3a\u6240\u6709\u7b56\u7565\u4e2d\uff0c\u503c\u6700\u5927\u7684\u503c\u51fd\u6570\uff1a $$ v^{*}(s)=\\max {\\pi} v {\\pi}(s) $$","title":"\u6700\u4f18\u72b6\u6001\u4ef7\u503c\u51fd\u6570"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%9A%E5%8E%9F%E7%90%86%E5%85%A5%E9%97%A8%E3%80%8B/#_8","text":"\\[ q^{*}(s, a)=\\max _{\\pi} q_{\\pi}(s, a) \\]","title":"\u6700\u4f18\u72b6\u6001\u884c\u4e3a\u4ef7\u503c\u51fd\u6570\uff1a"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%9A%E5%8E%9F%E7%90%86%E5%85%A5%E9%97%A8%E3%80%8B/#_9","text":"","title":"\u5c0f\u7ed3"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%9A%E5%8E%9F%E7%90%86%E5%85%A5%E9%97%A8%E3%80%8B/#bootstraping","text":"\u72b6\u6001\u4ef7\u503c\u51fd\u6570\u53ef\u4ee5\u6539\u5199\u4e3a\u4ee5\u4e0b\u5f62\u5f0f\uff1a $$ v_{\\pi}(s)=\\sum_{a \\in A} \\pi(a \\mid s)\\left(R_{s}^{a}+\\gamma \\sum_{s^{\\prime} \\in S} P_{s s^{\\prime}}^{a}v_{\\pi}\\left(s^{\\prime}\\right)\\right) $$ \u53ef\u4ee5\u770b\u5230\uff0c\u4ef7\u503c\u51fd\u6570\u662f\u672a\u77e5\u7684\uff0c\u8fd9\u8be5\u5982\u4f55\u89e3\u5462\uff1f \u8fd9\u4e2a\u5f0f\u5b50\u91cc\u5df2\u77e5\uff0c \\(R_{s}^{a}, \\pi, P^{a}_{ss'}\\) \uff0c\u672a\u77e5 \\(v_\\pi\\) \u8fd9\u662f\u4e00\u79cd\u8fed\u4ee3\u7b97\u6cd5\uff0c\u4e0d\u65ad\u5730\u66f4\u65b0 \\(v()\\) \u3002 \u901a\u8fc7\u8fd9\u4e2a\u7b56\u7565\u8bc4\u4f30\u7b97\u6cd5\uff0c\u53ef\u4ee5\u5f97\u5230\u67d0\u4e2a\u52a8\u4f5c\u51fd\u6570\u7684\u503c\u51fd\u6570\u3002 \u5728\u901a\u8fc7\u8fd9\u4e2a\u503c\u51fd\u6570\u6765\u6539\u5584\u7b56\u7565\uff1a \u5982\u679c\u91c7\u7528\u8d2a\u5a6a\u5f97\u65b9\u5f0f\uff0c\u90a3\u4e48\uff1a \u5982\u679c\u53ea\u8bc4\u4f30\u4e00\u6b21\u540e\u5c31\u5bf9\u7b56\u7565\u8fdb\u884c\u6539\u5584\uff0c\u5219\u79f0\u4e3a\u503c\u51fd\u6570\u8fed\u4ee3\u7b97\u6cd5\uff1a","title":"bootstraping \u7b97\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%9A%E5%8E%9F%E7%90%86%E5%85%A5%E9%97%A8%E3%80%8B/#_10","text":"\u503c\u51fd\u6570\u8bc4\u4f30\u8fc7\u7a0b\u4e2d\uff0c\u5305\u62ec\u4e24\u4e2a\u8fed\u4ee3\u5faa\u73af\uff1a \u5916\u5c42\u662f\u4e3a\u4e86\u4fdd\u8bc1\u503c\u51fd\u6570\u7684\u51c6\u786e\u6027 \u5185\u5c42\u662f\u662f\u5bf9\u6240\u6709\u72b6\u6001\u7a7a\u95f4\u7684\u626b\u63cf \u8fd9\u91cc\u53cd\u6620\u51fa\u4e86dp\u7b97\u6cd5\u4e0e\u65e0\u6a21\u578b\u7684\u5f3a\u5316\u5b66\u4e60\u7684\u672c\u8d28\u533a\u522b\uff1a\u72b6\u6001\u8f6c\u79fb\u77e9\u9635P\uff01 dp\u5df2\u77e5\u6a21\u578b\uff0c\u6240\u4ee5\u53ef\u4ee5\u786e\u5207\u5730\u77e5\u9053\u6bcf\u4e00\u6b65\u6267\u884c\u540e\u7684\u72b6\u6001\uff0c\u8fd9\u4e2a\u6027\u8d28\u4f7f\u5f97\u667a\u80fd\u4f53\u4e0d\u9700\u8981\u91c7\u53d6\u4efb\u4f55\u884c\u52a8\u5c31\u80fd\u5bf9\u672a\u6765\u8fdb\u884c\u8bc4\u4f30\u3002","title":"\u503c\u51fd\u6570\u8fed\u4ee3\u7b97\u6cd5\uff1a"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/","text":"\u6df1\u5ea6\u5b66\u4e60 \u6df1\u5ea6\u5b66\u4e60 \u6570\u5b66\u57fa\u7840 tensorflow \u4e00\u4e9b\u57fa\u672c\u6982\u5ff5 \u5f20\u91cf \u5982\u4f55\u7406\u89e3\u9ad8\u7ef4\u5f20\u91cf \u7d22\u5f15\u4e0eslicing reshape broadcasting \u7279\u5f81 \u77e9\u9635\u4e58\u6cd5 \u5c0f\u77e5\u8bc6\u70b9\uff1a \u5e38\u7528\u51fd\u6570 tf.Variable \u5e38\u7528\u8fd0\u7b97\u51fd\u6570 \u8f93\u5165\u6807\u7b7e\uff0c\u6807\u7b7e tf.GradientTape tf.one_hot tf.argmax model.fit() \u7528generator\u6765\u505a\u8f93\u5165\uff1ax tf.data \u4ece\u5185\u5b58\u4e2d\u52a0\u8f7d\u6570\u636e tf.data.Dataset.element_spec Dataset.batch tf.nest functions tf.nest.flatten graph keras sequential model \u7f51\u7edc\u7ed3\u6784 model.compile model.fit build(self, inputs_shape) keras.backend.rnn \u6a21\u578b\u7684\u4fdd\u5b58\u4e0e\u52a0\u8f7d \u5168\u90e8\u4fdd\u5b58 \u4fdd\u5b58\u7ed3\u6784 \u4fdd\u5b58\u6743\u91cd\uff0c\u53c2\u6570 pytorch \u51c6\u5907\u5de5\u4f5c torch.utils.data.Dataset \u81ea\u5b9a\u4e49\u6570\u636e\u96c6 torch.utils.data.DataLoader nn.module nn.module\u4e2d\u7684layer \u5e38\u7528\u51fd\u6570 \u8bad\u7ec3\u7f51\u7edc \u53cd\u5411\u4f20\u64ad \u8ba1\u7b97\u56fe\uff1a \u5fae\u79ef\u5206\u4e2d\u7684\u94fe\u5f0f\u6cd5\u5219 \u7b2c\u4e00\u4e2a\u7248\u672c\u7684\u53cd\u5411\u4f20\u64ad \u7528\u4f8b\u5b50\u6765\u8bf4\u660e\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5 \u771f\u6b63\u5730\u8003\u8651\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\uff1a reference RNN\u5faa\u73af\u795e\u7ecf\u7f51\u7edc \u7ecf\u5178\u7684RNN\u7ed3\u6784 \u4f18\u7f3a\u70b9 \u7f3a\u70b9\uff1a \u635f\u5931\u51fd\u6570\uff1a reference sequence to sequence \u7ed3\u6784 \u5206\u6790 teacher forcing attention keras.layers.SimpleRNN SimpleRNN \u7684\u8f93\u5165\u8f93\u51fa units\u5230\u5e95\u662f\u4ec0\u4e48\u5462 LSTM cell state keras.layers.LSTM tensorflow2 \u7684 LSTM \u6e90\u7801\u9605\u8bfb LSTMCell \u7c7b LSTM \u7c7b transformer\u4e2d\u7684\u4f4d\u7f6e\u7f16\u7801 \u6570\u5b66\u57fa\u7840 \u6807\u91cf \u5411\u91cf \u77e9\u9635 \u5f20\u91cf tensorflow \u4e00\u4e9b\u57fa\u672c\u6982\u5ff5 keras\u662ftensorflow\u7684\u9ad8\u9636api\uff0c\u76f8\u5f53\u4e8e\u96c6\u6210\u597d\u4e86\u4e00\u4e9btensor\u7684\u64cd\u4f5c\u3002 tensorflow\u662f\u5f20\u91cf\u7684\u56fe\u8ba1\u7b97\u6d41 \u5f20\u91cf \u5f20\u91cf\u662f\u4e00\u4e2a\u9ad8\u7ef4\u7684\u6570\u7ec4\u3002 \u5f20\u91cf\u53ef\u4ee5\u662f\u5927\u4e8e2\u4e2aaxes\u7684\uff1a \u5982\u4f55\u7406\u89e3\u9ad8\u7ef4\u5f20\u91cf (3,2,5) \u5c31\u662f3\u4e2a2*5\u7684\u77e9\u9635\u53e0\u5728\u4e00\u8d77 (5,256,256,3) \u5c31\u662f5\u5f20RGB\u7167\u7247\u53e0\u5728\u4e00\u8d77 \u56e0\u4e3a\u5e38\u5e38\u5904\u7406\u56fe\u50cf\u6570\u636e\uff0c\u6240\u4ee5\u5e38\u7528\u7684tensor\u5f62\u72b6\u4e3a(B,W,H,C) \u7d22\u5f15\u4e0eslicing \u7d22\u5f15\u5c31\u5982numpy\u7684\u7d22\u5f15\u65b9\u5f0f\uff0c\u6709\u51e0\u4e2aaxes\u5c31\u80fd\u5728\u51e0\u4e2aaxes\u4e0a\u8fdb\u884c\u7d22\u5f15\u3002 tensor[axe1,axe2,axe3] \u5bf9\u4e8e\u9ad8\u7ef4\u5411\u91cf\u7684\u7d22\u5f15\uff0c\u5982\u679c\u76f4\u5bf9\u4e00\u4e2a\u7ef4\u5ea6\u8fdb\u884c\u7d22\u5f15\uff0c\u5207\u7247\u7684\u6837\u5b50\u5f88\u96be\u60f3\u8c61\u51fa\u6765\uff0c\u8fd9\u91cc\u4e3e\u4f8b\uff1a # There can be an arbitrary number of # axes (sometimes called \"dimensions\") rank_3_tensor = tf.constant([ [[0, 1, 2, 3, 4], [5, 6, 7, 8, 9]], [[10, 11, 12, 13, 14], [15, 16, 17, 18, 19]], [[20, 21, 22, 23, 24], [25, 26, 27, 28, 29]],]) print(rank_3_tensor) >>> tf.Tensor( [[[ 0 1 2 3 4] [ 5 6 7 8 9]] [[10 11 12 13 14] [15 16 17 18 19]] [[20 21 22 23 24] [25 26 27 28 29]]], shape=(3, 2, 5), dtype=int32) rank_3_tensor[:, :, 4] >>> <tf.Tensor: shape=(3, 2), dtype=int32, numpy= array([[ 4, 9], [14, 19], [24, 29]])> reshape flatten\u6839\u636e\u7684\u662f\u5f20\u91cf\u4e2d\u5143\u7d20\u5728\u5185\u5b58\u4e2d\u7684\u6392\u5217\u3002TensorFlow uses C-style \"row-major\" memory ordering, where incrementing the rightmost index corresponds to a single step in memory. \u5728reshape\u65f6\uff0c\u8981\u8003\u8651\u5230\u6570\u636e\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u56e0\u4e3areshape\u53ea\u8981\u6c42\u524d\u540e\u5143\u7d20\u6570\u76ee\u76f8\u540c\uff0c\u4e0d\u4fdd\u8bc1\u4fdd\u7559\u6570\u636e\u5173\u7cfb\u3002 broadcasting \u7279\u5f81 \u8fd9\u4e00\u70b9\u4e0enumpy\u4e2d\u7684\u5e7f\u64ad\u6027\u8d28\u4e00\u81f4\u3002 \u5728\u4e00\u4e2aoperation\u5f53\u4e2d\uff0c\u5982\u679carray\u4e0escalar\u8fdb\u884c\u8fd0\u7b97\uff0c\u90a3\u4e48\u4f1a\u53d1\u751f\u4ec0\u4e48\u5462\uff1f \u4e24\u4e2aarrays\u8fdb\u884coperation\uff0c\u8981\u6c42\u4ed6\u4eec\u7684\u7ef4\u5ea6\u662fcompatible\u7684\uff1a \u7ef4\u5ea6\u76f8\u540c \u5176\u4e2d\u4e00\u4e2a\u4e3a1 https://numpy.org/devdocs/user/basics.broadcasting.html \u5982\uff1a(5,4)\u53ef\u4ee5\u4e0e(1,)\uff0c(4,)\u8fdb\u884coperation\uff0c\u4f46\u4e0d\u80fd\u4e0e(3,)\u8fdb\u884coperation \u4ece\u5de6\u4fa7\u5f00\u59cb\u914d\u5bf9\uff0c\u4ece\u6700\u5185\u7684\u5143\u7d20\u5f00\u59cb\u3002 \u77e9\u9635\u4e58\u6cd5 \u5b9e\u9645\u4e0a\u77e9\u9635\u4e58\u6cd5\u5c31\u662f\u7b26\u5408\u5e7f\u64ad\u7279\u6027\u7684\uff1a a = 1 * 3 b = 4 * 1 result = 4 * 3 \u5c0f\u77e5\u8bc6\u70b9\uff1a \u5f20\u91cf\u5728\u56fe\u4e2d\u6d41\u52a8\uff0c\u6240\u4ee5\u53ebtensorflow \u8fd9\u4e2a\u4e00\u7ef4\u5f20\u91cf\u7684\u6d41\u52a8\u8fc7\u7a0b \u5f20\u91cf\u53ef\u4ee5\u7531numpy\u6784\u5efa\uff0c\u4ee5\u53ca\u4e00\u4e9b\u7279\u6b8a\u7684\u65b9\u6cd5 tf.zeros() tf.ones() tf.random.normal() axis: \u5e38\u7528\u51fd\u6570 tf.Variable \u7528\u8be5\u51fd\u6570\u6807\u8bb0\u540e\uff0c\u8be5\u53d8\u91cf\u5c31\u662f\u53ef\u8bad\u7ec3\u7684\u4e86\u3002 w = tf.Variable(tf.random.normal([2,2],mean,stddev=1)) \u5e38\u7528\u8fd0\u7b97\u51fd\u6570 tf.add tf.subtract tf.multiply \u7b49\u7b49 \u8f93\u5165\u6807\u7b7e\uff0c\u6807\u7b7e tf.data.Dataset.from_tensor_slices tf.GradientTape \u8ba1\u7b97\u68af\u5ea6 tf.one_hot \u72ec\u70ed\u7f16\u7801 tf.argmax \u8fd4\u56de\u5f20\u91cf\u6307\u5b9a\u7ef4\u5ea6\u6700\u5927\u503c\u7684\u7d22\u5f15\u53f7\u3002 model.fit() fit(x=None, y=None, batch_size=None, epochs=1, verbose='auto', callbacks=None, validation_split=0.0, validation_data=None, shuffle=True, class_weight=None, sample_weight=None, initial_epoch=0, steps_per_epoch=None, validation_steps=None, validation_batch_size=None, validation_freq=1, max_queue_size=10, workers=1, use_multiprocessing=False ) \u8f93\u5165\u6570\u636ex,y\u662f\u6700\u91cd\u8981\u7684\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u76f4\u63a5\u5c06\u6570\u636e\u5b58\u5230\u5185\u5b58\u4e2d\uff0c\u7136\u540e\u4f20\u5230x\u5c31\u597d\u3002\u4f46\u662f\u4f1a\u51fa\u73b0\u8fd9\u6837\u7684\u60c5\u51b5\uff1a \u6570\u636e\u592a\u5927\uff0c\u5185\u5b58\u65e0\u6cd5\u88c5\u4e0b\uff0c\u8fd9\u8be5\u600e\u4e48\u529e\u5462\uff1f \u4f7f\u7528\u751f\u6210\u5668generator\u6216\u8005tf.data.Dataset\u6765\u8fdb\u884c\u8f93\u5165\u3002 \u7528generator\u6765\u505a\u8f93\u5165\uff1ax generator\u5e94\u8be5\u6bcf\u6b21\u4ea7\u751f\u4e00\u4e2a\uff08x\uff0cy\uff09\u3002 \u5e76\u4e14fit()\u51fd\u6570\u4e2dy\u53c2\u6570\u4e3aNone\uff0cbatch_size\u4e5f\u662fNone \u4e5f\u5c31\u662f\u8bf4\u751f\u6210\u5668\u6bcf\u6b21yield\u7684x\uff0cy\u662f\u4e00\u4e2abatch\u3002 \u6848\u4f8b\uff1a tf.data tf.data.Dataset\u662f\u6838\u5fc3 tf.data.Dataset\u662f\u4e00\u4e2apython\u8fed\u4ee3\u5668 \u4ece\u5185\u5b58\u4e2d\u52a0\u8f7d\u6570\u636e tf.data.Dataset.from_tensors() \"\"\"Creates a `Dataset` with a single element, comprising the given tensors. `from_tensors` produces a dataset containing only a single element. To slice the input tensor into multiple elements, use `from_tensor_slices` instead. \"\"\" tf.data.Dataset.from_tensor_slices() \"\"\"Creates a `Dataset` whose elements are slices of the given tensors. The given tensors are sliced along their first dimension. This operation preserves the structure of the input tensors, removing the first dimension of each tensor and using it as the dataset dimension. All input tensors must have the same size in their first dimensions. \"\"\" \u5728\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\u4e0a\u8fdb\u884c\u5207\u7247\uff0c\u6240\u4ee5\u4e00\u822c\u56fe\u7247\u7684\u7b2c\u4e00\u7ef4\u5ea6\u662fbatch tf.data.Dataset.element_spec \u68c0\u67e5\u5143\u7d20\uff0c\u8981\u6ce8\u610f\u7684\u662f\u5b83\u68c0\u67e5\u7684\u662f\u5355\u4e2a\u5143\u7d20\uff1a dataset2 = tf.data.Dataset.from_tensor_slices( (tf.random.uniform([4]), tf.random.uniform([4, 100], maxval=100, dtype=tf.int32))) dataset2.element_spec >>> (TensorSpec(shape=(), dtype=tf.float32, name=None), TensorSpec(shape=(100,), dtype=tf.int32, name=None)) Dataset.batch Combines consecutive elements of this dataset into batches. dataset = tf.data.Dataset.range(8) dataset = dataset.batch(3) list(dataset.as_numpy_iterator()) [[0,1,2],[3,4,5],[6,7]] tf.nest nest\u6a21\u5757\u662f\u7528\u4e8e\u5904\u7406nested structure\u7ed3\u6784\u7684\uff0cnested structure\u76ee\u524d\u652f\u6301\u7684\u7ed3\u6784\u662ftuple\uff0cdict\uff0cnamedtuple\u3002 \u5bf9\u4e8enested_structure\u53ef\u4ee5\u4f7f\u7528is_nested()\u5224\u65ad\u3002 tf.nest.is_nested(((7, 8), (5, 6))) >>>True tf.nest.is_nested({\"a\": 1, \"b\": 2}) >>>True tf.nest.is_nested(set([1, 2])) >>>False ones = tf.ones([2, 3]) >>>False functions assert_same_structure(...) : Asserts that two structures are nested in the same way. flatten(...) : Returns a flat list from a given nested structure. is_nested(...) : Returns true if its input is a collections.abc.Sequence (except strings). map_structure(...) : Applies func to each entry in structure and returns a new structure. pack_sequence_as(...) : Returns a given flattened sequence packed into a given structure. \u5e38\u7528\u51fd\u6570\u662fflatten() tf.nest.flatten \u6839\u636ekey\u6765\u6392\u5e8f\uff01 dict = { \"key3\": \"value3\", \"key1\": \"value1\", \"key2\": \"value2\" } tf.nest.flatten(dict) >>> ['value1','value2','value3'] tuple\u6839\u636e\u5185\u5b58\u987a\u5e8f graph keras \u516b\u80a1\u6587\u5199\u4ee3\u7801\u65b9\u6cd5\uff1a # import \u6a21\u5757 # train test # model # model.compile # model.fit # model.summary sequential model # Define Sequential model with 3 layers model = keras.Sequential( [ layers.Dense(2, activation=\"relu\", name=\"layer1\"), layers.Dense(3, activation=\"relu\", name=\"layer2\"), layers.Dense(4, name=\"layer3\"), ] ) # Call model on a test input x = tf.ones((3, 3)) y = model(x) sequential model \u4e0d\u9002\u7528\u4e8e\uff1a \u591a\u8f93\u5165\u4e0e\u591a\u8f93\u51fa \u5c42\u4e4b\u95f4\u7684\u5171\u4eab \u7b49\u7b49\u3002\u3002\u3002 \u7f51\u7edc\u7ed3\u6784 \u62c9\u76f4\u5c42 \u5168\u8fde\u63a5\u5c42 \u5377\u79ef\u5c42 LSTM\u5c42 model.compile model.compile(optimizer='sgd',loss,metrics=[\"accuracy\"]) \u6307\u5b9a\u7f51\u7edc\u7684\u4f18\u5316\u5668\u4e0e\u635f\u5931\u51fd\u6570 model.fit model.fit( x, y, batch_size, validation_data, validation_split, validation_freq ) build(self, inputs_shape) \u5728\u7ee7\u627ftf.keras.layers.Layer\u65f6\uff0c\u53ef\u4ee5\u91cd\u5199call\uff0cbuild\u548cinit\u51fd\u6570 build\u51fd\u6570\u4e3b\u8981\u7528\u4e8e\u521d\u59cb\u5316\u53c2\u6570\uff0c\u5f53call\u88ab\u7b2c\u4e00\u6b21\u8c03\u7528\u7684\u65f6\u5019\uff0c\u4f1a\u5148\u6267\u884cbuild()\u65b9\u6cd5\u521d\u59cb\u5316\u53d8\u91cf\uff0c\u4f46\u540e\u9762\u518d\u8c03\u7528\u5230call\u7684\u65f6\u5019\uff0c\u662f\u4e0d\u4f1a\u518d\u53bb\u6267\u884cbuild()\u65b9\u6cd5\u521d\u59cb\u5316\u53d8\u91cf\u3002\u4e00\u822c\u7528\u4e8e\u9700\u8981\u77e5\u9053\u8f93\u5165tensor\u7684\u5f62\u72b6\uff0c\u5b8c\u6210\u53d6\u51b3\u4e8e\u8f93\u5165tensor\u5f62\u72b6\u7684\u521d\u59cb\u5316\u3002 class Linear(keras.layers.Layer): def __init__(self, units=32): super(Linear, self).__init__() self.units = units def build(self, input_shape): self.w = self.add_weight( shape=(input_shape[-1], self.units), initializer=\"random_normal\", trainable=True, ) self.b = self.add_weight( shape=(self.units,), initializer=\"random_normal\", trainable=True ) def call(self, inputs): return tf.matmul(inputs, self.w) + self.b keras.backend.rnn \u5728\u65f6\u95f4\u6b65\u7ef4\u5ea6\u4e0a\u5bf9\u5f20\u91cf\u8fdb\u884c\u8fed\u4ee3\u3002 tf.keras.backend.rnn( step_function, inputs, initial_states, go_backwards=False, mask=None, constants=None, unroll=False, input_length=None, time_major=False, zero_output_for_mask=False, ) \u9700\u8981\u5b9a\u4e49step function\uff1a step(input): \"\"\"do some thing\"\"\" return output input\u5f20\u91cf\u9700\u8981\u53bb\u9664time_steps\u7ef4\u5ea6\uff0c\u4e3a[batch, features] output\u5f20\u91cf\u540c\u6837\u6ca1\u6709\u65f6\u95f4\u7ef4\u5ea6\uff0c\u4e3a[batch, output_dimensions] \u6a21\u578b\u7684\u4fdd\u5b58\u4e0e\u52a0\u8f7d \u4e00\u4e2a\u6a21\u578b\u5305\u62ec\u591a\u4e2a\u90e8\u4ef6\uff1a \u6a21\u578b\u7684\u7ed3\u6784\uff0c\u5305\u62eclayers\uff0chow they are connected \u6743\u91cd\uff0c\u4e5f\u5c31\u662f\u6a21\u578b\u7684\u53c2\u6570 \u4f18\u5316\u5668\uff0c\u5728compile \u6a21\u578b\u7684\u65f6\u5019\u6307\u5b9a \u635f\u5931\u51fd\u6570\u4e0emetric\uff0c\u4e5f\u662f\u5728compile\u65f6\u5019\u6307\u5b9a \u53ef\u4ee5\u4e00\u6b21\u5168\u90e8\u4fdd\u5b58\uff0c\u4e5f\u53ef\u4ee5\u5206\u522b\u50a8\u5b58\u3002 \u5168\u90e8\u4fdd\u5b58 # \u4fdd\u5b58\u6a21\u578b model.save('path/to/location') # \u52a0\u8f7d\u6a21\u578b model = keras.models.load_model('path/to/location') model.save \u4fdd\u5b58\u6240\u6709\uff0c\u683c\u5f0f\u4e3a SavedModel \u683c\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u6307\u5b9a\u4e3a H5 \u683c\u5f0f SavedModel \u5176\u5b9e\u662f\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u4fdd\u5b58\u4e86\u4e00\u4e9b\u6587\u4ef6\u3002\u8be6\u60c5\u53ef\u89c1 https://www.tensorflow.org/guide/saved_model#the_savedmodel_format_on_disk \u4fdd\u5b58\u7ed3\u6784 model.get_config() model.from_config() tf.keras.models.model_to_json() tf.keras.models.model_from_json() \u4fdd\u5b58\u6743\u91cd\uff0c\u53c2\u6570 model.save_weights() model.load_weights() \u53ef\u4ee5\u5b58\u50a8\u7684\u6587\u4ef6\u683c\u5f0f\u6709\uff1a TensorFlow Checkpoint HDF5 H5 pytorch \u51c6\u5907\u5de5\u4f5c \u67e5\u770bcudn\u7684\u7248\u672c nvcc --version \u67e5\u770bpytorch \u7248\u672c print(torch.__version__) print(torch.cuda.is_available()) device = 'cuda' if torch.cuda.is_available() else 'cpu' print('Using {} device'.format(device)) torch.utils.data.Dataset \u6570\u636e \u81ea\u5e26\u6570\u636e\u96c6 \u81ea\u5b9a\u4e49\u6570\u636e\u96c6 \u81ea\u5b9a\u4e49\u6570\u636e\u96c6 import os import pandas as pd from torchvision.io import read_image class CustomImageDataset(Dataset): def __init__(self, annotations_file, img_dir, transform=None, target_transform=None): self.img_labels = pd.read_csv(annotations_file) self.img_dir = img_dir self.transform = transform self.target_transform = target_transform def __len__(self): return len(self.img_labels) def __getitem__(self, idx): img_path = os.path.join(self.img_dir, self.img_labels.iloc[idx, 0]) image = read_image(img_path) label = self.img_labels.iloc[idx, 1] if self.transform: image = self.transform(image) if self.target_transform: label = self.target_transform(label) return image, label Dataset\u662f\u4e3afile\u670d\u52a1\u7684\u3002\u51e0\u4e2a\u5fc5\u987b\u7684\u51fd\u6570\uff1a init len getitem \u7528\u4e8e\u4e4b\u540e\u4f20\u5165dataloader torch.utils.data.DataLoader \u8fd9\u662f\u4e00\u4e2a\u53ef\u8fed\u4ee3\u7c7b\uff0c\u4e3a\u4e86\u5c31\u662f\u5c06dataset\u6253\u5305\u6210\u4e00\u4e2a\u4e2abatch\uff0c\u7528\u4e8e\u8bad\u7ec3 \u6240\u4ee5\u8bf4 dataloader\u662f\u4e3a\u8bad\u7ec3\u670d\u52a1\u7684\u3002 nn.module class NeuralNetwork(nn.Module): def __init__(self): super(NeuralNetwork, self).__init__() self.flatten = nn.Flatten() self.linear_relu_stack = nn.Sequential( nn.Linear(28*28, 512), nn.ReLU(), nn.Linear(512, 512), nn.ReLU(), nn.Linear(512, 10), ) def forward(self, x): x = self.flatten(x) logits = self.linear_relu_stack(x) return logits model = NeuralNetwork().to(device) \u5728init\u4e2d\u5b9a\u4e49\u7ec4\u4ef6\uff0c\u5728forward\u51fd\u6570\u5b9a\u4e49\u7f51\u7edc\u7684\u524d\u5411\u4f20\u64ad nn.module\u4e2d\u7684layer nn.Flatten nn.Linear nn.ReLU nn.Sequential layer\u7684\u5bb9\u5668 nn.Softmax \u5e38\u7528\u51fd\u6570 for name, param in model.named_parameters(): print(f\"Layer: {name} | Size: {param.size()} | Values : {param[:2]} \\n\") \u8bad\u7ec3\u7f51\u7edc \u5b9a\u4e49\u635f\u5931\u51fd\u6570 \u5b9a\u4e49\u4f18\u5316\u5668 \u5b9a\u4e49\u4e00\u4e2aepoch\u7684\u884c\u4e3a \u5f00\u59cb\u8bad\u7ec3\u591a\u4e2aepoch # 1 loss_fn = nn.CrossEntropyLoss() # 2 optimizer = torch.optim.SGD(model.parameters(), lr=learning_rate) # 3 def train_loop(dataloader, model, loss_fn, optimizer): size = len(dataloader.dataset) for batch, (X, y) in enumerate(dataloader): # Compute prediction and loss pred = model(X) loss = loss_fn(pred, y) # Backpropagation optimizer.zero_grad() loss.backward() optimizer.step() if batch % 100 == 0: loss, current = loss.item(), batch * len(X) print(f\"loss: {loss:>7f} [{current:>5d}/{size:>5d}]\") def test_loop(dataloader, model, loss_fn): size = len(dataloader.dataset) num_batches = len(dataloader) test_loss, correct = 0, 0 with torch.no_grad(): for X, y in dataloader: pred = model(X) test_loss += loss_fn(pred, y).item() correct += (pred.argmax(1) == y).type(torch.float).sum().item() test_loss /= num_batches correct /= size print(f\"Test Error: \\n Accuracy: {(100*correct):>0.1f}%, Avg loss: {test_loss:>8f} \\n\") loss_fn = nn.CrossEntropyLoss() optimizer = torch.optim.SGD(model.parameters(), lr=learning_rate) epochs = 10 for t in range(epochs): print(f\"Epoch {t+1}\\n-------------------------------\") train_loop(train_dataloader, model, loss_fn, optimizer) test_loop(test_dataloader, model, loss_fn) print(\"Done!\") Call optimizer.zero_grad() to reset the gradients of model parameters. Gradients by default add up; to prevent double-counting, we explicitly zero them at each iteration. \u53cd\u5411\u4f20\u64ad \u8f93\u5165x\uff0c\u8f93\u51fay\uff0c\u53c2\u6570\u4e3a \\(\\theta\\) \u5b9a\u4e49\u635f\u5931\u51fd\u6570 \\(J(\\theta)\\) \u6211\u4eec\u9700\u8981\u8ba1\u7b97\u7684\u662f $\\nabla _\\theta J(\\theta) $ \u8ba1\u7b97\u56fe\uff1a \u4e00\u4e2aDAG\uff0c\u4e00\u4e2a\u8282\u70b9\u53ef\u4ee5\u662f\u53d8\u91cf\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2aoperation\u3002 \u5fae\u79ef\u5206\u4e2d\u7684\u94fe\u5f0f\u6cd5\u5219 \u5bf9\u4e8e\u8fd9\u6837\u4e00\u4e2a\u51fd\u6570\uff1a $$ y = g(x)\\ z = f(g(x)) $$ z\u5bf9x\u6c42\u5bfc\uff0c\u5199\u4e3a\uff1a $$ dz/dx = dz/dy*dy/dx $$ \u8fd9\u53ea\u662f\u6807\u91cf\u7684\u5199\u6cd5\uff0c\u5982\u679c\u6269\u5c55\u4e3a\u5411\u91cf\uff1a $$ \\nabla_x z = (\\frac{\\delta y}{\\delta x})^T\\nabla_y z $$ \u5176\u4e2dz\u662f\u4e00\u4e2a\u6807\u91cf \\(x \\in R^m, y \\in R^n\\) , \\(\\frac{\\delta y}{\\delta x}\\) \u662f n \\(\\times\\) m\u7684 Jacobian\u77e9\u9635\u3002 \u6b64\u65f6\u5982\u679c\u6211\u4eec\u5c06 z\u770b\u4f5c\uff1a\u635f\u5931\u51fd\u6570\u8f93\u51fa\u7684\u6807\u91cf\u3002 $$ z = f(y) $$ y\u770b\u4f5c\u795e\u7ecf\u7f51\u7edc\u7684\u8f93\u51fa\u91cf\uff0cg()\u662f\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\uff1a $$ y = g(x) $$ \u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u8f93\u5165\u5b9e\u9645\u4e0a\u662f\u7f51\u7edc\u53c2\u6570 \\(x\\) , \u901a\u8fc7\u4e0d\u65ad\u6539\u53d8 \\(x\\) \u4f7f\u5f97\u635f\u5931\u51fd\u6570\u6700\u5c0f\u3002 \u7b2c\u4e00\u4e2a\u7248\u672c\u7684\u53cd\u5411\u4f20\u64ad \u5b9a\u4e49\u8fd9\u6837\u4e00\u4e2aforward\u8fc7\u7a0b\uff1a \\(u^{(1)},...,u^{(n_i)}\\) \u4e3a\u8f93\u5165\u8282\u70b9\uff08\u53ef\u4ee5\u7406\u89e3\u4e3a\u53c2\u6570w\uff09 \\(u^{(n)}\\) \u4e3a\u8f93\u51fa\uff0c\u662f\u635f\u5931\u51fd\u6570\u8ba1\u7b97\u51fa\u6765\u7684\u6807\u91cf\u503c\u3002 \u76ee\u6807\uff0c\u6c42 $$ \\frac{\\partial u^{(n)}}{\\partial u^{(j)}},j\\in{1,2,3...i}\\ =\\sum_{i: j \\in P a\\left(u^{(i)}\\right)} \\frac{\\partial u^{(n)}}{\\partial u^{(i)}} \\frac{\\partial u^{(i)}}{\\partial u^{(j)}} $$ \u6267\u884c\u53cd\u5411\u4f20\u64ad\u6240\u9700\u8981\u7684\u8ba1\u7b97\u91cf\u4e0eG\u4e2d\u8fb9\u7684\u6570\u91cf\u6210\u6bd4\u4f8b\u3002\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u7684\u8bbe\u8ba1\u5c31\u662f\u4e3a\u4e86\u51cf\u5c11\u516c\u5171\u5b50\u8868\u8fbe\u5f0f\u7684\u6570\u91cf\uff0c\u800c\u4e0d\u8003\u8651\u50a8\u5b58\u7684\u5f00\u9500\u3002 \u7b97\u6cd5\u7684\u7b80\u5316\u7248\u672c\uff0c\u53ea\u9002\u7528\u4e8e\u524d\u9762\u63d0\u5230\u7684\u524d\u5411\u4f20\u64ad\u8fc7\u7a0b\u3002\u5927\u81f4\u89c2\u5bdf\u4e00\u4e0b\uff0c\u53ef\u4ee5\u770b\u5230\u65b0\u589e\u4e86\u4e00\u4e2agrad_table\uff0c\u7528\u4e8e\u5b58\u50a8\u5df2\u7ecf\u8ba1\u7b97\u8fc7\u4e86\u7684\u68af\u5ea6\uff0c\u8fd9\u5c31\u662f\u4e00\u79cd\u727a\u7272\u7a7a\u95f4\u6362\u53d6\u65f6\u95f4\u7684\u7b97\u6cd5\u3002 \u7528\u4f8b\u5b50\u6765\u8bf4\u660e\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5 \u5bf9\u4e8e\u8fd9\u6837\u4e00\u4e2a\u56fe\u7ed3\u6784\uff0c\u8bb0\uff1a \\(j < i , u_j\u662fu_i\u7684\u7236\u8282\u70b9\\) \\(\\frac{\\partial u^{6}}{\\partial u^{6}}=1\\) \u76f4\u63a5\u8bb0\u4e0b\uff0c\u5199\u5165grad_table \u8fdb\u5165\u8fed\u4ee3\uff0cj = 5 \uff08\u82e5\u65e0grad_table\uff09\u8ba1\u7b97 \\(\\frac{\\partial u^{6}}{\\partial u^{5}}=\\frac{\\partial u^{6}}{\\partial u^{5}}\\) \u6709grad_table\uff0c \\(grad\\_table[u^6]=1\\) \uff0c\u6240\u4ee5 \\(grad\\_table[u^5]=1\\times\\frac{\\partial u^{6}}{\\partial u^{5}}\\) \u8fdb\u5165\u8fed\u4ee3\uff0cj=4 \uff08\u82e5\u65e0grad_table\uff09\u8ba1\u7b97 \\(\\frac{\\partial u^{6}}{\\partial u^{4}}=\\frac{\\partial u^{6}}{\\partial u^{4}}\\) \u6709grad_table\uff0c \\(grad\\_table[u^6]=1\\) \uff0c\u6240\u4ee5 \\(grad\\_table[u^4]=1\\times\\frac{\\partial u^{6}}{\\partial u^{4}}\\) \u8fdb\u5165\u8fed\u4ee3\uff0cj=3 \uff08\u82e5\u65e0grad_table\uff09\u8ba1\u7b97 \\(\\frac{\\partial u^{6}}{\\partial u^{3}}=\\frac{\\partial u^{6}}{\\partial u^{5}}\\frac{\\partial u^{5}}{\\partial u^{3}}\\) \u6709grad_table\uff0c \\(grad\\_table[u^5]=1\\times\\frac{\\partial u^{6}}{\\partial u^{5}}\\) \uff0c\u6240\u4ee5 \\(grad\\_table[u^3]=grad\\_table[u^5]\\times\\frac{\\partial u^{5}}{\\partial u^{3}}\\) \u8fdb\u5165\u8fed\u4ee3\uff0cj=2 \uff08\u82e5\u65e0grad_table\uff09\u8ba1\u7b97 \\(\\frac{\\partial u^{6}}{\\partial u^{2}}=\\frac{\\partial u^{6}}{\\partial u^{4}}\\frac{\\partial u^{4}}{\\partial u^{2}}+\\frac{\\partial u^{6}}{\\partial u^{5}}\\frac{\\partial u^{5}}{\\partial u^{2}}\\) \u6709grad_table\uff0c\u6240\u4ee5 \\(grad\\_table[u^2]=grad\\_table[u^5]\\times\\frac{\\partial u^{5}}{\\partial u^{2}}+grad\\_table[u^4]\\times\\frac{\\partial u^{4}}{\\partial u^{2}}\\) \u4ee5\u6b64\u7c7b\u63a8 \u6240\u4ee5\u7efc\u4e0a\u6240\u8ff0\uff0c\u8282\u7ea6\u4e86\u591a\u6b21\u5185\u79ef\u7684\u8ba1\u7b97\u65f6\u95f4,\u4f46\u662f\u8fd9\u53ea\u662f\u4e00\u79cd\u7b80\u5355\u4e14\u76f4\u89c2\u7684\u60c5\u51b5\u3002 \u771f\u6b63\u5730\u8003\u8651\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\uff1a \u5b83\u7684forward\u8fc7\u7a0b\u5982\u4e0b\u63cf\u8ff0\uff1a \u53cd\u5411\u4f20\u64ad\u8fc7\u7a0b\uff1a reference https://github.com/exacity/deeplearningbook-chinese RNN\u5faa\u73af\u795e\u7ecf\u7f51\u7edc \u672c\u8d28\u4e0a\uff0c\u4efb\u4f55\u5305\u542b\u5faa\u73af\u7684\u51fd\u6570\u90fd\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u3002 $$ \\boldsymbol{h}^{(t)}=f\\left(\\boldsymbol{h}^{(t-1)}, \\boldsymbol{x}^{(t)} ; \\boldsymbol{\\theta}\\right) $$ \u7f51\u7edc\u901a\u5e38\u4f7f\u7528 \\(\\boldsymbol{h}^{(t)}\\) \u4f5c\u4e3a\u8fc7\u53bb\u5e8f\u5217\u4e0e\u4efb\u52a1\u76f8\u5173\u65b9\u9762\u7684\u6709\u635f\u6458\u8981\uff0c\u4e00\u822c\u800c\u8a00\u4e00\u5b9a\u662f\u6709\u635f\u7684\u3002 \\(\\boldsymbol{h}^{(t)}\\) \u6620\u5c04\u4efb\u610f\u957f\u5ea6\u5e8f\u5217 \\(\\left(\\boldsymbol{x}^{(t)}, \\boldsymbol{x}^{(t-1)}, \\boldsymbol{x}^{(t-2)}, \\ldots, \\boldsymbol{x}^{(2)}, \\boldsymbol{x}^{(1)}\\right)\\) \u5230\u4e00\u5b9a\u957f\u5ea6 \\(\\boldsymbol{h}^{(t)}\\) \u8ba1\u7b97\u516c\u5f0f\uff1a $$ h_t = tanh(w_xx_t+w_hh_{t-1}+b) \\ y_t = w_yh_t $$ \u5176\u4e2d\u6574\u4e2a\u6a21\u578b\u5171\u4eab\u53c2\u6570\uff1a \\(w_h,w_x,w_y\\) \u7ecf\u5178\u7684RNN\u7ed3\u6784 n->n n->1 n->m \u4f18\u7f3a\u70b9 \u4f18\u70b9\uff1a \u2022 Possibility of processing input of any length \u2022 Model size not increasing with size of input \u2022 Computation takes into account historical information \u2022 Weights are shared across time \u7f3a\u70b9\uff1a \u2022 Computation being slow \u2022 Difficulty of accessing information from a long time ago \u2022 Cannot consider any future input for the current state \u635f\u5931\u51fd\u6570 $$ \\mathcal{L}(\\hat{y}, y)=\\sum_{t=1}^{T_{y}} \\mathcal{L}\\left(\\widehat{y}^{ }, y^{ }\\right) $$ \u5982\u679c\u6211\u4eec\u9700\u8981\u7684\u6a21\u578b\u662fn->1\uff1a \u90a3\u4e48\u8bad\u7ec3\u6240\u7ed9\u7684\u6570\u636e\u4e5f\u5e94\u8be5\u5982\uff1a $$ [X^n,y^n]\\ X^n=x_1,x_2,...,x_t\\ y^n=y_t $$ \u635f\u5931\u51fd\u6570\uff1a \u6839\u636e\u65f6\u95f4\u6b65\u7684\u8fde\u4e58\u3002 $$ \\frac{\\partial \\mathcal{L}^{(T)}}{\\partial W}=\\left.\\sum_{t=1}^{T} \\frac{\\partial \\mathcal{L}^{(T)}}{\\partial W}\\right|_{(t)} $$ \u5e38\u89c1\u95ee\u9898: vanishing/ exploding gradient The reason why they happen is that it is difficult to capture long term dependencies because of multiplicative gradient that can be exponentially decreasing/increasing with respect to the number of layers. \u65f6\u95f4\u6b65\u4e00\u957f\uff0c\u8fde\u4e58\u5c31\u8981\u51fa\u95ee\u9898\u3002 \u5bf9\u68af\u5ea6\u7684\u6700\u5927\u503c\u8fdb\u884c\u9650\u5236\u662f\u4e00\u4e2a\u653e\u7f6eexploding\u7684\u65b9\u6cd5\u3002 reference https://stanford.edu/~shervine/teaching/cs-230/cheatsheet-recurrent-neural-networks#overview sequence to sequence \u7ed3\u6784 \u4e00\u822cRNN\u7ed3\u6784\u5bf9\u4e8e\u8f93\u5165\u4e0e\u8f93\u51fa\u7684\u4e2a\u6570\u90fd\u505a\u4e86\u9650\u5b9a\uff0c\u4f46\u5b9e\u9645\u4e0a\u5f88\u591a\u4efb\u52a1\u7684\u5e8f\u5217\u957f\u5ea6\u662f\u4e0d\u56fa\u5b9a\u7684\u3002 \u5206\u6790 \u53ef\u4ee5\u89c2\u5bdf\u5230\uff0c\u5176\u5b9e\u524d\u534a\u90e8\u5206\u662f\u4e00\u4e2aencoder\u6a21\u578b\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2aN->1\u7684RNN\u6a21\u578b\u3002\u8fd9\u4e2a\u5411\u91cf\u4e00\u822c\u79f0\u4f5c \u4e0a\u4e0b\u6587\u5411\u91cfc \u5f53\u7136c\u53ef\u4ee5\u7531 \\(h_n\\) \u51b3\u5b9a\uff0c\u4e5f\u53ef\u4ee5\u7531 \\(h_1,...h_n\\) \u51b3\u5b9a\u3002 $$ \\begin{gathered} c=h_{N} \\ c=q\\left(h_{N}\\right) \\ c=q\\left(h_{1}, h_{2}, \\ldots, h_{N}\\right) \\end{gathered} $$ \u7136\u540e\u4f7f\u7528decoder\u5bf9c\u8fdb\u884c\u89e3\u7801\uff1a teacher forcing TODO attention \u4ee5\u4e0a\u6a21\u578b\u7684\u7f3a\u9677\uff1a c\u5982\u679c\u5b9a\u957f\uff0c\u5f88\u96be\u5b8c\u5168\u6db5\u76d6\u8f93\u5165 RNN \u5b58\u5728\u957f\u5e8f\u5217\u68af\u5ea6\u6d88\u5931\u7684\u95ee\u9898\uff0c\u53ea\u4f7f\u7528\u6700\u540e\u4e00\u4e2a\u795e\u7ecf\u5143\u5f97\u5230\u7684\u5411\u91cf c \u6548\u679c\u4e0d\u7406\u60f3\u3002 \u4e0e\u4eba\u7c7b\u7684\u6ce8\u610f\u529b\u65b9\u5f0f\u4e0d\u540c\uff0c\u5373\u4eba\u7c7b\u5728\u9605\u8bfb\u6587\u7ae0\u7684\u65f6\u5019\uff0c\u4f1a\u628a\u6ce8\u610f\u529b\u653e\u5728\u5f53\u524d\u7684\u53e5\u5b50\u4e0a\u3002 \u4f7f\u7528attention\u673a\u5236\uff0c\u4f7f\u5f97\u4e0a\u4e0b\u6587\u5411\u91cfc\u4e0d\u518d\u56fa\u5b9a\uff0c\u800c\u662f\u6839\u636e\u5f53\u524d\u4fe1\u606f\u8ba1\u7b97c \u4e0a\u4e0b\u6587\u5411\u91cf--->\u53d7\u5230\u62fc\u63a5 keras.layers.SimpleRNN \u5bf9\u4e8e\u4e00\u4e2a\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff0c\u5b83\u7684\u8f93\u5165\u5f20\u91cf\u4e00\u822c\u4e3a\uff1a (samples\uff0ctimesteps,features) \u4f8b\u5982\u624b\u4e0a\u7684\u6570\u636e\u4e3a\uff1a\u4e00\u5c0f\u65f6\u4e00\u4e2a\u65f6\u95f4\u6233\uff0c\u4e00\u4e2a\u6837\u672c\u7edf\u8ba1\u4e86100h\uff0c\u6d89\u53ca\u523012\u4e2a\u53d8\u91cf\uff0c\u7edf\u8ba1\u4e8680\u6b21\uff0c\u90a3\u4e48\u6570\u636e\u53ef\u4ee5\u5199\u4e3a\uff1a (80,100,12) \u4e3a\u4e86\u65b9\u4fbf\u4e4b\u540e\u53c2\u6570\u8ba1\u7b97\u7684\u8ba8\u8bba\uff0c\u6211\u4eec\u8003\u8651\u7684\u60c5\u51b5\u4e3a x.shape = (10,5,2) y.shape = (10,2) \u6765\u505a\u4e00\u4e2a\u4e8c\u5206\u7c7b\u95ee\u9898\u3002 SimpleRNN \u7684\u8f93\u5165\u8f93\u51fa \u5b83\u7684\u8f93\u5165\u88ab\u6307\u5b9a\u4e3a3\u7ef4(samples\uff0ctimesteps, features) x = tf.random.normal(shape=(3,10,5,4)) rnn = layers.SimpleRNN(units=1) y = rnn(x) print(y.shape) >>> ValueError: Input 0 of layer simple_rnn is incompatible with the layer: expected ndim=3, found ndim=4. Full shape received: (3, 10, 5, 4) \u8f93\u51fa\u7ef4\u5ea6\u7531\u552f\u4e00\u7684\u53c2\u6570units\u51b3\u5b9a units: Positive integer, dimensionality of the output space\u3002\u5f88\u663e\u7136\uff0c\u5bf9\u4e8e\u4e00\u4e2abatch\uff0c\u4ed6\u7684\u8f93\u51fa\u4e3a(batch_size,units) units\u5230\u5e95\u662f\u4ec0\u4e48\u5462 \\[ h_t = tanh(w_xx_t+w_hh_{t-1}+b) \\] \u53c2\u6570\u5171\u4eab\uff0c\u6240\u4ee5\u770b\u5230\u7684\u5c55\u5f00\u5f0f\uff0c\u90fd\u662f\u5171\u4eab\u8fd9\u4e00\u5957\u53c2\u6570\u3002units\uff0c\u672c\u8d28\u4e0a\u662f \\(h_t\\) \u7684\u7ef4\u5ea6\u3002 \\((5,2)\\) \u7684x\u8fdb\u6765\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a\u4e24\u7ef4\u7684\u5411\u91cf\u8fdb\u6765\uff0c\u8f93\u51fa\u7684 \\(h_t\\) \u4e5f\u662f\u4e00\u4e2a\u4e24\u4f4d\u5411\u91cf\uff0c\u6240\u4ee5\u8fd9\u6837\u8ba1\u7b97\uff1a \u4e00\u5171\u662f10\u4e2a\u53c2\u6570\u3002 \u6ce8\u610f\uff0c\u56fe\u4e2d\u7684 \\(w_y\\) \u5e76\u4e0d\u662fRNN\u7ed3\u6784\u4e2d\u53c2\u6570\uff0c\u56e0\u4e3aSimpleRNN\u4e2d\u5c31\u4e0d\u5305\u62ecy\uff0c\u4ed6\u76f4\u63a5\u5c06h\u5411\u91cf\u8f93\u51fa\uff0c\u5982\u679c\u9700\u8981\u56fe\u4e2d\u7684y\uff0c\u9700\u8981\u81ea\u884c\u6dfb\u52a0dense\u5c42\u3002 \u516c\u5f0f\u4e3a\uff1a recurrent_weights + input_weights + biases num_units* num_units + num_features* num_units + biases \u8fd9\u5f20\u56fe\u7247\u4e5f\u65b9\u4fbf\u7406\u89e3: https://stackoverflow.com/questions/50134334/number-of-parameters-for-keras-simplernn LSTM LSTM\u7684\u5168\u79f0\u662fLong Short Term Memory\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5b83\u5177\u6709\u8bb0\u5fc6\u957f\u77ed\u671f\u4fe1\u606f\u7684\u80fd\u529b\u7684\u795e\u7ecf\u7f51\u7edc\u3002LSTM\u9996\u5148\u57281997\u5e74\u7531Hochreiter & Schmidhuber \u63d0\u51fa\uff0c\u7531\u4e8e\u6df1\u5ea6\u5b66\u4e60\u57282012\u5e74\u7684\u5174\u8d77\uff0cLSTM\u53c8\u7ecf\u8fc7\u4e86\u82e5\u5e72\u4ee3\u5927\u725b(Felix Gers, Fred Cummins, Santiago Fernandez, Justin Bayer, Daan Wierstra, Julian Togelius, Faustino Gomez, Matteo Gagliolo, and Alex Gloves)\u7684\u53d1\u5c55\uff0c\u7531\u6b64\u4fbf\u5f62\u6210\u4e86\u6bd4\u8f83\u7cfb\u7edf\u4e14\u5b8c\u6574\u7684LSTM\u6846\u67b6\uff0c\u5e76\u4e14\u5728\u5f88\u591a\u9886\u57df\u5f97\u5230\u4e86\u5e7f\u6cdb\u7684\u5e94\u7528\u3002\u672c\u6587\u7740\u91cd\u4ecb\u7ecd\u6df1\u5ea6\u5b66\u4e60\u65f6\u4ee3\u7684LSTM\u3002 LSTM\u63d0\u51fa\u7684\u52a8\u673a\u662f\u4e3a\u4e86\u89e3\u51b3\u4e0a\u9762\u6211\u4eec\u63d0\u5230\u7684\u957f\u671f\u4f9d\u8d56\u95ee\u9898\u3002\u4f20\u7edf\u7684RNN\u8282\u70b9\u8f93\u51fa\u4ec5\u7531\u6743\u503c\uff0c\u504f\u7f6e\u4ee5\u53ca\u6fc0\u6d3b\u51fd\u6570\u51b3\u5b9a\uff08\u56fe3\uff09\u3002RNN\u662f\u4e00\u4e2a\u94fe\u5f0f\u7ed3\u6784\uff0c\u6bcf\u4e2a\u65f6\u95f4\u7247\u4f7f\u7528\u7684\u662f\u76f8\u540c\u7684\u53c2\u6570\u3002 https://zhuanlan.zhihu.com/p/42717426 LSTM\u4f7f\u7528\u95e8\u7684\u673a\u5236\uff0c\u63a7\u5236\u7279\u5f81\u7684\u6d41\u901a\u548c\u635f\u5931\u3002LSTM\u53ef\u4ee5\u505a\u5230t9\u7684\u65f6\u523b\u8003\u8651t2\u7684\u7279\u5f81\uff0c cell state $$ C_{t}=f_{t} \\times C_{t-1}+i_{t} \\times \\tilde{C}_{t} $$ \\(f_{t}\\) \u662f\u4e00\u4e2a\u9057\u5fd8\u95e8\uff0c0~1\u4e4b\u95f4 \\(i_{t}\\) \u662f\u8f93\u5165\u95e8\uff0c\u5176\u529f\u80fd\u975e\u5e38\u76f8\u4f3c\u7528\u4e8e\u4fdd\u7559\u4e0e\u4ee5\u5f80\uff0c \\(h_t,x_t\\) \u7684\u4fe1\u606f \\(\\tilde{C}_{t}\\) \u8868\u793a\u5355\u5143\u72b6\u6001\u66f4\u65b0\u503c \\(C_t\\) \u4e3acell\u72b6\u6001 \u7531\u6839\u636e \\(o_t\\) \u8f93\u51fa\u95e8\uff0c\u66f4\u65b0\u7684 \\(h_t\\) \u503c\u3002 \u7efc\u4e0a\u6240\u8ff0\uff0cLSTM\u4e00\u4e2acell\u91cc\u9762\u8f93\u51fa\u4e86\u4e24\u4e2a\u53d8\u91cf\uff0c\u5206\u522b\u4e3a \\(C_t\\) \uff0c \\(h_t\\) \u3002 keras.layers.LSTM >>> inputs = tf.random.normal([32, 10, 8]) >>> lstm = tf.keras.layers.LSTM(4) >>> output = lstm(inputs) >>> print(output.shape) (32, 4) >>> lstm = tf.keras.layers.LSTM(4, return_sequences=True, return_state=True) >>> whole_seq_output, final_memory_state, final_carry_state = lstm(inputs) >>> print(whole_seq_output.shape) (32, 10, 4) >>> print(final_memory_state.shape) (32, 4) >>> print(final_carry_state.shape) (32, 4) units: \\(h_t\\) \u7684\u7ef4\u5ea6 whole_seq_output, final_memory_state, final_carry_state = lstm(inputs) \u6ce8\u610f\u8f93\u51fa\u7684\u987a\u5e8f sequence_output \u662f\u6307 \\(h_t\\) whole_seq_output \u662f\u6307 \\(h_1,h_2,...h_t\\) tensorflow2 \u7684 LSTM \u6e90\u7801\u9605\u8bfb LSTM\u662f\u4e00\u4e2alayer\uff0c\u5b83\u7ee7\u627f\u4e86RNN layer \u4f7f\u7528\u7684\u662fLSTMCell LSTM\u662f\u4e00\u4e2a\u5faa\u73af\u64cd\u4f5c\uff08\u8f93\u5165\u4e09\u7ef4\u5ea6\u5f20\u91cf\uff09\uff0cLSTMCell\u5c31\u662f\u4e00\u6b21\u5faa\u73af\u7684\u64cd\u4f5c\uff08\u8f93\u5165\u4e8c\u7ef4\u5f20\u91cf\uff0c\u53bb\u9664\u4e86\u65f6\u95f4\u6233\uff09\u3002 LSTMCell \u7c7b class LSTMCell(DropoutRNNCellMixin, Layer): \"\"\"Cell class for the LSTM layer. Args: units: Positive integer, dimensionality of the output space. activation: Activation function to use. Default: hyperbolic tangent (`tanh`). If you pass `None`, no activation is applied (ie. \"linear\" activation: `a(x) = x`). recurrent_activation: Activation function to use for the recurrent step. Default: hard sigmoid (`hard_sigmoid`). If you pass `None`, no activation is applied (ie. \"linear\" activation: `a(x) = x`). use_bias: Boolean, whether the layer uses a bias vector. kernel_initializer: Initializer for the `kernel` weights matrix, used for the linear transformation of the inputs. recurrent_initializer: Initializer for the `recurrent_kernel` weights matrix, used for the linear transformation of the recurrent state. bias_initializer: Initializer for the bias vector. unit_forget_bias: Boolean. If True, add 1 to the bias of the forget gate at initialization. Setting it to true will also force `bias_initializer=\"zeros\"`. This is recommended in [Jozefowicz et al., 2015]( http://www.jmlr.org/proceedings/papers/v37/jozefowicz15.pdf) kernel_regularizer: Regularizer function applied to the `kernel` weights matrix. recurrent_regularizer: Regularizer function applied to the `recurrent_kernel` weights matrix. bias_regularizer: Regularizer function applied to the bias vector. kernel_constraint: Constraint function applied to the `kernel` weights matrix. recurrent_constraint: Constraint function applied to the `recurrent_kernel` weights matrix. bias_constraint: Constraint function applied to the bias vector. dropout: Float between 0 and 1. Fraction of the units to drop for the linear transformation of the inputs. recurrent_dropout: Float between 0 and 1. Fraction of the units to drop for the linear transformation of the recurrent state. Call arguments: inputs: A 2D tensor. states: List of state tensors corresponding to the previous timestep. training: Python boolean indicating whether the layer should behave in training mode or in inference mode. Only relevant when `dropout` or `recurrent_dropout` is used. \"\"\" \u4e00\u4e2aCell\u53ea\u9700\u8981\u8f93\u5165\u4e8c\u7ef4\u5f20\u91cf[batch,features] call \u51fd\u6570\u8fd4\u56de\u503c\u4e3a h, [h,c] def call(self, inputs, states, training=None): h_tm1 = states[0] # previous memory state c_tm1 = states[1] # previous carry state \"\"\" \u7701\u7565 \"\"\" return h, [h, c] \u6b63\u5982\u8fd9\u4e00\u4e2aCell\u6240\u793a\uff0c\u8fdb\u53bb\u4e00\u4e2a \\(x_t\\) \u51fa\u6765 \\(h_t,c_t\\) LSTM \u7c7b class LSTM(RNN): def __init__(self,units,**kwargs): \"\"\" \u7701\u7565 \"\"\" cell = LSTMCell(units,**cell_kwargs) super(LSTM, self).__init__(cell,**kwargs) def call(self, inputs): return super(LSTM, self).call(inputs) \u53ef\u4ee5\u770b\u5230\uff0c\u672c\u8d28\u4e0a\u662f\u4f7f\u7528\u4e86RNN\u7684call\u51fd\u6570\uff0c\u4f46\u662f\u628aCell\u8fdb\u884c\u4e86\u66f4\u6539\u3002 \u524d\u9762\u5df2\u7ecf\u63d0\u5230\u4e86Cell\u662f\u4e00\u4e2a\uff1a [batch, features] -----LSTMCell-----> h, [h, c] \u63a5\u4e0b\u6765\u8fdb\u5165RNN\u7684call\u51fd\u6570\u4e2d\uff1a def call(self,inputs,): # The input should be dense, padded with zeros. If a ragged input is fed # into the layer, it is padded and the row lengths are used for masking. \"\"\" \u8fdb\u884c\u4e00\u7cfb\u5217\u68c0\u67e5 \"\"\" inputs,initial_state,constants= self._process_inputs(inputs,initial_state,constants) # \u5b9a\u4e49step\u51fd\u6570\uff0c\u6267\u884cCell\u7684call function def step(inputs, states): states = states[0] if len(states) == 1 and is_tf_rnn_cell else states output, new_states = cell_call_fn(inputs, states, **kwargs) if not tf.nest.is_nested(new_states): new_states = [new_states] return output, new_states # \u5c06step\u51fd\u6570\u653e\u5230K.rnn\u4e2d\u6267\u884c last_output, outputs, states = backend.rnn( step, inputs, initial_state) transformer\u4e2d\u7684\u4f4d\u7f6e\u7f16\u7801 \u4e00\u79cd\u597d\u7684\u4f4d\u7f6e\u7f16\u7801\u65b9\u6848\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u51e0\u6761\u8981\u6c42\uff1a \u5b83\u80fd\u4e3a\u6bcf\u4e2a\u65f6\u95f4\u6b65\u8f93\u51fa\u4e00\u4e2a\u72ec\u4e00\u65e0\u4e8c\u7684\u7f16\u7801\uff1b \u4e0d\u540c\u957f\u5ea6\u7684\u53e5\u5b50\u4e4b\u95f4\uff0c\u4efb\u4f55\u4e24\u4e2a\u65f6\u95f4\u6b65\u4e4b\u95f4\u7684\u8ddd\u79bb\u5e94\u8be5\u4fdd\u6301\u4e00\u81f4\uff1b \u6a21\u578b\u5e94\u8be5\u80fd\u6beb\u4e0d\u8d39\u529b\u5730\u6cdb\u5316\u5230\u66f4\u957f\u7684\u53e5\u5b50\u3002 \u5b83\u7684\u503c\u5e94\u8be5\u662f\u6709\u754c\u7684\uff1b \u5b83\u5fc5\u987b\u662f\u786e\u5b9a\u6027\u7684\u3002","title":"\u6df1\u5ea6\u5b66\u4e60"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_1","text":"\u6df1\u5ea6\u5b66\u4e60 \u6570\u5b66\u57fa\u7840 tensorflow \u4e00\u4e9b\u57fa\u672c\u6982\u5ff5 \u5f20\u91cf \u5982\u4f55\u7406\u89e3\u9ad8\u7ef4\u5f20\u91cf \u7d22\u5f15\u4e0eslicing reshape broadcasting \u7279\u5f81 \u77e9\u9635\u4e58\u6cd5 \u5c0f\u77e5\u8bc6\u70b9\uff1a \u5e38\u7528\u51fd\u6570 tf.Variable \u5e38\u7528\u8fd0\u7b97\u51fd\u6570 \u8f93\u5165\u6807\u7b7e\uff0c\u6807\u7b7e tf.GradientTape tf.one_hot tf.argmax model.fit() \u7528generator\u6765\u505a\u8f93\u5165\uff1ax tf.data \u4ece\u5185\u5b58\u4e2d\u52a0\u8f7d\u6570\u636e tf.data.Dataset.element_spec Dataset.batch tf.nest functions tf.nest.flatten graph keras sequential model \u7f51\u7edc\u7ed3\u6784 model.compile model.fit build(self, inputs_shape) keras.backend.rnn \u6a21\u578b\u7684\u4fdd\u5b58\u4e0e\u52a0\u8f7d \u5168\u90e8\u4fdd\u5b58 \u4fdd\u5b58\u7ed3\u6784 \u4fdd\u5b58\u6743\u91cd\uff0c\u53c2\u6570 pytorch \u51c6\u5907\u5de5\u4f5c torch.utils.data.Dataset \u81ea\u5b9a\u4e49\u6570\u636e\u96c6 torch.utils.data.DataLoader nn.module nn.module\u4e2d\u7684layer \u5e38\u7528\u51fd\u6570 \u8bad\u7ec3\u7f51\u7edc \u53cd\u5411\u4f20\u64ad \u8ba1\u7b97\u56fe\uff1a \u5fae\u79ef\u5206\u4e2d\u7684\u94fe\u5f0f\u6cd5\u5219 \u7b2c\u4e00\u4e2a\u7248\u672c\u7684\u53cd\u5411\u4f20\u64ad \u7528\u4f8b\u5b50\u6765\u8bf4\u660e\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5 \u771f\u6b63\u5730\u8003\u8651\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\uff1a reference RNN\u5faa\u73af\u795e\u7ecf\u7f51\u7edc \u7ecf\u5178\u7684RNN\u7ed3\u6784 \u4f18\u7f3a\u70b9 \u7f3a\u70b9\uff1a \u635f\u5931\u51fd\u6570\uff1a reference sequence to sequence \u7ed3\u6784 \u5206\u6790 teacher forcing attention keras.layers.SimpleRNN SimpleRNN \u7684\u8f93\u5165\u8f93\u51fa units\u5230\u5e95\u662f\u4ec0\u4e48\u5462 LSTM cell state keras.layers.LSTM tensorflow2 \u7684 LSTM \u6e90\u7801\u9605\u8bfb LSTMCell \u7c7b LSTM \u7c7b transformer\u4e2d\u7684\u4f4d\u7f6e\u7f16\u7801","title":"\u6df1\u5ea6\u5b66\u4e60"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_2","text":"\u6807\u91cf \u5411\u91cf \u77e9\u9635 \u5f20\u91cf","title":"\u6570\u5b66\u57fa\u7840"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#tensorflow","text":"","title":"tensorflow"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_3","text":"keras\u662ftensorflow\u7684\u9ad8\u9636api\uff0c\u76f8\u5f53\u4e8e\u96c6\u6210\u597d\u4e86\u4e00\u4e9btensor\u7684\u64cd\u4f5c\u3002 tensorflow\u662f\u5f20\u91cf\u7684\u56fe\u8ba1\u7b97\u6d41","title":"\u4e00\u4e9b\u57fa\u672c\u6982\u5ff5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_4","text":"\u5f20\u91cf\u662f\u4e00\u4e2a\u9ad8\u7ef4\u7684\u6570\u7ec4\u3002 \u5f20\u91cf\u53ef\u4ee5\u662f\u5927\u4e8e2\u4e2aaxes\u7684\uff1a","title":"\u5f20\u91cf"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_5","text":"(3,2,5) \u5c31\u662f3\u4e2a2*5\u7684\u77e9\u9635\u53e0\u5728\u4e00\u8d77 (5,256,256,3) \u5c31\u662f5\u5f20RGB\u7167\u7247\u53e0\u5728\u4e00\u8d77 \u56e0\u4e3a\u5e38\u5e38\u5904\u7406\u56fe\u50cf\u6570\u636e\uff0c\u6240\u4ee5\u5e38\u7528\u7684tensor\u5f62\u72b6\u4e3a(B,W,H,C)","title":"\u5982\u4f55\u7406\u89e3\u9ad8\u7ef4\u5f20\u91cf"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#slicing","text":"\u7d22\u5f15\u5c31\u5982numpy\u7684\u7d22\u5f15\u65b9\u5f0f\uff0c\u6709\u51e0\u4e2aaxes\u5c31\u80fd\u5728\u51e0\u4e2aaxes\u4e0a\u8fdb\u884c\u7d22\u5f15\u3002 tensor[axe1,axe2,axe3] \u5bf9\u4e8e\u9ad8\u7ef4\u5411\u91cf\u7684\u7d22\u5f15\uff0c\u5982\u679c\u76f4\u5bf9\u4e00\u4e2a\u7ef4\u5ea6\u8fdb\u884c\u7d22\u5f15\uff0c\u5207\u7247\u7684\u6837\u5b50\u5f88\u96be\u60f3\u8c61\u51fa\u6765\uff0c\u8fd9\u91cc\u4e3e\u4f8b\uff1a # There can be an arbitrary number of # axes (sometimes called \"dimensions\") rank_3_tensor = tf.constant([ [[0, 1, 2, 3, 4], [5, 6, 7, 8, 9]], [[10, 11, 12, 13, 14], [15, 16, 17, 18, 19]], [[20, 21, 22, 23, 24], [25, 26, 27, 28, 29]],]) print(rank_3_tensor) >>> tf.Tensor( [[[ 0 1 2 3 4] [ 5 6 7 8 9]] [[10 11 12 13 14] [15 16 17 18 19]] [[20 21 22 23 24] [25 26 27 28 29]]], shape=(3, 2, 5), dtype=int32) rank_3_tensor[:, :, 4] >>> <tf.Tensor: shape=(3, 2), dtype=int32, numpy= array([[ 4, 9], [14, 19], [24, 29]])>","title":"\u7d22\u5f15\u4e0eslicing"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#reshape","text":"flatten\u6839\u636e\u7684\u662f\u5f20\u91cf\u4e2d\u5143\u7d20\u5728\u5185\u5b58\u4e2d\u7684\u6392\u5217\u3002TensorFlow uses C-style \"row-major\" memory ordering, where incrementing the rightmost index corresponds to a single step in memory. \u5728reshape\u65f6\uff0c\u8981\u8003\u8651\u5230\u6570\u636e\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u56e0\u4e3areshape\u53ea\u8981\u6c42\u524d\u540e\u5143\u7d20\u6570\u76ee\u76f8\u540c\uff0c\u4e0d\u4fdd\u8bc1\u4fdd\u7559\u6570\u636e\u5173\u7cfb\u3002","title":"reshape"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#broadcasting","text":"\u8fd9\u4e00\u70b9\u4e0enumpy\u4e2d\u7684\u5e7f\u64ad\u6027\u8d28\u4e00\u81f4\u3002 \u5728\u4e00\u4e2aoperation\u5f53\u4e2d\uff0c\u5982\u679carray\u4e0escalar\u8fdb\u884c\u8fd0\u7b97\uff0c\u90a3\u4e48\u4f1a\u53d1\u751f\u4ec0\u4e48\u5462\uff1f \u4e24\u4e2aarrays\u8fdb\u884coperation\uff0c\u8981\u6c42\u4ed6\u4eec\u7684\u7ef4\u5ea6\u662fcompatible\u7684\uff1a \u7ef4\u5ea6\u76f8\u540c \u5176\u4e2d\u4e00\u4e2a\u4e3a1 https://numpy.org/devdocs/user/basics.broadcasting.html \u5982\uff1a(5,4)\u53ef\u4ee5\u4e0e(1,)\uff0c(4,)\u8fdb\u884coperation\uff0c\u4f46\u4e0d\u80fd\u4e0e(3,)\u8fdb\u884coperation \u4ece\u5de6\u4fa7\u5f00\u59cb\u914d\u5bf9\uff0c\u4ece\u6700\u5185\u7684\u5143\u7d20\u5f00\u59cb\u3002","title":"broadcasting \u7279\u5f81"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_6","text":"\u5b9e\u9645\u4e0a\u77e9\u9635\u4e58\u6cd5\u5c31\u662f\u7b26\u5408\u5e7f\u64ad\u7279\u6027\u7684\uff1a a = 1 * 3 b = 4 * 1 result = 4 * 3","title":"\u77e9\u9635\u4e58\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_7","text":"\u5f20\u91cf\u5728\u56fe\u4e2d\u6d41\u52a8\uff0c\u6240\u4ee5\u53ebtensorflow \u8fd9\u4e2a\u4e00\u7ef4\u5f20\u91cf\u7684\u6d41\u52a8\u8fc7\u7a0b \u5f20\u91cf\u53ef\u4ee5\u7531numpy\u6784\u5efa\uff0c\u4ee5\u53ca\u4e00\u4e9b\u7279\u6b8a\u7684\u65b9\u6cd5 tf.zeros() tf.ones() tf.random.normal() axis:","title":"\u5c0f\u77e5\u8bc6\u70b9\uff1a"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_8","text":"","title":"\u5e38\u7528\u51fd\u6570"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#tfvariable","text":"\u7528\u8be5\u51fd\u6570\u6807\u8bb0\u540e\uff0c\u8be5\u53d8\u91cf\u5c31\u662f\u53ef\u8bad\u7ec3\u7684\u4e86\u3002 w = tf.Variable(tf.random.normal([2,2],mean,stddev=1))","title":"tf.Variable"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_9","text":"tf.add tf.subtract tf.multiply \u7b49\u7b49","title":"\u5e38\u7528\u8fd0\u7b97\u51fd\u6570"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_10","text":"tf.data.Dataset.from_tensor_slices","title":"\u8f93\u5165\u6807\u7b7e\uff0c\u6807\u7b7e"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#tfgradienttape","text":"\u8ba1\u7b97\u68af\u5ea6","title":"tf.GradientTape"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#tfone_hot","text":"\u72ec\u70ed\u7f16\u7801","title":"tf.one_hot"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#tfargmax","text":"\u8fd4\u56de\u5f20\u91cf\u6307\u5b9a\u7ef4\u5ea6\u6700\u5927\u503c\u7684\u7d22\u5f15\u53f7\u3002","title":"tf.argmax"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#modelfit","text":"fit(x=None, y=None, batch_size=None, epochs=1, verbose='auto', callbacks=None, validation_split=0.0, validation_data=None, shuffle=True, class_weight=None, sample_weight=None, initial_epoch=0, steps_per_epoch=None, validation_steps=None, validation_batch_size=None, validation_freq=1, max_queue_size=10, workers=1, use_multiprocessing=False ) \u8f93\u5165\u6570\u636ex,y\u662f\u6700\u91cd\u8981\u7684\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u76f4\u63a5\u5c06\u6570\u636e\u5b58\u5230\u5185\u5b58\u4e2d\uff0c\u7136\u540e\u4f20\u5230x\u5c31\u597d\u3002\u4f46\u662f\u4f1a\u51fa\u73b0\u8fd9\u6837\u7684\u60c5\u51b5\uff1a \u6570\u636e\u592a\u5927\uff0c\u5185\u5b58\u65e0\u6cd5\u88c5\u4e0b\uff0c\u8fd9\u8be5\u600e\u4e48\u529e\u5462\uff1f \u4f7f\u7528\u751f\u6210\u5668generator\u6216\u8005tf.data.Dataset\u6765\u8fdb\u884c\u8f93\u5165\u3002","title":"model.fit()"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#generatorx","text":"generator\u5e94\u8be5\u6bcf\u6b21\u4ea7\u751f\u4e00\u4e2a\uff08x\uff0cy\uff09\u3002 \u5e76\u4e14fit()\u51fd\u6570\u4e2dy\u53c2\u6570\u4e3aNone\uff0cbatch_size\u4e5f\u662fNone \u4e5f\u5c31\u662f\u8bf4\u751f\u6210\u5668\u6bcf\u6b21yield\u7684x\uff0cy\u662f\u4e00\u4e2abatch\u3002 \u6848\u4f8b\uff1a","title":"\u7528generator\u6765\u505a\u8f93\u5165\uff1ax"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#tfdata","text":"tf.data.Dataset\u662f\u6838\u5fc3 tf.data.Dataset\u662f\u4e00\u4e2apython\u8fed\u4ee3\u5668","title":"tf.data"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_11","text":"tf.data.Dataset.from_tensors() \"\"\"Creates a `Dataset` with a single element, comprising the given tensors. `from_tensors` produces a dataset containing only a single element. To slice the input tensor into multiple elements, use `from_tensor_slices` instead. \"\"\" tf.data.Dataset.from_tensor_slices() \"\"\"Creates a `Dataset` whose elements are slices of the given tensors. The given tensors are sliced along their first dimension. This operation preserves the structure of the input tensors, removing the first dimension of each tensor and using it as the dataset dimension. All input tensors must have the same size in their first dimensions. \"\"\" \u5728\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\u4e0a\u8fdb\u884c\u5207\u7247\uff0c\u6240\u4ee5\u4e00\u822c\u56fe\u7247\u7684\u7b2c\u4e00\u7ef4\u5ea6\u662fbatch","title":"\u4ece\u5185\u5b58\u4e2d\u52a0\u8f7d\u6570\u636e"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#tfdatadatasetelement_spec","text":"\u68c0\u67e5\u5143\u7d20\uff0c\u8981\u6ce8\u610f\u7684\u662f\u5b83\u68c0\u67e5\u7684\u662f\u5355\u4e2a\u5143\u7d20\uff1a dataset2 = tf.data.Dataset.from_tensor_slices( (tf.random.uniform([4]), tf.random.uniform([4, 100], maxval=100, dtype=tf.int32))) dataset2.element_spec >>> (TensorSpec(shape=(), dtype=tf.float32, name=None), TensorSpec(shape=(100,), dtype=tf.int32, name=None))","title":"tf.data.Dataset.element_spec"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#datasetbatch","text":"Combines consecutive elements of this dataset into batches. dataset = tf.data.Dataset.range(8) dataset = dataset.batch(3) list(dataset.as_numpy_iterator()) [[0,1,2],[3,4,5],[6,7]]","title":"Dataset.batch"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#tfnest","text":"nest\u6a21\u5757\u662f\u7528\u4e8e\u5904\u7406nested structure\u7ed3\u6784\u7684\uff0cnested structure\u76ee\u524d\u652f\u6301\u7684\u7ed3\u6784\u662ftuple\uff0cdict\uff0cnamedtuple\u3002 \u5bf9\u4e8enested_structure\u53ef\u4ee5\u4f7f\u7528is_nested()\u5224\u65ad\u3002 tf.nest.is_nested(((7, 8), (5, 6))) >>>True tf.nest.is_nested({\"a\": 1, \"b\": 2}) >>>True tf.nest.is_nested(set([1, 2])) >>>False ones = tf.ones([2, 3]) >>>False","title":"tf.nest"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#functions","text":"assert_same_structure(...) : Asserts that two structures are nested in the same way. flatten(...) : Returns a flat list from a given nested structure. is_nested(...) : Returns true if its input is a collections.abc.Sequence (except strings). map_structure(...) : Applies func to each entry in structure and returns a new structure. pack_sequence_as(...) : Returns a given flattened sequence packed into a given structure. \u5e38\u7528\u51fd\u6570\u662fflatten()","title":"functions"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#tfnestflatten","text":"\u6839\u636ekey\u6765\u6392\u5e8f\uff01 dict = { \"key3\": \"value3\", \"key1\": \"value1\", \"key2\": \"value2\" } tf.nest.flatten(dict) >>> ['value1','value2','value3'] tuple\u6839\u636e\u5185\u5b58\u987a\u5e8f","title":"tf.nest.flatten"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#graph","text":"","title":"graph"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#keras","text":"\u516b\u80a1\u6587\u5199\u4ee3\u7801\u65b9\u6cd5\uff1a # import \u6a21\u5757 # train test # model # model.compile # model.fit # model.summary","title":"keras"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#sequential-model","text":"# Define Sequential model with 3 layers model = keras.Sequential( [ layers.Dense(2, activation=\"relu\", name=\"layer1\"), layers.Dense(3, activation=\"relu\", name=\"layer2\"), layers.Dense(4, name=\"layer3\"), ] ) # Call model on a test input x = tf.ones((3, 3)) y = model(x) sequential model \u4e0d\u9002\u7528\u4e8e\uff1a \u591a\u8f93\u5165\u4e0e\u591a\u8f93\u51fa \u5c42\u4e4b\u95f4\u7684\u5171\u4eab \u7b49\u7b49\u3002\u3002\u3002","title":"sequential model"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_12","text":"\u62c9\u76f4\u5c42 \u5168\u8fde\u63a5\u5c42 \u5377\u79ef\u5c42 LSTM\u5c42","title":"\u7f51\u7edc\u7ed3\u6784"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#modelcompile","text":"model.compile(optimizer='sgd',loss,metrics=[\"accuracy\"]) \u6307\u5b9a\u7f51\u7edc\u7684\u4f18\u5316\u5668\u4e0e\u635f\u5931\u51fd\u6570","title":"model.compile"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#modelfit_1","text":"model.fit( x, y, batch_size, validation_data, validation_split, validation_freq )","title":"model.fit"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#buildself-inputs_shape","text":"\u5728\u7ee7\u627ftf.keras.layers.Layer\u65f6\uff0c\u53ef\u4ee5\u91cd\u5199call\uff0cbuild\u548cinit\u51fd\u6570 build\u51fd\u6570\u4e3b\u8981\u7528\u4e8e\u521d\u59cb\u5316\u53c2\u6570\uff0c\u5f53call\u88ab\u7b2c\u4e00\u6b21\u8c03\u7528\u7684\u65f6\u5019\uff0c\u4f1a\u5148\u6267\u884cbuild()\u65b9\u6cd5\u521d\u59cb\u5316\u53d8\u91cf\uff0c\u4f46\u540e\u9762\u518d\u8c03\u7528\u5230call\u7684\u65f6\u5019\uff0c\u662f\u4e0d\u4f1a\u518d\u53bb\u6267\u884cbuild()\u65b9\u6cd5\u521d\u59cb\u5316\u53d8\u91cf\u3002\u4e00\u822c\u7528\u4e8e\u9700\u8981\u77e5\u9053\u8f93\u5165tensor\u7684\u5f62\u72b6\uff0c\u5b8c\u6210\u53d6\u51b3\u4e8e\u8f93\u5165tensor\u5f62\u72b6\u7684\u521d\u59cb\u5316\u3002 class Linear(keras.layers.Layer): def __init__(self, units=32): super(Linear, self).__init__() self.units = units def build(self, input_shape): self.w = self.add_weight( shape=(input_shape[-1], self.units), initializer=\"random_normal\", trainable=True, ) self.b = self.add_weight( shape=(self.units,), initializer=\"random_normal\", trainable=True ) def call(self, inputs): return tf.matmul(inputs, self.w) + self.b","title":"build(self, inputs_shape)"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#kerasbackendrnn","text":"\u5728\u65f6\u95f4\u6b65\u7ef4\u5ea6\u4e0a\u5bf9\u5f20\u91cf\u8fdb\u884c\u8fed\u4ee3\u3002 tf.keras.backend.rnn( step_function, inputs, initial_states, go_backwards=False, mask=None, constants=None, unroll=False, input_length=None, time_major=False, zero_output_for_mask=False, ) \u9700\u8981\u5b9a\u4e49step function\uff1a step(input): \"\"\"do some thing\"\"\" return output input\u5f20\u91cf\u9700\u8981\u53bb\u9664time_steps\u7ef4\u5ea6\uff0c\u4e3a[batch, features] output\u5f20\u91cf\u540c\u6837\u6ca1\u6709\u65f6\u95f4\u7ef4\u5ea6\uff0c\u4e3a[batch, output_dimensions]","title":"keras.backend.rnn"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_13","text":"\u4e00\u4e2a\u6a21\u578b\u5305\u62ec\u591a\u4e2a\u90e8\u4ef6\uff1a \u6a21\u578b\u7684\u7ed3\u6784\uff0c\u5305\u62eclayers\uff0chow they are connected \u6743\u91cd\uff0c\u4e5f\u5c31\u662f\u6a21\u578b\u7684\u53c2\u6570 \u4f18\u5316\u5668\uff0c\u5728compile \u6a21\u578b\u7684\u65f6\u5019\u6307\u5b9a \u635f\u5931\u51fd\u6570\u4e0emetric\uff0c\u4e5f\u662f\u5728compile\u65f6\u5019\u6307\u5b9a \u53ef\u4ee5\u4e00\u6b21\u5168\u90e8\u4fdd\u5b58\uff0c\u4e5f\u53ef\u4ee5\u5206\u522b\u50a8\u5b58\u3002","title":"\u6a21\u578b\u7684\u4fdd\u5b58\u4e0e\u52a0\u8f7d"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_14","text":"# \u4fdd\u5b58\u6a21\u578b model.save('path/to/location') # \u52a0\u8f7d\u6a21\u578b model = keras.models.load_model('path/to/location') model.save \u4fdd\u5b58\u6240\u6709\uff0c\u683c\u5f0f\u4e3a SavedModel \u683c\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u6307\u5b9a\u4e3a H5 \u683c\u5f0f SavedModel \u5176\u5b9e\u662f\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u4fdd\u5b58\u4e86\u4e00\u4e9b\u6587\u4ef6\u3002\u8be6\u60c5\u53ef\u89c1 https://www.tensorflow.org/guide/saved_model#the_savedmodel_format_on_disk","title":"\u5168\u90e8\u4fdd\u5b58"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_15","text":"model.get_config() model.from_config() tf.keras.models.model_to_json() tf.keras.models.model_from_json()","title":"\u4fdd\u5b58\u7ed3\u6784"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_16","text":"model.save_weights() model.load_weights() \u53ef\u4ee5\u5b58\u50a8\u7684\u6587\u4ef6\u683c\u5f0f\u6709\uff1a TensorFlow Checkpoint HDF5 H5","title":"\u4fdd\u5b58\u6743\u91cd\uff0c\u53c2\u6570"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#pytorch","text":"","title":"pytorch"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_17","text":"\u67e5\u770bcudn\u7684\u7248\u672c nvcc --version \u67e5\u770bpytorch \u7248\u672c print(torch.__version__) print(torch.cuda.is_available()) device = 'cuda' if torch.cuda.is_available() else 'cpu' print('Using {} device'.format(device))","title":"\u51c6\u5907\u5de5\u4f5c"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#torchutilsdatadataset","text":"\u6570\u636e \u81ea\u5e26\u6570\u636e\u96c6 \u81ea\u5b9a\u4e49\u6570\u636e\u96c6","title":"torch.utils.data.Dataset"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_18","text":"import os import pandas as pd from torchvision.io import read_image class CustomImageDataset(Dataset): def __init__(self, annotations_file, img_dir, transform=None, target_transform=None): self.img_labels = pd.read_csv(annotations_file) self.img_dir = img_dir self.transform = transform self.target_transform = target_transform def __len__(self): return len(self.img_labels) def __getitem__(self, idx): img_path = os.path.join(self.img_dir, self.img_labels.iloc[idx, 0]) image = read_image(img_path) label = self.img_labels.iloc[idx, 1] if self.transform: image = self.transform(image) if self.target_transform: label = self.target_transform(label) return image, label Dataset\u662f\u4e3afile\u670d\u52a1\u7684\u3002\u51e0\u4e2a\u5fc5\u987b\u7684\u51fd\u6570\uff1a init len getitem \u7528\u4e8e\u4e4b\u540e\u4f20\u5165dataloader","title":"\u81ea\u5b9a\u4e49\u6570\u636e\u96c6"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#torchutilsdatadataloader","text":"\u8fd9\u662f\u4e00\u4e2a\u53ef\u8fed\u4ee3\u7c7b\uff0c\u4e3a\u4e86\u5c31\u662f\u5c06dataset\u6253\u5305\u6210\u4e00\u4e2a\u4e2abatch\uff0c\u7528\u4e8e\u8bad\u7ec3 \u6240\u4ee5\u8bf4 dataloader\u662f\u4e3a\u8bad\u7ec3\u670d\u52a1\u7684\u3002","title":"torch.utils.data.DataLoader"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#nnmodule","text":"class NeuralNetwork(nn.Module): def __init__(self): super(NeuralNetwork, self).__init__() self.flatten = nn.Flatten() self.linear_relu_stack = nn.Sequential( nn.Linear(28*28, 512), nn.ReLU(), nn.Linear(512, 512), nn.ReLU(), nn.Linear(512, 10), ) def forward(self, x): x = self.flatten(x) logits = self.linear_relu_stack(x) return logits model = NeuralNetwork().to(device) \u5728init\u4e2d\u5b9a\u4e49\u7ec4\u4ef6\uff0c\u5728forward\u51fd\u6570\u5b9a\u4e49\u7f51\u7edc\u7684\u524d\u5411\u4f20\u64ad","title":"nn.module"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#nnmodulelayer","text":"nn.Flatten nn.Linear nn.ReLU nn.Sequential layer\u7684\u5bb9\u5668 nn.Softmax","title":"nn.module\u4e2d\u7684layer"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_19","text":"for name, param in model.named_parameters(): print(f\"Layer: {name} | Size: {param.size()} | Values : {param[:2]} \\n\")","title":"\u5e38\u7528\u51fd\u6570"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_20","text":"\u5b9a\u4e49\u635f\u5931\u51fd\u6570 \u5b9a\u4e49\u4f18\u5316\u5668 \u5b9a\u4e49\u4e00\u4e2aepoch\u7684\u884c\u4e3a \u5f00\u59cb\u8bad\u7ec3\u591a\u4e2aepoch # 1 loss_fn = nn.CrossEntropyLoss() # 2 optimizer = torch.optim.SGD(model.parameters(), lr=learning_rate) # 3 def train_loop(dataloader, model, loss_fn, optimizer): size = len(dataloader.dataset) for batch, (X, y) in enumerate(dataloader): # Compute prediction and loss pred = model(X) loss = loss_fn(pred, y) # Backpropagation optimizer.zero_grad() loss.backward() optimizer.step() if batch % 100 == 0: loss, current = loss.item(), batch * len(X) print(f\"loss: {loss:>7f} [{current:>5d}/{size:>5d}]\") def test_loop(dataloader, model, loss_fn): size = len(dataloader.dataset) num_batches = len(dataloader) test_loss, correct = 0, 0 with torch.no_grad(): for X, y in dataloader: pred = model(X) test_loss += loss_fn(pred, y).item() correct += (pred.argmax(1) == y).type(torch.float).sum().item() test_loss /= num_batches correct /= size print(f\"Test Error: \\n Accuracy: {(100*correct):>0.1f}%, Avg loss: {test_loss:>8f} \\n\") loss_fn = nn.CrossEntropyLoss() optimizer = torch.optim.SGD(model.parameters(), lr=learning_rate) epochs = 10 for t in range(epochs): print(f\"Epoch {t+1}\\n-------------------------------\") train_loop(train_dataloader, model, loss_fn, optimizer) test_loop(test_dataloader, model, loss_fn) print(\"Done!\") Call optimizer.zero_grad() to reset the gradients of model parameters. Gradients by default add up; to prevent double-counting, we explicitly zero them at each iteration.","title":"\u8bad\u7ec3\u7f51\u7edc"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_21","text":"\u8f93\u5165x\uff0c\u8f93\u51fay\uff0c\u53c2\u6570\u4e3a \\(\\theta\\) \u5b9a\u4e49\u635f\u5931\u51fd\u6570 \\(J(\\theta)\\) \u6211\u4eec\u9700\u8981\u8ba1\u7b97\u7684\u662f $\\nabla _\\theta J(\\theta) $","title":"\u53cd\u5411\u4f20\u64ad"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_22","text":"\u4e00\u4e2aDAG\uff0c\u4e00\u4e2a\u8282\u70b9\u53ef\u4ee5\u662f\u53d8\u91cf\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2aoperation\u3002","title":"\u8ba1\u7b97\u56fe\uff1a"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_23","text":"\u5bf9\u4e8e\u8fd9\u6837\u4e00\u4e2a\u51fd\u6570\uff1a $$ y = g(x)\\ z = f(g(x)) $$ z\u5bf9x\u6c42\u5bfc\uff0c\u5199\u4e3a\uff1a $$ dz/dx = dz/dy*dy/dx $$ \u8fd9\u53ea\u662f\u6807\u91cf\u7684\u5199\u6cd5\uff0c\u5982\u679c\u6269\u5c55\u4e3a\u5411\u91cf\uff1a $$ \\nabla_x z = (\\frac{\\delta y}{\\delta x})^T\\nabla_y z $$ \u5176\u4e2dz\u662f\u4e00\u4e2a\u6807\u91cf \\(x \\in R^m, y \\in R^n\\) , \\(\\frac{\\delta y}{\\delta x}\\) \u662f n \\(\\times\\) m\u7684 Jacobian\u77e9\u9635\u3002 \u6b64\u65f6\u5982\u679c\u6211\u4eec\u5c06 z\u770b\u4f5c\uff1a\u635f\u5931\u51fd\u6570\u8f93\u51fa\u7684\u6807\u91cf\u3002 $$ z = f(y) $$ y\u770b\u4f5c\u795e\u7ecf\u7f51\u7edc\u7684\u8f93\u51fa\u91cf\uff0cg()\u662f\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\uff1a $$ y = g(x) $$ \u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u8f93\u5165\u5b9e\u9645\u4e0a\u662f\u7f51\u7edc\u53c2\u6570 \\(x\\) , \u901a\u8fc7\u4e0d\u65ad\u6539\u53d8 \\(x\\) \u4f7f\u5f97\u635f\u5931\u51fd\u6570\u6700\u5c0f\u3002","title":"\u5fae\u79ef\u5206\u4e2d\u7684\u94fe\u5f0f\u6cd5\u5219"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_24","text":"\u5b9a\u4e49\u8fd9\u6837\u4e00\u4e2aforward\u8fc7\u7a0b\uff1a \\(u^{(1)},...,u^{(n_i)}\\) \u4e3a\u8f93\u5165\u8282\u70b9\uff08\u53ef\u4ee5\u7406\u89e3\u4e3a\u53c2\u6570w\uff09 \\(u^{(n)}\\) \u4e3a\u8f93\u51fa\uff0c\u662f\u635f\u5931\u51fd\u6570\u8ba1\u7b97\u51fa\u6765\u7684\u6807\u91cf\u503c\u3002 \u76ee\u6807\uff0c\u6c42 $$ \\frac{\\partial u^{(n)}}{\\partial u^{(j)}},j\\in{1,2,3...i}\\ =\\sum_{i: j \\in P a\\left(u^{(i)}\\right)} \\frac{\\partial u^{(n)}}{\\partial u^{(i)}} \\frac{\\partial u^{(i)}}{\\partial u^{(j)}} $$ \u6267\u884c\u53cd\u5411\u4f20\u64ad\u6240\u9700\u8981\u7684\u8ba1\u7b97\u91cf\u4e0eG\u4e2d\u8fb9\u7684\u6570\u91cf\u6210\u6bd4\u4f8b\u3002\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u7684\u8bbe\u8ba1\u5c31\u662f\u4e3a\u4e86\u51cf\u5c11\u516c\u5171\u5b50\u8868\u8fbe\u5f0f\u7684\u6570\u91cf\uff0c\u800c\u4e0d\u8003\u8651\u50a8\u5b58\u7684\u5f00\u9500\u3002 \u7b97\u6cd5\u7684\u7b80\u5316\u7248\u672c\uff0c\u53ea\u9002\u7528\u4e8e\u524d\u9762\u63d0\u5230\u7684\u524d\u5411\u4f20\u64ad\u8fc7\u7a0b\u3002\u5927\u81f4\u89c2\u5bdf\u4e00\u4e0b\uff0c\u53ef\u4ee5\u770b\u5230\u65b0\u589e\u4e86\u4e00\u4e2agrad_table\uff0c\u7528\u4e8e\u5b58\u50a8\u5df2\u7ecf\u8ba1\u7b97\u8fc7\u4e86\u7684\u68af\u5ea6\uff0c\u8fd9\u5c31\u662f\u4e00\u79cd\u727a\u7272\u7a7a\u95f4\u6362\u53d6\u65f6\u95f4\u7684\u7b97\u6cd5\u3002","title":"\u7b2c\u4e00\u4e2a\u7248\u672c\u7684\u53cd\u5411\u4f20\u64ad"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_25","text":"\u5bf9\u4e8e\u8fd9\u6837\u4e00\u4e2a\u56fe\u7ed3\u6784\uff0c\u8bb0\uff1a \\(j < i , u_j\u662fu_i\u7684\u7236\u8282\u70b9\\) \\(\\frac{\\partial u^{6}}{\\partial u^{6}}=1\\) \u76f4\u63a5\u8bb0\u4e0b\uff0c\u5199\u5165grad_table \u8fdb\u5165\u8fed\u4ee3\uff0cj = 5 \uff08\u82e5\u65e0grad_table\uff09\u8ba1\u7b97 \\(\\frac{\\partial u^{6}}{\\partial u^{5}}=\\frac{\\partial u^{6}}{\\partial u^{5}}\\) \u6709grad_table\uff0c \\(grad\\_table[u^6]=1\\) \uff0c\u6240\u4ee5 \\(grad\\_table[u^5]=1\\times\\frac{\\partial u^{6}}{\\partial u^{5}}\\) \u8fdb\u5165\u8fed\u4ee3\uff0cj=4 \uff08\u82e5\u65e0grad_table\uff09\u8ba1\u7b97 \\(\\frac{\\partial u^{6}}{\\partial u^{4}}=\\frac{\\partial u^{6}}{\\partial u^{4}}\\) \u6709grad_table\uff0c \\(grad\\_table[u^6]=1\\) \uff0c\u6240\u4ee5 \\(grad\\_table[u^4]=1\\times\\frac{\\partial u^{6}}{\\partial u^{4}}\\) \u8fdb\u5165\u8fed\u4ee3\uff0cj=3 \uff08\u82e5\u65e0grad_table\uff09\u8ba1\u7b97 \\(\\frac{\\partial u^{6}}{\\partial u^{3}}=\\frac{\\partial u^{6}}{\\partial u^{5}}\\frac{\\partial u^{5}}{\\partial u^{3}}\\) \u6709grad_table\uff0c \\(grad\\_table[u^5]=1\\times\\frac{\\partial u^{6}}{\\partial u^{5}}\\) \uff0c\u6240\u4ee5 \\(grad\\_table[u^3]=grad\\_table[u^5]\\times\\frac{\\partial u^{5}}{\\partial u^{3}}\\) \u8fdb\u5165\u8fed\u4ee3\uff0cj=2 \uff08\u82e5\u65e0grad_table\uff09\u8ba1\u7b97 \\(\\frac{\\partial u^{6}}{\\partial u^{2}}=\\frac{\\partial u^{6}}{\\partial u^{4}}\\frac{\\partial u^{4}}{\\partial u^{2}}+\\frac{\\partial u^{6}}{\\partial u^{5}}\\frac{\\partial u^{5}}{\\partial u^{2}}\\) \u6709grad_table\uff0c\u6240\u4ee5 \\(grad\\_table[u^2]=grad\\_table[u^5]\\times\\frac{\\partial u^{5}}{\\partial u^{2}}+grad\\_table[u^4]\\times\\frac{\\partial u^{4}}{\\partial u^{2}}\\) \u4ee5\u6b64\u7c7b\u63a8 \u6240\u4ee5\u7efc\u4e0a\u6240\u8ff0\uff0c\u8282\u7ea6\u4e86\u591a\u6b21\u5185\u79ef\u7684\u8ba1\u7b97\u65f6\u95f4,\u4f46\u662f\u8fd9\u53ea\u662f\u4e00\u79cd\u7b80\u5355\u4e14\u76f4\u89c2\u7684\u60c5\u51b5\u3002","title":"\u7528\u4f8b\u5b50\u6765\u8bf4\u660e\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_26","text":"\u5b83\u7684forward\u8fc7\u7a0b\u5982\u4e0b\u63cf\u8ff0\uff1a \u53cd\u5411\u4f20\u64ad\u8fc7\u7a0b\uff1a","title":"\u771f\u6b63\u5730\u8003\u8651\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\uff1a"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#reference","text":"https://github.com/exacity/deeplearningbook-chinese","title":"reference"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#rnn","text":"\u672c\u8d28\u4e0a\uff0c\u4efb\u4f55\u5305\u542b\u5faa\u73af\u7684\u51fd\u6570\u90fd\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u3002 $$ \\boldsymbol{h}^{(t)}=f\\left(\\boldsymbol{h}^{(t-1)}, \\boldsymbol{x}^{(t)} ; \\boldsymbol{\\theta}\\right) $$ \u7f51\u7edc\u901a\u5e38\u4f7f\u7528 \\(\\boldsymbol{h}^{(t)}\\) \u4f5c\u4e3a\u8fc7\u53bb\u5e8f\u5217\u4e0e\u4efb\u52a1\u76f8\u5173\u65b9\u9762\u7684\u6709\u635f\u6458\u8981\uff0c\u4e00\u822c\u800c\u8a00\u4e00\u5b9a\u662f\u6709\u635f\u7684\u3002 \\(\\boldsymbol{h}^{(t)}\\) \u6620\u5c04\u4efb\u610f\u957f\u5ea6\u5e8f\u5217 \\(\\left(\\boldsymbol{x}^{(t)}, \\boldsymbol{x}^{(t-1)}, \\boldsymbol{x}^{(t-2)}, \\ldots, \\boldsymbol{x}^{(2)}, \\boldsymbol{x}^{(1)}\\right)\\) \u5230\u4e00\u5b9a\u957f\u5ea6 \\(\\boldsymbol{h}^{(t)}\\) \u8ba1\u7b97\u516c\u5f0f\uff1a $$ h_t = tanh(w_xx_t+w_hh_{t-1}+b) \\ y_t = w_yh_t $$ \u5176\u4e2d\u6574\u4e2a\u6a21\u578b\u5171\u4eab\u53c2\u6570\uff1a \\(w_h,w_x,w_y\\)","title":"RNN\u5faa\u73af\u795e\u7ecf\u7f51\u7edc"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#rnn_1","text":"n->n n->1 n->m","title":"\u7ecf\u5178\u7684RNN\u7ed3\u6784"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_27","text":"\u4f18\u70b9\uff1a \u2022 Possibility of processing input of any length \u2022 Model size not increasing with size of input \u2022 Computation takes into account historical information \u2022 Weights are shared across time","title":"\u4f18\u7f3a\u70b9"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_28","text":"\u2022 Computation being slow \u2022 Difficulty of accessing information from a long time ago \u2022 Cannot consider any future input for the current state \u635f\u5931\u51fd\u6570 $$ \\mathcal{L}(\\hat{y}, y)=\\sum_{t=1}^{T_{y}} \\mathcal{L}\\left(\\widehat{y}^{ }, y^{ }\\right) $$ \u5982\u679c\u6211\u4eec\u9700\u8981\u7684\u6a21\u578b\u662fn->1\uff1a \u90a3\u4e48\u8bad\u7ec3\u6240\u7ed9\u7684\u6570\u636e\u4e5f\u5e94\u8be5\u5982\uff1a $$ [X^n,y^n]\\ X^n=x_1,x_2,...,x_t\\ y^n=y_t $$","title":"\u7f3a\u70b9\uff1a"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_29","text":"\u6839\u636e\u65f6\u95f4\u6b65\u7684\u8fde\u4e58\u3002 $$ \\frac{\\partial \\mathcal{L}^{(T)}}{\\partial W}=\\left.\\sum_{t=1}^{T} \\frac{\\partial \\mathcal{L}^{(T)}}{\\partial W}\\right|_{(t)} $$ \u5e38\u89c1\u95ee\u9898: vanishing/ exploding gradient The reason why they happen is that it is difficult to capture long term dependencies because of multiplicative gradient that can be exponentially decreasing/increasing with respect to the number of layers. \u65f6\u95f4\u6b65\u4e00\u957f\uff0c\u8fde\u4e58\u5c31\u8981\u51fa\u95ee\u9898\u3002 \u5bf9\u68af\u5ea6\u7684\u6700\u5927\u503c\u8fdb\u884c\u9650\u5236\u662f\u4e00\u4e2a\u653e\u7f6eexploding\u7684\u65b9\u6cd5\u3002","title":"\u635f\u5931\u51fd\u6570\uff1a"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#reference_1","text":"https://stanford.edu/~shervine/teaching/cs-230/cheatsheet-recurrent-neural-networks#overview","title":"reference"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#sequence-to-sequence","text":"\u4e00\u822cRNN\u7ed3\u6784\u5bf9\u4e8e\u8f93\u5165\u4e0e\u8f93\u51fa\u7684\u4e2a\u6570\u90fd\u505a\u4e86\u9650\u5b9a\uff0c\u4f46\u5b9e\u9645\u4e0a\u5f88\u591a\u4efb\u52a1\u7684\u5e8f\u5217\u957f\u5ea6\u662f\u4e0d\u56fa\u5b9a\u7684\u3002","title":"sequence to sequence \u7ed3\u6784"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_30","text":"\u53ef\u4ee5\u89c2\u5bdf\u5230\uff0c\u5176\u5b9e\u524d\u534a\u90e8\u5206\u662f\u4e00\u4e2aencoder\u6a21\u578b\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2aN->1\u7684RNN\u6a21\u578b\u3002\u8fd9\u4e2a\u5411\u91cf\u4e00\u822c\u79f0\u4f5c \u4e0a\u4e0b\u6587\u5411\u91cfc \u5f53\u7136c\u53ef\u4ee5\u7531 \\(h_n\\) \u51b3\u5b9a\uff0c\u4e5f\u53ef\u4ee5\u7531 \\(h_1,...h_n\\) \u51b3\u5b9a\u3002 $$ \\begin{gathered} c=h_{N} \\ c=q\\left(h_{N}\\right) \\ c=q\\left(h_{1}, h_{2}, \\ldots, h_{N}\\right) \\end{gathered} $$ \u7136\u540e\u4f7f\u7528decoder\u5bf9c\u8fdb\u884c\u89e3\u7801\uff1a","title":"\u5206\u6790"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#teacher-forcing","text":"TODO","title":"teacher forcing"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#attention","text":"\u4ee5\u4e0a\u6a21\u578b\u7684\u7f3a\u9677\uff1a c\u5982\u679c\u5b9a\u957f\uff0c\u5f88\u96be\u5b8c\u5168\u6db5\u76d6\u8f93\u5165 RNN \u5b58\u5728\u957f\u5e8f\u5217\u68af\u5ea6\u6d88\u5931\u7684\u95ee\u9898\uff0c\u53ea\u4f7f\u7528\u6700\u540e\u4e00\u4e2a\u795e\u7ecf\u5143\u5f97\u5230\u7684\u5411\u91cf c \u6548\u679c\u4e0d\u7406\u60f3\u3002 \u4e0e\u4eba\u7c7b\u7684\u6ce8\u610f\u529b\u65b9\u5f0f\u4e0d\u540c\uff0c\u5373\u4eba\u7c7b\u5728\u9605\u8bfb\u6587\u7ae0\u7684\u65f6\u5019\uff0c\u4f1a\u628a\u6ce8\u610f\u529b\u653e\u5728\u5f53\u524d\u7684\u53e5\u5b50\u4e0a\u3002 \u4f7f\u7528attention\u673a\u5236\uff0c\u4f7f\u5f97\u4e0a\u4e0b\u6587\u5411\u91cfc\u4e0d\u518d\u56fa\u5b9a\uff0c\u800c\u662f\u6839\u636e\u5f53\u524d\u4fe1\u606f\u8ba1\u7b97c \u4e0a\u4e0b\u6587\u5411\u91cf--->\u53d7\u5230\u62fc\u63a5","title":"attention"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#keraslayerssimplernn","text":"\u5bf9\u4e8e\u4e00\u4e2a\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff0c\u5b83\u7684\u8f93\u5165\u5f20\u91cf\u4e00\u822c\u4e3a\uff1a (samples\uff0ctimesteps,features) \u4f8b\u5982\u624b\u4e0a\u7684\u6570\u636e\u4e3a\uff1a\u4e00\u5c0f\u65f6\u4e00\u4e2a\u65f6\u95f4\u6233\uff0c\u4e00\u4e2a\u6837\u672c\u7edf\u8ba1\u4e86100h\uff0c\u6d89\u53ca\u523012\u4e2a\u53d8\u91cf\uff0c\u7edf\u8ba1\u4e8680\u6b21\uff0c\u90a3\u4e48\u6570\u636e\u53ef\u4ee5\u5199\u4e3a\uff1a (80,100,12) \u4e3a\u4e86\u65b9\u4fbf\u4e4b\u540e\u53c2\u6570\u8ba1\u7b97\u7684\u8ba8\u8bba\uff0c\u6211\u4eec\u8003\u8651\u7684\u60c5\u51b5\u4e3a x.shape = (10,5,2) y.shape = (10,2) \u6765\u505a\u4e00\u4e2a\u4e8c\u5206\u7c7b\u95ee\u9898\u3002","title":"keras.layers.SimpleRNN"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#simplernn","text":"\u5b83\u7684\u8f93\u5165\u88ab\u6307\u5b9a\u4e3a3\u7ef4(samples\uff0ctimesteps, features) x = tf.random.normal(shape=(3,10,5,4)) rnn = layers.SimpleRNN(units=1) y = rnn(x) print(y.shape) >>> ValueError: Input 0 of layer simple_rnn is incompatible with the layer: expected ndim=3, found ndim=4. Full shape received: (3, 10, 5, 4) \u8f93\u51fa\u7ef4\u5ea6\u7531\u552f\u4e00\u7684\u53c2\u6570units\u51b3\u5b9a units: Positive integer, dimensionality of the output space\u3002\u5f88\u663e\u7136\uff0c\u5bf9\u4e8e\u4e00\u4e2abatch\uff0c\u4ed6\u7684\u8f93\u51fa\u4e3a(batch_size,units)","title":"SimpleRNN \u7684\u8f93\u5165\u8f93\u51fa"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#units","text":"\\[ h_t = tanh(w_xx_t+w_hh_{t-1}+b) \\] \u53c2\u6570\u5171\u4eab\uff0c\u6240\u4ee5\u770b\u5230\u7684\u5c55\u5f00\u5f0f\uff0c\u90fd\u662f\u5171\u4eab\u8fd9\u4e00\u5957\u53c2\u6570\u3002units\uff0c\u672c\u8d28\u4e0a\u662f \\(h_t\\) \u7684\u7ef4\u5ea6\u3002 \\((5,2)\\) \u7684x\u8fdb\u6765\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a\u4e24\u7ef4\u7684\u5411\u91cf\u8fdb\u6765\uff0c\u8f93\u51fa\u7684 \\(h_t\\) \u4e5f\u662f\u4e00\u4e2a\u4e24\u4f4d\u5411\u91cf\uff0c\u6240\u4ee5\u8fd9\u6837\u8ba1\u7b97\uff1a \u4e00\u5171\u662f10\u4e2a\u53c2\u6570\u3002 \u6ce8\u610f\uff0c\u56fe\u4e2d\u7684 \\(w_y\\) \u5e76\u4e0d\u662fRNN\u7ed3\u6784\u4e2d\u53c2\u6570\uff0c\u56e0\u4e3aSimpleRNN\u4e2d\u5c31\u4e0d\u5305\u62ecy\uff0c\u4ed6\u76f4\u63a5\u5c06h\u5411\u91cf\u8f93\u51fa\uff0c\u5982\u679c\u9700\u8981\u56fe\u4e2d\u7684y\uff0c\u9700\u8981\u81ea\u884c\u6dfb\u52a0dense\u5c42\u3002 \u516c\u5f0f\u4e3a\uff1a recurrent_weights + input_weights + biases num_units* num_units + num_features* num_units + biases \u8fd9\u5f20\u56fe\u7247\u4e5f\u65b9\u4fbf\u7406\u89e3: https://stackoverflow.com/questions/50134334/number-of-parameters-for-keras-simplernn","title":"units\u5230\u5e95\u662f\u4ec0\u4e48\u5462"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#lstm","text":"LSTM\u7684\u5168\u79f0\u662fLong Short Term Memory\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5b83\u5177\u6709\u8bb0\u5fc6\u957f\u77ed\u671f\u4fe1\u606f\u7684\u80fd\u529b\u7684\u795e\u7ecf\u7f51\u7edc\u3002LSTM\u9996\u5148\u57281997\u5e74\u7531Hochreiter & Schmidhuber \u63d0\u51fa\uff0c\u7531\u4e8e\u6df1\u5ea6\u5b66\u4e60\u57282012\u5e74\u7684\u5174\u8d77\uff0cLSTM\u53c8\u7ecf\u8fc7\u4e86\u82e5\u5e72\u4ee3\u5927\u725b(Felix Gers, Fred Cummins, Santiago Fernandez, Justin Bayer, Daan Wierstra, Julian Togelius, Faustino Gomez, Matteo Gagliolo, and Alex Gloves)\u7684\u53d1\u5c55\uff0c\u7531\u6b64\u4fbf\u5f62\u6210\u4e86\u6bd4\u8f83\u7cfb\u7edf\u4e14\u5b8c\u6574\u7684LSTM\u6846\u67b6\uff0c\u5e76\u4e14\u5728\u5f88\u591a\u9886\u57df\u5f97\u5230\u4e86\u5e7f\u6cdb\u7684\u5e94\u7528\u3002\u672c\u6587\u7740\u91cd\u4ecb\u7ecd\u6df1\u5ea6\u5b66\u4e60\u65f6\u4ee3\u7684LSTM\u3002 LSTM\u63d0\u51fa\u7684\u52a8\u673a\u662f\u4e3a\u4e86\u89e3\u51b3\u4e0a\u9762\u6211\u4eec\u63d0\u5230\u7684\u957f\u671f\u4f9d\u8d56\u95ee\u9898\u3002\u4f20\u7edf\u7684RNN\u8282\u70b9\u8f93\u51fa\u4ec5\u7531\u6743\u503c\uff0c\u504f\u7f6e\u4ee5\u53ca\u6fc0\u6d3b\u51fd\u6570\u51b3\u5b9a\uff08\u56fe3\uff09\u3002RNN\u662f\u4e00\u4e2a\u94fe\u5f0f\u7ed3\u6784\uff0c\u6bcf\u4e2a\u65f6\u95f4\u7247\u4f7f\u7528\u7684\u662f\u76f8\u540c\u7684\u53c2\u6570\u3002 https://zhuanlan.zhihu.com/p/42717426 LSTM\u4f7f\u7528\u95e8\u7684\u673a\u5236\uff0c\u63a7\u5236\u7279\u5f81\u7684\u6d41\u901a\u548c\u635f\u5931\u3002LSTM\u53ef\u4ee5\u505a\u5230t9\u7684\u65f6\u523b\u8003\u8651t2\u7684\u7279\u5f81\uff0c","title":"LSTM"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#cell-state","text":"$$ C_{t}=f_{t} \\times C_{t-1}+i_{t} \\times \\tilde{C}_{t} $$ \\(f_{t}\\) \u662f\u4e00\u4e2a\u9057\u5fd8\u95e8\uff0c0~1\u4e4b\u95f4 \\(i_{t}\\) \u662f\u8f93\u5165\u95e8\uff0c\u5176\u529f\u80fd\u975e\u5e38\u76f8\u4f3c\u7528\u4e8e\u4fdd\u7559\u4e0e\u4ee5\u5f80\uff0c \\(h_t,x_t\\) \u7684\u4fe1\u606f \\(\\tilde{C}_{t}\\) \u8868\u793a\u5355\u5143\u72b6\u6001\u66f4\u65b0\u503c \\(C_t\\) \u4e3acell\u72b6\u6001 \u7531\u6839\u636e \\(o_t\\) \u8f93\u51fa\u95e8\uff0c\u66f4\u65b0\u7684 \\(h_t\\) \u503c\u3002 \u7efc\u4e0a\u6240\u8ff0\uff0cLSTM\u4e00\u4e2acell\u91cc\u9762\u8f93\u51fa\u4e86\u4e24\u4e2a\u53d8\u91cf\uff0c\u5206\u522b\u4e3a \\(C_t\\) \uff0c \\(h_t\\) \u3002","title":"cell state"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#keraslayerslstm","text":">>> inputs = tf.random.normal([32, 10, 8]) >>> lstm = tf.keras.layers.LSTM(4) >>> output = lstm(inputs) >>> print(output.shape) (32, 4) >>> lstm = tf.keras.layers.LSTM(4, return_sequences=True, return_state=True) >>> whole_seq_output, final_memory_state, final_carry_state = lstm(inputs) >>> print(whole_seq_output.shape) (32, 10, 4) >>> print(final_memory_state.shape) (32, 4) >>> print(final_carry_state.shape) (32, 4) units: \\(h_t\\) \u7684\u7ef4\u5ea6 whole_seq_output, final_memory_state, final_carry_state = lstm(inputs) \u6ce8\u610f\u8f93\u51fa\u7684\u987a\u5e8f sequence_output \u662f\u6307 \\(h_t\\) whole_seq_output \u662f\u6307 \\(h_1,h_2,...h_t\\)","title":"keras.layers.LSTM"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#tensorflow2-lstm","text":"LSTM\u662f\u4e00\u4e2alayer\uff0c\u5b83\u7ee7\u627f\u4e86RNN layer \u4f7f\u7528\u7684\u662fLSTMCell LSTM\u662f\u4e00\u4e2a\u5faa\u73af\u64cd\u4f5c\uff08\u8f93\u5165\u4e09\u7ef4\u5ea6\u5f20\u91cf\uff09\uff0cLSTMCell\u5c31\u662f\u4e00\u6b21\u5faa\u73af\u7684\u64cd\u4f5c\uff08\u8f93\u5165\u4e8c\u7ef4\u5f20\u91cf\uff0c\u53bb\u9664\u4e86\u65f6\u95f4\u6233\uff09\u3002","title":"tensorflow2 \u7684 LSTM \u6e90\u7801\u9605\u8bfb"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#lstmcell","text":"class LSTMCell(DropoutRNNCellMixin, Layer): \"\"\"Cell class for the LSTM layer. Args: units: Positive integer, dimensionality of the output space. activation: Activation function to use. Default: hyperbolic tangent (`tanh`). If you pass `None`, no activation is applied (ie. \"linear\" activation: `a(x) = x`). recurrent_activation: Activation function to use for the recurrent step. Default: hard sigmoid (`hard_sigmoid`). If you pass `None`, no activation is applied (ie. \"linear\" activation: `a(x) = x`). use_bias: Boolean, whether the layer uses a bias vector. kernel_initializer: Initializer for the `kernel` weights matrix, used for the linear transformation of the inputs. recurrent_initializer: Initializer for the `recurrent_kernel` weights matrix, used for the linear transformation of the recurrent state. bias_initializer: Initializer for the bias vector. unit_forget_bias: Boolean. If True, add 1 to the bias of the forget gate at initialization. Setting it to true will also force `bias_initializer=\"zeros\"`. This is recommended in [Jozefowicz et al., 2015]( http://www.jmlr.org/proceedings/papers/v37/jozefowicz15.pdf) kernel_regularizer: Regularizer function applied to the `kernel` weights matrix. recurrent_regularizer: Regularizer function applied to the `recurrent_kernel` weights matrix. bias_regularizer: Regularizer function applied to the bias vector. kernel_constraint: Constraint function applied to the `kernel` weights matrix. recurrent_constraint: Constraint function applied to the `recurrent_kernel` weights matrix. bias_constraint: Constraint function applied to the bias vector. dropout: Float between 0 and 1. Fraction of the units to drop for the linear transformation of the inputs. recurrent_dropout: Float between 0 and 1. Fraction of the units to drop for the linear transformation of the recurrent state. Call arguments: inputs: A 2D tensor. states: List of state tensors corresponding to the previous timestep. training: Python boolean indicating whether the layer should behave in training mode or in inference mode. Only relevant when `dropout` or `recurrent_dropout` is used. \"\"\" \u4e00\u4e2aCell\u53ea\u9700\u8981\u8f93\u5165\u4e8c\u7ef4\u5f20\u91cf[batch,features] call \u51fd\u6570\u8fd4\u56de\u503c\u4e3a h, [h,c] def call(self, inputs, states, training=None): h_tm1 = states[0] # previous memory state c_tm1 = states[1] # previous carry state \"\"\" \u7701\u7565 \"\"\" return h, [h, c] \u6b63\u5982\u8fd9\u4e00\u4e2aCell\u6240\u793a\uff0c\u8fdb\u53bb\u4e00\u4e2a \\(x_t\\) \u51fa\u6765 \\(h_t,c_t\\)","title":"LSTMCell \u7c7b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#lstm_1","text":"class LSTM(RNN): def __init__(self,units,**kwargs): \"\"\" \u7701\u7565 \"\"\" cell = LSTMCell(units,**cell_kwargs) super(LSTM, self).__init__(cell,**kwargs) def call(self, inputs): return super(LSTM, self).call(inputs) \u53ef\u4ee5\u770b\u5230\uff0c\u672c\u8d28\u4e0a\u662f\u4f7f\u7528\u4e86RNN\u7684call\u51fd\u6570\uff0c\u4f46\u662f\u628aCell\u8fdb\u884c\u4e86\u66f4\u6539\u3002 \u524d\u9762\u5df2\u7ecf\u63d0\u5230\u4e86Cell\u662f\u4e00\u4e2a\uff1a [batch, features] -----LSTMCell-----> h, [h, c] \u63a5\u4e0b\u6765\u8fdb\u5165RNN\u7684call\u51fd\u6570\u4e2d\uff1a def call(self,inputs,): # The input should be dense, padded with zeros. If a ragged input is fed # into the layer, it is padded and the row lengths are used for masking. \"\"\" \u8fdb\u884c\u4e00\u7cfb\u5217\u68c0\u67e5 \"\"\" inputs,initial_state,constants= self._process_inputs(inputs,initial_state,constants) # \u5b9a\u4e49step\u51fd\u6570\uff0c\u6267\u884cCell\u7684call function def step(inputs, states): states = states[0] if len(states) == 1 and is_tf_rnn_cell else states output, new_states = cell_call_fn(inputs, states, **kwargs) if not tf.nest.is_nested(new_states): new_states = [new_states] return output, new_states # \u5c06step\u51fd\u6570\u653e\u5230K.rnn\u4e2d\u6267\u884c last_output, outputs, states = backend.rnn( step, inputs, initial_state)","title":"LSTM \u7c7b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#transformer","text":"\u4e00\u79cd\u597d\u7684\u4f4d\u7f6e\u7f16\u7801\u65b9\u6848\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u51e0\u6761\u8981\u6c42\uff1a \u5b83\u80fd\u4e3a\u6bcf\u4e2a\u65f6\u95f4\u6b65\u8f93\u51fa\u4e00\u4e2a\u72ec\u4e00\u65e0\u4e8c\u7684\u7f16\u7801\uff1b \u4e0d\u540c\u957f\u5ea6\u7684\u53e5\u5b50\u4e4b\u95f4\uff0c\u4efb\u4f55\u4e24\u4e2a\u65f6\u95f4\u6b65\u4e4b\u95f4\u7684\u8ddd\u79bb\u5e94\u8be5\u4fdd\u6301\u4e00\u81f4\uff1b \u6a21\u578b\u5e94\u8be5\u80fd\u6beb\u4e0d\u8d39\u529b\u5730\u6cdb\u5316\u5230\u66f4\u957f\u7684\u53e5\u5b50\u3002 \u5b83\u7684\u503c\u5e94\u8be5\u662f\u6709\u754c\u7684\uff1b \u5b83\u5fc5\u987b\u662f\u786e\u5b9a\u6027\u7684\u3002","title":"transformer\u4e2d\u7684\u4f4d\u7f6e\u7f16\u7801"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/","text":"\u300a\u7b97\u6cd5\u5bfc\u8bba\u300b\u9605\u8bfb\u7b14\u8bb0 \u5f00\u59cb\u4e8e2021\u5e743\u67083\u65e5 \u9ec4\u6d69 \u7b54\u6848\uff1ahttps://walkccc.me/CLRS/ \u7b2c\u4e00\u7ae0 \u7b97\u6cd5\u5728\u8ba1\u7b97\u4e2d\u7684\u4f5c\u7528 \u7b97\u6cd5algorithm\u63cf\u8ff0\u4e00\u4e2a\u7279\u5b9a\u7684\u8ba1\u7b97\u8fc7\u7a0b\u6765\u5b9e\u73b0\u8f93\u5165\u548c\u8f93\u51fa\u7684\u5173\u7cfb \u7b97\u6cd5\u95ee\u9898\u7684\u4e24\u4e2a\u7279\u5f81\uff1a \u5b58\u5728\u8bb8\u591a\u5019\u9009\u89e3\uff0c\u5bfb\u627e\u4e00\u4e2a\u771f\u6b63\u7684\u89e3\u6216\u8005\u4e00\u4e2a\u6700\u597d\u7684\u89e3\u53ef\u80fd\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u6311\u6218\uff1b \u5b58\u5728\u5b9e\u9645\u5e94\u7528\u3002 \u6570\u636e\u7ed3\u6784 \u6570\u636e\u7ed3\u6784\u662f\u6570\u636e\u7684\u50a8\u5b58\u548c\u7ec4\u7ec7\u65b9\u5f0f\uff0c\u65e8\u5728\u65b9\u4fbf\u8bbf\u95ee\u4e0e\u4fee\u6539 \u6280\u672f \u672c\u4e66\u6709\u4e00\u4e9b\u7279\u5b9a\u7684\u95ee\u9898\u89e3\u51b3\u65b9\u6cd5 \u96be\u9898 \u4e00\u90e8\u5206\u95ee\u9898\uff0c\u76ee\u524d\u4e0d\u77e5\u9053\u6709\u6548\u7684\u65b9\u6cd5\uff0c\u88ab\u79f0\u4e3a NP\u5b8c\u5168\u7684 \u3002\u8bf7\u53c2\u7167\u7b2c34\u7ae0\u5b66\u4e60NP\u5b8c\u5168\u6027\u3002 \u7279\u70b9\uff1a1. \u5bf9\u4e8eNP\u5b8c\u5168\u95ee\u9898\uff0c\u76ee\u524d\u6ca1\u6709\u627e\u5230\u6709\u6548\u7684\u7b97\u6cd5\uff0c\u4f46\u662f\u4e5f\u6ca1\u4eba\u80fd\u8bc1\u660eNP\u5b8c\u5168\u7684\u95ee\u9898\u786e\u5b9e\u4e0d\u5b58\u5728\u6709\u6548\u7b97\u6cd5\u3002 \u200b 2. \u5982\u679cNP\u5b8c\u5168\u95ee\u9898\u88ab\u89e3\u51b3\uff0c\u90a3\u4e48\u4e00\u7cfb\u5217\u7684NP\u5b8c\u5168\u95ee\u9898\u90fd\u4f1a\u88ab\u89e3\u51b3 \u201c\u65c5\u884c\u5546\u95ee\u9898\u201d\uff0cNP\u5b8c\u5168\u95ee\u9898\u4e00\u822c\u5bfb\u6c42\u8fd1\u4f3c\u7b97\u6cd5\u3002 \u5e76\u884c\u6027 \u4f5c\u4e3a\u4e00\u79cd\u6280\u672f\u7684\u7b97\u6cd5 \u8ba1\u7b97\u673a\u6709\u4e24\u4e2a\u9650\u5236\uff1a\u901f\u5ea6\u4e0e\u50a8\u5b58 \u6307\u4ee4/\u901f\u5ea6 = \u65f6\u95f4 \u6307\u4ee4\u6570\u76ee\u4e0e\u7b97\u6cd5\u4e0e\u7f16\u8bd1\u5668\u6709\u5173 \u901f\u5ea6\u4e0e\u8ba1\u7b97\u673a\u901f\u5ea6\u6709\u5173\u3002 \u7b97\u6cd5\u7684\u91cd\u8981\u6027 \u6bd4\u8f83\u63d2\u5165\u6392\u5e8f\u4e0e\u5e76\u5f52\u6392\u5e8f \u6bd4\u8f83\u63d2\u5165\u987a\u5e8f\u4e0e\u5f52\u5e76\u987a\u5e8f\u5728\u76f8\u540c\u673a\u5668\u4e0a\u7684\u5b9e\u73b0\u3002\u8f93\u5165\u89c4\u6a21\u4e3an\uff0c\u63d2\u5165\u6392\u5e8f\u8fd0\u884c8n^2\u6b65\uff0c\u800c\u5e76\u5f52\u6392\u5e8f\u8fd0\u884c64n lgn \u6b65\uff0c\u95ee\u5bf9\u4e8e\u54ea\u4e9bn\u503c\uff0c\u63d2\u5165\u6392\u5e8f\u4f18\u4e8e\u5f52\u5e76\u6392\u5e8f n\u53d62\uff0c3\uff0c4\uff0c5\uff0c6\u3002 \u7b2c\u4e8c\u7ae0 \u7b97\u6cd5\u57fa\u7840 \u63d2\u5165\u6392\u5e8f def insertion_sort(A): for j in range(1,len(A)): key = A[j] i = j - 1 while i >= 0 and A[i] > key: A[i+1] = A[i] i -= 1 a[i+1] = key \u6ce8\u610f\u8fb9\u754c\u6761\u4ef6\uff0c\u4ee5\u53ca \u5faa\u73af\u4e0d\u53d8\u5f0f \uff1aA[:j]\u662f\u6392\u5e8f\u597d\u4e86\u7684\uff0c\u6bd4\u5982 j=1\u7684\u65f6\u5019\uff0cA[0]\u4e00\u4e2a\u5143\u7d20\u5c31\u662f\u6392\u5e8f\u597d\u4e86\u7684\u3002 \u63d2\u5165\u6392\u5e8f\u9002\u7528\u4e8e\u5c11\u91cf\u5143\u7d20\u7684\u6392\u5e8f\u3002 \u8fd9\u662f\u4e00\u4e2a \\(O(n^2)\\) \u7684\u7b97\u6cd5\u3002 \u5206\u6790\u7b97\u6cd5 \u63d2\u5165\u6392\u5e8f\u7b97\u6cd5\u7684\u5206\u6790 \u8f93\u5165\u89c4\u6a21 \u8fd0\u884c\u65f6\u95f4\uff0c\u6307\u6267\u884c\u7684\u57fa\u672c\u64cd\u4f5c\u6570\u6216\u6b65\u6570 \u5f97\u5230\u8fd0\u884c\u65f6\u95f4\u4e3a\uff1a \u6700\u4f73\u60c5\u51b5\uff0c\u5c31\u662f\u8f93\u5165\u7684\u5c31\u662f\u4e2a\u5df2\u7ecf\u6392\u5e8f\u62cd\u597d\u7684\uff1a \u6700\u574f\u60c5\u51b5\uff0c\u8f93\u5165\u662f\u76f8\u53cd\u6392\u5e8f\u7684\uff1a \u6700\u574f\u60c5\u51b5 \u5e73\u5747\u60c5\u51b5\u5206\u6790 \u589e\u957f\u91cf\u7ea7 \u4f7f\u7528\u4e00\u4e9b\u7b80\u5316\u62bd\u8c61\uff0c\u6bd4\u5982\u5ffd\u7565\u4e0a\u6587\u4e2d\u7684c\uff0c\u5373\u6bcf\u4e2a\u6307\u4ee4\u7684\u65f6\u95f4\uff0c\u800c\u5173\u6ce8\u6700\u91cd\u8981\u7684\u9879\u3002\u5bf9\u4e8e\u8db3\u591f\u5927\u7684\u8f93\u5165\uff0c\u6700\u9ad8\u9636\u9879\u8d77\u6700\u5927\u4f5c\u7528\u3002 \u8bbe\u8ba1\u7b97\u6cd5 \u63d2\u5165\u6392\u5e8f\u91c7\u7528\u4e86 \u589e\u91cf\u7684\u65b9\u6cd5 \uff1a\u5728\u6392\u5e8f\u597d\u524d [1: j-1]\u4e2a\u5143\u7d20\u4ee5\u540e\uff0c\u518d\u5c06\u5f53\u4e2aj\u5143\u7d20\u63d2\u5165\u5230\u5b50\u6570\u7ec4\u7684\u9002\u5f53\u4f4d\u7f6e\uff0c\u4ea7\u751f\u6392\u5e8f\u597d\u7684\u5b50\u6570\u7ec4 [0: j] \u5206\u6cbb\u6cd5 \u5206\u6cbb\u6cd5\u7684\u601d\u60f3\uff1a\u5c06\u539f\u95ee\u9898\u5206\u89e3\u4e3a\u51e0\u4e2a\u89c4\u6a21\u8f83\u5c0f\u4f46\u7c7b\u4f3c\u4e8e\u539f\u95ee\u9898\u7684\u5b50\u95ee\u9898\uff0c\u9012\u5f52\u5730\u6c42\u89e3\u8fd9\u4e9b\u5b50\u95ee\u9898\u3001 \u5206\u6cbb\u7684\u6a21\u5f0f\uff1a \u5206\u89e3 \u89e3\u51b3\u8fd9\u4e9b\u5b50\u95ee\u9898 \u5408\u5e76 \u5f52\u5e76\u6392\u5e8f\u7b97\u6cd5 \u5b8c\u5168\u9075\u5faa\u5206\u6cbb\u6a21\u5f0f\uff1a \u5206\u89e3\uff1a\u8bb2\u5f85\u6392\u5e8f\u7684n\u4e2a\u5143\u7d20\u7684\u5e8f\u5217\u5206\u89e3\u4e3an/2\u4e2a\u5143\u7d20\u7684\u5b50\u5e8f\u5217\uff1b \u89e3\u51b3: \u4f7f\u7528\u5f52\u5e76\u6392\u5e8f\u89e3\u51b3\u5b50\u5e8f\u5217\uff1b \u5408\u5e76\uff1a\u5c06\u4e24\u4e2a\u5df2\u7ecf\u6392\u5e8f\u5b8c\u6210\u7684\u5b50\u5e8f\u5217\u5408\u5e76\u3002 \u5408\u5e76\u51fd\u6570 merge \uff1a \u8f93\u5165\u6570\u7ec4\uff0cp\uff0cq\uff0cr\uff0c\u5206\u6210\u4e24\u6bb5\uff0c\u5c06\u4e24\u7ec4\u8fdb\u884c\u5408\u5e76: def merge(A, p, q, r): \"\"\" A\u6570\u7ec4\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff0cA[p,q],A[q,r] \"\"\" L = [i for i in A[p:q]] R = [i for i in A[q:r]] # \u989d\u5916\u7684\u7a7a\u95f4\uff0c\u50a8\u5b58L,R\uff0c \u52a0\u4e0a\u54e8\u5175\uff0c\u4ee5\u514di\uff0cj\u6307\u9488\u79fb\u5230\u5916\u9762\u53bb\u4e86 L.append(float(\"+inf\")) R.append(float(\"+inf\")) i = 0 j = 0 for k in range(p, r): # \u5c0f\u7684\u8fdb\u5165 if L[i] <= R[j]: A[k] = L[i] i += 1 else: A[k] = R[j] j += 1 \u5c06merge\u4f5c\u4e3a\u5f52\u5e76\u6392\u5e8f\u7b97\u6cd5\u4e2d\u7684\u4e00\u4e2a\u5b50\u7a0b\u5e8f\u6765\u7528\uff1a def merge_sort(A, p, r): if p < r-1: # \u627e\u4e2d\u70b9\u4f4d\u7f6e q = int((r + p) / 2) merge_sort(A, p, q) merge_sort(A, q, r) merge(A, p, q, r) return A \u5728\u5199\u8fd9\u6837\u7684\u9012\u5f52\u8c03\u7528\u65f6\u5019\uff0c\u4e00\u5b9a\u8981\u660e\u786e\u7ec8\u6b62\u6df1\u5165\u7684\u6761\u4ef6\u3002\u5728\u5f52\u5e76\u6392\u5e8f\u4e2d\uff0cp =r-q\uff09\u5e76\u4e0d\u6267\u884cmerge_sort\uff0c\u56e0\u4e3a\u53ea\u67091\u4e2a\u5143\u7d20\u3002 \u5206\u6790\u5206\u6cbb\u7b97\u6cd5 \u5e76\u5f52\u6392\u5e8f\u7b97\u6cd5\u7684\u5206\u6790 \u5ffd\u7565\u4f4e\u9636\u9879\u548c\u5e38\u6570c\u4fbf\u7ed9\u51fa\u671f\u671b\u7684\u7ed3\u679cO(nlgn) \u601d\u8003\u9898 \u5192\u6ce1\u6392\u5e8f\u7684\u6700\u574f\u60c5\u51b5\u8fd0\u884c O(n^2^)\uff0c\u63d2\u5165\u6392\u5e8f\u7684\u6700\u574f\u8fd0\u884c\u4e5f\u662fO(n^2^) b. n-1 + ... +1 = n(n-1)/2 \u4e2a \u7b2c\u4e09\u7ae0 \u51fd\u6570\u7684\u589e\u957f \u7b97\u6cd5\u8fd0\u884c\u65f6\u95f4\u7684\u589e\u957f\u91cf\u7ea7\u7b80\u5355\u5730\u523b\u753b\u4e86\u7b97\u6cd5\u7684\u6548\u7387\u3002 \u5f53\u8f93\u5165\u89c4\u6a21n\u53d8\u5f97\u8db3\u591f\u5927\uff0c\u6700\u574f\u8fd0\u884c\u65f6\u95f4\u4e3a \\(\\Theta(n \\lg n)\\) \u7684\u5e76\u5f52\u6392\u5e8f\u5c06\u6218\u80dc\u63d2\u5165\u6392\u5e8f \\(\\Theta\\left(n^{2}\\right)\\) \u6e10\u8fd1\u8bb0\u53f7 \\(\\Theta\\) \u8bb0\u53f7 \\(O\\) \u8bb0\u53f7\uff1a\u6e10\u8fd1\u4e0a\u754c \\(\\Omega\\) \u8bb0\u53f7\uff1a\u6e10\u8fd1\u4e0b\u754c \u5404\u79cd\u6e10\u8fd1\u5173\u7cfb\u7b26\u5408\uff1a\u4f20\u9012\u6027\uff0c\u81ea\u53cd\u6027\uff0c\u5bf9\u79f0\u6027\uff0c\u8f6c\u7f6e\u5bf9\u79f0\u6027\uff0c\u4e09\u5206\u6027 \u6807\u51c6\u8bb0\u53f7\u4e0e\u5e38\u7528\u51fd\u6570 \u5355\u8c03\u6027 \u5411\u4e0b\u53d6\u6574\u4e0e\u5411\u4e0a\u53d6\u6574 \u6a21\u8fd0\u7b97 \u591a\u9879\u5f0f \u6307\u6570 \u5bf9\u6570 \u9636\u4e58 \u591a\u91cd\u51fd\u6570 \u591a\u91cd\u5bf9\u6570\u51fd\u6570 \u6590\u6ce2\u90a3\u5951\u6570 \u7b2c\u56db\u7ae0 \u5206\u6cbb\u7b56\u7565 \u5206\u6cbb\u7684\u7b56\u7565\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u9012\u5f52\u6765\u89e3\u51b3\u95ee\u9898\u3002 \u4e09\u4e2a\u6838\u5fc3\uff1a \u5206\u89e3\u4e3a\u5b50\u95ee\u9898 \u89e3\u51b3\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u7ec8\u6b62\u6761\u4ef6 \u5408\u5e76 \u9012\u5f52\u5f0f \u5206\u6cbb\u7684\u89c4\u6a21\u5bf9\u5206\u6cbb\u6cd5\u7684\u6027\u80fd\u5f71\u54cd\u5f88\u5927\u3002 \u4f8b\u5982\u5bf9\u534a\u5206\uff08\u5206\u6cbb\u6392\u5e8f\uff09\uff1a \u8fd8\u53ef\u4ee51/3,2/3\u5206 \u51cf\u5c11\u4e00\u4e2a\u5143\u7d20\u5206\uff1a **\u4e0d\u540c\u7684\u9012\u5f52\u5f0f\uff0c\u5176\u590d\u6742\u5ea6\u4e5f\u5927\u4e0d\u76f8\u540c\uff01 \u5f53\u5b50\u95ee\u9898\u8db3\u591f\u5927\u9700\u8981\u9012\u5f52\u6c42\u89e3\u65f6\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a \u9012\u5f52\u60c5\u51b5 \u5f53\u5b50\u95ee\u9898\u8db3\u591f\u5c0f\uff0c\u4e0d\u518d\u9700\u8981\u9012\u5f52\u65f6\uff0c\u8bf4\u660e\u9012\u5f52\u5df2\u7ecf\u89e6\u5e95\uff0c\u8fdb\u5165\u4e86 \u57fa\u672c\u60c5\u51b5 \u9012\u5f52\u5f0f\uff1a \u6c42\u89e3\u53ef\u5f97\uff1a \u6c42\u89e3\u9012\u5f52\u5f0f\u7684\u65b9\u6cd5\uff1a\u4ee3\u5165\u6cd5\uff0c\u9012\u5f52\u6811\u6cd5\uff0c\u4e3b\u65b9\u6cd5\u3002 \u6700\u5927\u6570\u7ec4\u95ee\u9898 \u66b4\u529b\u6c42\u89e3\u6cd5 \u95ee\u9898\u53d8\u6362 \u4f7f\u7528\u5206\u6cbb\u7b56\u7565\u7684\u6c42\u89e3\u6cd5 \u4f7f\u7528\u5206\u6cbb\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u4e3a \u7ec3\u4e60 \u8fd9\u9053\u9898\u9700\u8981\u91c7\u7528\u52a8\u6001\u89c4\u5212\u7684\u529e\u6cd5\u89e3\u51b3\u3002 \u5c1a\u672a\u89e3\u51b3 \u77e9\u9635\u4e58\u6cd5\u7684Strassen\u7b97\u6cd5 \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(\\Theta\\left(n^{3}\\right)\\) \uff0c\u4f46\u662fStrassen\u7684\u8457\u540dn*n\u77e9\u9635\u76f8\u4e58\u7684\u9012\u5f52\u7b97\u6cd5\uff0c\u590d\u6742\u5ea6\u4e3a \\(\\Theta\\left(n^{\\lg 7}\\right)\\) \uff0c\u5176\u4e2dlg7\u7ea6\u4e3a2.8\u548c2.81\u3002 \u9012\u5f52\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(\\Theta\\left(n^{3}\\right)\\) \u3002 \u5176\u4e2d \\(\\Theta(1)\\) \u662f\u5206\u89e3A,B,C\u77e9\u9635\u3002 \\(\\Theta\\left(n^{2}\\right)\\) \u662f\u5143\u7d20\u76f8\u52a0\u3002 \u6ce8\u610f8T(n/2)\u4e2d\u76848\u51b3\u5b9a\u4e86\u9012\u5f52\u6811\u662f\u5426\u8302\u76db\uff0c\u4e0d\u80fd\u7701\u7565\uff0c\u5426\u5219\u5c31\u662f\u7ebf\u6027\u7ed3\u6784\u4e86\u3002 Strassen\u7b97\u6cd5 \u5176\u6838\u5fc3\u601d\u60f3\u5c31\u662f\u5c068T(n/2)\u6539\u4e3a7T(n/2) \u4f2a\u4ee3\u7801\uff08\u81ea\u5199\uff09\uff1a def Strassen(a,b): n = a\u7684\u7ef4\u5ea6 c = n*n matrix if n == 1: c11 = a11*b11 else: s1 = b12-b22 s2 = a11+a12 s3 = a21+a22 s4 = b21-b11 s5 = a11+a22 s6 = b11+b22 s7 = a12-a22 s8 = b21+b22 s9 = a11-a21 s10 = b11+b12 p1 = Strassen(a11,s1) p2 p3 p4 p5 p6 p7 c11 = c12 c21 c22 return c \u7ec3\u4e60\uff1a \u6c42\u89e3\u9012\u5f52\u5f0f \u4ee3\u5165\u6cd5 \uff0c\u5b83\u4e3b\u8981\u5206\u4e3a\u4e24\u6b65\uff1a \u731c\u6d4b\u89e3\u7684\u5f62\u5f0f \u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u6c42\u51fa\u89e3\u7684\u5e38\u6570\uff0c\u5e76\u8bc1\u660e\u89e3\u662f\u6b63\u786e\u7684 \u731c\u6d4b\uff1a \u4e0a\u754c\u4e3a\uff1a \u8981\u6c42\u8bc1\u660e\uff1a \u9012\u5f52\u6811 \u4f8b\u5982\uff1a \u4e3b\u65b9\u6cd5 \uff08\u7565\uff09 \u7b2c\u4e94\u7ae0 \u6982\u7387\u5206\u6790\u548c\u968f\u673a\u7b97\u6cd5 \u96c7\u4f63\u95ee\u9898 \u4f2a\u4ee3\u7801\uff1a \u6700\u574f\u60c5\u5f62\u5206\u6790 \u968f\u673a\u7b97\u6cd5 \u4e3a\u4e86\u5229\u7528\u6982\u7387\u5206\u6790\uff0c\u9700\u8981\u4e86\u89e3\u5173\u4e8e\u8f93\u5165\u5206\u5e03\u7684\u4e00\u4e9b\u4fe1\u606f\u3002 \u6307\u793a\u5668\u968f\u673a\u53d8\u91cf \u968f\u673a\u7b97\u6cd5 \u5982\u4f55\u7406\u89e3\u968f\u673a\u6392\u5e8f\uff0c\u4e00\u4e2a\u516c\u5e73\u7684\u7b97\u6cd5\u80fd\u591f\u5747\u5300\u5730\u7ed9\u51fan\uff01\u4e2a\u7ed3\u679c\u4e2d\u7684\u4e00\u4e2a\u3002\u4f46\u662f\u5982\u679c\u8fd9\u6837\u7684\u8bdd\uff0c\u7b97\u6cd5\u9700\u8981\u7ed9\u51fan\uff01\u4e2a\u9009\u62e9\uff0c\u5b83\u7684\u590d\u6742\u5ea6\u592a\u9ad8O(n!)\uff0c\u968f\u673a\u7b97\u6cd5\u5e94\u8fd0\u800c\u751f\u3002 \u968f\u673a\u6392\u5217\u6570\u7ec4\uff1a P\u8868\u793a\u7684\u662f\u4f18\u5148\u7ea7\uff1a\u5047\u8bbe\u4f18\u5148\u7ea7\u90fd\u4e0d\u540c\uff0c\u5219\u7b97\u6cd5\u4ea7\u751f\u8f93\u5165\u7684\u5747\u5300\u968f\u673a\u6392\u5217\u3002 \u5c0ftip\uff1a Knuth\u6d17\u724c\u7b97\u6cd5 \u6392\u5e8f\u95ee\u9898\uff1a \u6392\u5e8f\u7b97\u6cd5\uff1a \u63d2\u5165\u6392\u5e8f\uff0c \\(\\Theta\\left(n^{2}\\right)\\) \uff0c\u4ed6\u662f\u539f\u5740\u7684\uff08\u4ec5\u6709\u5e38\u6570\u9879\u4e2a\u5143\u7d20\u9700\u8981\u50a8\u5b58\u5728\u6570\u7ec4\u4e4b\u5916\uff09\uff0c\u5bf9\u4e8e\u5c0f\u89c4\u6a21\u6392\u5e8f\uff0c\u63d2\u5165\u6392\u5e8f\u975e\u5e38\u9002\u7528\u3002 \u5f52\u5e76\u7b97\u6cd5\uff0c \\(\\Theta(n \\lg n)\\) \uff0c\u5b83\u7684merge\u51fd\u6570\u5e76\u4e0d\u662f\u539f\u5740\u7684\uff0c\u4f46\u4ed6\u6709\u66f4\u597d\u7684\u6e10\u8fdb\u65f6\u95f4\u3002 \u5728\u4e0b\u6587\u4e2d \u7b2c\u516d\u573a\u4ecb\u7ecd\u5806\u6392\u5e8f\uff0c\u7b2c\u4e03\u7ae0\u4ecb\u7ecd\u5feb\u901f\u6392\u5e8f\u3002 \u7b2c\u516d\u7ae0 \u5806\u6392\u5e8f \u5b83\u878d\u5408\u4e86\u5feb\u901f\u6392\u5e8f\u548c\u5f52\u5e76\u6392\u5e8f\u7684\u4f18\u70b9 \u5229\u7528\u5806\u7684\u6570\u636e\u7ed3\u6784\uff0c\u7ed3\u5408\u4e86\u63d2\u5165\u6392\u5e8f\u548c\u5f52\u5e76\u6392\u5e8f\u7684\u4f18\u70b9\uff1a\u590d\u6742\u5ea6 \\(\\Theta(n \\lg n)\\) \uff0c\u5177\u6709\u539f\u5740\u6027\u3002 \u5806 \u5806\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u4e00\u4e2a\u8fd1\u4f3c\u7684\u5b8c\u5168\u4e8c\u53c9\u6811 \u8ba1\u7b97\u4f4d\u7f6e\uff1a \u6700\u5927\u5806\uff0c\u6700\u5c0f\u5806\u3002\u6700\u5927\u5806\u5c31\u662f\u6700\u5927\u7684\u8282\u70b9\u5728\u6700\u4e0a\u9762\u7684\u6839\u8282\u70b9\u3002 \u6700\u5927\u5806\u7684\u4e00\u4e9b\u6027\u8d28\uff1a \u6700\u5927\u5806\u7684\u6700\u5927\u503c\u5728\u6839\u8282\u70b9\u4e0a\uff0c\u5728python\u4e2d\uff0c\u4e00\u822c\u4f7f\u7528\u6700\u5c0f\u5806\uff0c\u6839\u8282\u70b9\u662f\u6700\u5c0f\u503c \u6784\u9020\u6700\u5927\u5806\uff0c\u7ebf\u6027\u590d\u6742\u5ea6 \u7ef4\u62a4\u6700\u5927\u5806\uff0c\u590d\u6742\u5ea6\u4e3a \\(O(lgn)\\) \uff0c\u53ea\u80fd \u5806\u6392\u5e8f \\(O(nlgn)\\) \u7ef4\u6301\u6700\u5927\u5806 \u590d\u6742\u5ea6\uff1aO(lgn) \u7ef4\u62a4\u6700\u5927\u5806\uff1a\u5c31\u662f\u628a\u7b2ci\u4e2a\u5143\u7d20\u548c\u4e24\u4e2a\u5b69\u5b50\u505a\u5bf9\u6bd4\uff0c\u4e0e\u5b69\u5b50\u4e2d\u7684\u8f83\u5927\u503c\u8fdb\u884c\u4ea4\u6362\u3002 \u5efa\u5806 \u81ea\u5e95\u5411\u4e0a\u5efa\u9020\u6700\u5927\u5806\u3002 \u6570\u5b66\u5f52\u7eb3\u53ef\u77e5: (n-1)//2+1 \u5230 n \u5747\u4e3a \u53f6\u5b50\uff0c\u90a3\u4e48\uff08n-1\uff09//2 \u4e3a\u975e\u53f6\u5b50\uff0c\u6240\u4ee5\u5bf9\u8fd9\u4e9b\u8fdb\u884c\u6700\u5927\u5806\u7ef4\u62a4\u5373\u53ef \u5806\u6392\u5e8f \u9700\u8981\u4e00\u5b9a\u7684\u6570\u5b66\u8bc1\u660e\uff1a\u5806\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3anlogn \u4f18\u5148\u961f\u5217 \u7528\u6700\u5927\u5806\u5b9e\u73b0\u6700\u5927\u4f18\u5148\u961f\u5217 \u4f18\u5148\u961f\u5217\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u6709\u4e00\u4e2a\u76f8\u5173\u7684\u503c\uff0c\u79f0\u4e3a\u5173\u952e\u5b57KEY\uff0c\u6700\u5927\u4f18\u5148\u961f\u5217\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1a insert(s,x):\u628a\u5143\u7d20\u63d2\u5165\u5230\u96c6\u5408x\u4e2d maximum(s):\u8fd4\u56des\u4e2d\u6700\u5927\u5143\u7d20 extract-max(s):\u53bb\u6389\u5e76\u8fd4\u56des\u4e2d\u5177\u6709\u6700\u5927\u5173\u952e\u5b57\u7684\u5143\u7d20 increase-key(s,x,k):\u5c06\u5143\u7d20x\u7684\u5173\u952e\u5b57\u503c\u589e\u52a0\u5230k\uff0c\u5047\u8bbek\u503c\u4e0d\u5c0f\u4e8e\u539f\u6765\u7684\u5173\u952e\u5b57\u503c ** \u63d2\u5165\u5c31\u76f4\u63a5\u5728\u6570\u7ec4\u540e\u65b9\u52a0\u5165\uff0c\u7136\u540e\u6ce8\u610f\u7ef4\u62a4\u5806\u5373\u53ef \u5148\u6539\u53d8A[i]\u7684\u503c\uff0c\u7136\u540e\u5728\u2018\u2019\u539f\u6709\u7684\u6700\u5927\u5806\u2018\u2019\u4e0a\u7ef4\u62a4\u6700\u5927\u5806\u3002 \u7b2c\u4e03\u7ae0 \u5feb\u901f\u6392\u5e8f \u5feb\u901f\u6392\u5e8f\u662f\u5b9e\u9645\u6392\u5e8f\u5e94\u7528\u4e2d\u7684\u6700\u597d\u9009\u62e9\uff0c\u5b83\u7684\u5e73\u5747\u6027\u80fd\u6700\u597d\uff0c\u671f\u671b\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u662f \\(\\Theta(n \\lg n)\\) \uff0c\u4f46\u662f\u9690\u542b\u7684\u5e38\u6570\u56e0\u5b50\u975e\u5e38\u5c0f\uff0c\u4ed6\u4e5f\u80fd\u8fdb\u884c\u539f\u5740\u6392\u5e8f\uff0c\u751a\u81f3\u865a\u62df\u73af\u5883\u4e2d\u4e5f\u80fd\u5f88\u597d\u5730\u5de5\u4f5c\u3002 \u5206\u6cbb\u7684\u601d\u60f3 \u7b97\u6cd5\u53ef\u4ee5\u57fa\u4e8e\u539f\u5740\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u5f52\u5e76\uff0c\u53ea\u9700\u8981\u505a\u597d\u5206\u5272\u5373\u53ef\u3002 \u5206\u5272\u51fd\u6570 \u5feb\u901f\u6392\u5e8f\u7684\u6027\u80fd\u5206\u6790 \u6700\u574f\u60c5\u51b5\u5212\u5206 \u5982\u679c\u6bcf\u6b21\u5212\u5206\u90fd\u5305\u542b\u4e86n-1\u548c1\u4e2a\u5143\u7d20\uff0c\u90a3\u662f\u6700\u5dee\u7684\u60c5\u51b5\uff0c\u5212\u5206\u64cd\u4f5c\u590d\u6742\u5ea6\u4e3an \u590d\u6742\u5ea6\u7ed3\u679c\u4e3a\uff1a \\(\\Theta\\left(n^{2}\\right)\\) \u6700\u597d\u60c5\u51b5\u5212\u5206 \u590d\u6742\u5ea6\u7ed3\u679c\u4e3a \\(\\Theta(n \\lg n)\\) \u5e73\u8861\u7684\u5212\u5206 \u5feb\u901f\u6392\u5e8f\u7684\u5e73\u5747\u8fd0\u884c\u65f6\u95f4\u66f4\u63a5\u8fd1\u4e8e\u5176\u6700\u597d\u60c5\u51b5\uff0c\u5e76\u975e\u6700\u574f\u60c5\u51b5 \uff08\u4e2a\u4eba\u7406\u89e3\uff1a\u6bcf\u6b21\u5212\u5206\uff0c\u90fd\u5206\u5230\u5230\u6700\u5dee\u60c5\u51b5\u7684\u6982\u7387\u662f\u975e\u5e38\u5c0f\u7684\uff09 \u5feb\u901f\u6392\u5e8f\u7684\u968f\u673a\u5316\u7248\u672c \u4e3b\u8981\u4fee\u6539\u662f\u5c06\u4e3b\u5143\u7d20\u968f\u673a\u9009\u53d6 \u63d2\u5165\u6392\u5e8f \u63d2\u5165\u6251\u514b\u724c\u5f0f \u5f52\u5e76\u6392\u5e8f \u5206\u6cbb \u5806\u6392\u5e8f \u6700\u5927\u5806\u7684\u7ef4\u62a4\u59cb\u7ec8\u80fd\u627e\u5230\u6700\u5927\u7684\u5143\u7d20 \u5feb\u901f\u6392\u5e8f \u5206\u5272 \u7b2c\u516b\u7ae0 \u7ebf\u6027\u65f6\u95f4\u6392\u5e8f \u4e4b\u524d\u63d0\u5230\u7684\u7b97\u6cd5\u90fd\u6709\u4e00\u4e2a\u6027\u8d28\uff1a\u5728\u6392\u5e8f\u7684\u6700\u7ec8\u7ed3\u679c\u4e2d\uff0c\u4e2a\u5143\u7d20\u7684\u6b21\u5e8f\u4f9d\u8d56\u4e8e\u5b83\u4eec\u4e4b\u95f4\u7684\u6bd4\u8f83\u3002 \u6bd4\u8f83\u6392\u5e8f \u6392\u5e8f\u7b97\u6cd5\u7684\u4e0b\u754c \u51b3\u7b56\u6811\u6a21\u578b---\u5b8c\u5168\u4e8c\u53c9\u6811 \u53f6\u8282\u70b9\u5171\u6709n\uff01\u79cd\u53ef\u80fd\u7684\u6392\u5217\u3002 \u6700\u574f\u60c5\u51b5\u7684\u4e0b\u754c \u6392\u5e8f\u7b97\u6cd5\u6700\u574f\u60c5\u51b5\u5c31\u662f\u51b3\u7b56\u6811\u7684\u9ad8\u5ea6 \u5b9a\u7406\uff1a \u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u4efb\u4f55\u6bd4\u8f83\u6392\u5e8f\u7b97\u6cd5\u90fd\u9700\u8981 \\(\\Omega(n \\lg n)\\) \u6b21\u6bd4\u8f83 \u5806\u6392\u5e8f\u548c\u5f52\u5e76\u6392\u5e8f\u90fd\u662f\u6e10\u8fdb\u6700\u4f18\u7684\u6392\u5e8f\u7b97\u6cd5 \u8ba1\u6570\u6392\u5e8f \u56fe\u89e3\uff1a \u8fd0\u884c\u65f6\u95f4\u4e3a\uff1a \\(\\Theta(n)\\) \u8ba1\u6570\u6392\u5e8f\u7684\u4e00\u4e2a\u91cd\u8981\u6027\u8d28\u5c31\u662f \u7a33\u5b9a \uff0c\u5bf9\u4e8e\u76f8\u540c\u503c\u7684\u5143\u7d20\u5728\u8f93\u51fa\u6570\u7ec4\u4e2d\u7684\u76f8\u5bf9\u6b21\u5e8f\u4e0e\u4ed6\u4eec\u5728\u8f93\u5165\u6570\u7ec4\u4e2d\u7684\u6b21\u5e8f\u76f8\u540c\uff0c\u8fd9\u79cd\u7a33\u5b9a\u6027\u5728\u5f53\u6709\u6570\u636e\u9644\u5e26\u536b\u661f\u6570\u636e\u65f6\u6bd4\u8f83\u91cd\u8981\u3002 \u57fa\u6570\u6392\u5e8f \u4f2a\u4ee3\u7801\uff1a \u5f15\u7406\uff1a \u91c7\u7528\u7a33\u5b9a\u6392\u5e8f\u65b9\u6cd5\uff0c\u6bd4\u5982\u8ba1\u6570\u6392\u5e8f\uff1a \\(\\Theta(d(n+k))\\) \uff0c\u5373\u8fd0\u884cd\u6b21\u8ba1\u6570\u6392\u5e8f\u3002 \u57fa\u6570\u6392\u5e8f\u662f\u5426\u6bd4\u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\u7b97\u6cd5\u66f4\u597d\u5462\uff1f \u57fa\u6570\u6392\u5e8f\u867d\u7136\u6267\u884c\u7684\u5faa\u73af\u8f6e\u6570\u4f1a\u6bd4\u5feb\u901f\u6392\u5e8f\u5c11\uff0c\u4f46\u662f\u6bcf\u4e00\u8f6e\u5b83\u6240\u8017\u8d39\u7684\u65f6\u95f4\u8981\u957f\u7684\u591a\uff0c\u54ea\u4e00\u79cd\u6392\u5e8f\u5408\u9002\u66f4\u4f9d\u8d56\u4e8e\u5177\u4f53\u5b9e\u73b0\u548c\u5e95\u5c42\u7684\u7279\u6027\uff0c\u6bd4\u5982\u5feb\u901f\u6392\u5e8f\u901a\u5e38\u6bd4\u57fa\u6570\u6392\u5e8f\u66f4\u6709\u6548\u5730\u4f7f\u7528\u786c\u4ef6\u7684\u7f13\u5b58\u3002 \u6876\u6392\u5e8f \u6876\u6392\u5e8f\u5047\u8bbe\u8f93\u5165\u6570\u636e\u670d\u4ece\u5747\u5300\u5206\u5e03\uff0c\u5e73\u5747\u60c5\u51b5\u4e0b\u5b83\u7684\u65f6\u95f4\u4ee3\u4ef7\u4e3a \\(O(n)\\) \u3002 \u7b2c\u4e5d\u7ae0 \u4e2d\u4f4d\u6570\u548c\u987a\u5e8f\u7edf\u8ba1\u91cf order statistic \u7b2ci\u4e2a\u987a\u5e8f\u7edf\u8ba1\u91cf\u662f\u8be5\u96c6\u5408\u4e2d\u7b2ci\u4e2a\u5143\u7d20 \u6700\u5927\u503c i = n \u6700\u5c0f\u503c n = 1 n\u4e3a\u5076\u6570\u65f6\u5b58\u5728\u4e24\u4e2a\u4e2d\u4f4d\u6570\uff0c\u4e0b\u4e2d\u4f4d\u6570/\u4e0a\u4e2d\u4f4d\u6570 \u6700\u5c0f\u503c\u548c\u6700\u5927\u503c \u7ecf\u8fc7n-1\u6b21\u6bd4\u8f83\u627e\u51fa\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c\u3002 \u671f\u671b\u4e3a\u7ebf\u6027\u65f6\u95f4\u7684\u9009\u62e9\u7b97\u6cd5 \u9009\u62e9\u6570\u7ec4\u4e2d\u7b2ci\u5c0f\u7684\u5143\u7d20 \u6b64\u5904\u7684partition\u662f\u5feb\u901f\u6392\u5e8f\u7684\u5206\u5272\uff08\u5206\u6210\u4e09\u6bb5\uff0c\u7b2c\u4e00\u6bb5\u5c0f\u4e8ekey\uff0c\u7b2c\u4e8c\u6bb5\u4e3akey\uff0c\u7b2c\u4e09\u6bb5\u5927\u4e8ekey\uff09 \u7b2c\u5341\u7ae0 \u57fa\u672c\u6570\u636e\u7ed3\u6784 \u6808\uff0c\u961f\u5217\uff0c\u94fe\u8868\uff0c\u6709\u6839\u6811\u3002 \u6808\u548c\u961f\u5217 \u6808\u548c\u961f\u5217\u90fd\u662f\u52a8\u6001\u96c6\u5408\uff0c\u5728\u5176\u4e0a\u8fdb\u884cdelete\u64cd\u4f5c\u662f\u9884\u5b9a\u7684\uff1a \u6808\uff1a\u540e\u8fdb\u5148\u51fa \u961f\u5217\uff1a\u5148\u8fdb\u5148\u51fa \u6808 insert\u64cd\u4f5c\u88ab\u79f0\u4e3a\u538b\u5165push delete\u64cd\u4f5c\u88ab\u79f0\u4e3a\u5f39\u51fapop \u961f\u5217 insert: enqueue delete: dequeue \u94fe\u8868 \u53cc\u5411\u94fe\u8868 prev - element - next \u54e8\u5175 L.nil \u7684next \u6307\u5411\u7b2c\u4e00\u4e2a\u5143\u7d20\uff08\u8868\u5934\uff09 L.nil\u7684prev \u6307\u5411\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff08\u8868\u5c3e\uff09 \u6240\u4ee5\u6b64\u5904\u4e0d\u9700\u8981L.head \u53ea\u9700\u8981L.nil.next \u6709\u6839\u6811 \u6811\u53ef\u4ee5\u5206\u4e3a\u591a\u79cd\u6811\uff0c\u4e8c\u53c9\u6811\uff0c\u5206\u652f\u65e0\u9650\u5236\u7684\u6709\u6839\u6811\u3002\u3002\u3002\u7b49\u7b49 \u4e8c\u53c9\u6811 \u5206\u652f\u65e0\u9650\u5236\u7684\u6709\u6839\u6811 \u7b2c\u5341\u4e00\u7ae0 \u6563\u5217\u8868 \u5f85\u5b8c\u6210\u3002\u3002\u3002 \u7b2c\u5341\u4e8c\u7ae0 \u4e8c\u53c9\u641c\u7d22\u6811 \u4e2d\u5e8f\u904d\u5386\u3001\u524d\u5e8f\u904d\u5386\uff0c\u540e\u5e8f\u904d\u5386 \u91c7\u7528 \u9012\u5f52 \u7684\u65b9\u5f0f\u8fdb\u884c\u904d\u5386\uff0c\u4e5f\u53ef\u4ee5\u7528 \u6808 \u3002 \u4e0a\u9762\u7684\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u4e3a 2\uff0c5\uff0c5\uff0c6\uff0c7\uff0c8 \u5982\u679c\u60f3\u4e00\u5c42\u5c42\u7684\u904d\u5386\uff0c\u91c7\u7528\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u501f\u7528\u961f\u5217 \u7b2c\u5341\u4e94\u7ae0 \u52a8\u6001\u89c4\u5212 dynamic programming \u52a8\u6001\u89c4\u5212 \u7279\u5f81\uff1a \u627e\u7684\u662f\u6700\u4f18\u89e3\u3002 \u6700\u4f18\u5b50\u7ed3\u6784\uff1a\u6700\u4f18\u89e3=f(\u6700\u4f18\u5b50\u7ed3\u6784) \u91cd\u53e0\u5b50\u95ee\u9898\uff1a\u5f53\u5904\u7406\u5b50\u95ee\u9898\u7684\u65f6\u5019\uff0c\u4f1a\u9047\u5230\u91cd\u590d\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u5f52\u5e76\u6392\u5e8f\u5e76\u4e0d\u5c5e\u4e8e\u52a8\u6001\u89c4\u5212\u3002 \u4e24\u79cd\u5b9e\u73b0\u65b9\u6cd5\uff1a \u81ea\u4e0a\u800c\u4e0b\uff1a\u91c7\u7528\u5907\u5fd8\u5f55\u7684\u65b9\u5f0f \u81ea\u4e0b\u800c\u4e0a\uff1a\u6784\u5efa\u8868\u683c\uff0c\u4e5f\u79f0\u4e3a\u7684dp\u6570\u7ec4 \u8bbe\u8ba1\u65b9\u6cd5 \u5199\u51fa\u9012\u5f52\u51fd\u6570\\\u8d1d\u5c14\u66fc\u65b9\u7a0b\\\u6700\u4f18\u89e3\u7684\u7ed3\u6784\u7279\u5f81 \u8ba1\u7b97\u6700\u4f18\u89e3\u7684\u503c\uff0c\u901a\u5e38\u91c7\u7528\u81ea\u5e95\u5411\u4e0a\u7684\u65b9\u6cd5 \u81ea\u4e0b\u800c\u4e0a\u7684\u4e00\u7ef4\u6570\u7ec4 \u94a2\u7ba1\u5207\u5272 \u627e\u6700\u4f18\u89e3 \u5b58\u5728\u6700\u4f18\u5b50\u7ed3\u6784 \u6b64\u65f6\u5df2\u7ecf\u53ef\u4ee5\u91c7\u7528\u9012\u5f52\u7684\u65b9\u5f0f\u8fdb\u884c\u6c42\u89e3\u4e86\uff0c\u9012\u5f52\u590d\u6742\u5ea6\u592a\u9ad8\u4e86\uff0c\u6307\u6570\u7ea7 3. \u53d1\u73b0\u91cd\u53e0\u5b50\u7ed3\u6784 3. \u52a8\u6001\u89c4\u5212\uff01 3. \u9009\u62e9\uff1a\u81ea\u4e0a\u800c\u4e0b\uff0c\u6216\u8005**\u81ea\u4e0b\u800c\u4e0a** \u9996\u5148\u5199\u51fa\u9012\u5f52\u516c\u5f0f\uff1a $$ r_n = max[p_1+r_{n-1}, p_2+r_{n-2},...,p_n] $$ \u9012\u5f52\u516c\u5f0f\uff0c\u5de6\u8fb9\u7531\u591a\u4e2a\u503c\u8ba1\u7b97\u800c\u6765\uff0c $$ r_1 = p_1 \\ r_2 = r_1 + p_1 \u6216 p_2 \\ r_3 = r_1 + p_2 \u6216 r_2+ p_1 \u6216 p_3 $$ \u53ef\u4ee5\u770b\u5230\uff0cr\u5c31\u662f\u901a\u8fc7\u524d\u9762\u7684\u6570\u7b97\u51fa\u6765\u7684\uff0c\u5c31\u6784\u5efa\u6570\u7ec4\uff0c\u521d\u59cb\u5316 \\(r_1\\) \uff0c\u5f00\u59cb\u5411\u4e0a\u8ba1\u7b97\u3002 \u81ea\u4e0b\u800c\u4e0a\u7684\u4e8c\u7ef4\u6570\u7ec4 \u5bf9\u4e8e\u4e00\u7ef4\u95ee\u9898 $$ f(0:n) = a+f(1:n) $$ \u4e8c\u7ef4\u95ee\u9898\uff1a $$ f(0:n)=f(0:k)+f(k:n) $$ \u77e9\u9635\u94fe\u4e58 \u627e\u6700\u4f18\u5316\u65b9\u6848\uff0c\u660e\u786e\u8fd9\u662f\u4e00\u4e2a\u6700\u4f18\u5316\u95ee\u9898\u3002 \u5199\u9012\u5f52\u65b9\u7a0b\uff1a m\u8868\u662fdp\u8868 s\u8868\u7528\u4e8e\u8bb0\u5f55\u6700\u4f73\u5206\u5272\u4f4d\u7f6ek \u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217 \u523b\u753b\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u7684\u7279\u5f81 X\u6709 \\(2^m\\) \u4e2a\u5b50\u5e8f\u5217\uff0c\u5168\u90e8\u904d\u5386\u4e00\u8fb9\uff0c\u53ef\u4ee5\u627e\u5230\u6700\u957f\u7684 \u6700\u4f18\u4e8c\u53c9\u641c\u7d22\u6811 \u6d89\u53ca\u6982\u7387\uff0c\u6709\u70b9\u96be\uff0c\u5f85\u5b8c\u5584\u3002 \u81ea\u4e0a\u800c\u4e0b\u7684\u5907\u5fd8\u5f55\u673a\u5236 \u7b2c\u4e8c\u5341\u4e8c\u7ae0 \u56fe\u7b97\u6cd5 \u56fe\u7684\u8868\u793a\uff1a \u90bb\u63a5\u94fe\u8868 \u5728\u8868\u793a\u7a00\u758f\u56fe\u7684\u65f6\u5019\u975e\u5e38\u9002\u7528 \u90bb\u63a5\u77e9\u9635 \u8868\u793a\u7a20\u5bc6\u56fe\u9002\u7528\uff0c\u53ef\u4ee5\u5feb\u901f\u5224\u65ad\u4e24\u4e2a\u8282\u70b9\u662f\u5426\u5b58\u5728\u8fb9 \u65e0\u8bba\u662f\u6709\u5411\u56fe\u8fd8\u662f\u65e0\u5411\u56fe\uff0c\u90bb\u63a5\u94fe\u8868\u7684\u50a8\u5b58\u7a7a\u95f4\u9700\u6c42\u4e3a\uff1a \\(\\Theta(V+E)\\) \u90bb\u63a5\u94fe\u8868\u7a0d\u52a0\u4fee\u6539\u5373\u53ef\u8868\u793a \u6743\u91cd\u56fe \uff0c\u4e0d\u8db3\u5728\u4e8e\u4e0d\u80fd\u5feb\u901f\u5224\u65ad\u662f\u5426\u5b58\u5728\u67d0\u4e2a\u8fb9\uff0c\u8981\u53bb\u641c\u7d22\u3002 \u90bb\u63a5\u77e9\u9635\u53ef\u4ee5\u5feb\u901f\u5224\u65ad\u662f\u5426\u5b58\u5728\u67d0\u4e2a\u8fb9\uff0c\u4f46\u662f\u50a8\u5b58\u7a7a\u95f4\u8f83\u5927\u3002\u9700\u6c42\u4e3a\uff1a \\(\\Theta\\left(V^{2}\\right)\\) \u65e0\u5411\u56fe\u662f\u5bf9\u79f0\u7684\uff0c\u53ef\u4ee5\u8282\u7ea6\u4e00\u534a\u7684\u7a7a\u95f4\u3002 \u4f8b\u9898 \u5bf9\u4e8e\u90bb\u63a5\u94fe\u8868\u6765\u8bf4\uff1a \u904d\u5386\u6bcf\u4e2a\u7ed3\u70b9\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u8fb9\u8fdb\u884c\u7ffb\u8f6c \u90bb\u63a5\u77e9\u9635 \u4e0a\u4e0b\u4e09\u89d2\u5bf9\u6362\u3002 \u6709\u5411\u65e0\u73af\u56fe \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22 \u8be5\u7b97\u6cd5\u80fd\u591f\u8ba1\u7b97\u8282\u70b9s\u5230\u6bcf\u4e2a\u53ef\u5230\u8fbe\u7684\u7ed3\u70b9\u7684\u8ddd\u79bb\uff08\u6700\u5c11\u7684\u8fb9\u6570\uff09\uff0c\u540c\u65f6\u751f\u6210\u4e00\u9897\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u6811\u3002 s -- v\u7684\u6700\u77ed\u8def\u5f84\u3002 \u5148\u627e\u51fa\u7070\u8272 \u7070\u8272\u4e2d\u9009\u62e9\u4e00\u4e2a\u53d8\u9ed1\uff0c\u53d8\u9ed1\u5143\u7d20\u5468\u56f4\u53d8\u7070 \u518d\u627e\u51fa\u7070\u8272 \u5982\u6b64\u53cd\u590d\u3002 https://www.redblobgames.com/pathfinding/a-star/introduction.html \u53ef\u4ee5\u53c2\u8003\u5b66\u4e60 \u6700\u77ed\u8def\u5f84 \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6700\u77ed\u8def\u5f84\u3002 \u6700\u77ed\u8def\u5f84\u8ddd\u79bb\u7684\u4e00\u4e9b\u6027\u8d28 \u95ee\u9898\uff0c\u81ea\u6d4b \u63cf\u8ff0\u5f52\u5e76\u6392\u5e8f \u8bc1\u660e\u5f52\u5e76\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6 \u753b\u56fe\u3001\u6570\u5b66\u5f52\u7eb3\u6cd5 \u4e8c\u5206\u67e5\u627e\u63cf\u8ff0\uff0c\u590d\u6742\u5ea6 \u63cf\u8ff0\u4e00\u4e2a\u7b97\u6cd5\uff0c\u6570\u7ec4\u4e2d\u627e\u548c\u4e3ax\u7684\u5143\u7d20\u5bf9\uff0cnlogn \u5f52\u5e76\u6cd5 \u9006\u5e8f\u5bf9 \u5f52\u5e76\u6cd5 \u5982\u679c\u53ea\u80fd\u8c03\u7528random(0,1)\uff0c\u5982\u4f55\u505a\u5230random(a,b),\u8fd4\u56deab\u4e4b\u95f4\u7684\u6574\u6570\u3001 \u9996\u5148\uff0crandom(0,1)\u662f\u968f\u673a\u7684\u4ea7\u751f0,1\u4e24\u4e2a\u6574\u6570\uff0crandom(a,b)\u662f\u968f\u673a\u4ea7\u751f[a,b]\u4e4b\u95f4\u7684\u6574\u6570\u3002 \u5b9e\u9645\u4e0a\u8981\u968f\u673a\u751f\u6210\u4e00\u4e2a [0,b-a]\u7684\u6570\uff0c\u6700\u540e\u52a0\u4e0aa\u3002 \u4e3a\u4e86\u751f\u6210\u8fd9\u4e2a\u6570\uff0c\u90a3\u5c31\u8981\u751f\u62102\u8fdb\u5236\u6570\uff0cbits\uff0c\u901a\u8fc7random(0,1\uff09\u751f\u6210\u7684\u4e8c\u8fdb\u5236\u6570\u90fd\u662f\u7b49\u6982\u7387\u7684\u3002 \u6240\u4ee5\u903b\u8f91\u5c31\u662f\uff0c\u7528random(0,1)\u751f\u6210\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570 RANDOM(a, b) range = b - a bits = ceil(log(2, range)) result = 0 for i = 0 to bits - 1 r = RANDOM(0, 1) result = result + r << i if result > range return RANDOM(a, b) else return a + result \u5728\u96c7\u4f63\u95ee\u9898\u4e2d\uff0c\u6b63\u597d\u96c7\u4f63\u4e00\u6b21\u7684\u6982\u7387\u662f\u591a\u5c11\uff0c\u96c7\u4f63n\u6b21\u662f\u591a\u5c11\uff1f\u96c7\u4f632\u6b21 \u96c7\u4f63\u4e00\u6b21\uff0c\u6700\u725b\u7684\u5728\u7b2c\u4e00\uff0c\u6240\u4ee5 \\(\\frac{(n-1) !}{n !}=\\frac{1}{n}\\) \u96c7\u4f63n\u6b21\uff0c\u5c31\u662f\u6bcf\u4e2a\u90fd\u96c7\u4f63\uff0c\u987a\u5e8f\u5c31\u662f1\uff0c2\uff0c3\uff0c4\uff0c..n.\u6240\u4ee5 \\(\\frac{1}{n !}\\) \u96c7\u4f632\u6b21\uff1a \u7b2c\u4e00\u4e2a\u4eba\u80af\u5b9a\u96c7\u4f63 \u80fd\u529b\u6700\u5f3a\u7684\u4eba\u80af\u5b9a\u96c7\u4f63 \u5982\u679c\u8bf4\u6700\u5f3a\u7684\u4eba\u5728\u7b2c\u4e00\u4e2a\uff0c\u90a3\u4e48\u53ea\u4f1a\u96c7\u4f63\u4e00\u6b21 \u8bb0\u7b2c\u4e00\u4e2a\u4eba\u7684\u80fd\u529b\u4e3a \\(rank_i\\) \uff0c\u7136\u540e \\(rank_{i+1},...,rank_{n-1}\\) (\u6bd4\u7b2c\u4e00\u540d\u5f3a\u7684\u4eba)\u8981\u5728\u7b2c\u4e00\u540d \\(rank_{n}\\) \u4e4b\u540e\u9762\u8bd5 \\(P(E_{i})=1/n\\) \u4e3a \u7b2c\u4e00\u540d\u6392\u540d\u4e3a \\(rank_i\\) \u7684\u6982\u7387 $$ \\sum_{i=1}^{n-1} P\\left(E_{i}\\right) \\cdot \\frac{1}{n-i}=\\sum_{i=1}^{n-1} \\frac{1}{n} \\cdot \\frac{1}{n-i} $$ \u63b7n\u4e2a\u9ab0\u5b50\uff0c\u548c\u7684\u671f\u671b \\(X_i\\) \u7b2ci\u4e2a\u9ab0\u5b50\u7684\u503c \\(sum=\\sum_{i=1}^n X_i\\) \\(E(sum)=E(\\sum_{i=1}^n X_i)=\\sum_{i=1}^nE(X_i)=3.5n\\) \u5e3d\u5b50\u6838\u5bf9\u95ee\u9898 n\u4e2a\u5ba2\u6237\uff0c\u6bcf\u4e2a\u4eba\u7ed9\u670d\u52a1\u751f\u4e00\u9876\u5e3d\u5b50\uff0c\u670d\u52a1\u751f\u628a\u5e3d\u5b50\u4ee5\u968f\u673a\u987a\u5e8f\u8fd8\u7ed9\u5ba2\u6237\uff0c\u8bf7\u95ee\u62ff\u5230\u81ea\u5df1\u5e3d\u5b50\u7684\u5ba2\u6237\u6570\u76ee\u7684\u671f\u671b\uff1f \\(X_i\\) \u7b2c i \u4e2a\u5ba2\u6237\u62ff\u5230\u81ea\u5df1\u7684\u5e3d\u5b50 \u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u4eba\u62ff\u5230\u81ea\u5df1\u5e3d\u5b50\u7684\u6982\u7387P = \u7b2c\u4e00\u4e2a\u4eba\u62ff\u5230\u7b2c\u4e8c\u4e2a\u4eba\u7684\u5e3d\u5b50\u7684\u6982\u7387(1/n) * 0 + \u7b2c\u4e00\u4e2a\u4eba\u6ca1\u62ff\u5230\u7b2c\u4e8c\u4e2a\u4eba\u7684\u5e3d\u5b50\u7684\u6982\u7387(n-1)/n * (1/n-1) = 1/n\uff0c \u7c7b\u6bd4\u7740\uff0c\u4e0d\u7ba1\u6309\u7167\u4ec0\u4e48\u987a\u5e8f\uff0c\u6bcf\u4e2a\u4eba\u62ff\u5230\u81ea\u5df1\u5e3d\u5b50\u7684\u6982\u7387\u90fd\u662f1/n\uff0c \u8fd9\u662f\u53e4\u5178\u6982\u578b\u3002 \\(P(X_i)=1/n\\) \\(E\\left[\\sum_{i=1}^{n} X_{i}\\right]=\\sum_{i=1}^{n} E\\left[X_{i}\\right]=\\sum_{i=1}^{n} \\frac{1}{n}=1\\) \u9006\u5e8f\u5bf9\u6570\u76ee\u7684\u671f\u671b https://walkccc.me/CLRS/Chap05/5.2/ $$ \\begin{aligned} \\mathrm{E}\\left[\\sum_{i<j} X_{i, j}\\right] &=\\sum_{i A[j]} \\ &=\\frac{1}{2} \\sum_{i=1}^{n-1} n-i \\ &=\\frac{n(n-1)}{2}-\\frac{n(n-1)}{4} \\ &=\\frac{n(n-1)}{4} . \\end{aligned} $$ \u9ad8\u5ea6\u4e3ah\u7684\u5806\uff0c\u6700\u591a\u591a\u5c11\u4e2a\u5143\u7d20\uff1f \u9996\u5148\u8981\u660e\u767d\u5806\u7684\u5b9a\u4e49\uff0c\u662f\u4e00\u4e2a\u8fd1\u4f3c\u7684\u5b8c\u5168\u4e8c\u53c9\u6811 \u7b49\u6bd4\u6570\u5217\u6c42\u548c \\(S_{n}=a_{1} \\frac{1-q^{n}}{1-q}\\) \u5bf9\u4e8e\u4e00\u4e2a\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u9ad8\u5ea6h-1\uff0c\u90a3\u4e48\u5b83\u7684\u5143\u7d20\u4e2a\u6570\u4e3a \\(1+2+4+8+...+2^{h-1}\\) \u6c42\u548c\u4e3a \\(2^{h}-1\\) \u90a3\u4e48\u4e00\u4e2a\u9ad8\u5ea6\u4e3ah\u7684\u5806\uff0c\u653e\u6ee1\u4e86\u4e3a \\(2^{h+1}-1\\) \u524d\u4e00\u884c\u653e\u6ee1\uff0c\u7b2ch\u884c\u653e\u4e00\u4e2a\uff0c\u5219\u4e3a\uff1a \\(2^{h}\\) \u542b\u6709n\u4e2a\u5143\u7d20\u7684\u5806\u7684\u9ad8\u5ea6 \u7531\u4e0a\u9898\u76ee\u53ef\u77e5\uff0ch\u9ad8\u5ea6\uff0c\u6700\u591a \\(2^{h+1}-1\\) \u4e2a\u5143\u7d20\uff0c\u6700\u5c11 \\(2^{h}\\) \u6240\u4ee5n\u4e2a\u5143\u7d20\uff0c\u9ad8\u5ea6\u4e3a \\(\\lfloor\\lg n\\rfloor\\) \u6700\u5927\u5806\u7684\u6700\u5c0f\u5143\u7d20\u5728\u54ea\uff1f \u5806\u6570\u7ec4\u7684\u540e\u534a\u90e8\u5206 \u5df2\u7ecf\u6392\u597d\u5e8f\u7684\u6570\u7ec4\uff0c\u662f\u6700\u5c0f\u5806\u5417\uff1f \u662f\uff0cparent[i]< left[2i],parent[i]< right[2i+1] \u4e8c\u53c9\u6811\u7684\u7406\u89e3 \u5bf9\u4e8e\u4e8c\u53c9\u6811\u7684\u5904\u7406\uff0c\u7531\u4e24\u79cd\u601d\u7ef4\u6a21\u5f0f\uff1a \u904d\u5386\u4e00\u8fb9\u4e8c\u53c9\u6811\u89e3\u51b3\u95ee\u9898\uff1b \u901a\u8fc7\u5b50\u6811\u7684\u7b54\u6848\u6765\u7ed3\u51b3\u95ee\u9898\u3002 \u4e00\u5b9a\u9700\u8981\u601d\u8003\u7684\u95ee\u9898\uff1a \u53ea\u7ed9\u4f60\u4e00\u4e2a\u4e8c\u53c9\u8282\u70b9\uff0c\u4f60\u8981\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462 \uff1f \u5982\u4f55\u7406\u89e3\u524d\u4e2d\u540e\u5e8f\u904d\u5386\uff1f def traverse(node): \"\"\" \u540e\u5e8f\u904d\u5386 \"\"\" traverse(node.left) traverse(node.right) print(node.val) \u6811\u53ef\u4ee5\u88ab\u524d\u4e2d\u540e\u5e8f\u904d\u5386\uff0c\u540c\u6837\u7684\uff0c\u94fe\u8868\u4e5f\u53ef\u4ee5\u88ab \u524d\u3001\u540e\u5e8f\u904d\u5386 \u3002 \u601d\u8003\uff1a\u5982\u4f55\u4ece\u540e\u9762\u5f00\u59cb\u6253\u5370\u94fe\u8868\u5462\uff1f \u7b54\uff1a\u94fe\u8868\u7684\u540e\u5e8f\u904d\u5386\u3002 \u4efb\u4f55\u9012\u5f52\u64cd\u4f5c\u90fd\u53ef\u4ee5\u88ab\u7406\u89e3\u4e3a\u524d\u4e2d\u540e\u5e8f\u904d\u5386\u3002 \u524d\u4e2d\u540e\u5e8f\u904d\u5386\u662f\u4e8c\u53c9\u6811\u6811\u5904\u7406\u8fc7\u7a0b\u4e2d\u7684\u65f6\u95f4\u8282\u70b9 \uff01 \u524d\u5e8f\u4f4d\u7f6e\u7684\u4ee3\u7801\u5728\u521a\u521a\u8fdb\u5165\u4e00\u4e2a\u4e8c\u53c9\u6811\u8282\u70b9\u7684\u65f6\u5019\u6267\u884c\uff1b \u540e\u5e8f\u4f4d\u7f6e\u7684\u4ee3\u7801\u5728\u5c06\u8981\u79bb\u5f00\u4e00\u4e2a\u4e8c\u53c9\u6811\u8282\u70b9\u7684\u65f6\u5019\u6267\u884c\uff1b \u4e2d\u5e8f\u4f4d\u7f6e\u7684\u4ee3\u7801\u5728\u4e00\u4e2a\u4e8c\u53c9\u6811\u8282\u70b9\u5de6\u5b50\u6811\u90fd\u904d\u5386\u5b8c\uff0c\u5373\u5c06\u5f00\u59cb\u904d\u5386\u53f3\u5b50\u6811\u7684\u65f6\u5019\u6267\u884c\u3002 \u8fd9\u4e09\u70b9\u7684\u7406\u89e3\u5bf9\u4e8e\u56de\u6eaf\u7b49\u7b97\u6cd5\u7684\u7406\u89e3\u975e\u5e38\u91cd\u8981\u3002 \u524d\u5e8f\u4f4d\u7f6e\u53ef\u4ee5\u505a\u68c0\u67e5\uff1b \u540e\u7eed\u4f4d\u7f6e\u53ef\u4ee5\u505a\u8bb0\u5fc6\uff1b \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5bf9\u4f4d\u7f6e\u4e0d\u654f\u611f\u7684\u64cd\u4f5c\u90fd\u653e\u5728\u524d\u5e8f\u4f4d\u7f6e\uff1b\u540e\u7eed\u4f4d\u7f6e\u53ef\u4ee5\u83b7\u5f97\u5b50\u6811\u7684\u4fe1\u606f\u3002 \u7ec3\u4e60\uff1ahttps://leetcode-cn.com/problems/flatten-binary-tree-to-linked-list/ \u4e3b\u8981\u7684\u64cd\u4f5c\u5728\u540e\u5e8f\u4e0a\u3002 \u7ec3\u4e60\uff1ahttps://leetcode-cn.com/problems/kth-smallest-element-in-a-bst/ \u4e8c\u53c9\u641c\u7d22\u6811\u7b2ck\u5c0f\u7684\u5143\u7d20 \u4e8c\u53c9\u641c\u7d22\u6811\u5177\u6709\u5982\u4e0b\u6027\u8d28\uff1a \u7ed3\u70b9\u7684\u5de6\u5b50\u6811\u53ea\u5305\u542b \u5c0f\u4e8e \u5f53\u524d\u7ed3\u70b9\u7684\u6570\u3002 \u7ed3\u70b9\u7684\u53f3\u5b50\u6811\u53ea\u5305\u542b \u5927\u4e8e \u5f53\u524d\u7ed3\u70b9\u7684\u6570\u3002 \u6240\u6709\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u81ea\u8eab\u5fc5\u987b\u4e5f\u662f\u4e8c\u53c9\u641c\u7d22\u6811\u3002 \u6700\u91cd\u8981\u7684\u662f\uff0c \u4e8c\u53c9\u641c\u7d22\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u5c31\u662f\u5347\u5e8f\u7684 \uff01\uff01\uff01\uff01","title":"\u300a\u7b97\u6cd5\u5bfc\u8bba\u300b\u9605\u8bfb\u7b14\u8bb0"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_1","text":"\u5f00\u59cb\u4e8e2021\u5e743\u67083\u65e5 \u9ec4\u6d69 \u7b54\u6848\uff1ahttps://walkccc.me/CLRS/","title":"\u300a\u7b97\u6cd5\u5bfc\u8bba\u300b\u9605\u8bfb\u7b14\u8bb0"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_2","text":"\u7b97\u6cd5algorithm\u63cf\u8ff0\u4e00\u4e2a\u7279\u5b9a\u7684\u8ba1\u7b97\u8fc7\u7a0b\u6765\u5b9e\u73b0\u8f93\u5165\u548c\u8f93\u51fa\u7684\u5173\u7cfb \u7b97\u6cd5\u95ee\u9898\u7684\u4e24\u4e2a\u7279\u5f81\uff1a \u5b58\u5728\u8bb8\u591a\u5019\u9009\u89e3\uff0c\u5bfb\u627e\u4e00\u4e2a\u771f\u6b63\u7684\u89e3\u6216\u8005\u4e00\u4e2a\u6700\u597d\u7684\u89e3\u53ef\u80fd\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u6311\u6218\uff1b \u5b58\u5728\u5b9e\u9645\u5e94\u7528\u3002 \u6570\u636e\u7ed3\u6784 \u6570\u636e\u7ed3\u6784\u662f\u6570\u636e\u7684\u50a8\u5b58\u548c\u7ec4\u7ec7\u65b9\u5f0f\uff0c\u65e8\u5728\u65b9\u4fbf\u8bbf\u95ee\u4e0e\u4fee\u6539 \u6280\u672f \u672c\u4e66\u6709\u4e00\u4e9b\u7279\u5b9a\u7684\u95ee\u9898\u89e3\u51b3\u65b9\u6cd5 \u96be\u9898 \u4e00\u90e8\u5206\u95ee\u9898\uff0c\u76ee\u524d\u4e0d\u77e5\u9053\u6709\u6548\u7684\u65b9\u6cd5\uff0c\u88ab\u79f0\u4e3a NP\u5b8c\u5168\u7684 \u3002\u8bf7\u53c2\u7167\u7b2c34\u7ae0\u5b66\u4e60NP\u5b8c\u5168\u6027\u3002 \u7279\u70b9\uff1a1. \u5bf9\u4e8eNP\u5b8c\u5168\u95ee\u9898\uff0c\u76ee\u524d\u6ca1\u6709\u627e\u5230\u6709\u6548\u7684\u7b97\u6cd5\uff0c\u4f46\u662f\u4e5f\u6ca1\u4eba\u80fd\u8bc1\u660eNP\u5b8c\u5168\u7684\u95ee\u9898\u786e\u5b9e\u4e0d\u5b58\u5728\u6709\u6548\u7b97\u6cd5\u3002 \u200b 2. \u5982\u679cNP\u5b8c\u5168\u95ee\u9898\u88ab\u89e3\u51b3\uff0c\u90a3\u4e48\u4e00\u7cfb\u5217\u7684NP\u5b8c\u5168\u95ee\u9898\u90fd\u4f1a\u88ab\u89e3\u51b3 \u201c\u65c5\u884c\u5546\u95ee\u9898\u201d\uff0cNP\u5b8c\u5168\u95ee\u9898\u4e00\u822c\u5bfb\u6c42\u8fd1\u4f3c\u7b97\u6cd5\u3002 \u5e76\u884c\u6027","title":"\u7b2c\u4e00\u7ae0 \u7b97\u6cd5\u5728\u8ba1\u7b97\u4e2d\u7684\u4f5c\u7528"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_3","text":"\u8ba1\u7b97\u673a\u6709\u4e24\u4e2a\u9650\u5236\uff1a\u901f\u5ea6\u4e0e\u50a8\u5b58 \u6307\u4ee4/\u901f\u5ea6 = \u65f6\u95f4 \u6307\u4ee4\u6570\u76ee\u4e0e\u7b97\u6cd5\u4e0e\u7f16\u8bd1\u5668\u6709\u5173 \u901f\u5ea6\u4e0e\u8ba1\u7b97\u673a\u901f\u5ea6\u6709\u5173\u3002","title":"\u4f5c\u4e3a\u4e00\u79cd\u6280\u672f\u7684\u7b97\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_4","text":"","title":"\u7b97\u6cd5\u7684\u91cd\u8981\u6027"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_5","text":"\u6bd4\u8f83\u63d2\u5165\u987a\u5e8f\u4e0e\u5f52\u5e76\u987a\u5e8f\u5728\u76f8\u540c\u673a\u5668\u4e0a\u7684\u5b9e\u73b0\u3002\u8f93\u5165\u89c4\u6a21\u4e3an\uff0c\u63d2\u5165\u6392\u5e8f\u8fd0\u884c8n^2\u6b65\uff0c\u800c\u5e76\u5f52\u6392\u5e8f\u8fd0\u884c64n lgn \u6b65\uff0c\u95ee\u5bf9\u4e8e\u54ea\u4e9bn\u503c\uff0c\u63d2\u5165\u6392\u5e8f\u4f18\u4e8e\u5f52\u5e76\u6392\u5e8f n\u53d62\uff0c3\uff0c4\uff0c5\uff0c6\u3002","title":"\u6bd4\u8f83\u63d2\u5165\u6392\u5e8f\u4e0e\u5e76\u5f52\u6392\u5e8f"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_6","text":"","title":"\u7b2c\u4e8c\u7ae0 \u7b97\u6cd5\u57fa\u7840"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_7","text":"def insertion_sort(A): for j in range(1,len(A)): key = A[j] i = j - 1 while i >= 0 and A[i] > key: A[i+1] = A[i] i -= 1 a[i+1] = key \u6ce8\u610f\u8fb9\u754c\u6761\u4ef6\uff0c\u4ee5\u53ca \u5faa\u73af\u4e0d\u53d8\u5f0f \uff1aA[:j]\u662f\u6392\u5e8f\u597d\u4e86\u7684\uff0c\u6bd4\u5982 j=1\u7684\u65f6\u5019\uff0cA[0]\u4e00\u4e2a\u5143\u7d20\u5c31\u662f\u6392\u5e8f\u597d\u4e86\u7684\u3002 \u63d2\u5165\u6392\u5e8f\u9002\u7528\u4e8e\u5c11\u91cf\u5143\u7d20\u7684\u6392\u5e8f\u3002 \u8fd9\u662f\u4e00\u4e2a \\(O(n^2)\\) \u7684\u7b97\u6cd5\u3002","title":"\u63d2\u5165\u6392\u5e8f"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_8","text":"\u63d2\u5165\u6392\u5e8f\u7b97\u6cd5\u7684\u5206\u6790 \u8f93\u5165\u89c4\u6a21 \u8fd0\u884c\u65f6\u95f4\uff0c\u6307\u6267\u884c\u7684\u57fa\u672c\u64cd\u4f5c\u6570\u6216\u6b65\u6570 \u5f97\u5230\u8fd0\u884c\u65f6\u95f4\u4e3a\uff1a \u6700\u4f73\u60c5\u51b5\uff0c\u5c31\u662f\u8f93\u5165\u7684\u5c31\u662f\u4e2a\u5df2\u7ecf\u6392\u5e8f\u62cd\u597d\u7684\uff1a \u6700\u574f\u60c5\u51b5\uff0c\u8f93\u5165\u662f\u76f8\u53cd\u6392\u5e8f\u7684\uff1a \u6700\u574f\u60c5\u51b5 \u5e73\u5747\u60c5\u51b5\u5206\u6790 \u589e\u957f\u91cf\u7ea7 \u4f7f\u7528\u4e00\u4e9b\u7b80\u5316\u62bd\u8c61\uff0c\u6bd4\u5982\u5ffd\u7565\u4e0a\u6587\u4e2d\u7684c\uff0c\u5373\u6bcf\u4e2a\u6307\u4ee4\u7684\u65f6\u95f4\uff0c\u800c\u5173\u6ce8\u6700\u91cd\u8981\u7684\u9879\u3002\u5bf9\u4e8e\u8db3\u591f\u5927\u7684\u8f93\u5165\uff0c\u6700\u9ad8\u9636\u9879\u8d77\u6700\u5927\u4f5c\u7528\u3002","title":"\u5206\u6790\u7b97\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_9","text":"\u63d2\u5165\u6392\u5e8f\u91c7\u7528\u4e86 \u589e\u91cf\u7684\u65b9\u6cd5 \uff1a\u5728\u6392\u5e8f\u597d\u524d [1: j-1]\u4e2a\u5143\u7d20\u4ee5\u540e\uff0c\u518d\u5c06\u5f53\u4e2aj\u5143\u7d20\u63d2\u5165\u5230\u5b50\u6570\u7ec4\u7684\u9002\u5f53\u4f4d\u7f6e\uff0c\u4ea7\u751f\u6392\u5e8f\u597d\u7684\u5b50\u6570\u7ec4 [0: j]","title":"\u8bbe\u8ba1\u7b97\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_10","text":"\u5206\u6cbb\u6cd5\u7684\u601d\u60f3\uff1a\u5c06\u539f\u95ee\u9898\u5206\u89e3\u4e3a\u51e0\u4e2a\u89c4\u6a21\u8f83\u5c0f\u4f46\u7c7b\u4f3c\u4e8e\u539f\u95ee\u9898\u7684\u5b50\u95ee\u9898\uff0c\u9012\u5f52\u5730\u6c42\u89e3\u8fd9\u4e9b\u5b50\u95ee\u9898\u3001 \u5206\u6cbb\u7684\u6a21\u5f0f\uff1a \u5206\u89e3 \u89e3\u51b3\u8fd9\u4e9b\u5b50\u95ee\u9898 \u5408\u5e76 \u5f52\u5e76\u6392\u5e8f\u7b97\u6cd5 \u5b8c\u5168\u9075\u5faa\u5206\u6cbb\u6a21\u5f0f\uff1a \u5206\u89e3\uff1a\u8bb2\u5f85\u6392\u5e8f\u7684n\u4e2a\u5143\u7d20\u7684\u5e8f\u5217\u5206\u89e3\u4e3an/2\u4e2a\u5143\u7d20\u7684\u5b50\u5e8f\u5217\uff1b \u89e3\u51b3: \u4f7f\u7528\u5f52\u5e76\u6392\u5e8f\u89e3\u51b3\u5b50\u5e8f\u5217\uff1b \u5408\u5e76\uff1a\u5c06\u4e24\u4e2a\u5df2\u7ecf\u6392\u5e8f\u5b8c\u6210\u7684\u5b50\u5e8f\u5217\u5408\u5e76\u3002 \u5408\u5e76\u51fd\u6570 merge \uff1a \u8f93\u5165\u6570\u7ec4\uff0cp\uff0cq\uff0cr\uff0c\u5206\u6210\u4e24\u6bb5\uff0c\u5c06\u4e24\u7ec4\u8fdb\u884c\u5408\u5e76: def merge(A, p, q, r): \"\"\" A\u6570\u7ec4\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff0cA[p,q],A[q,r] \"\"\" L = [i for i in A[p:q]] R = [i for i in A[q:r]] # \u989d\u5916\u7684\u7a7a\u95f4\uff0c\u50a8\u5b58L,R\uff0c \u52a0\u4e0a\u54e8\u5175\uff0c\u4ee5\u514di\uff0cj\u6307\u9488\u79fb\u5230\u5916\u9762\u53bb\u4e86 L.append(float(\"+inf\")) R.append(float(\"+inf\")) i = 0 j = 0 for k in range(p, r): # \u5c0f\u7684\u8fdb\u5165 if L[i] <= R[j]: A[k] = L[i] i += 1 else: A[k] = R[j] j += 1 \u5c06merge\u4f5c\u4e3a\u5f52\u5e76\u6392\u5e8f\u7b97\u6cd5\u4e2d\u7684\u4e00\u4e2a\u5b50\u7a0b\u5e8f\u6765\u7528\uff1a def merge_sort(A, p, r): if p < r-1: # \u627e\u4e2d\u70b9\u4f4d\u7f6e q = int((r + p) / 2) merge_sort(A, p, q) merge_sort(A, q, r) merge(A, p, q, r) return A \u5728\u5199\u8fd9\u6837\u7684\u9012\u5f52\u8c03\u7528\u65f6\u5019\uff0c\u4e00\u5b9a\u8981\u660e\u786e\u7ec8\u6b62\u6df1\u5165\u7684\u6761\u4ef6\u3002\u5728\u5f52\u5e76\u6392\u5e8f\u4e2d\uff0cp =r-q\uff09\u5e76\u4e0d\u6267\u884cmerge_sort\uff0c\u56e0\u4e3a\u53ea\u67091\u4e2a\u5143\u7d20\u3002","title":"\u5206\u6cbb\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_11","text":"\u5e76\u5f52\u6392\u5e8f\u7b97\u6cd5\u7684\u5206\u6790 \u5ffd\u7565\u4f4e\u9636\u9879\u548c\u5e38\u6570c\u4fbf\u7ed9\u51fa\u671f\u671b\u7684\u7ed3\u679cO(nlgn) \u601d\u8003\u9898 \u5192\u6ce1\u6392\u5e8f\u7684\u6700\u574f\u60c5\u51b5\u8fd0\u884c O(n^2^)\uff0c\u63d2\u5165\u6392\u5e8f\u7684\u6700\u574f\u8fd0\u884c\u4e5f\u662fO(n^2^) b. n-1 + ... +1 = n(n-1)/2 \u4e2a","title":"\u5206\u6790\u5206\u6cbb\u7b97\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_12","text":"\u7b97\u6cd5\u8fd0\u884c\u65f6\u95f4\u7684\u589e\u957f\u91cf\u7ea7\u7b80\u5355\u5730\u523b\u753b\u4e86\u7b97\u6cd5\u7684\u6548\u7387\u3002 \u5f53\u8f93\u5165\u89c4\u6a21n\u53d8\u5f97\u8db3\u591f\u5927\uff0c\u6700\u574f\u8fd0\u884c\u65f6\u95f4\u4e3a \\(\\Theta(n \\lg n)\\) \u7684\u5e76\u5f52\u6392\u5e8f\u5c06\u6218\u80dc\u63d2\u5165\u6392\u5e8f \\(\\Theta\\left(n^{2}\\right)\\)","title":"\u7b2c\u4e09\u7ae0 \u51fd\u6570\u7684\u589e\u957f"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_13","text":"\\(\\Theta\\) \u8bb0\u53f7 \\(O\\) \u8bb0\u53f7\uff1a\u6e10\u8fd1\u4e0a\u754c \\(\\Omega\\) \u8bb0\u53f7\uff1a\u6e10\u8fd1\u4e0b\u754c \u5404\u79cd\u6e10\u8fd1\u5173\u7cfb\u7b26\u5408\uff1a\u4f20\u9012\u6027\uff0c\u81ea\u53cd\u6027\uff0c\u5bf9\u79f0\u6027\uff0c\u8f6c\u7f6e\u5bf9\u79f0\u6027\uff0c\u4e09\u5206\u6027","title":"\u6e10\u8fd1\u8bb0\u53f7"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_14","text":"\u5355\u8c03\u6027 \u5411\u4e0b\u53d6\u6574\u4e0e\u5411\u4e0a\u53d6\u6574 \u6a21\u8fd0\u7b97 \u591a\u9879\u5f0f \u6307\u6570 \u5bf9\u6570 \u9636\u4e58 \u591a\u91cd\u51fd\u6570 \u591a\u91cd\u5bf9\u6570\u51fd\u6570 \u6590\u6ce2\u90a3\u5951\u6570","title":"\u6807\u51c6\u8bb0\u53f7\u4e0e\u5e38\u7528\u51fd\u6570"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_15","text":"\u5206\u6cbb\u7684\u7b56\u7565\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u9012\u5f52\u6765\u89e3\u51b3\u95ee\u9898\u3002 \u4e09\u4e2a\u6838\u5fc3\uff1a \u5206\u89e3\u4e3a\u5b50\u95ee\u9898 \u89e3\u51b3\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u7ec8\u6b62\u6761\u4ef6 \u5408\u5e76","title":"\u7b2c\u56db\u7ae0 \u5206\u6cbb\u7b56\u7565"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_16","text":"\u5206\u6cbb\u7684\u89c4\u6a21\u5bf9\u5206\u6cbb\u6cd5\u7684\u6027\u80fd\u5f71\u54cd\u5f88\u5927\u3002 \u4f8b\u5982\u5bf9\u534a\u5206\uff08\u5206\u6cbb\u6392\u5e8f\uff09\uff1a \u8fd8\u53ef\u4ee51/3,2/3\u5206 \u51cf\u5c11\u4e00\u4e2a\u5143\u7d20\u5206\uff1a **\u4e0d\u540c\u7684\u9012\u5f52\u5f0f\uff0c\u5176\u590d\u6742\u5ea6\u4e5f\u5927\u4e0d\u76f8\u540c\uff01 \u5f53\u5b50\u95ee\u9898\u8db3\u591f\u5927\u9700\u8981\u9012\u5f52\u6c42\u89e3\u65f6\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a \u9012\u5f52\u60c5\u51b5 \u5f53\u5b50\u95ee\u9898\u8db3\u591f\u5c0f\uff0c\u4e0d\u518d\u9700\u8981\u9012\u5f52\u65f6\uff0c\u8bf4\u660e\u9012\u5f52\u5df2\u7ecf\u89e6\u5e95\uff0c\u8fdb\u5165\u4e86 \u57fa\u672c\u60c5\u51b5 \u9012\u5f52\u5f0f\uff1a \u6c42\u89e3\u53ef\u5f97\uff1a \u6c42\u89e3\u9012\u5f52\u5f0f\u7684\u65b9\u6cd5\uff1a\u4ee3\u5165\u6cd5\uff0c\u9012\u5f52\u6811\u6cd5\uff0c\u4e3b\u65b9\u6cd5\u3002","title":"\u9012\u5f52\u5f0f"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_17","text":"\u66b4\u529b\u6c42\u89e3\u6cd5 \u95ee\u9898\u53d8\u6362 \u4f7f\u7528\u5206\u6cbb\u7b56\u7565\u7684\u6c42\u89e3\u6cd5 \u4f7f\u7528\u5206\u6cbb\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u4e3a \u7ec3\u4e60 \u8fd9\u9053\u9898\u9700\u8981\u91c7\u7528\u52a8\u6001\u89c4\u5212\u7684\u529e\u6cd5\u89e3\u51b3\u3002 \u5c1a\u672a\u89e3\u51b3","title":"\u6700\u5927\u6570\u7ec4\u95ee\u9898"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#strassen","text":"\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(\\Theta\\left(n^{3}\\right)\\) \uff0c\u4f46\u662fStrassen\u7684\u8457\u540dn*n\u77e9\u9635\u76f8\u4e58\u7684\u9012\u5f52\u7b97\u6cd5\uff0c\u590d\u6742\u5ea6\u4e3a \\(\\Theta\\left(n^{\\lg 7}\\right)\\) \uff0c\u5176\u4e2dlg7\u7ea6\u4e3a2.8\u548c2.81\u3002 \u9012\u5f52\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(\\Theta\\left(n^{3}\\right)\\) \u3002 \u5176\u4e2d \\(\\Theta(1)\\) \u662f\u5206\u89e3A,B,C\u77e9\u9635\u3002 \\(\\Theta\\left(n^{2}\\right)\\) \u662f\u5143\u7d20\u76f8\u52a0\u3002 \u6ce8\u610f8T(n/2)\u4e2d\u76848\u51b3\u5b9a\u4e86\u9012\u5f52\u6811\u662f\u5426\u8302\u76db\uff0c\u4e0d\u80fd\u7701\u7565\uff0c\u5426\u5219\u5c31\u662f\u7ebf\u6027\u7ed3\u6784\u4e86\u3002 Strassen\u7b97\u6cd5 \u5176\u6838\u5fc3\u601d\u60f3\u5c31\u662f\u5c068T(n/2)\u6539\u4e3a7T(n/2) \u4f2a\u4ee3\u7801\uff08\u81ea\u5199\uff09\uff1a def Strassen(a,b): n = a\u7684\u7ef4\u5ea6 c = n*n matrix if n == 1: c11 = a11*b11 else: s1 = b12-b22 s2 = a11+a12 s3 = a21+a22 s4 = b21-b11 s5 = a11+a22 s6 = b11+b22 s7 = a12-a22 s8 = b21+b22 s9 = a11-a21 s10 = b11+b12 p1 = Strassen(a11,s1) p2 p3 p4 p5 p6 p7 c11 = c12 c21 c22 return c \u7ec3\u4e60\uff1a","title":"\u77e9\u9635\u4e58\u6cd5\u7684Strassen\u7b97\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_18","text":"\u4ee3\u5165\u6cd5 \uff0c\u5b83\u4e3b\u8981\u5206\u4e3a\u4e24\u6b65\uff1a \u731c\u6d4b\u89e3\u7684\u5f62\u5f0f \u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u6c42\u51fa\u89e3\u7684\u5e38\u6570\uff0c\u5e76\u8bc1\u660e\u89e3\u662f\u6b63\u786e\u7684 \u731c\u6d4b\uff1a \u4e0a\u754c\u4e3a\uff1a \u8981\u6c42\u8bc1\u660e\uff1a \u9012\u5f52\u6811 \u4f8b\u5982\uff1a \u4e3b\u65b9\u6cd5 \uff08\u7565\uff09","title":"\u6c42\u89e3\u9012\u5f52\u5f0f"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_19","text":"","title":"\u7b2c\u4e94\u7ae0 \u6982\u7387\u5206\u6790\u548c\u968f\u673a\u7b97\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_20","text":"\u4f2a\u4ee3\u7801\uff1a \u6700\u574f\u60c5\u5f62\u5206\u6790 \u968f\u673a\u7b97\u6cd5 \u4e3a\u4e86\u5229\u7528\u6982\u7387\u5206\u6790\uff0c\u9700\u8981\u4e86\u89e3\u5173\u4e8e\u8f93\u5165\u5206\u5e03\u7684\u4e00\u4e9b\u4fe1\u606f\u3002","title":"\u96c7\u4f63\u95ee\u9898"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_21","text":"","title":"\u6307\u793a\u5668\u968f\u673a\u53d8\u91cf"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_22","text":"\u5982\u4f55\u7406\u89e3\u968f\u673a\u6392\u5e8f\uff0c\u4e00\u4e2a\u516c\u5e73\u7684\u7b97\u6cd5\u80fd\u591f\u5747\u5300\u5730\u7ed9\u51fan\uff01\u4e2a\u7ed3\u679c\u4e2d\u7684\u4e00\u4e2a\u3002\u4f46\u662f\u5982\u679c\u8fd9\u6837\u7684\u8bdd\uff0c\u7b97\u6cd5\u9700\u8981\u7ed9\u51fan\uff01\u4e2a\u9009\u62e9\uff0c\u5b83\u7684\u590d\u6742\u5ea6\u592a\u9ad8O(n!)\uff0c\u968f\u673a\u7b97\u6cd5\u5e94\u8fd0\u800c\u751f\u3002 \u968f\u673a\u6392\u5217\u6570\u7ec4\uff1a P\u8868\u793a\u7684\u662f\u4f18\u5148\u7ea7\uff1a\u5047\u8bbe\u4f18\u5148\u7ea7\u90fd\u4e0d\u540c\uff0c\u5219\u7b97\u6cd5\u4ea7\u751f\u8f93\u5165\u7684\u5747\u5300\u968f\u673a\u6392\u5217\u3002 \u5c0ftip\uff1a","title":"\u968f\u673a\u7b97\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#knuth","text":"\u6392\u5e8f\u95ee\u9898\uff1a \u6392\u5e8f\u7b97\u6cd5\uff1a \u63d2\u5165\u6392\u5e8f\uff0c \\(\\Theta\\left(n^{2}\\right)\\) \uff0c\u4ed6\u662f\u539f\u5740\u7684\uff08\u4ec5\u6709\u5e38\u6570\u9879\u4e2a\u5143\u7d20\u9700\u8981\u50a8\u5b58\u5728\u6570\u7ec4\u4e4b\u5916\uff09\uff0c\u5bf9\u4e8e\u5c0f\u89c4\u6a21\u6392\u5e8f\uff0c\u63d2\u5165\u6392\u5e8f\u975e\u5e38\u9002\u7528\u3002 \u5f52\u5e76\u7b97\u6cd5\uff0c \\(\\Theta(n \\lg n)\\) \uff0c\u5b83\u7684merge\u51fd\u6570\u5e76\u4e0d\u662f\u539f\u5740\u7684\uff0c\u4f46\u4ed6\u6709\u66f4\u597d\u7684\u6e10\u8fdb\u65f6\u95f4\u3002 \u5728\u4e0b\u6587\u4e2d \u7b2c\u516d\u573a\u4ecb\u7ecd\u5806\u6392\u5e8f\uff0c\u7b2c\u4e03\u7ae0\u4ecb\u7ecd\u5feb\u901f\u6392\u5e8f\u3002","title":"Knuth\u6d17\u724c\u7b97\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_23","text":"\u5b83\u878d\u5408\u4e86\u5feb\u901f\u6392\u5e8f\u548c\u5f52\u5e76\u6392\u5e8f\u7684\u4f18\u70b9 \u5229\u7528\u5806\u7684\u6570\u636e\u7ed3\u6784\uff0c\u7ed3\u5408\u4e86\u63d2\u5165\u6392\u5e8f\u548c\u5f52\u5e76\u6392\u5e8f\u7684\u4f18\u70b9\uff1a\u590d\u6742\u5ea6 \\(\\Theta(n \\lg n)\\) \uff0c\u5177\u6709\u539f\u5740\u6027\u3002","title":"\u7b2c\u516d\u7ae0 \u5806\u6392\u5e8f"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_24","text":"\u5806\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u4e00\u4e2a\u8fd1\u4f3c\u7684\u5b8c\u5168\u4e8c\u53c9\u6811 \u8ba1\u7b97\u4f4d\u7f6e\uff1a \u6700\u5927\u5806\uff0c\u6700\u5c0f\u5806\u3002\u6700\u5927\u5806\u5c31\u662f\u6700\u5927\u7684\u8282\u70b9\u5728\u6700\u4e0a\u9762\u7684\u6839\u8282\u70b9\u3002 \u6700\u5927\u5806\u7684\u4e00\u4e9b\u6027\u8d28\uff1a \u6700\u5927\u5806\u7684\u6700\u5927\u503c\u5728\u6839\u8282\u70b9\u4e0a\uff0c\u5728python\u4e2d\uff0c\u4e00\u822c\u4f7f\u7528\u6700\u5c0f\u5806\uff0c\u6839\u8282\u70b9\u662f\u6700\u5c0f\u503c \u6784\u9020\u6700\u5927\u5806\uff0c\u7ebf\u6027\u590d\u6742\u5ea6 \u7ef4\u62a4\u6700\u5927\u5806\uff0c\u590d\u6742\u5ea6\u4e3a \\(O(lgn)\\) \uff0c\u53ea\u80fd \u5806\u6392\u5e8f \\(O(nlgn)\\)","title":"\u5806"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_25","text":"\u590d\u6742\u5ea6\uff1aO(lgn) \u7ef4\u62a4\u6700\u5927\u5806\uff1a\u5c31\u662f\u628a\u7b2ci\u4e2a\u5143\u7d20\u548c\u4e24\u4e2a\u5b69\u5b50\u505a\u5bf9\u6bd4\uff0c\u4e0e\u5b69\u5b50\u4e2d\u7684\u8f83\u5927\u503c\u8fdb\u884c\u4ea4\u6362\u3002","title":"\u7ef4\u6301\u6700\u5927\u5806"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_26","text":"\u81ea\u5e95\u5411\u4e0a\u5efa\u9020\u6700\u5927\u5806\u3002 \u6570\u5b66\u5f52\u7eb3\u53ef\u77e5: (n-1)//2+1 \u5230 n \u5747\u4e3a \u53f6\u5b50\uff0c\u90a3\u4e48\uff08n-1\uff09//2 \u4e3a\u975e\u53f6\u5b50\uff0c\u6240\u4ee5\u5bf9\u8fd9\u4e9b\u8fdb\u884c\u6700\u5927\u5806\u7ef4\u62a4\u5373\u53ef","title":"\u5efa\u5806"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_27","text":"\u9700\u8981\u4e00\u5b9a\u7684\u6570\u5b66\u8bc1\u660e\uff1a\u5806\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3anlogn","title":"\u5806\u6392\u5e8f"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_28","text":"\u7528\u6700\u5927\u5806\u5b9e\u73b0\u6700\u5927\u4f18\u5148\u961f\u5217 \u4f18\u5148\u961f\u5217\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u6709\u4e00\u4e2a\u76f8\u5173\u7684\u503c\uff0c\u79f0\u4e3a\u5173\u952e\u5b57KEY\uff0c\u6700\u5927\u4f18\u5148\u961f\u5217\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1a insert(s,x):\u628a\u5143\u7d20\u63d2\u5165\u5230\u96c6\u5408x\u4e2d maximum(s):\u8fd4\u56des\u4e2d\u6700\u5927\u5143\u7d20 extract-max(s):\u53bb\u6389\u5e76\u8fd4\u56des\u4e2d\u5177\u6709\u6700\u5927\u5173\u952e\u5b57\u7684\u5143\u7d20 increase-key(s,x,k):\u5c06\u5143\u7d20x\u7684\u5173\u952e\u5b57\u503c\u589e\u52a0\u5230k\uff0c\u5047\u8bbek\u503c\u4e0d\u5c0f\u4e8e\u539f\u6765\u7684\u5173\u952e\u5b57\u503c ** \u63d2\u5165\u5c31\u76f4\u63a5\u5728\u6570\u7ec4\u540e\u65b9\u52a0\u5165\uff0c\u7136\u540e\u6ce8\u610f\u7ef4\u62a4\u5806\u5373\u53ef \u5148\u6539\u53d8A[i]\u7684\u503c\uff0c\u7136\u540e\u5728\u2018\u2019\u539f\u6709\u7684\u6700\u5927\u5806\u2018\u2019\u4e0a\u7ef4\u62a4\u6700\u5927\u5806\u3002","title":"\u4f18\u5148\u961f\u5217"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_29","text":"\u5feb\u901f\u6392\u5e8f\u662f\u5b9e\u9645\u6392\u5e8f\u5e94\u7528\u4e2d\u7684\u6700\u597d\u9009\u62e9\uff0c\u5b83\u7684\u5e73\u5747\u6027\u80fd\u6700\u597d\uff0c\u671f\u671b\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u662f \\(\\Theta(n \\lg n)\\) \uff0c\u4f46\u662f\u9690\u542b\u7684\u5e38\u6570\u56e0\u5b50\u975e\u5e38\u5c0f\uff0c\u4ed6\u4e5f\u80fd\u8fdb\u884c\u539f\u5740\u6392\u5e8f\uff0c\u751a\u81f3\u865a\u62df\u73af\u5883\u4e2d\u4e5f\u80fd\u5f88\u597d\u5730\u5de5\u4f5c\u3002 \u5206\u6cbb\u7684\u601d\u60f3 \u7b97\u6cd5\u53ef\u4ee5\u57fa\u4e8e\u539f\u5740\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u5f52\u5e76\uff0c\u53ea\u9700\u8981\u505a\u597d\u5206\u5272\u5373\u53ef\u3002 \u5206\u5272\u51fd\u6570","title":"\u7b2c\u4e03\u7ae0 \u5feb\u901f\u6392\u5e8f"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_30","text":"\u6700\u574f\u60c5\u51b5\u5212\u5206 \u5982\u679c\u6bcf\u6b21\u5212\u5206\u90fd\u5305\u542b\u4e86n-1\u548c1\u4e2a\u5143\u7d20\uff0c\u90a3\u662f\u6700\u5dee\u7684\u60c5\u51b5\uff0c\u5212\u5206\u64cd\u4f5c\u590d\u6742\u5ea6\u4e3an \u590d\u6742\u5ea6\u7ed3\u679c\u4e3a\uff1a \\(\\Theta\\left(n^{2}\\right)\\) \u6700\u597d\u60c5\u51b5\u5212\u5206 \u590d\u6742\u5ea6\u7ed3\u679c\u4e3a \\(\\Theta(n \\lg n)\\) \u5e73\u8861\u7684\u5212\u5206 \u5feb\u901f\u6392\u5e8f\u7684\u5e73\u5747\u8fd0\u884c\u65f6\u95f4\u66f4\u63a5\u8fd1\u4e8e\u5176\u6700\u597d\u60c5\u51b5\uff0c\u5e76\u975e\u6700\u574f\u60c5\u51b5 \uff08\u4e2a\u4eba\u7406\u89e3\uff1a\u6bcf\u6b21\u5212\u5206\uff0c\u90fd\u5206\u5230\u5230\u6700\u5dee\u60c5\u51b5\u7684\u6982\u7387\u662f\u975e\u5e38\u5c0f\u7684\uff09","title":"\u5feb\u901f\u6392\u5e8f\u7684\u6027\u80fd\u5206\u6790"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_31","text":"\u4e3b\u8981\u4fee\u6539\u662f\u5c06\u4e3b\u5143\u7d20\u968f\u673a\u9009\u53d6 \u63d2\u5165\u6392\u5e8f \u63d2\u5165\u6251\u514b\u724c\u5f0f \u5f52\u5e76\u6392\u5e8f \u5206\u6cbb \u5806\u6392\u5e8f \u6700\u5927\u5806\u7684\u7ef4\u62a4\u59cb\u7ec8\u80fd\u627e\u5230\u6700\u5927\u7684\u5143\u7d20 \u5feb\u901f\u6392\u5e8f \u5206\u5272","title":"\u5feb\u901f\u6392\u5e8f\u7684\u968f\u673a\u5316\u7248\u672c"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_32","text":"\u4e4b\u524d\u63d0\u5230\u7684\u7b97\u6cd5\u90fd\u6709\u4e00\u4e2a\u6027\u8d28\uff1a\u5728\u6392\u5e8f\u7684\u6700\u7ec8\u7ed3\u679c\u4e2d\uff0c\u4e2a\u5143\u7d20\u7684\u6b21\u5e8f\u4f9d\u8d56\u4e8e\u5b83\u4eec\u4e4b\u95f4\u7684\u6bd4\u8f83\u3002 \u6bd4\u8f83\u6392\u5e8f","title":"\u7b2c\u516b\u7ae0 \u7ebf\u6027\u65f6\u95f4\u6392\u5e8f"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_33","text":"\u51b3\u7b56\u6811\u6a21\u578b---\u5b8c\u5168\u4e8c\u53c9\u6811 \u53f6\u8282\u70b9\u5171\u6709n\uff01\u79cd\u53ef\u80fd\u7684\u6392\u5217\u3002","title":"\u6392\u5e8f\u7b97\u6cd5\u7684\u4e0b\u754c"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_34","text":"\u6392\u5e8f\u7b97\u6cd5\u6700\u574f\u60c5\u51b5\u5c31\u662f\u51b3\u7b56\u6811\u7684\u9ad8\u5ea6 \u5b9a\u7406\uff1a \u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u4efb\u4f55\u6bd4\u8f83\u6392\u5e8f\u7b97\u6cd5\u90fd\u9700\u8981 \\(\\Omega(n \\lg n)\\) \u6b21\u6bd4\u8f83 \u5806\u6392\u5e8f\u548c\u5f52\u5e76\u6392\u5e8f\u90fd\u662f\u6e10\u8fdb\u6700\u4f18\u7684\u6392\u5e8f\u7b97\u6cd5","title":"\u6700\u574f\u60c5\u51b5\u7684\u4e0b\u754c"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_35","text":"\u56fe\u89e3\uff1a \u8fd0\u884c\u65f6\u95f4\u4e3a\uff1a \\(\\Theta(n)\\) \u8ba1\u6570\u6392\u5e8f\u7684\u4e00\u4e2a\u91cd\u8981\u6027\u8d28\u5c31\u662f \u7a33\u5b9a \uff0c\u5bf9\u4e8e\u76f8\u540c\u503c\u7684\u5143\u7d20\u5728\u8f93\u51fa\u6570\u7ec4\u4e2d\u7684\u76f8\u5bf9\u6b21\u5e8f\u4e0e\u4ed6\u4eec\u5728\u8f93\u5165\u6570\u7ec4\u4e2d\u7684\u6b21\u5e8f\u76f8\u540c\uff0c\u8fd9\u79cd\u7a33\u5b9a\u6027\u5728\u5f53\u6709\u6570\u636e\u9644\u5e26\u536b\u661f\u6570\u636e\u65f6\u6bd4\u8f83\u91cd\u8981\u3002","title":"\u8ba1\u6570\u6392\u5e8f"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_36","text":"\u4f2a\u4ee3\u7801\uff1a \u5f15\u7406\uff1a \u91c7\u7528\u7a33\u5b9a\u6392\u5e8f\u65b9\u6cd5\uff0c\u6bd4\u5982\u8ba1\u6570\u6392\u5e8f\uff1a \\(\\Theta(d(n+k))\\) \uff0c\u5373\u8fd0\u884cd\u6b21\u8ba1\u6570\u6392\u5e8f\u3002 \u57fa\u6570\u6392\u5e8f\u662f\u5426\u6bd4\u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\u7b97\u6cd5\u66f4\u597d\u5462\uff1f \u57fa\u6570\u6392\u5e8f\u867d\u7136\u6267\u884c\u7684\u5faa\u73af\u8f6e\u6570\u4f1a\u6bd4\u5feb\u901f\u6392\u5e8f\u5c11\uff0c\u4f46\u662f\u6bcf\u4e00\u8f6e\u5b83\u6240\u8017\u8d39\u7684\u65f6\u95f4\u8981\u957f\u7684\u591a\uff0c\u54ea\u4e00\u79cd\u6392\u5e8f\u5408\u9002\u66f4\u4f9d\u8d56\u4e8e\u5177\u4f53\u5b9e\u73b0\u548c\u5e95\u5c42\u7684\u7279\u6027\uff0c\u6bd4\u5982\u5feb\u901f\u6392\u5e8f\u901a\u5e38\u6bd4\u57fa\u6570\u6392\u5e8f\u66f4\u6709\u6548\u5730\u4f7f\u7528\u786c\u4ef6\u7684\u7f13\u5b58\u3002","title":"\u57fa\u6570\u6392\u5e8f"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_37","text":"\u6876\u6392\u5e8f\u5047\u8bbe\u8f93\u5165\u6570\u636e\u670d\u4ece\u5747\u5300\u5206\u5e03\uff0c\u5e73\u5747\u60c5\u51b5\u4e0b\u5b83\u7684\u65f6\u95f4\u4ee3\u4ef7\u4e3a \\(O(n)\\) \u3002","title":"\u6876\u6392\u5e8f"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_38","text":"order statistic \u7b2ci\u4e2a\u987a\u5e8f\u7edf\u8ba1\u91cf\u662f\u8be5\u96c6\u5408\u4e2d\u7b2ci\u4e2a\u5143\u7d20 \u6700\u5927\u503c i = n \u6700\u5c0f\u503c n = 1 n\u4e3a\u5076\u6570\u65f6\u5b58\u5728\u4e24\u4e2a\u4e2d\u4f4d\u6570\uff0c\u4e0b\u4e2d\u4f4d\u6570/\u4e0a\u4e2d\u4f4d\u6570","title":"\u7b2c\u4e5d\u7ae0 \u4e2d\u4f4d\u6570\u548c\u987a\u5e8f\u7edf\u8ba1\u91cf"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_39","text":"\u7ecf\u8fc7n-1\u6b21\u6bd4\u8f83\u627e\u51fa\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c\u3002","title":"\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_40","text":"\u9009\u62e9\u6570\u7ec4\u4e2d\u7b2ci\u5c0f\u7684\u5143\u7d20 \u6b64\u5904\u7684partition\u662f\u5feb\u901f\u6392\u5e8f\u7684\u5206\u5272\uff08\u5206\u6210\u4e09\u6bb5\uff0c\u7b2c\u4e00\u6bb5\u5c0f\u4e8ekey\uff0c\u7b2c\u4e8c\u6bb5\u4e3akey\uff0c\u7b2c\u4e09\u6bb5\u5927\u4e8ekey\uff09","title":"\u671f\u671b\u4e3a\u7ebf\u6027\u65f6\u95f4\u7684\u9009\u62e9\u7b97\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_41","text":"\u6808\uff0c\u961f\u5217\uff0c\u94fe\u8868\uff0c\u6709\u6839\u6811\u3002","title":"\u7b2c\u5341\u7ae0 \u57fa\u672c\u6570\u636e\u7ed3\u6784"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_42","text":"\u6808\u548c\u961f\u5217\u90fd\u662f\u52a8\u6001\u96c6\u5408\uff0c\u5728\u5176\u4e0a\u8fdb\u884cdelete\u64cd\u4f5c\u662f\u9884\u5b9a\u7684\uff1a \u6808\uff1a\u540e\u8fdb\u5148\u51fa \u961f\u5217\uff1a\u5148\u8fdb\u5148\u51fa \u6808 insert\u64cd\u4f5c\u88ab\u79f0\u4e3a\u538b\u5165push delete\u64cd\u4f5c\u88ab\u79f0\u4e3a\u5f39\u51fapop \u961f\u5217 insert: enqueue delete: dequeue","title":"\u6808\u548c\u961f\u5217"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_43","text":"\u53cc\u5411\u94fe\u8868 prev - element - next \u54e8\u5175 L.nil \u7684next \u6307\u5411\u7b2c\u4e00\u4e2a\u5143\u7d20\uff08\u8868\u5934\uff09 L.nil\u7684prev \u6307\u5411\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff08\u8868\u5c3e\uff09 \u6240\u4ee5\u6b64\u5904\u4e0d\u9700\u8981L.head \u53ea\u9700\u8981L.nil.next","title":"\u94fe\u8868"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_44","text":"\u6811\u53ef\u4ee5\u5206\u4e3a\u591a\u79cd\u6811\uff0c\u4e8c\u53c9\u6811\uff0c\u5206\u652f\u65e0\u9650\u5236\u7684\u6709\u6839\u6811\u3002\u3002\u3002\u7b49\u7b49","title":"\u6709\u6839\u6811"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_45","text":"","title":"\u4e8c\u53c9\u6811"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_46","text":"","title":"\u5206\u652f\u65e0\u9650\u5236\u7684\u6709\u6839\u6811"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_47","text":"\u5f85\u5b8c\u6210\u3002\u3002\u3002","title":"\u7b2c\u5341\u4e00\u7ae0 \u6563\u5217\u8868"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_48","text":"","title":"\u7b2c\u5341\u4e8c\u7ae0 \u4e8c\u53c9\u641c\u7d22\u6811"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_49","text":"\u91c7\u7528 \u9012\u5f52 \u7684\u65b9\u5f0f\u8fdb\u884c\u904d\u5386\uff0c\u4e5f\u53ef\u4ee5\u7528 \u6808 \u3002 \u4e0a\u9762\u7684\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u4e3a 2\uff0c5\uff0c5\uff0c6\uff0c7\uff0c8 \u5982\u679c\u60f3\u4e00\u5c42\u5c42\u7684\u904d\u5386\uff0c\u91c7\u7528\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u501f\u7528\u961f\u5217","title":"\u4e2d\u5e8f\u904d\u5386\u3001\u524d\u5e8f\u904d\u5386\uff0c\u540e\u5e8f\u904d\u5386"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_50","text":"dynamic programming \u52a8\u6001\u89c4\u5212 \u7279\u5f81\uff1a \u627e\u7684\u662f\u6700\u4f18\u89e3\u3002 \u6700\u4f18\u5b50\u7ed3\u6784\uff1a\u6700\u4f18\u89e3=f(\u6700\u4f18\u5b50\u7ed3\u6784) \u91cd\u53e0\u5b50\u95ee\u9898\uff1a\u5f53\u5904\u7406\u5b50\u95ee\u9898\u7684\u65f6\u5019\uff0c\u4f1a\u9047\u5230\u91cd\u590d\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u5f52\u5e76\u6392\u5e8f\u5e76\u4e0d\u5c5e\u4e8e\u52a8\u6001\u89c4\u5212\u3002 \u4e24\u79cd\u5b9e\u73b0\u65b9\u6cd5\uff1a \u81ea\u4e0a\u800c\u4e0b\uff1a\u91c7\u7528\u5907\u5fd8\u5f55\u7684\u65b9\u5f0f \u81ea\u4e0b\u800c\u4e0a\uff1a\u6784\u5efa\u8868\u683c\uff0c\u4e5f\u79f0\u4e3a\u7684dp\u6570\u7ec4","title":"\u7b2c\u5341\u4e94\u7ae0 \u52a8\u6001\u89c4\u5212"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_51","text":"\u5199\u51fa\u9012\u5f52\u51fd\u6570\\\u8d1d\u5c14\u66fc\u65b9\u7a0b\\\u6700\u4f18\u89e3\u7684\u7ed3\u6784\u7279\u5f81 \u8ba1\u7b97\u6700\u4f18\u89e3\u7684\u503c\uff0c\u901a\u5e38\u91c7\u7528\u81ea\u5e95\u5411\u4e0a\u7684\u65b9\u6cd5","title":"\u8bbe\u8ba1\u65b9\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_52","text":"","title":"\u81ea\u4e0b\u800c\u4e0a\u7684\u4e00\u7ef4\u6570\u7ec4"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_53","text":"\u627e\u6700\u4f18\u89e3 \u5b58\u5728\u6700\u4f18\u5b50\u7ed3\u6784 \u6b64\u65f6\u5df2\u7ecf\u53ef\u4ee5\u91c7\u7528\u9012\u5f52\u7684\u65b9\u5f0f\u8fdb\u884c\u6c42\u89e3\u4e86\uff0c\u9012\u5f52\u590d\u6742\u5ea6\u592a\u9ad8\u4e86\uff0c\u6307\u6570\u7ea7 3. \u53d1\u73b0\u91cd\u53e0\u5b50\u7ed3\u6784 3. \u52a8\u6001\u89c4\u5212\uff01 3. \u9009\u62e9\uff1a\u81ea\u4e0a\u800c\u4e0b\uff0c\u6216\u8005**\u81ea\u4e0b\u800c\u4e0a** \u9996\u5148\u5199\u51fa\u9012\u5f52\u516c\u5f0f\uff1a $$ r_n = max[p_1+r_{n-1}, p_2+r_{n-2},...,p_n] $$ \u9012\u5f52\u516c\u5f0f\uff0c\u5de6\u8fb9\u7531\u591a\u4e2a\u503c\u8ba1\u7b97\u800c\u6765\uff0c $$ r_1 = p_1 \\ r_2 = r_1 + p_1 \u6216 p_2 \\ r_3 = r_1 + p_2 \u6216 r_2+ p_1 \u6216 p_3 $$ \u53ef\u4ee5\u770b\u5230\uff0cr\u5c31\u662f\u901a\u8fc7\u524d\u9762\u7684\u6570\u7b97\u51fa\u6765\u7684\uff0c\u5c31\u6784\u5efa\u6570\u7ec4\uff0c\u521d\u59cb\u5316 \\(r_1\\) \uff0c\u5f00\u59cb\u5411\u4e0a\u8ba1\u7b97\u3002","title":"\u94a2\u7ba1\u5207\u5272"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_54","text":"\u5bf9\u4e8e\u4e00\u7ef4\u95ee\u9898 $$ f(0:n) = a+f(1:n) $$ \u4e8c\u7ef4\u95ee\u9898\uff1a $$ f(0:n)=f(0:k)+f(k:n) $$","title":"\u81ea\u4e0b\u800c\u4e0a\u7684\u4e8c\u7ef4\u6570\u7ec4"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_55","text":"\u627e\u6700\u4f18\u5316\u65b9\u6848\uff0c\u660e\u786e\u8fd9\u662f\u4e00\u4e2a\u6700\u4f18\u5316\u95ee\u9898\u3002 \u5199\u9012\u5f52\u65b9\u7a0b\uff1a m\u8868\u662fdp\u8868 s\u8868\u7528\u4e8e\u8bb0\u5f55\u6700\u4f73\u5206\u5272\u4f4d\u7f6ek","title":"\u77e9\u9635\u94fe\u4e58"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_56","text":"\u523b\u753b\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u7684\u7279\u5f81 X\u6709 \\(2^m\\) \u4e2a\u5b50\u5e8f\u5217\uff0c\u5168\u90e8\u904d\u5386\u4e00\u8fb9\uff0c\u53ef\u4ee5\u627e\u5230\u6700\u957f\u7684","title":"\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_57","text":"\u6d89\u53ca\u6982\u7387\uff0c\u6709\u70b9\u96be\uff0c\u5f85\u5b8c\u5584\u3002","title":"\u6700\u4f18\u4e8c\u53c9\u641c\u7d22\u6811"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_58","text":"","title":"\u81ea\u4e0a\u800c\u4e0b\u7684\u5907\u5fd8\u5f55\u673a\u5236"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_59","text":"\u56fe\u7684\u8868\u793a\uff1a \u90bb\u63a5\u94fe\u8868 \u5728\u8868\u793a\u7a00\u758f\u56fe\u7684\u65f6\u5019\u975e\u5e38\u9002\u7528 \u90bb\u63a5\u77e9\u9635 \u8868\u793a\u7a20\u5bc6\u56fe\u9002\u7528\uff0c\u53ef\u4ee5\u5feb\u901f\u5224\u65ad\u4e24\u4e2a\u8282\u70b9\u662f\u5426\u5b58\u5728\u8fb9 \u65e0\u8bba\u662f\u6709\u5411\u56fe\u8fd8\u662f\u65e0\u5411\u56fe\uff0c\u90bb\u63a5\u94fe\u8868\u7684\u50a8\u5b58\u7a7a\u95f4\u9700\u6c42\u4e3a\uff1a \\(\\Theta(V+E)\\) \u90bb\u63a5\u94fe\u8868\u7a0d\u52a0\u4fee\u6539\u5373\u53ef\u8868\u793a \u6743\u91cd\u56fe \uff0c\u4e0d\u8db3\u5728\u4e8e\u4e0d\u80fd\u5feb\u901f\u5224\u65ad\u662f\u5426\u5b58\u5728\u67d0\u4e2a\u8fb9\uff0c\u8981\u53bb\u641c\u7d22\u3002 \u90bb\u63a5\u77e9\u9635\u53ef\u4ee5\u5feb\u901f\u5224\u65ad\u662f\u5426\u5b58\u5728\u67d0\u4e2a\u8fb9\uff0c\u4f46\u662f\u50a8\u5b58\u7a7a\u95f4\u8f83\u5927\u3002\u9700\u6c42\u4e3a\uff1a \\(\\Theta\\left(V^{2}\\right)\\) \u65e0\u5411\u56fe\u662f\u5bf9\u79f0\u7684\uff0c\u53ef\u4ee5\u8282\u7ea6\u4e00\u534a\u7684\u7a7a\u95f4\u3002","title":"\u7b2c\u4e8c\u5341\u4e8c\u7ae0 \u56fe\u7b97\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_60","text":"\u5bf9\u4e8e\u90bb\u63a5\u94fe\u8868\u6765\u8bf4\uff1a \u904d\u5386\u6bcf\u4e2a\u7ed3\u70b9\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u8fb9\u8fdb\u884c\u7ffb\u8f6c \u90bb\u63a5\u77e9\u9635 \u4e0a\u4e0b\u4e09\u89d2\u5bf9\u6362\u3002 \u6709\u5411\u65e0\u73af\u56fe","title":"\u4f8b\u9898"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_61","text":"\u8be5\u7b97\u6cd5\u80fd\u591f\u8ba1\u7b97\u8282\u70b9s\u5230\u6bcf\u4e2a\u53ef\u5230\u8fbe\u7684\u7ed3\u70b9\u7684\u8ddd\u79bb\uff08\u6700\u5c11\u7684\u8fb9\u6570\uff09\uff0c\u540c\u65f6\u751f\u6210\u4e00\u9897\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u6811\u3002 s -- v\u7684\u6700\u77ed\u8def\u5f84\u3002 \u5148\u627e\u51fa\u7070\u8272 \u7070\u8272\u4e2d\u9009\u62e9\u4e00\u4e2a\u53d8\u9ed1\uff0c\u53d8\u9ed1\u5143\u7d20\u5468\u56f4\u53d8\u7070 \u518d\u627e\u51fa\u7070\u8272 \u5982\u6b64\u53cd\u590d\u3002 https://www.redblobgames.com/pathfinding/a-star/introduction.html \u53ef\u4ee5\u53c2\u8003\u5b66\u4e60 \u6700\u77ed\u8def\u5f84 \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6700\u77ed\u8def\u5f84\u3002 \u6700\u77ed\u8def\u5f84\u8ddd\u79bb\u7684\u4e00\u4e9b\u6027\u8d28","title":"\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_62","text":"","title":"\u95ee\u9898\uff0c\u81ea\u6d4b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_63","text":"","title":"\u63cf\u8ff0\u5f52\u5e76\u6392\u5e8f"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_64","text":"\u753b\u56fe\u3001\u6570\u5b66\u5f52\u7eb3\u6cd5","title":"\u8bc1\u660e\u5f52\u5e76\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_65","text":"","title":"\u4e8c\u5206\u67e5\u627e\u63cf\u8ff0\uff0c\u590d\u6742\u5ea6"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#xnlogn","text":"\u5f52\u5e76\u6cd5","title":"\u63cf\u8ff0\u4e00\u4e2a\u7b97\u6cd5\uff0c\u6570\u7ec4\u4e2d\u627e\u548c\u4e3ax\u7684\u5143\u7d20\u5bf9\uff0cnlogn"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_66","text":"\u5f52\u5e76\u6cd5","title":"\u9006\u5e8f\u5bf9"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#random01randomabab","text":"\u9996\u5148\uff0crandom(0,1)\u662f\u968f\u673a\u7684\u4ea7\u751f0,1\u4e24\u4e2a\u6574\u6570\uff0crandom(a,b)\u662f\u968f\u673a\u4ea7\u751f[a,b]\u4e4b\u95f4\u7684\u6574\u6570\u3002 \u5b9e\u9645\u4e0a\u8981\u968f\u673a\u751f\u6210\u4e00\u4e2a [0,b-a]\u7684\u6570\uff0c\u6700\u540e\u52a0\u4e0aa\u3002 \u4e3a\u4e86\u751f\u6210\u8fd9\u4e2a\u6570\uff0c\u90a3\u5c31\u8981\u751f\u62102\u8fdb\u5236\u6570\uff0cbits\uff0c\u901a\u8fc7random(0,1\uff09\u751f\u6210\u7684\u4e8c\u8fdb\u5236\u6570\u90fd\u662f\u7b49\u6982\u7387\u7684\u3002 \u6240\u4ee5\u903b\u8f91\u5c31\u662f\uff0c\u7528random(0,1)\u751f\u6210\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570 RANDOM(a, b) range = b - a bits = ceil(log(2, range)) result = 0 for i = 0 to bits - 1 r = RANDOM(0, 1) result = result + r << i if result > range return RANDOM(a, b) else return a + result","title":"\u5982\u679c\u53ea\u80fd\u8c03\u7528random(0,1)\uff0c\u5982\u4f55\u505a\u5230random(a,b),\u8fd4\u56deab\u4e4b\u95f4\u7684\u6574\u6570\u3001"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#n2","text":"\u96c7\u4f63\u4e00\u6b21\uff0c\u6700\u725b\u7684\u5728\u7b2c\u4e00\uff0c\u6240\u4ee5 \\(\\frac{(n-1) !}{n !}=\\frac{1}{n}\\) \u96c7\u4f63n\u6b21\uff0c\u5c31\u662f\u6bcf\u4e2a\u90fd\u96c7\u4f63\uff0c\u987a\u5e8f\u5c31\u662f1\uff0c2\uff0c3\uff0c4\uff0c..n.\u6240\u4ee5 \\(\\frac{1}{n !}\\) \u96c7\u4f632\u6b21\uff1a \u7b2c\u4e00\u4e2a\u4eba\u80af\u5b9a\u96c7\u4f63 \u80fd\u529b\u6700\u5f3a\u7684\u4eba\u80af\u5b9a\u96c7\u4f63 \u5982\u679c\u8bf4\u6700\u5f3a\u7684\u4eba\u5728\u7b2c\u4e00\u4e2a\uff0c\u90a3\u4e48\u53ea\u4f1a\u96c7\u4f63\u4e00\u6b21 \u8bb0\u7b2c\u4e00\u4e2a\u4eba\u7684\u80fd\u529b\u4e3a \\(rank_i\\) \uff0c\u7136\u540e \\(rank_{i+1},...,rank_{n-1}\\) (\u6bd4\u7b2c\u4e00\u540d\u5f3a\u7684\u4eba)\u8981\u5728\u7b2c\u4e00\u540d \\(rank_{n}\\) \u4e4b\u540e\u9762\u8bd5 \\(P(E_{i})=1/n\\) \u4e3a \u7b2c\u4e00\u540d\u6392\u540d\u4e3a \\(rank_i\\) \u7684\u6982\u7387 $$ \\sum_{i=1}^{n-1} P\\left(E_{i}\\right) \\cdot \\frac{1}{n-i}=\\sum_{i=1}^{n-1} \\frac{1}{n} \\cdot \\frac{1}{n-i} $$","title":"\u5728\u96c7\u4f63\u95ee\u9898\u4e2d\uff0c\u6b63\u597d\u96c7\u4f63\u4e00\u6b21\u7684\u6982\u7387\u662f\u591a\u5c11\uff0c\u96c7\u4f63n\u6b21\u662f\u591a\u5c11\uff1f\u96c7\u4f632\u6b21"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#n","text":"\\(X_i\\) \u7b2ci\u4e2a\u9ab0\u5b50\u7684\u503c \\(sum=\\sum_{i=1}^n X_i\\) \\(E(sum)=E(\\sum_{i=1}^n X_i)=\\sum_{i=1}^nE(X_i)=3.5n\\)","title":"\u63b7n\u4e2a\u9ab0\u5b50\uff0c\u548c\u7684\u671f\u671b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_67","text":"n\u4e2a\u5ba2\u6237\uff0c\u6bcf\u4e2a\u4eba\u7ed9\u670d\u52a1\u751f\u4e00\u9876\u5e3d\u5b50\uff0c\u670d\u52a1\u751f\u628a\u5e3d\u5b50\u4ee5\u968f\u673a\u987a\u5e8f\u8fd8\u7ed9\u5ba2\u6237\uff0c\u8bf7\u95ee\u62ff\u5230\u81ea\u5df1\u5e3d\u5b50\u7684\u5ba2\u6237\u6570\u76ee\u7684\u671f\u671b\uff1f \\(X_i\\) \u7b2c i \u4e2a\u5ba2\u6237\u62ff\u5230\u81ea\u5df1\u7684\u5e3d\u5b50 \u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u4eba\u62ff\u5230\u81ea\u5df1\u5e3d\u5b50\u7684\u6982\u7387P = \u7b2c\u4e00\u4e2a\u4eba\u62ff\u5230\u7b2c\u4e8c\u4e2a\u4eba\u7684\u5e3d\u5b50\u7684\u6982\u7387(1/n) * 0 + \u7b2c\u4e00\u4e2a\u4eba\u6ca1\u62ff\u5230\u7b2c\u4e8c\u4e2a\u4eba\u7684\u5e3d\u5b50\u7684\u6982\u7387(n-1)/n * (1/n-1) = 1/n\uff0c \u7c7b\u6bd4\u7740\uff0c\u4e0d\u7ba1\u6309\u7167\u4ec0\u4e48\u987a\u5e8f\uff0c\u6bcf\u4e2a\u4eba\u62ff\u5230\u81ea\u5df1\u5e3d\u5b50\u7684\u6982\u7387\u90fd\u662f1/n\uff0c \u8fd9\u662f\u53e4\u5178\u6982\u578b\u3002 \\(P(X_i)=1/n\\) \\(E\\left[\\sum_{i=1}^{n} X_{i}\\right]=\\sum_{i=1}^{n} E\\left[X_{i}\\right]=\\sum_{i=1}^{n} \\frac{1}{n}=1\\)","title":"\u5e3d\u5b50\u6838\u5bf9\u95ee\u9898"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_68","text":"https://walkccc.me/CLRS/Chap05/5.2/ $$ \\begin{aligned} \\mathrm{E}\\left[\\sum_{i<j} X_{i, j}\\right] &=\\sum_{i A[j]} \\ &=\\frac{1}{2} \\sum_{i=1}^{n-1} n-i \\ &=\\frac{n(n-1)}{2}-\\frac{n(n-1)}{4} \\ &=\\frac{n(n-1)}{4} . \\end{aligned} $$","title":"\u9006\u5e8f\u5bf9\u6570\u76ee\u7684\u671f\u671b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#h","text":"\u9996\u5148\u8981\u660e\u767d\u5806\u7684\u5b9a\u4e49\uff0c\u662f\u4e00\u4e2a\u8fd1\u4f3c\u7684\u5b8c\u5168\u4e8c\u53c9\u6811 \u7b49\u6bd4\u6570\u5217\u6c42\u548c \\(S_{n}=a_{1} \\frac{1-q^{n}}{1-q}\\) \u5bf9\u4e8e\u4e00\u4e2a\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u9ad8\u5ea6h-1\uff0c\u90a3\u4e48\u5b83\u7684\u5143\u7d20\u4e2a\u6570\u4e3a \\(1+2+4+8+...+2^{h-1}\\) \u6c42\u548c\u4e3a \\(2^{h}-1\\) \u90a3\u4e48\u4e00\u4e2a\u9ad8\u5ea6\u4e3ah\u7684\u5806\uff0c\u653e\u6ee1\u4e86\u4e3a \\(2^{h+1}-1\\) \u524d\u4e00\u884c\u653e\u6ee1\uff0c\u7b2ch\u884c\u653e\u4e00\u4e2a\uff0c\u5219\u4e3a\uff1a \\(2^{h}\\)","title":"\u9ad8\u5ea6\u4e3ah\u7684\u5806\uff0c\u6700\u591a\u591a\u5c11\u4e2a\u5143\u7d20\uff1f"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#n_1","text":"\u7531\u4e0a\u9898\u76ee\u53ef\u77e5\uff0ch\u9ad8\u5ea6\uff0c\u6700\u591a \\(2^{h+1}-1\\) \u4e2a\u5143\u7d20\uff0c\u6700\u5c11 \\(2^{h}\\) \u6240\u4ee5n\u4e2a\u5143\u7d20\uff0c\u9ad8\u5ea6\u4e3a \\(\\lfloor\\lg n\\rfloor\\)","title":"\u542b\u6709n\u4e2a\u5143\u7d20\u7684\u5806\u7684\u9ad8\u5ea6"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_69","text":"\u5806\u6570\u7ec4\u7684\u540e\u534a\u90e8\u5206","title":"\u6700\u5927\u5806\u7684\u6700\u5c0f\u5143\u7d20\u5728\u54ea\uff1f"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_70","text":"\u662f\uff0cparent[i]< left[2i],parent[i]< right[2i+1]","title":"\u5df2\u7ecf\u6392\u597d\u5e8f\u7684\u6570\u7ec4\uff0c\u662f\u6700\u5c0f\u5806\u5417\uff1f"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_71","text":"\u5bf9\u4e8e\u4e8c\u53c9\u6811\u7684\u5904\u7406\uff0c\u7531\u4e24\u79cd\u601d\u7ef4\u6a21\u5f0f\uff1a \u904d\u5386\u4e00\u8fb9\u4e8c\u53c9\u6811\u89e3\u51b3\u95ee\u9898\uff1b \u901a\u8fc7\u5b50\u6811\u7684\u7b54\u6848\u6765\u7ed3\u51b3\u95ee\u9898\u3002 \u4e00\u5b9a\u9700\u8981\u601d\u8003\u7684\u95ee\u9898\uff1a \u53ea\u7ed9\u4f60\u4e00\u4e2a\u4e8c\u53c9\u8282\u70b9\uff0c\u4f60\u8981\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462 \uff1f","title":"\u4e8c\u53c9\u6811\u7684\u7406\u89e3"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_72","text":"def traverse(node): \"\"\" \u540e\u5e8f\u904d\u5386 \"\"\" traverse(node.left) traverse(node.right) print(node.val) \u6811\u53ef\u4ee5\u88ab\u524d\u4e2d\u540e\u5e8f\u904d\u5386\uff0c\u540c\u6837\u7684\uff0c\u94fe\u8868\u4e5f\u53ef\u4ee5\u88ab \u524d\u3001\u540e\u5e8f\u904d\u5386 \u3002 \u601d\u8003\uff1a\u5982\u4f55\u4ece\u540e\u9762\u5f00\u59cb\u6253\u5370\u94fe\u8868\u5462\uff1f \u7b54\uff1a\u94fe\u8868\u7684\u540e\u5e8f\u904d\u5386\u3002 \u4efb\u4f55\u9012\u5f52\u64cd\u4f5c\u90fd\u53ef\u4ee5\u88ab\u7406\u89e3\u4e3a\u524d\u4e2d\u540e\u5e8f\u904d\u5386\u3002 \u524d\u4e2d\u540e\u5e8f\u904d\u5386\u662f\u4e8c\u53c9\u6811\u6811\u5904\u7406\u8fc7\u7a0b\u4e2d\u7684\u65f6\u95f4\u8282\u70b9 \uff01 \u524d\u5e8f\u4f4d\u7f6e\u7684\u4ee3\u7801\u5728\u521a\u521a\u8fdb\u5165\u4e00\u4e2a\u4e8c\u53c9\u6811\u8282\u70b9\u7684\u65f6\u5019\u6267\u884c\uff1b \u540e\u5e8f\u4f4d\u7f6e\u7684\u4ee3\u7801\u5728\u5c06\u8981\u79bb\u5f00\u4e00\u4e2a\u4e8c\u53c9\u6811\u8282\u70b9\u7684\u65f6\u5019\u6267\u884c\uff1b \u4e2d\u5e8f\u4f4d\u7f6e\u7684\u4ee3\u7801\u5728\u4e00\u4e2a\u4e8c\u53c9\u6811\u8282\u70b9\u5de6\u5b50\u6811\u90fd\u904d\u5386\u5b8c\uff0c\u5373\u5c06\u5f00\u59cb\u904d\u5386\u53f3\u5b50\u6811\u7684\u65f6\u5019\u6267\u884c\u3002 \u8fd9\u4e09\u70b9\u7684\u7406\u89e3\u5bf9\u4e8e\u56de\u6eaf\u7b49\u7b97\u6cd5\u7684\u7406\u89e3\u975e\u5e38\u91cd\u8981\u3002 \u524d\u5e8f\u4f4d\u7f6e\u53ef\u4ee5\u505a\u68c0\u67e5\uff1b \u540e\u7eed\u4f4d\u7f6e\u53ef\u4ee5\u505a\u8bb0\u5fc6\uff1b \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5bf9\u4f4d\u7f6e\u4e0d\u654f\u611f\u7684\u64cd\u4f5c\u90fd\u653e\u5728\u524d\u5e8f\u4f4d\u7f6e\uff1b\u540e\u7eed\u4f4d\u7f6e\u53ef\u4ee5\u83b7\u5f97\u5b50\u6811\u7684\u4fe1\u606f\u3002 \u7ec3\u4e60\uff1ahttps://leetcode-cn.com/problems/flatten-binary-tree-to-linked-list/ \u4e3b\u8981\u7684\u64cd\u4f5c\u5728\u540e\u5e8f\u4e0a\u3002 \u7ec3\u4e60\uff1ahttps://leetcode-cn.com/problems/kth-smallest-element-in-a-bst/ \u4e8c\u53c9\u641c\u7d22\u6811\u7b2ck\u5c0f\u7684\u5143\u7d20 \u4e8c\u53c9\u641c\u7d22\u6811\u5177\u6709\u5982\u4e0b\u6027\u8d28\uff1a \u7ed3\u70b9\u7684\u5de6\u5b50\u6811\u53ea\u5305\u542b \u5c0f\u4e8e \u5f53\u524d\u7ed3\u70b9\u7684\u6570\u3002 \u7ed3\u70b9\u7684\u53f3\u5b50\u6811\u53ea\u5305\u542b \u5927\u4e8e \u5f53\u524d\u7ed3\u70b9\u7684\u6570\u3002 \u6240\u6709\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u81ea\u8eab\u5fc5\u987b\u4e5f\u662f\u4e8c\u53c9\u641c\u7d22\u6811\u3002 \u6700\u91cd\u8981\u7684\u662f\uff0c \u4e8c\u53c9\u641c\u7d22\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u5c31\u662f\u5347\u5e8f\u7684 \uff01\uff01\uff01\uff01","title":"\u5982\u4f55\u7406\u89e3\u524d\u4e2d\u540e\u5e8f\u904d\u5386\uff1f"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8%E3%80%8B/","text":"\u300a\u7ebf\u6027\u4ee3\u6570\u53ca\u5176\u5e94\u7528\u300b \u7ebf\u6027\u4ee3\u6570\u662f\u4e00\u4e2a\u201c \u6298\u817e \u201d\u77e9\u9635\u3001\u65b9\u7a0b\u7684\u79d1\u5b66\uff0c\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u6765\u6316\u6398\u5173\u4e8e\u65b9\u7a0b\u7684\u201c \u4fe1\u606f \u201d\u3002 \u7ebf\u6027\u4ee3\u6570\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u79cd\u7279\u5f81\u5de5\u7a0b\uff0c\u5404\u79cd\u5404\u6837\u7684\u7279\u5f81\u5bfc\u81f4\u8fd9\u672c\u4e66 \u6982\u5ff5 \u504f\u591a\u3002 \u6b64\u6b21\u7b14\u8bb0\u662f\u4e3a\u4e86 \u5feb\u901f\u56de\u987e \u7ebf\u6027\u4ee3\u6570\u7684\u57fa\u672c\u6982\u5ff5\u4ee5\u53ca \u77e5\u8bc6\u5e94\u7528 \u573a\u666f\u3002 \u76ee\u5f55 \u603b\u89c8\u3001\u590d\u4e60\u76f8\u5173\u7684\u91cd\u8981\u6982\u5ff5\uff1a \u7ebf\u6027\u65b9\u7a0b\u7ec4 \u7cfb\u6570\u77e9\u9635 \u589e\u5e7f\u77e9\u9635 \u9636\u68af\u5f62\u77e9\u9635 \u7b80\u5316\u9636\u68af\u5f62 \u4e3b\u5143 \u57fa\u672c\u53d8\u91cf\u3001\u81ea\u7531\u53d8\u91cf \u77e9\u9635\u7684\u9006 \u7ef4\u6570\u4e0e\u79e9 \u5411\u91cf \u7279\u5f81\u503c\u4e0e\u7279\u5f81\u5411\u91cf \u7ebf\u6027\u65b9\u7a0b\u7ec4 \u7528\u77e9\u9635\u6765\u5c55\u793a\u7ebf\u6027\u65b9\u7a0b\u7ec4\u7684\u4fe1\u606f\uff0c\u8fd9\u6837\u7684\u77e9\u9635\u6709\uff1a \u7cfb\u6570\u77e9\u9635 \u589e\u5e7f\u77e9\u9635 \u4e3a\u4e86\u89e3\u7ebf\u6027\u65b9\u7a0b\uff0c\u6211\u4eec\u5e38\u7528 \u884c\u5316\u7b80\u7b97\u6cd5 \uff0c\u5728\u6b64\uff0c\u5c06\u8fd9\u79cd\u64cd\u4f5c\u65b9\u5f0f\u4e00\u822c\u5316\uff0c\u53ef\u4ee5\u5f97\u5230\u6982\u5ff5\uff1a \u9636\u68af\u5f62\u77e9\u9635 \u7b80\u5316\u9636\u68af\u5f62 \u4e3b\u5143 \u57fa\u672c\u53d8\u91cf\u3001\u81ea\u7531\u53d8\u91cf \u5411\u91cf\u65b9\u7a0b \u5411\u91cf\u5728\u6df1\u5ea6\u5b66\u4e60\u9886\u57df\u7ecf\u5e38\u5e94\u7528\uff0c\u672c\u8d28\u4e0a\u5b83\u4e5f\u662f\u4e00\u79cd\u77e9\u9635\u3002 \u5411\u91cf\uff1a\u4ec5\u6709\u4e00\u5217\u7684\u77e9\u9635\u3002 \u5b9a\u4e49\uff1a \u5411\u91cf\u7684\u8fd0\u7b97\uff1a \u901a\u8fc7\u5411\u91cf\uff0c\u53ef\u4ee5\u5c06\u4e4b\u524d\u7684\u7ebf\u6027\u65b9\u7a0b\u7ec4\u5199\u4e3a\uff1a \u8fd9\u6837\u7684\u8bdd\uff0c\u7ebf\u6027\u65b9\u7a0b\u53d8\u5f97\u66f4\u52a0\u7b80\u6d01\uff1a $$ A = [a_1,a_2,...,a_n]\\ x = [x_1,x_2,...,x_n]^T\\ b = [b_1,b_2,...,b_n]^T\\ Ax=b $$ \u5bf9\u4e8e\u5411\u91cf\u65b9\u7a0b\u6765\u8bf4\uff0c\u6709\u4ee5\u4e0b\u6982\u5ff5\uff1a \u5411\u91cf \u6807\u91cf \u5411\u91cf\u7684\u52a0\u6cd5\uff08\u5e73\u884c\u56db\u8fb9\u5f62\u6cd5\u5219\uff09 \u7ebf\u6027\u7ec4\u5408 \\(span(v_1,v_2,...,v_n)\\) \u662f\u5411\u91cf\u5f20\u6210\u7684\u96c6\u5408 \u7ebf\u6027\u65e0\u5173 \u7ebf\u6027\u53d8\u6362 \u5bf9\u4e8e $$ Ax=b $$ \u8fd9\u4e2a\u65b9\u7a0b\u7684\u7814\u7a76\u4e0d\u4ec5\u4ec5\u62d8\u6ce5\u4e8e\u7ebf\u6027\u65b9\u7a0b\u7ec4\uff0c\u4ed6\u53ef\u4ee5\u884d\u751f\u5230\u5404\u79cd\u9886\u57df\u3002\u5728\u6b64\u5c06\u8fd9\u4e2a\u65b9\u7a0b\u7406\u89e3\u4e3a\uff1a \u5c06 \\(A\\) \u901a\u8fc7\u4e58\u6cd5\u65bd\u52a0\u5230\u5411\u91cf \\(x\\) \u4e0a\uff0c\u5f97\u5230\u5411\u91cf \\(b\\) \uff0c\u53ef\u4ee5\u79f0\u4e4b\u4e3a\u7ebf\u6027\u53d8\u6362\u3002 \u77e9\u9635\u4ee3\u6570 \\[ Ax=b\\\\ Bb=B(Ax)=BAx \\] \u5982\u679c\u5bf9 \\(x\\) \u65bd\u52a0\u4e24\u6b21\u7ebf\u6027\u53d8\u6362\uff0c\u90a3\u4e48\u5c06\u5f97\u5230BA\uff0c\u8fd9\u4e24\u6b21\u7ebf\u6027\u53d8\u6362\u7684\u53e0\u52a0\u8be5\u5982\u4f55\u5904\u7406\u5462\uff1f\u6240\u4ee5\u9700\u8981\u5bf9\u77e9\u9635\u4ee3\u6570\u5f00\u59cb\u5b9a\u4e49\u3002 \u6807\u91cf\u4e58\u6cd5 \u77e9\u9635\u4e58\u6cd5 \u77e9\u9635\u7684\u4e58\u5e42 \u77e9\u9635\u7684\u8f6c\u7f6e \u77e9\u9635\u7684\u9006 \u53ef\u9006\u77e9\u9635 \u5982\u679c\u4e00\u4e2a\u77e9\u9635\u53ef\u9006\uff0c\u90a3\u4e48\u5b83\u5177\u6709\u975e\u5e38\u591a\u6709\u4ef7\u503c\u7684\u201c\u4fe1\u606f\u201d\u3002 \u6c42\u9006\u77e9\u9635 \u5bf9\u4e8e\u8ba1\u7b97\u673a\u6765\u8bf4\uff0c\u7531\u4e8e\u8ba1\u7b97\u7684\u820d\u5165\u8bef\u5dee\uff0c\u4f1a\u5bfc\u81f4\u884c\u53d8\u6362\u7684\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u5c0f\u4e8en\u4e2a\u4e3b\u5143\u4f4d\u7f6e\uff0c\u5bfc\u81f4\u77e9\u9635\u4e0d\u53ef\u9006\u3002\u540c\u65f6\u4e5f\u53ef\u80fd\u8ba9\u5947\u5f02\u77e9\u9635\u53d8\u5f97\u53ef\u9006\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u8981\u8ba1\u7b97\u77e9\u9635\u7684\u6761\u4ef6\u6570\uff0c\u6761\u4ef6\u6570\u592a\u5927\u5219\u8bf4\u660e\u8ba1\u7b97\u53ef\u80fd\u53d1\u751f\u9519\u8bef\u3002 \u77e9\u9635\u7684\u56e0\u5f0f\u5206\u89e3 \\[ A=BC \\] \u6709\u65f6\u5019\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3\u67d0\u4e00\u79cd\u201c\u4f5c\u7528\u201d, \u9700\u8981\u628a\u77e9\u9635\u8fdb\u884c\u5206\u89e3\u3002 LU\u5206\u89e3 \u6682\u65f6\u4e0d\u8be6\u7ec6\u4e86\u89e3\u3002 \u7279\u5f81\u5411\u91cf\u4e0e\u7279\u5f81\u503c \\[ Ax=b \\] \u5bf9\u4e8e\u8fd9\u6837\u7684\u4f5c\u7528\uff0c\u6211\u4eec\u5982\u4f55 \u5206\u6790A \u4ee5\u201c\u9884\u6d4b\u201d\u4f5c\u7528\u540e\u7684\u7ed3\u679c\u5462\uff1f \u7279\u5f81\u503c $$ Ax = \\lambda x $$ A\u53d1\u6325\u7684\u4f5c\u7528\u4ec5\u4ec5\u662f\u62c9\u4f38x\uff0c\u6240\u4ee5\u8bf4 \\(\\lambda\\) \u662fA\u7684\u7279\u5f81\u503c\uff0cx\u662f\u7279\u5f81\u5411\u91cf \u5bf9\u4e8eA\u6765\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u80fd\u627e\u5230\u5b83\u7684\u7279\u5f81\u503c\u3002","title":"\u300a\u7ebf\u6027\u4ee3\u6570\u53ca\u5176\u5e94\u7528\u300b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8%E3%80%8B/#_1","text":"\u7ebf\u6027\u4ee3\u6570\u662f\u4e00\u4e2a\u201c \u6298\u817e \u201d\u77e9\u9635\u3001\u65b9\u7a0b\u7684\u79d1\u5b66\uff0c\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u6765\u6316\u6398\u5173\u4e8e\u65b9\u7a0b\u7684\u201c \u4fe1\u606f \u201d\u3002 \u7ebf\u6027\u4ee3\u6570\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u79cd\u7279\u5f81\u5de5\u7a0b\uff0c\u5404\u79cd\u5404\u6837\u7684\u7279\u5f81\u5bfc\u81f4\u8fd9\u672c\u4e66 \u6982\u5ff5 \u504f\u591a\u3002 \u6b64\u6b21\u7b14\u8bb0\u662f\u4e3a\u4e86 \u5feb\u901f\u56de\u987e \u7ebf\u6027\u4ee3\u6570\u7684\u57fa\u672c\u6982\u5ff5\u4ee5\u53ca \u77e5\u8bc6\u5e94\u7528 \u573a\u666f\u3002","title":"\u300a\u7ebf\u6027\u4ee3\u6570\u53ca\u5176\u5e94\u7528\u300b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8%E3%80%8B/#_2","text":"\u603b\u89c8\u3001\u590d\u4e60\u76f8\u5173\u7684\u91cd\u8981\u6982\u5ff5\uff1a \u7ebf\u6027\u65b9\u7a0b\u7ec4 \u7cfb\u6570\u77e9\u9635 \u589e\u5e7f\u77e9\u9635 \u9636\u68af\u5f62\u77e9\u9635 \u7b80\u5316\u9636\u68af\u5f62 \u4e3b\u5143 \u57fa\u672c\u53d8\u91cf\u3001\u81ea\u7531\u53d8\u91cf \u77e9\u9635\u7684\u9006 \u7ef4\u6570\u4e0e\u79e9 \u5411\u91cf \u7279\u5f81\u503c\u4e0e\u7279\u5f81\u5411\u91cf","title":"\u76ee\u5f55"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8%E3%80%8B/#_3","text":"\u7528\u77e9\u9635\u6765\u5c55\u793a\u7ebf\u6027\u65b9\u7a0b\u7ec4\u7684\u4fe1\u606f\uff0c\u8fd9\u6837\u7684\u77e9\u9635\u6709\uff1a \u7cfb\u6570\u77e9\u9635 \u589e\u5e7f\u77e9\u9635 \u4e3a\u4e86\u89e3\u7ebf\u6027\u65b9\u7a0b\uff0c\u6211\u4eec\u5e38\u7528 \u884c\u5316\u7b80\u7b97\u6cd5 \uff0c\u5728\u6b64\uff0c\u5c06\u8fd9\u79cd\u64cd\u4f5c\u65b9\u5f0f\u4e00\u822c\u5316\uff0c\u53ef\u4ee5\u5f97\u5230\u6982\u5ff5\uff1a \u9636\u68af\u5f62\u77e9\u9635 \u7b80\u5316\u9636\u68af\u5f62 \u4e3b\u5143 \u57fa\u672c\u53d8\u91cf\u3001\u81ea\u7531\u53d8\u91cf","title":"\u7ebf\u6027\u65b9\u7a0b\u7ec4"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8%E3%80%8B/#_4","text":"\u5411\u91cf\u5728\u6df1\u5ea6\u5b66\u4e60\u9886\u57df\u7ecf\u5e38\u5e94\u7528\uff0c\u672c\u8d28\u4e0a\u5b83\u4e5f\u662f\u4e00\u79cd\u77e9\u9635\u3002 \u5411\u91cf\uff1a\u4ec5\u6709\u4e00\u5217\u7684\u77e9\u9635\u3002 \u5b9a\u4e49\uff1a \u5411\u91cf\u7684\u8fd0\u7b97\uff1a \u901a\u8fc7\u5411\u91cf\uff0c\u53ef\u4ee5\u5c06\u4e4b\u524d\u7684\u7ebf\u6027\u65b9\u7a0b\u7ec4\u5199\u4e3a\uff1a \u8fd9\u6837\u7684\u8bdd\uff0c\u7ebf\u6027\u65b9\u7a0b\u53d8\u5f97\u66f4\u52a0\u7b80\u6d01\uff1a $$ A = [a_1,a_2,...,a_n]\\ x = [x_1,x_2,...,x_n]^T\\ b = [b_1,b_2,...,b_n]^T\\ Ax=b $$ \u5bf9\u4e8e\u5411\u91cf\u65b9\u7a0b\u6765\u8bf4\uff0c\u6709\u4ee5\u4e0b\u6982\u5ff5\uff1a \u5411\u91cf \u6807\u91cf \u5411\u91cf\u7684\u52a0\u6cd5\uff08\u5e73\u884c\u56db\u8fb9\u5f62\u6cd5\u5219\uff09 \u7ebf\u6027\u7ec4\u5408 \\(span(v_1,v_2,...,v_n)\\) \u662f\u5411\u91cf\u5f20\u6210\u7684\u96c6\u5408 \u7ebf\u6027\u65e0\u5173","title":"\u5411\u91cf\u65b9\u7a0b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8%E3%80%8B/#_5","text":"\u5bf9\u4e8e $$ Ax=b $$ \u8fd9\u4e2a\u65b9\u7a0b\u7684\u7814\u7a76\u4e0d\u4ec5\u4ec5\u62d8\u6ce5\u4e8e\u7ebf\u6027\u65b9\u7a0b\u7ec4\uff0c\u4ed6\u53ef\u4ee5\u884d\u751f\u5230\u5404\u79cd\u9886\u57df\u3002\u5728\u6b64\u5c06\u8fd9\u4e2a\u65b9\u7a0b\u7406\u89e3\u4e3a\uff1a \u5c06 \\(A\\) \u901a\u8fc7\u4e58\u6cd5\u65bd\u52a0\u5230\u5411\u91cf \\(x\\) \u4e0a\uff0c\u5f97\u5230\u5411\u91cf \\(b\\) \uff0c\u53ef\u4ee5\u79f0\u4e4b\u4e3a\u7ebf\u6027\u53d8\u6362\u3002","title":"\u7ebf\u6027\u53d8\u6362"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8%E3%80%8B/#_6","text":"\\[ Ax=b\\\\ Bb=B(Ax)=BAx \\] \u5982\u679c\u5bf9 \\(x\\) \u65bd\u52a0\u4e24\u6b21\u7ebf\u6027\u53d8\u6362\uff0c\u90a3\u4e48\u5c06\u5f97\u5230BA\uff0c\u8fd9\u4e24\u6b21\u7ebf\u6027\u53d8\u6362\u7684\u53e0\u52a0\u8be5\u5982\u4f55\u5904\u7406\u5462\uff1f\u6240\u4ee5\u9700\u8981\u5bf9\u77e9\u9635\u4ee3\u6570\u5f00\u59cb\u5b9a\u4e49\u3002 \u6807\u91cf\u4e58\u6cd5 \u77e9\u9635\u4e58\u6cd5 \u77e9\u9635\u7684\u4e58\u5e42 \u77e9\u9635\u7684\u8f6c\u7f6e \u77e9\u9635\u7684\u9006","title":"\u77e9\u9635\u4ee3\u6570"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8%E3%80%8B/#_7","text":"\u5982\u679c\u4e00\u4e2a\u77e9\u9635\u53ef\u9006\uff0c\u90a3\u4e48\u5b83\u5177\u6709\u975e\u5e38\u591a\u6709\u4ef7\u503c\u7684\u201c\u4fe1\u606f\u201d\u3002 \u6c42\u9006\u77e9\u9635 \u5bf9\u4e8e\u8ba1\u7b97\u673a\u6765\u8bf4\uff0c\u7531\u4e8e\u8ba1\u7b97\u7684\u820d\u5165\u8bef\u5dee\uff0c\u4f1a\u5bfc\u81f4\u884c\u53d8\u6362\u7684\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u5c0f\u4e8en\u4e2a\u4e3b\u5143\u4f4d\u7f6e\uff0c\u5bfc\u81f4\u77e9\u9635\u4e0d\u53ef\u9006\u3002\u540c\u65f6\u4e5f\u53ef\u80fd\u8ba9\u5947\u5f02\u77e9\u9635\u53d8\u5f97\u53ef\u9006\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u8981\u8ba1\u7b97\u77e9\u9635\u7684\u6761\u4ef6\u6570\uff0c\u6761\u4ef6\u6570\u592a\u5927\u5219\u8bf4\u660e\u8ba1\u7b97\u53ef\u80fd\u53d1\u751f\u9519\u8bef\u3002","title":"\u53ef\u9006\u77e9\u9635"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8%E3%80%8B/#_8","text":"\\[ A=BC \\] \u6709\u65f6\u5019\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3\u67d0\u4e00\u79cd\u201c\u4f5c\u7528\u201d, \u9700\u8981\u628a\u77e9\u9635\u8fdb\u884c\u5206\u89e3\u3002 LU\u5206\u89e3 \u6682\u65f6\u4e0d\u8be6\u7ec6\u4e86\u89e3\u3002","title":"\u77e9\u9635\u7684\u56e0\u5f0f\u5206\u89e3"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8%E3%80%8B/#_9","text":"\\[ Ax=b \\] \u5bf9\u4e8e\u8fd9\u6837\u7684\u4f5c\u7528\uff0c\u6211\u4eec\u5982\u4f55 \u5206\u6790A \u4ee5\u201c\u9884\u6d4b\u201d\u4f5c\u7528\u540e\u7684\u7ed3\u679c\u5462\uff1f \u7279\u5f81\u503c $$ Ax = \\lambda x $$ A\u53d1\u6325\u7684\u4f5c\u7528\u4ec5\u4ec5\u662f\u62c9\u4f38x\uff0c\u6240\u4ee5\u8bf4 \\(\\lambda\\) \u662fA\u7684\u7279\u5f81\u503c\uff0cx\u662f\u7279\u5f81\u5411\u91cf \u5bf9\u4e8eA\u6765\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u80fd\u627e\u5230\u5b83\u7684\u7279\u5f81\u503c\u3002","title":"\u7279\u5f81\u5411\u91cf\u4e0e\u7279\u5f81\u503c"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/","text":"\u300a\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u300b [toc] \u7edf\u8ba1\u5b66\u4e60 \u4ee5\u8ba1\u7b97\u673a\u548c\u7f51\u7edc\u4e3a\u5e73\u53f0 \u5bf9\u8c61\uff1a\u6570\u636e\u4e3a\u7814\u7a76\u5bf9\u8c61 \u76ee\u7684\uff1a\u5bf9\u6570\u636e\u8fdb\u884c\u9884\u6d4b\u548c\u5206\u6790 \u65b9\u6cd5\uff1a\u6784\u5efa\u6a21\u578b \u591a\u5b66\u79d1\u4ea4\u53c9 \u57fa\u672c\u5047\u8bbe\uff1a\u540c\u7c7b\u6570\u636e\u5177\u6709\u4e00\u5b9a\u7684\u7edf\u8ba1\u89c4\u5f8b\u6027\u3002 \u65b9\u6cd5\uff1a\u57fa\u4e8e\u6570\u636e\u6784\u5efa\u7edf\u8ba1\u6a21\u578b\u4ece\u800c\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u6790\u4e0e\u9884\u6d4b\u3002 \u76d1\u7763\u5b66\u4e60 \u975e\u76d1\u7763\u5b66\u4e60 \u534a\u76d1\u7763\u5b66\u4e60 \u5f3a\u5316\u5b66\u4e60 \u6982\u62ec\uff1a \u4ece\u7ed9\u5b9a\u7684\u3001\u6709\u9650\u7684\u3001\u7528\u4e8e\u5b66\u4e60\u7684\u8bad\u7ec3\u6570\u636e\u96c6\u5408\u51fa\u53d1\uff0c\u5047\u8bbe\u6570\u636e\u662f \u72ec\u7acb\u540c\u5206\u5e03 \u4ea7\u751f\u7684\uff1b\u5e76\u4e14\u5047\u8bbe\u8981\u5b66\u4e60\u7684\u6a21\u578b\u5c5e\u4e8e\u67d0\u4e2a\u51fd\u6570\u7684\u96c6\u5408\uff0c\u79f0\u4e3a \u5047\u8bbe\u7a7a\u95f4 \uff1b\u5e94\u7528\u67d0\u4e2a \u8bc4\u4ef7\u6807\u51c6 \uff0c\u4ece\u5047\u8bbe\u7a7a\u95f4\u4e2d\u9009\u53d6\u4e00\u4e2a\u6700\u4f18\u7684\u9884\u6d4b\uff1b\u6700\u4f18\u6a21\u578b\u7684\u9009\u53d6\u7531\u7b97\u6cd5\u5b9e\u73b0\u3002\u6700\u4f18\u6a21\u578b\u7684\u9009\u53d6\u7531 \u7b97\u6cd5 \u5b9e\u73b0\u3002\u4e09\u8981\u7d20\uff1a\u6a21\u578b\uff0c\u7b56\u7565\uff0c\u7b97\u6cd5\u3002 \u6b65\u9aa4\uff1a \u8bad\u7ec3\u96c6\uff08\u641c\u96c6\u6570\u636e\uff09 \u786e\u5b9a\u5047\u8bbe\u7a7a\u95f4\uff08\u6311\u9009\u51fd\u6570\uff0c\u6bd4\u5982ANN\uff0ck\u8fd1\u90bb\uff09 \u786e\u5b9a\u51c6\u5219\uff08\u786e\u5b9a\u635f\u5931\u51fd\u6570\uff09 \u786e\u5b9a\u6c42\u89e3\u7b97\u6cd5\uff08\u68af\u5ea6\u4e0b\u964d\u6cd5\u7b49\uff09 \u5b66\u4e60\u5230\u6700\u4f18\u6a21\u578b\uff08\u6c42\u89e3\uff0c\u5b66\u4e60\uff09 \u4f7f\u7528\u6a21\u578b \u76d1\u7763\u5b66\u4e60 \u57fa\u672c\u6982\u5ff5 \u8f93\u5165\u7a7a\u95f4\uff1a\u8f93\u5165\u53ef\u80fd\u7684\u6240\u6709\u7684\u53d6\u503c\u7684\u96c6\u5408 \u8f93\u51fa\u7a7a\u95f4\uff1a\u8f93\u51fa\u53ef\u80fd\u7684\u53d6\u503c\u7684\u96c6\u5408 \u4e00\u4e2a\u6837\u672c\uff0c\u79f0\u4e3a\u4e00\u4e2a\u5b9e\u4f8b \\(x\\) , \\(x\\) \u7531\u7279\u5f81\u5411\u91cf\u8868\u793a\uff1a \\(x = [x^{(1)},x^{(2)},x^{(3)},...,x^{(n)}]^T\\) \u6570\u636e\u96c6\uff1a \\(T=\\left\\{\\left(x_{1}, y_{1}\\right),\\left(x_{2}, y_{2}\\right), \\cdots,\\left(x_{N}, y_{N}\\right)\\right\\}\\) \u9488\u5bf9\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\uff0c\u9884\u6d4b\u4efb\u52a1\u6709\u4e0d\u540c\u7684\u540d\u79f0\uff1a1. \u56de\u5f52\u4efb\u52a1\uff0c2. \u5206\u7c7b\u95ee\u9898\uff0c3. \u6807\u6ce8\u95ee\u9898\u3002 \u8054\u5408\u6982\u7387\u5206\u5e03 \\[ P(X,Y) \\] \u8f93\u5165\u53d8\u91cf\u548c\u8f93\u51fa\u53d8\u91cf\u662f\u4f9d\u636e\u8054\u5408\u6982\u7387\u5206\u5e03\u4ea7\u751f\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u57fa\u672c\u5047\u8bbe\u3002 \u5047\u8bbe\u7a7a\u95f4\uff1a \u5047\u8bbe\u7a7a\u95f4\u5c31\u662fx\u662f\u5982\u4f55\u6620\u5c04\u5230y\u7684\uff0c\u8fd9\u662f\u672a\u77e5\u7684\u3002\u6211\u4eec\u4f7f\u7528\u6a21\u578b\u6765\u201c\u8fd1\u4f3c\u201d\u8fd9\u4e2a\u7a7a\u95f4\u3002 \u5206\u4e3a \u6982\u7387\u6a21\u578b \u548c \u975e\u6982\u7387\u6a21\u578b \uff1a $$ Y=f(x)\\ P(y|x) $$ \u51b3\u7b56\u51fd\u6570 \uff0c \u6761\u4ef6\u6982\u7387 \u5c31\u662f\u6211\u4eec\u9700\u8981\u5b66\u4e60\u7684\u6a21\u578b\u3002 \u7edf\u8ba1\u5b66\u4e60\u7684\u4e09\u8981\u7d20 \u7edf\u8ba1\u5b66\u4e60 = \u6a21\u578b + \u7b56\u7565 + \u7b97\u6cd5 \u6a21\u578b \u5047\u8bbe\u7a7a\u95f4 \u5305\u542b\u6240\u6709\u53ef\u80fd\u7684 \u51b3\u7b56\u51fd\u6570 \u4ee5\u53ca \u6761\u4ef6\u6982\u7387 \u5206\u5e03\uff1a $$ \\mathcal{F}=\\left{f \\mid Y=f_{\\theta}(X), \\theta \\in \\mathbf{R}^{n}\\right}\\ \\mathcal{F}=\\left{P \\mid P_{\\theta}(Y \\mid X), \\theta \\in \\mathbf{R}^{n}\\right} $$ \u7b56\u7565 \u635f\u5931\u51fd\u6570 \u7528\u4e8e\u5ea6\u91cf\u6a21\u578b\u9884\u6d4b\u4e00\u6b21\u7684\u597d\u574f\uff1b \u98ce\u9669\u51fd\u6570 \u5ea6\u91cf\u5e73\u5747\u610f\u4e49\u4e0b\u6a21\u578b\u9884\u6d4b\u7684\u597d\u574f\u3002 \u5e38\u7528\u7684\u635f\u5931\u51fd\u6570\uff1a 0-1\u635f\u5931\u51fd\u6570 \u5e73\u65b9\u635f\u5931\u51fd\u6570 \u7edd\u5bf9\u635f\u5931\u51fd\u6570 \u5bf9\u6570\u635f\u5931\u51fd\u6570\uff0c\u6982\u7387\u6a21\u578b \u671f\u671b\u635f\u5931 \uff1a X,Y \u4ece\u8054\u5408\u6982\u7387P\u4e2d\u751f\u6210\uff1a $$ R_{\\exp }(f)=E_{P}[L(Y, f(X))]=\\int_{x \\times y} L(y, f(x)) P(x, y) \\mathrm{d} x \\mathrm{~d} y $$ \u5f88\u663e\u7136\uff0c\u6211\u4eec\u5e76\u4e0d\u77e5\u9053\u8054\u5408\u6982\u7387\u5206\u5e03P\uff0c\u6240\u4ee5\u6211\u4eec\u65e0\u6cd5\u8ba1\u7b97\u671f\u671b\u635f\u5931\u3002\u6211\u4eec\u91c7\u7528\u8499\u7279\u5361\u6d1b\u65b9\u6cd5\uff0c\u6c42\u671f\u671b\u7684\u8fd1\u4f3c\uff1a $$ E_P(X)\\approx 1/n\\sum^n_{i=1} X_i $$ \u90a3\u4e48\u671f\u671b\u635f\u5931\u7684\u8fd1\u4f3c\uff0c \u7ecf\u9a8c\u635f\u5931 \u4e3a\uff1a $$ R_{\\mathrm{emp}}(f)=\\frac{1}{N} \\sum_{i=1}^{N} L\\left(y_{i}, f\\left(x_{i}\\right)\\right) $$ \u9009\u62e9\u6a21\u578b\u7684\u51c6\u5219\uff1a \u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u5316 \\[ \\min _{f \\in \\mathcal{F}} \\frac{1}{N} \\sum_{i=1}^{N} L\\left(y_{i}, f\\left(x_{i}\\right)\\right) \\] \u7ed3\u6784\u98ce\u9669\u6700\u5c0f\u5316 \\[ R_{\\mathrm{smm}}(f)=\\frac{1}{N} \\sum_{i=1}^{N} L\\left(y_{i}, f\\left(x_{i}\\right)\\right)+\\lambda J(f) \\] \\[ \\min _{f \\in \\mathcal{F}} \\frac{1}{N} \\sum_{i=1}^{N} L\\left(y_{i}, f\\left(x_{i}\\right)\\right)+\\lambda J(f) \\] \u7b97\u6cd5 \u6839\u636e\u7b56\u7565\uff0c\u627e\u5230\u5047\u8bbe\u7a7a\u95f4\u4e2d\u7684\u6700\u4f18\u6a21\u578b\u3002 \u6a21\u578b\u8bc4\u4f30\u4e0e\u6a21\u578b\u9009\u62e9 \u6b63\u5219\u5316 \u4ea4\u53c9\u9a8c\u8bc1 \u7b80\u5355\u4ea4\u53c9\u9a8c\u8bc1 s\u6298\u4ea4\u53c9\u9a8c\u8bc1 \u7559\u4e00\u4ea4\u53c9\u9a8c\u8bc1 \u7559\u4e00\u4ea4\u53c9\u9a8c\u8bc1 \u6cdb\u5316\u80fd\u529b \u7531\u8be5\u65b9\u6cd5\u5b66\u4e60\u5230\u7684\u6a21\u578b\u5bf9\u672a\u77e5\u6570\u636e\u7684\u9884\u6d4b\u80fd\u529b\u3002 \u751f\u6210\u6a21\u578b\u4e0e\u5224\u522b\u6a21\u578b \u751f\u6210\u6a21\u578b\u7684\u5b66\u4e60\u76ee\u6807\u662f\u8054\u5408\u6982\u7387\u5206\u5e03 \\(P(X,Y)\\) \uff0c\u6700\u540e\u6c42\u51fa\u6761\u4ef6\u6982\u7387\u5206\u5e03 \u4f8b\u5b50\u6709\uff1a\u6734\u7d20\u8d1d\u53f6\u65af\u6cd5\uff0c\u9690\u9a6c\u5c14\u53ef\u592b\u6a21\u578b \u5224\u522b\u6a21\u578b\u76f4\u63a5\u5b66\u4e60 \\(f(X),P(Y|X)\\) , \u4f8b\u5b50\u6709\uff1ak\u8fd1\u90bb\uff0c\u611f\u77e5\u673a\uff0c\u51b3\u7b56\u6811\uff0c\u903b\u8f91\u65af\u8482\u56de\u5f52\uff0c\u6700\u5927\u71b5\u6a21\u578b\uff0c\u652f\u6301\u5411\u91cf\u673a\uff0c\u63d0\u5347\u65b9\u6cd5\u7b49\u3002 \u5206\u7c7b\u95ee\u9898 \u4e8c\u5206\u7c7b\u95ee\u9898\u7684\u8bc4\u4ef7\u6307\u6807\uff1a \u7cbe\u786e\u7387\uff08\u9884\u6d4b\u6b63\uff0c\u6b63\u786e\u7684\u6982\u7387\uff09 \u53ec\u56de\u7387\uff08\u771f\u6b63\u7684\u6b63\u4e2d\uff0c\u9884\u6d4b\u5230\u7684\uff09 F1\u503c \u6807\u6ce8\u95ee\u9898 \u6807\u6ce8\u95ee\u9898\u5176\u5b9e\u5c31\u662f\u591a\u5206\u7c7b\u95ee\u9898\u3002 \u56de\u5f52\u95ee\u9898 \u51fd\u6570\u62df\u5408 \u611f\u77e5\u673a \u6a21\u578b \\[ f(x)=\\operatorname{sign}(w \\cdot x+b) \\] \\[ \\operatorname{sign}(x)= \\begin{cases}+1, & x \\geqslant 0 \\\\ -1, & x<0\\end{cases} \\] \u7b56\u7565 \u5047\u8bbe\u6570\u636e\u662f\u7ebf\u6027\u53ef\u5206\u7684 \u635f\u5931\u51fd\u6570\u5199\u4e3a\uff1a $$ L(w, b)=-\\sum_{x_{i} \\in M} y_{i}\\left(w \\cdot x_{i}+b\\right) $$ \u7b97\u6cd5 \u968f\u673a\u68af\u5ea6\u4e0b\u964d\u6cd5 K\u8fd1\u90bb \u6a21\u578b \u8ddd\u79bb\u5ea6\u91cf\uff0ck\u503c\uff0c\u5206\u7c7b\u51b3\u7b56\u89c4\u5219\u3002 \u5982\u679ck=1\uff0c\u90a3\u4e48\u5c31\u662f\u6700\u8fd1\u90bb\u7b97\u6cd5\uff0c\u9884\u6d4b\u4e3a\u548c\u6700\u8fd1\u7684 \\(x\\) \u4e00\u7c7b\u3002 \u5982\u679ck = k\uff0c\u90a3\u4e48\u5c31\u627e\u5230\u4e0ex\u6700\u8fd1\u7684k\u4e2ax\uff0c\u8fdb\u884c\u6295\u7968\u9009\u62e9\u3002 \u8ddd\u79bb\u5ea6\u91cf \u8861\u91cf\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u6216\u8005\u8bf4\u76f8\u4f3c\u5ea6\uff1a Lp\u8ddd\u79bb \u6b27\u5f0f\u8ddd\u79bb\uff0c\u5e73\u65b9\u5f00\u6839\u53f7 \u66fc\u54c8\u987f\u8ddd\u79bb\uff0c\u5dee\u503c\u7684\u7edd\u5bf9\u503c\u76f8\u52a0 k\u503c \u4e00\u822c\u91c7\u7528\u4ea4\u53c9\u9a8c\u8bc1\u6765\u786e\u5b9ak\u503c \u5206\u7c7b\u51b3\u7b56\u89c4\u5219 \u4e00\u822c\u662f\u591a\u6570\u8868\u51b3 \u7b56\u7565 \u6700\u4f18\u5316k\u503c\uff0c\u4f7f\u5f97 $$ \\sum_{x_{i} \\in N_{k}(x)} I\\left(y_{i}=c_{j}\\right) $$ \u8fbe\u5230\u6700\u5927 \u7b97\u6cd5 k\u8fd1\u90bb\u7684\u53c2\u6570\u662fk\uff0c\u4e00\u822c\u91c7\u7528\u591a\u6298\u4ea4\u53c9\u9a8c\u8bc1\u7684\u65b9\u5f0f\u6765\u786e\u5b9a\uff0c\u4e3b\u8981\u9762\u4e34\u7684\u95ee\u9898\u662f\u5982\u4f55\u5bf9\u6570\u636e\u8fdb\u884c\u9ad8\u6548\u7684k\u8fd1\u90bb\u641c\u7d22\u3002 \u9884\u6d4b\uff08kd\u6811\uff09 kd\u6811\u7528\u4e8e\u5bf9\u6570\u636e\u8fdb\u884c\u9ad8\u6548\u7684k\u8fd1\u90bb\u641c\u7d22\u3002 kd\u6811\u662f\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u7528\u4e8e\u5b9e\u73b0\u641c\u7d22\u3002 kd\u6811\u7684\u5e73\u5747\u641c\u7d22\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(logn)\\) , \u76f8\u6bd4\u8d77\u5168\u90e8\u904d\u5386\u4e00\u904d\uff0c\u8282\u7ea6\u65f6\u95f4\u3002 \u4e8c\u53c9\u6811\u7684\u5de6\u679d\u53f6\u5c0f\u4e8e\u7236\u8282\u70b9\uff0c\u53f3\u679d\u53f6\u5927\u4e8e\u7236\u8282\u70b9\uff0c\u901a\u8fc7\u4e0e\u7236\u8282\u70b9\u6bd4\u8f83\uff0c\u9012\u5f52\u5730\u5411\u5de6\u53f3\u679d\u53f6\u9012\u5f52\u3002\u8fbe\u5230\u53f6\u5b50\u8282\u70b9\u6216\u8005\u76ee\u6807\u503c\u540e\uff0c\u518d\u56de\u6eaf\u627e\u5230k\u8fd1\u90bb\u3002\u6709\u70b9\u7c7b\u4f3c\u4e8e \u5806 \u7684\u601d\u60f3 \u6734\u7d20\u8d1d\u53f6\u65af \u6a21\u578b \u6734\u7d20\u8d1d\u53f6\u65af\u7684\u5047\u8bbe\uff1a \u6bcf\u4e2a\u7279\u5f81\u90fd\u662f\u7b26\u5408\u6761\u4ef6\u72ec\u7acb \uff0c\u6240\u4ee5\u5176\u8d1d\u53f6\u65af\u7f51\u7edc\u7ed3\u6784\u662f\u4e2a\u7b80\u5355\u7684\u6811\u7ed3\u6784\u3002 \u6734\u7d20\u8d1d\u53f6\u65af\u6cd5\u662f\u4e00\u4e2a \u751f\u6210\u6a21\u578b \uff0c\u7528\u4e8e\u5b66\u4e60 \\(P(X, Y)\\) \u6839\u636e\u4e0a\u9762\u7684\u5047\u8bbe\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u51fa \u4f3c\u7136\u6982\u7387 \uff1a $$ P(X|Y)=P(x_1,x_2,...,x_n|Y) $$ \u4e5f\u53ef\u4ee5\u7ed9\u5b9a \u5148\u9a8c\u6982\u7387 \uff1a $$ P(Y) $$ \u90a3\u4e48\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa \u540e\u9a8c\u6982\u7387 \uff1a $$ P(Y|X) \\propto P(X|Y)P(Y)=P(x_1,x_2,...,x_n|Y)P(Y) $$ \\[ P(Y|X) \\propto P(x_1|Y)P(x_2|Y)P(X_3|Y)...P(Y) \\] \u6a21\u578b\u5305\u62ec\u6982\u7387\u5206\u5e03\u7684\u5f62\u72b6\u53ca\u5176\u53c2\u6570\uff0c\u6709\u4e86\u8fd9\u4e9b\u53ef\u4ee5\u7528x\u9884\u6d4by\uff0c\u4e5f\u53ef\u4ee5\u7531y\u8ba1\u7b97x\uff0c\u8fd9\u5c31\u662f\u751f\u6210\u6a21\u578b\u3002 \u5206\u7c7b\u5668\u53ef\u4ee5\u5199\u4e3a\uff1a $$ y=f(x)=\\arg \\max {c {k}} \\frac{P\\left(Y=c_{k}\\right) \\prod_{j} P\\left(X^{(j)}=x^{(j)} \\mid Y=c_{k}\\right)}{\\sum_{k} P\\left(Y=c_{k}\\right) \\prod_{j} P\\left(X^{(j)}=x^{(j)} \\mid Y=c_{k}\\right)} $$ \u53ef\u4ee5\u770b\u5230\uff0c\u5176\u5b9e\u662f\u770b\u54ea\u4e00\u4e2a\u7c7b\u522b \\(c_k\\) \uff0c\u53ef\u4ee5\u8ba9 \u540e\u9a8c\u6982\u7387 \u8fbe\u5230\u6700\u5927\u3002 \u7b56\u7565 \u6700\u5927\u4f3c\u7136\u4f30\u8ba1 \uff1a\u6211\u4eec\u9700\u8981\u77e5\u9053\u6761\u4ef6\u6982\u7387\u4e0e\u5148\u9a8c\u6982\u7387\uff0c\u53ef\u4ee5\u91c7\u7528\u6781\u5927\u4f3c\u7136\u6cd5\u8fdb\u884c\u4f30\u8ba1\u3002 \u5bf9\u4e8e\u79bb\u6563\u7684\u904d\u5386\uff0c\u6781\u5927\u4f3c\u7136\u53ef\u4ee5\u6839\u636e\u89c2\u6d4b\u6837\u672c\u4f30\u8ba1\u51fa\u8868\u683c\u5f0f\u7684\u6761\u4ef6\u6982\u7387\u4e0e\u5148\u9a8c\u6982\u7387\u3002 \u8d1d\u53f6\u65af\u4f30\u8ba1 \uff1a\u91c7\u7528\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\uff0c\u53ef\u80fd\u51fa\u73b0\u6982\u7387\u503c\u4e3a0\u7684\u6781\u7aef\u60c5\u51b5\u3002 \u8d1d\u53f6\u65af\u4f30\u8ba1\u7684\u6761\u4ef6\u6982\u7387\u5982\u6b64\u8868\u793a\uff0c \u62c9\u666e\u62c9\u65af\u5e73\u6ed1 $$ P_{\\lambda}\\left(X^{(j)}=a_{j l} \\mid Y=c_{k}\\right)=\\frac{\\sum_{i=1}^{N} I\\left(x_{i}^{(j)}=a_{j l}, y_{i}=c_{k}\\right)+\\lambda}{\\sum_{i=1}^{N} I\\left(y_{i}=c_{k}\\right)+S_{j} \\lambda} $$ \u7b97\u6cd5 \u4e3b\u8981\u662f\u6982\u7387\u5206\u5e03\u7684\u4f30\u8ba1\u4e0e\u8ba1\u7b97 \u603b\u7ed3\uff1a \u7279\u5f81\u53d8\u91cf\u7684\u76f8\u4e92\u72ec\u7acb\uff0c\u6781\u5927\u5730\u7f29\u5c0f\u4e86\u6761\u4ef6\u6982\u7387\u7684\u590d\u6742\u5ea6 \u51b3\u7b56\u6811 \u51b3\u7b56\u6811\u662f\u4e00\u79cd\u57fa\u672c\u7684\u5206\u7c7b\u3001\u56de\u5f52\u65b9\u6cd5\u3002 \u7279\u70b9\uff1a\u6a21\u578b\u5177\u6709\u53ef\u8bfb\u6027\uff0c\u5206\u7c7b\u901f\u5ea6\u5feb\u3002 \u6a21\u578b \u51b3\u7b56\u6811\u662fif-then\u89c4\u5219\u7684\u96c6\u5408 \u8282\u70b9\u548c\u6709\u5411\u8fb9\u7ec4\u6210\u3002 \u4e92\u65a5\u4e14\u5b8c\u5907\uff1a\u6bcf\u4e00\u4e2a\u53ef\u80fd\u7684\u5b9e\u4f8b\u90fd\u8981\u88ab\u5305\u62ec\uff0c\u800c\u4e14\u53ea\u80fd\u88ab\u4e00\u6761\u8def\u5f84\u5305\u62ec\u3002 \u7b56\u7565 \u51b3\u7b56\u6811\u7684\u5b66\u4e60\u672c\u8d28\u4e0a\u662f\u4ece\u8bad\u7ec3\u96c6\u5408\u4e0a\u5f52\u7eb3\u51fa\u4e00\u7ec4\u5206\u7c7b\u89c4\u5219\uff0c\u4e0e\u8bad\u7ec3\u96c6\u4e0d\u77db\u76fe\u7684\u5206\u7c7b\u89c4\u5219\u4e0d\u6b62\u4e00\u79cd\uff0c\u4e5f\u53ef\u80fd\u4e00\u4e2a\u90fd\u6ca1\u6709\u3002 \u7279\u5f81\u9009\u62e9\uff0c\u51b3\u7b56\u6811\u7684\u751f\u6210\uff0c\u526a\u679d\u8fd9\u4e09\u4e2a\u8fc7\u7a0b \u7279\u5f81\u9009\u62e9\uff1a \u6839\u636e\u4fe1\u606f\u8bba\u7684\u539f\u7406\u8fdb\u884c\u9009\u62e9\u3002 \u71b5 \uff1a\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\u7684\u71b5\u63cf\u8ff0\u4e86\u5176\u201c\u4e0d\u786e\u5b9a\u5ea6\u201d\u3002 \u6761\u4ef6\u71b5 \uff1a\u63cf\u8ff0\u4e86\u5728\u7ed9\u5b9a\u67d0\u4e2a\u53d8\u91cf\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u53d8\u91cf\u7684\u4e0d\u786e\u5b9a\u6027\u3002 \u4fe1\u606f\u589e\u76ca \uff1a\u5728\u672a\u7ed9\u5b9aY\uff0c\u4e0e\u7ed9\u5b9aY\uff0c\u8fd9\u4e24\u4e2a\u60c5\u51b5\u4e0b\uff0cX\u7684\u71b5\u7684\u5dee\u3002 $$ g(D, A)=H(D)-H(D \\mid A) $$ \u4fe1\u606f\u589e\u76ca\u6bd4 \uff1a $$ g_{R}(D, A)=\\frac{g(D, A)}{H(D)} $$ \u6839\u636e\u4fe1\u606f\u589e\u76ca\u6765\u8fdb\u884c\u7279\u5f81\u9009\u62e9 \uff1a\u6570\u636e\u96c6D\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u53d8\u91cf\u7684\u4fe1\u606f\u589e\u76ca\uff0c\u9009\u62e9\u4fe1\u606f\u589e\u76ca\u6700\u5927\u7684\u7279\u5f81\u3002 \u8ba1\u7b97\u4fe1\u606f\u589e\u76ca\uff1a \u8ba1\u7b97D\u7684\u71b5 \u8ba1\u7b97A\u5bf9\u6570\u636e\u96c6D\u7684\u6761\u4ef6\u71b5 \u6c42\u5dee \u4fe1\u606f\u589e\u76ca\u6700\u5927\u7684\u53d8\u91cfA\uff1a\u5982\u679c\u7ed9\u5b9aA\uff0c\u4f1a\u4f7f\u5f97\u6570\u636e\u7684\u71b5\u51cf\u5c0f\u6700\u591a\u3002 \u7b97\u6cd5 ID3\u7b97\u6cd5 \u4f7f\u7528\u4fe1\u606f\u589e\u76ca\u6765\u9009\u62e9\u7279\u5f81\uff0c\u9012\u5f52\u6784\u5efa\u51b3\u7b56\u6811\u3002 \u8f93\u5165\uff1a\u6570\u636e\u96c6D\uff0c\u7279\u5f81\u96c6A\uff0c\u9608\u503c \\(\\mathcal{E}\\) \u8ba1\u7b97\u6700\u5927\u4fe1\u606f\u589e\u76ca\u7684\u7279\u5f81 \\(A_g\\) \u5982\u679c \\(A_g>\\mathcal{E}\\) \uff1a \u4f9d\u636e\u8be5\u7279\u5f81\u5c06D\u8fdb\u884c\u5206\u5272\uff0c\u5728\u4ee5\u6b64\u6570\u636e\u96c6\u9012\u5f52\u6267\u884cID3 \u5982\u679c\u5c0f\u4e8e \\(\\mathcal{E}\\) \uff0c \u4f5c\u4e3a\u53f6\u5b50\u8282\u70b9 \u526a\u679d\u7b97\u6cd5\uff1a \u6700\u5c0f\u5316\u6574\u68f5\u6811\u7684\u635f\u5931\u51fd\u6570\uff1a $$ C_{\\alpha}(T)=\\sum_{t=1}^{|T|} N_{t} H_{t}(T)+\\alpha|T| $$ \\(H()\\) \u662f\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u4e0a\u7684\u7ecf\u9a8c\u71b5\uff0c\u5c55\u5f00\u5199\u4e3a\uff1a $$ H_{t}(T)=-\\sum_{k} \\frac{N_{t k}}{N_{t}} \\log \\frac{N_{t k}}{N_{t}} $$ \u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u53f6\u5b50\u8282\u70b9\u4e0a\u76f4\u843d\u4e86\u4e00\u7c7b\u6837\u672c\uff0c\u90a3\u4e48\u7ecf\u9a8c\u71b5\u4e3a0\u3002 \\(N()\\) \u662f\u8be5\u53f6\u5b50\u8282\u70b9\u7684\u6837\u672c\u70b9 \u540e\u9762\u662f\u4e00\u4e2a\u5bf9\u590d\u6742\u6811\u7684\u60e9\u7f5a \u901a\u8fc7\u51cf\u5c11\u679d\u53f6\u6765\u6700\u5c0f\u5316\u6574\u68f5\u6811\u7684\u635f\u5931\u51fd\u6570\u3002 CART\u7b97\u6cd5 \u5224\u522b\u6a21\u578b\uff0c\u5b66\u4e60\u51fa\u7684\u662fP(Y|X)\u3002 \u57fa\u4e8e\u6570\u636e\u96c6\u751f\u6210\u51b3\u7b56\u6811\uff0c\u51b3\u7b56\u6811\u8981\u5c3d\u91cf\u5927 \u51b3\u7b56\u6811\u526a\u679d\uff0c\u7528\u9a8c\u8bc1\u6570\u636e\u96c6\u5bf9\u5df2\u7ecf\u751f\u6210\u7684\u6811\u8fdb\u884c\u526a\u679d\u5e76\u9009\u62e9\u6700\u4f18\u5b50\u6811\uff0c\u8fd9\u65f6\u4f7f\u7528\u635f\u5931\u51fd\u6570\u6700\u5c0f\u4f5c\u4e3a\u526a\u679d\u6807\u51c6\u3002 \u56de\u5f52\u6811 \u6811\u6a21\u578b\u5b9e\u9645\u4e0a\u662f\u5bf9\u7a7a\u95f4\u7684\u5212\u5206\uff0c\u5047\u8bbe\u5212\u5206\u4e3aM\u4e2a\u5355\u5143\uff0c\u6bcf\u4e2a\u5355\u5143\u5bf9\u5e94\u7684\u8f93\u51fa\u503c\u4e3a \\(c_m\\) $$ f(x)=\\sum_{m=1}^{M} c_{m} I\\left(x \\in R_{m}\\right) $$ \u635f\u5931\u51fd\u6570\uff1a $$ \\hat{c} {m}=\\operatorname{ave}\\left(y {i} \\mid x_{i} \\in R_{m}\\right) $$ \u5982\u4f55\u627e\u5230\u6700\u4f18\u5207\u5206\u70b9\uff0c\u5c31\u662f\u6784\u5efa\u6811\u7684\u8fc7\u7a0b\uff1a \u5bf9\u4e8e \\(x^{(j)}\\) \u6765\u8bf4\uff0c\u5207\u5206\u4e3a\u4e24\u90e8\u5206 \\(R_1\\) , \\(R_2\\) \uff1a $$ R_{1}(j, s)=\\left{x \\mid x^{(j)} \\leqslant s\\right} \\quad \\text { \u548c } \\quad R_{2}(j, s)=\\left{x \\mid x^{(j)}>s\\right} $$ \u6700\u4f18\u5207\u5206\u70b9\u4e3a\uff1a $$ \\min {j, s}\\left[\\min {c_{1}} \\sum_{x_{i} \\in R_{1}(j, s)}\\left(y_{i}-c_{1}\\right)^{2}+\\min {c {2}} \\sum_{x_{i} \\in R_{2}(j, s)}\\left(y_{i}-c_{2}\\right)^{2}\\right] $$ \u6700\u5c0f\u4e8c\u4e58\u56de\u5f52\u6811\uff1a \u904d\u5386\u904d\u5386 \\(x_j\\) \u4e0e\u5207\u5206\u70b9 \\(s\\) \uff0c\u4f7f\u4e4b\u635f\u5931\u51fd\u6570\u6700\u5c0f \\[ \\min _{j, s}\\left[\\min _{c_{1}} \\sum_{x_{i} \\in R_{1}(j, s)}\\left(y_{i}-c_{1}\\right)^{2}+\\min _{c_{2}} \\sum_{x_{i} \\in R_{2}(j, s)}\\left(y_{i}-c_{2}\\right)^{2}\\right] \\] \u6839\u636e\u5df2\u7ecf\u786e\u5b9a\u597d\u7684j, s \u786e\u5b9a\u5212\u5206\u533a\u57df\u7684\u8f93\u51fa\u503c \u7ee7\u7eed\u5f80\u4e0b\u5212\u5206\uff0c\u76f4\u5230\u6ee1\u8db3\u7ec8\u6b62\u6761\u4ef6\u3002 \u5206\u7c7b\u6811 \u5206\u7c7b\u6811\u7528\u57fa\u5c3c\u7cfb\u6570\u6765\u9009\u62e9\u6700\u4f18\u7279\u5f81\u3002 $$ \\operatorname{Gini}(p)=\\sum_{k=1}^{K} p_{k}\\left(1-p_{k}\\right)=1-\\sum_{k=1}^{K} p_{k}^{2} $$ \u5bf9\u4e8e\u4e00\u4e2a \u6837\u672c\u96c6 \uff08\u5176\u5b9e\u6307\u7684\u662f \\(P(D)\\) \uff09\uff0c\u5176\u57fa\u5c3c\u7cfb\u6570\u4e3a\uff1a $$ \\operatorname{Gini}(D)=1-\\sum_{k=1}^{K}\\left(\\frac{\\left|C_{k}\\right|}{|D|}\\right)^{2} $$ \u57fa\u5c3c\u7cfb\u6570\u8868\u793a\u96c6\u5408\u7684\u4e0d\u786e\u5b9a\u6027\uff0c\u57fa\u5c3c\u6307\u6570 \\(Gini(D,A)\\) \u8868\u793a\u7ecf\u8fc7A\u5206\u5272\u540e\u96c6\u5408D\u7684\u4e0d\u786e\u5b9a\u6027\u3002 \\(D_1\\) \u548c \\(D_2\\) \u662f\u4f9d\u636e\u7279\u5f81A\u7684\u5206\u5272\u70b9a\u6765\u786e\u5b9a\u7684\u3002 $$ \\operatorname{Gini}(D, A)=\\frac{\\left|D_{1}\\right|}{|D|} \\operatorname{Gini}\\left(D_{1}\\right)+\\frac{\\left|D_{2}\\right|}{|D|} \\operatorname{Gini}\\left(D_{2}\\right) $$ CART\u751f\u6210\u7b97\u6cd5 \u904d\u5386\u5404\u4e2a\u7279\u5f81\uff0c\u4ee5\u53ca\u7279\u5f81a\u7684\u5206\u5272\u70b9\uff0c\u627e\u5230\u6700\u4f18\u7684A\uff0c\u4e0e\u5206\u5272\u70b9a\u3002 \u751f\u6210\u4e24\u4e2a\u5b50\u8282\u70b9 \u9012\u5f52\u7684\u4f7f\u7528\u8be5\u7b97\u6cd5\uff0c\u77e5\u9053\u8282\u70b9\u7684\u6837\u672c\u6570\u5c11\u4e8e\u9608\u503c CART\u526a\u679d \u8ba1\u7b97 \u5b50\u6811 \u7684\u635f\u5931\u51fd\u6570\uff1a $$ C_{\\alpha}(T)=C(T)+\\alpha|T| $$ \u67d0\u4e2a \u8282\u70b9 \u7684\u635f\u5931\u51fd\u6570\uff1a $$ C_{\\alpha}(t)=C(t)+\\alpha $$ \u5982\u679c\u8bf4T\u662f\u4e00\u4e2a\u68f5\u6811\uff0ct\u662f\u4e00\u4e2a\u5355\u8282\u70b9\uff0c\u90a3\u4e48\u5b58\u5728\u4e00\u4e2a\u8db3\u591f\u5927\u7684 \\(\\alpha\\) \u4f7f\u5f97\uff1a $$ C_{\\alpha}\\left(T_{t}\\right)=C_{\\alpha}(t) $$ \u6b64\u65f6\uff1a $$ \\alpha=\\frac{C(t)-C\\left(T_{t}\\right)}{\\left|T_{t}\\right|-1} $$ \u628a\u8fd9\u4e2a\u6570\u503c\u4f5c\u4e3a\u526a\u679d\u7684\u6807\u51c6g(t): $$ g(t)=\\frac{C(t)-C\\left(T_{t}\\right)}{\\left|T_{t}\\right|-1} $$ \u8fd9\u4e2a\u6570\u5b57\u8d8a\u5927\uff0c\u8bf4\u660e\u8d8a\u9700\u8981\u4f9d\u8d56\u6b63\u5219\u9879\u4f18\u52bf\uff0c\u6240\u4ee5\u6700\u5c0f\u7684 \\(g(t)\\) , \u662f\u6211\u4eec\u9700\u8981\u51cf\u53bb\u7684\u3002 \u8d8a\u662f\u62e5\u6709\u5927\u7684 \\(\\alpha\\) \u8d8a\u662f\u4f1a\u526a\u679d\uff0c\u6240\u4ee5\u5bf9\u5e94\u4e8e \\(\\alpha_1, \\alpha_2,...,\\alpha_n\\) \u90fd\u6709\u4e00\u9897\u5b50\u6811 \u627e\u5230\u6700\u4f18\u5b50\u6811\uff08\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\uff09\uff0c \u5c31\u53ef\u4ee5\u786e\u5b9a \\(\\alpha\\) \u4e86\u3002 Logistic \u56de\u5f52 logistic distribution\uff1a $$ \\begin{aligned} &F(x)=P(X \\leqslant x)=\\frac{1}{1+\\mathrm{e}^{-(x-\\mu) / \\gamma}} \\ &f(x)=F^{\\prime}(x)=\\frac{\\mathrm{e}^{-(x-\\mu) / \\gamma}}{\\gamma\\left(1+\\mathrm{e}^{-(x-\\mu) / \\gamma}\\right)^{2}} \\end{aligned} $$ \u4e8c\u9879\u5206\u7c7b\u6a21\u578b \u4e8c\u9879\u903b\u8f91\u65af\u8482\u56de\u5f52\u662f\u4e00\u4e2a\u5224\u522b\u6a21\u578b\uff0c\u62df\u5408P(Y|X)\uff0c\u5176\u6a21\u578b\u7684\u663e\u5f0f\u8868\u8fbe\u4e3a\uff1a $$ \\begin{aligned} &P(Y=1 \\mid x)=\\frac{\\exp (w \\cdot x+b)}{1+\\exp (w \\cdot x+b)} \\ &P(Y=0 \\mid x)=\\frac{1}{1+\\exp (w \\cdot x+b)} \\end{aligned} $$ \u6709\u53c2\u6570 \\(w,b\\) \u3002\u53ef\u4ee5\u5c06b\u6574\u5408\u5230\u8f93\u5165\u5411\u91cf\u4e2d\uff0c\u5f97\u5230 $$ \\begin{aligned} &P(Y=1 \\mid x)=\\frac{\\exp (w \\cdot x)}{1+\\exp (w \\cdot x)} \\ &P(Y=0 \\mid x)=\\frac{1}{1+\\exp (w \\cdot x)} \\end{aligned} $$ \u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u7684\u6982\u7387\u4e0e\u4e0d\u53d1\u751f\u7684\u6982\u7387\u7684\u6bd4\u503c\uff0c\u662f\u8be5\u4e8b\u4ef6\u7684 \u51e0\u7387 \uff08odds\uff09\u3002 $$ odds = p/(1-p) $$ \u90a3\u4e48\u5bf9\u4e8e\u903b\u8f91\u65af\u8482\u56de\u5f52\u800c\u8a00\uff0c\u4e8b\u4ef6\u7684 \u5bf9\u6570\u51e0\u7387 \uff1a $$ \\log \\frac{P(Y=1 \\mid x)}{1-P(Y=1 \\mid x)}=w \\cdot x $$ \u8fd9\u65e2\u662f\u8bf4\uff1a\u903b\u8f91\u65af\u8482\u6a21\u578b\u8f93\u51faY=1\u7684 \u5bf9\u6570\u51e0\u7387 \u662f\u8f93\u5165\u5411\u91cfx\u7684 \u7ebf\u6027\u51fd\u6570 \u3002 \u7b56\u7565 \u53c2\u6570\u4f7f\u7528\u6700\u5927\u4f3c\u7136\u4f30\u8ba1\u3002 \u8bb0\uff1a $$ P(Y=1 \\mid x)=\\pi(x), \\quad P(Y=0 \\mid x)=1-\\pi(x) $$ \u4f3c\u7136\u51fd\u6570\u5199\u4e3a\uff1a $$ \\prod_{i=1}^{N}\\left[\\pi\\left(x_{i}\\right)\\right]^{y_{i}}\\left[1-\\pi\\left(x_{i}\\right)\\right]^{1-y_{i}} $$ \u5c06\u5176\u5c55\u5f00\uff0c\u5e76\u7ed3\u5408\u4e0a\u6587\u63d0\u5230\u7684\u6027\u8d28\uff0c\u6700\u7ec8\u4f3c\u7136\u51fd\u6570\u53ef\u4ee5\u5199\u4e3a\uff1a $$ L(w) =\\sum_{i=1}^{N}\\left[y_{i}\\left(w \\cdot x_{i}\\right)-\\log \\left(1+\\exp \\left(w \\cdot x_{i}\\right)\\right]\\right. $$ \u7b97\u6cd5 \\[ \\max_w L(w) \\] \u4e00\u822c\u4f7f\u7528\u725b\u987f\u6cd5\u6216\u8005\u68af\u5ea6\u4e0b\u964d\u6cd5\u3002 \u591a\u9879\u5206\u7c7b\u6a21\u578b \\[ \\begin{gathered} P(Y=k \\mid x)=\\frac{\\exp \\left(w_{k} \\cdot x\\right)}{1+\\sum_{k=1}^{K-1} \\exp \\left(w_{k} \\cdot x\\right)}, \\quad k=1,2, \\cdots, K-1 \\\\ P(Y=K \\mid x)=\\frac{1}{1+\\sum_{k=1}^{K-1} \\exp \\left(w_{k} \\cdot x\\right)} \\end{gathered} \\] \u524dK-1\u4e2a\u7684\u5206\u5b50\u662f \\(exp(w_k\\cdot x)\\) , \u7b2cK\u4e2a\u662f1\u3002 \u6700\u5927\u71b5\u6a21\u578b \u71b5 \uff1a\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\u7684\u71b5\u63cf\u8ff0\u4e86\u5176\u201c\u4e0d\u786e\u5b9a\u5ea6\u201d\u3002 \u4e00\u4e2a\u6982\u7387\u5206\u5e03\u7684\u71b5\u8ba1\u7b97\u516c\u5f0f\uff1a $$ H(P)=-\\sum_{x} P(x) \\log P(x) $$ \u5f53X\u53d6\u5747\u5300\u5206\u5e03\u7684\u65f6\u5019\uff0c\u71b5\u6700\u5927\u3002 \u6761\u4ef6\u71b5 \uff1a\u63cf\u8ff0\u4e86\u5728\u7ed9\u5b9a\u67d0\u4e2a\u53d8\u91cf\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u53d8\u91cf\u7684\u4e0d\u786e\u5b9a\u6027\u3002 $$ H(Y \\mid X)=\\sum_{i=1}^{n} p\\left(x_{i}\\right) H\\left(Y \\mid X=x_{i}\\right)=-\\sum_{i=1}^{n} p\\left(x_{i}\\right) \\sum_{j=1}^{m} p\\left(y_{j} \\mid x_{i}\\right) \\log p\\left(y_{j} \\mid x_{i}\\right) $$ \u6700\u5927\u71b5\u53ef\u4ee5\u4f5c\u4e3a\u6211\u4eec\u6a21\u578b\u9009\u62e9\u7684\u51c6\u5219\u3002 \u73b0\u5047\u8bbe\u6570\u636e\u7684\u8054\u5408\u6982\u7387\u4e3a\uff1a $$ P(X,Y) $$ \u6839\u636e\u89c2\u6d4b\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 \u7ecf\u9a8c\u8054\u5408\u6982\u7387\u5206\u5e03 \u4e3a\uff1a $$ \\begin{aligned} &\\tilde{P}(X=x, Y=y)=\\frac{v(X=x, Y=y)}{N} \\ &\\tilde{P}(X=x)=\\frac{v(X=x)}{N} \\end{aligned} $$ \u5bf9\u4e8e\u5224\u522b\u6a21\u578b \\(P(y|x)\\) $$ \\sum_{x, y} \\tilde{P}(x) P(y \\mid x) f(x, y)=\\sum_{x, y} \\tilde{P}(x, y) f(x, y) $$ \u5bf9\u4e8e\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u7684\u6a21\u578b \\(P(y|x)\\) \uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u8ba4\u4e3a\u5b83\u662f\u201c\u6709\u6548\u201d\u7684\uff0c\u4f46\u4e0d\u4e00\u5b9a\u662f\u6700\u597d\u7684\u3002 \u4e3e\u4e2a\u4f8b\u5b50: \u5bf9\u4e8ex=0,y=? p(y=1|x=0)=1,p(y=1|x=0)=0 \u662f\u4e00\u79cd\u6a21\u578b\uff1b p(y=1|x=0)=0.75,p(y=1|x=0)=0.25 \u4e5f\u662f\u4e00\u79cd\u6a21\u578b\uff1b \u5b83\u4eec\u90fd\u53ef\u4ee5\u6b63\u786e\u5730\u4f30\u8ba1\u51fay=1\u8fd9\u4e2a\u7ed3\u679c\uff0c\u4f46\u662f\u54ea\u4e2a\u6a21\u578b\u66f4\u597d\u5462\uff1f \u8bb0 $$ \\mathcal{C} \\equiv\\left{P \\in \\mathcal{P} \\mid E_{P}\\left(f_{i}\\right)=E_{\\tilde{P}}\\left(f_{i}\\right), \\quad i=1,2, \\cdots, n\\right} $$ \u8fd9\u4e2a\u96c6\u5408\u91cc\u7684\u6240\u6709\u6a21\u578b\u90fd\u662f\u6709\u6548\u7684\uff0c\u5177\u6709\u6700\u5927\u71b5\u7684\u6a21\u578b\u4e3a\uff1a $$ H(P)=-\\sum_{x, y} \\tilde{P}(x) P(y \\mid x) \\log P(y \\mid x) $$ \u6700\u5927\u5316\u8fd9\u4e2a\u5f0f\u5b50\uff0c\u5f97\u5230\u7684P(Y|X)\u662f\u5177\u6709\u6700\u5927\u71b5\u7684\u201c\u6709\u6548\u201d\u6a21\u578b\u3002 \u8fd9\u5c31\u662f\u6700\u5927\u71b5\u6a21\u578b\u9009\u62e9\u3002 \u7b56\u7565 \u7528\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5\u8fdb\u884c\u6c42\u89e3\u3002\uff08\u7b49\u53f7\u7ea6\u675f\u662f\u4e00\u79cd\u5f3a\u7ea6\u675f\uff0c\u5982\u679c\u662f\u5c0f\u4e8e\u7b49\u4e8e\u7684\u5f31\u7ea6\u675f\u5219\u4f7f\u7528KKT\u5b9a\u7406\uff09 \u652f\u6301\u5411\u91cf\u673aSVM \u6a21\u578b SVM\u662f\u4e00\u79cd\u4e8c\u5206\u7c7b\u6a21\u578b\u3002 \u5f53\u6570\u636e\u7ebf\u6027\u53ef\u5206\u7684\u65f6\u5019\uff0c\u4f7f\u7528 \u8fc7\u786c\u95f4\u9694\u6700\u5927\u5316 \u5b66\u4e60\u4e00\u4e2a\u7ebf\u6027\u5206\u7c7b\u5668\uff1b \u5f53\u6570\u636e\u8fd1\u4f3c\u7ebf\u6027\u53ef\u5206\u65f6\uff0c\u4f7f\u7528 \u8f6f\u95f4\u9694\u6700\u5927\u5316 \u5b66\u4e60\u4e00\u4e2a\u7ebf\u6027\u5206\u7c7b\u5668\uff1b \u5f53\u6570\u636e \u7ebf\u6027\u4e0d\u53ef\u5206\u65f6\uff0c\u4f7f\u7528 \u6838\u65b9\u6cd5 \u548c \u8f6f\u95f4\u9694\u6700\u5927\u5316 \uff0c\u5b66\u4e60\u975e\u7ebf\u6027\u652f\u6301\u5411\u91cf\u673a\u3002 \u7ebf\u6027\u53ef\u5206\u652f\u6301\u5411\u91cf\u673a \u5047\u8bbe\u6570\u636e\u662f\u7ebf\u6027\u53ef\u5206\u7684\uff0c\u8fd9\u662f\u4e00\u79cd\u975e\u5e38\u5f3a\u7684\u5047\u8bbe\u3002 \u5982\u679c\u8fd9\u4e2a\u8d85\u5e73\u9762\u4e3a\uff1a $$ w^{ } \\cdot x+b^{ }=0 $$ \u652f\u6301\u5411\u91cf\u673a\u6a21\u578b\u53ef\u5199\u4e3a\uff1a $$ f(x)=\\operatorname{sign}\\left(w^{ } \\cdot x+b^{ }\\right) $$ \u7b56\u7565 \u51fd\u6570\u95f4\u9694\uff0c\u63cf\u8ff0\u6837\u672c\u70b9\u4e0e\u8d85\u5e73\u9762\u7684\u8ddd\u79bb\uff1a $$ \\hat{\\gamma} {i}=y {i}\\left(w \\cdot x_{i}+b\\right) $$ \u5728\u6b64\uff0c\u590d\u4e60\u4e00\u4e0b\u70b9\u5230\u76f4\u7ebf\u7684\u8ddd\u79bb\u8ba1\u7b97\u516c\u5f0f\uff1a Ax+By+C=0, \u70b9 \\((x_0,y_0)\\) \u8ddd\u79bbd\u4e3a\uff1a \\(d=\\frac{\\left|A x_{0}+B y_{0}+C\\right|}{\\sqrt{A^{2}+B^{2}}}\\) \u6240\u4ee5\u5bf9\u4e8e\u5e73\u9762 wx+b=0, \u8ddd\u79bb\u6b63\u6bd4\u4e8e \\(wx_i+b\\) \u6240\u6709\u95f4\u9694\u4e2d\u6700\u5c0f\u503c\u4e3a\uff1a $$ \\hat{\\gamma}=\\min {i=1, \\cdots, N} \\hat{\\gamma} {i} $$ \u51fd\u6570\u95f4\u9694\u4f1a\u53d7\u5230 w,b\u7684\u5f71\u54cd\uff0c\u5982\u679c\u628aw,b\u53d8\u4e3a\u4e24\u500d\uff0c\u8d85\u5e73\u9762\u4f4d\u7f6e\u4e0d\u53d8\uff0c\u4f46\u662f\u8ddd\u79bb\u589e\u52a0\u4e86\u4e24\u500d\u3002\u6240\u4ee5\u4e00\u822c\u91c7\u7528\u51e0\u4f55\u95f4\u9694\uff1a $$ \\gamma_{i}=y_{i}\\left(\\frac{w}{|w|} \\cdot x_{i}+\\frac{b}{|w|}\\right) $$ \u95f4\u9694\u6700\u5927\u5316\uff1a\u5bf9\u8bad\u7ec3\u6570\u636e\u96c6\u627e\u5230\u51e0\u4f55\u95f4\u9694\u6700\u5927\u7684\u8d85\u5e73\u9762\u610f\u5473\u7740\u5df2\u5145\u5206\u7684\u7684\u786e\u4fe1\u5ea6\u5bf9\u8bad\u7ec3\u6570\u636e\u8fdb\u884c\u5206\u7c7b\u3002 \u8003\u8651\u5230\u51e0\u4f55\u95f4\u9694\u548c\u51fd\u6570\u95f4\u9694\u7684\u5173\u7cfb\uff0c\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\uff1a \u7b97\u6cd5 \u6700\u5927\u95f4\u9694\u6cd5\u6765\u5b66\u4e60\u201c\u7ebf\u6027\u53ef\u5206\u652f\u6301\u5411\u91cf\u673a\u201d\u3002 \u8bc1\u660e\uff1a\u6700\u5927\u95f4\u9694\u5206\u79bb\u8d85\u5e73\u9762\u7684 \u5b58\u5728\u6027 \uff0c \u552f\u4e00\u6027 \u3002 \u652f\u6301\u5411\u91cf\uff0c\u8bad\u7ec3\u6570\u636e\u96c6\u7684\u6837\u672c\u4e2d\u4e0e\u5206\u79bb\u8d85\u5e73\u9762\u8ddd\u79bb\u6700\u8fd1\u7684\u6837\u672c\u70b9\u7684\u5b9e\u4f8b\u79f0\u4e3a \u652f\u6301\u5411\u91cf \u3002 $$ y_{i}\\left(w \\cdot x_{i}+b\\right)-1=0 $$ \u95f4\u9694\u8fb9\u754c\u4f9d\u8d56\u4e8e\u6cd5\u5411\u91cfw\uff1a $$ \\frac{2}{|w|} $$ \u51b3\u5b9a\u5206\u79bb\u8d85\u5e73\u9762\u65f6\uff0c\u53ea\u6709\u652f\u6301\u5411\u91cf\u8d77\u4f5c\u7528\uff0c\u800c\u5176\u4ed6\u5b9e\u4f8b\u5e76\u4e0d\u8d77\u4f5c\u7528\uff0c\u6240\u4ee5\u652f\u6301\u5411\u91cf\u673a\u7531\u5f88\u5c11\u7684\u201c \u91cd\u8981\u6837\u672c \u201d\u51b3\u5b9a\u3002 \u9488\u5bf9\u4e0a\u9762\u7684\u6700\u4f18\u5316\u95ee\u9898\uff08\u88ab\u8bc1\u660e\u4e3a\u51f8\uff09\uff0c\u5148\u8f6c\u5316\u4e3a\u5bf9\u5076\u95ee\u9898\uff0c\u4f7f\u7528\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5\u6216\u8005KKT\u5b9a\u7406\uff0c\u8fdb\u884c\u6c42\u89e3\uff1a \u6784\u9020\u5bf9\u5076\u95ee\u9898\uff0c\u5e76\u6c42\u89e3\u7ea6\u675f\u4f18\u5316\u95ee\u9898\uff1a \u6c42\u5f97\uff1a $$ \\alpha^{ }=\\left(\\alpha_{1}^{ }, \\alpha_{2}^{ }, \\cdots, \\alpha_{N}^{ }\\right)^{\\mathrm{T}} $$ \u8ba1\u7b97w,b \\[ w^{*}=\\sum_{i=1}^{N} \\alpha_{i}^{*} y_{i} x_{i}\\\\ b^{*}=y_{j}-\\sum_{i=1}^{N} \\alpha_{i}^{*} y_{i}\\left(x_{i} \\cdot x_{j}\\right) \\] \u5e26\u5165\u7684\u5230\u6a21\u578b \\[ f(x)=sign(w^*\\cdot x+b^*) \\]","title":"\u300a\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u300b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_1","text":"[toc]","title":"\u300a\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u300b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_2","text":"\u4ee5\u8ba1\u7b97\u673a\u548c\u7f51\u7edc\u4e3a\u5e73\u53f0 \u5bf9\u8c61\uff1a\u6570\u636e\u4e3a\u7814\u7a76\u5bf9\u8c61 \u76ee\u7684\uff1a\u5bf9\u6570\u636e\u8fdb\u884c\u9884\u6d4b\u548c\u5206\u6790 \u65b9\u6cd5\uff1a\u6784\u5efa\u6a21\u578b \u591a\u5b66\u79d1\u4ea4\u53c9 \u57fa\u672c\u5047\u8bbe\uff1a\u540c\u7c7b\u6570\u636e\u5177\u6709\u4e00\u5b9a\u7684\u7edf\u8ba1\u89c4\u5f8b\u6027\u3002 \u65b9\u6cd5\uff1a\u57fa\u4e8e\u6570\u636e\u6784\u5efa\u7edf\u8ba1\u6a21\u578b\u4ece\u800c\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u6790\u4e0e\u9884\u6d4b\u3002 \u76d1\u7763\u5b66\u4e60 \u975e\u76d1\u7763\u5b66\u4e60 \u534a\u76d1\u7763\u5b66\u4e60 \u5f3a\u5316\u5b66\u4e60","title":"\u7edf\u8ba1\u5b66\u4e60"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_3","text":"\u4ece\u7ed9\u5b9a\u7684\u3001\u6709\u9650\u7684\u3001\u7528\u4e8e\u5b66\u4e60\u7684\u8bad\u7ec3\u6570\u636e\u96c6\u5408\u51fa\u53d1\uff0c\u5047\u8bbe\u6570\u636e\u662f \u72ec\u7acb\u540c\u5206\u5e03 \u4ea7\u751f\u7684\uff1b\u5e76\u4e14\u5047\u8bbe\u8981\u5b66\u4e60\u7684\u6a21\u578b\u5c5e\u4e8e\u67d0\u4e2a\u51fd\u6570\u7684\u96c6\u5408\uff0c\u79f0\u4e3a \u5047\u8bbe\u7a7a\u95f4 \uff1b\u5e94\u7528\u67d0\u4e2a \u8bc4\u4ef7\u6807\u51c6 \uff0c\u4ece\u5047\u8bbe\u7a7a\u95f4\u4e2d\u9009\u53d6\u4e00\u4e2a\u6700\u4f18\u7684\u9884\u6d4b\uff1b\u6700\u4f18\u6a21\u578b\u7684\u9009\u53d6\u7531\u7b97\u6cd5\u5b9e\u73b0\u3002\u6700\u4f18\u6a21\u578b\u7684\u9009\u53d6\u7531 \u7b97\u6cd5 \u5b9e\u73b0\u3002\u4e09\u8981\u7d20\uff1a\u6a21\u578b\uff0c\u7b56\u7565\uff0c\u7b97\u6cd5\u3002","title":"\u6982\u62ec\uff1a"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_4","text":"\u8bad\u7ec3\u96c6\uff08\u641c\u96c6\u6570\u636e\uff09 \u786e\u5b9a\u5047\u8bbe\u7a7a\u95f4\uff08\u6311\u9009\u51fd\u6570\uff0c\u6bd4\u5982ANN\uff0ck\u8fd1\u90bb\uff09 \u786e\u5b9a\u51c6\u5219\uff08\u786e\u5b9a\u635f\u5931\u51fd\u6570\uff09 \u786e\u5b9a\u6c42\u89e3\u7b97\u6cd5\uff08\u68af\u5ea6\u4e0b\u964d\u6cd5\u7b49\uff09 \u5b66\u4e60\u5230\u6700\u4f18\u6a21\u578b\uff08\u6c42\u89e3\uff0c\u5b66\u4e60\uff09 \u4f7f\u7528\u6a21\u578b","title":"\u6b65\u9aa4\uff1a"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_5","text":"","title":"\u76d1\u7763\u5b66\u4e60"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_6","text":"\u8f93\u5165\u7a7a\u95f4\uff1a\u8f93\u5165\u53ef\u80fd\u7684\u6240\u6709\u7684\u53d6\u503c\u7684\u96c6\u5408 \u8f93\u51fa\u7a7a\u95f4\uff1a\u8f93\u51fa\u53ef\u80fd\u7684\u53d6\u503c\u7684\u96c6\u5408 \u4e00\u4e2a\u6837\u672c\uff0c\u79f0\u4e3a\u4e00\u4e2a\u5b9e\u4f8b \\(x\\) , \\(x\\) \u7531\u7279\u5f81\u5411\u91cf\u8868\u793a\uff1a \\(x = [x^{(1)},x^{(2)},x^{(3)},...,x^{(n)}]^T\\) \u6570\u636e\u96c6\uff1a \\(T=\\left\\{\\left(x_{1}, y_{1}\\right),\\left(x_{2}, y_{2}\\right), \\cdots,\\left(x_{N}, y_{N}\\right)\\right\\}\\) \u9488\u5bf9\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\uff0c\u9884\u6d4b\u4efb\u52a1\u6709\u4e0d\u540c\u7684\u540d\u79f0\uff1a1. \u56de\u5f52\u4efb\u52a1\uff0c2. \u5206\u7c7b\u95ee\u9898\uff0c3. \u6807\u6ce8\u95ee\u9898\u3002","title":"\u57fa\u672c\u6982\u5ff5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_7","text":"\\[ P(X,Y) \\] \u8f93\u5165\u53d8\u91cf\u548c\u8f93\u51fa\u53d8\u91cf\u662f\u4f9d\u636e\u8054\u5408\u6982\u7387\u5206\u5e03\u4ea7\u751f\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u57fa\u672c\u5047\u8bbe\u3002","title":"\u8054\u5408\u6982\u7387\u5206\u5e03"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_8","text":"\u5047\u8bbe\u7a7a\u95f4\u5c31\u662fx\u662f\u5982\u4f55\u6620\u5c04\u5230y\u7684\uff0c\u8fd9\u662f\u672a\u77e5\u7684\u3002\u6211\u4eec\u4f7f\u7528\u6a21\u578b\u6765\u201c\u8fd1\u4f3c\u201d\u8fd9\u4e2a\u7a7a\u95f4\u3002 \u5206\u4e3a \u6982\u7387\u6a21\u578b \u548c \u975e\u6982\u7387\u6a21\u578b \uff1a $$ Y=f(x)\\ P(y|x) $$ \u51b3\u7b56\u51fd\u6570 \uff0c \u6761\u4ef6\u6982\u7387 \u5c31\u662f\u6211\u4eec\u9700\u8981\u5b66\u4e60\u7684\u6a21\u578b\u3002","title":"\u5047\u8bbe\u7a7a\u95f4\uff1a"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_9","text":"\u7edf\u8ba1\u5b66\u4e60 = \u6a21\u578b + \u7b56\u7565 + \u7b97\u6cd5","title":"\u7edf\u8ba1\u5b66\u4e60\u7684\u4e09\u8981\u7d20"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_10","text":"\u5047\u8bbe\u7a7a\u95f4 \u5305\u542b\u6240\u6709\u53ef\u80fd\u7684 \u51b3\u7b56\u51fd\u6570 \u4ee5\u53ca \u6761\u4ef6\u6982\u7387 \u5206\u5e03\uff1a $$ \\mathcal{F}=\\left{f \\mid Y=f_{\\theta}(X), \\theta \\in \\mathbf{R}^{n}\\right}\\ \\mathcal{F}=\\left{P \\mid P_{\\theta}(Y \\mid X), \\theta \\in \\mathbf{R}^{n}\\right} $$","title":"\u6a21\u578b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_11","text":"\u635f\u5931\u51fd\u6570 \u7528\u4e8e\u5ea6\u91cf\u6a21\u578b\u9884\u6d4b\u4e00\u6b21\u7684\u597d\u574f\uff1b \u98ce\u9669\u51fd\u6570 \u5ea6\u91cf\u5e73\u5747\u610f\u4e49\u4e0b\u6a21\u578b\u9884\u6d4b\u7684\u597d\u574f\u3002 \u5e38\u7528\u7684\u635f\u5931\u51fd\u6570\uff1a 0-1\u635f\u5931\u51fd\u6570 \u5e73\u65b9\u635f\u5931\u51fd\u6570 \u7edd\u5bf9\u635f\u5931\u51fd\u6570 \u5bf9\u6570\u635f\u5931\u51fd\u6570\uff0c\u6982\u7387\u6a21\u578b \u671f\u671b\u635f\u5931 \uff1a X,Y \u4ece\u8054\u5408\u6982\u7387P\u4e2d\u751f\u6210\uff1a $$ R_{\\exp }(f)=E_{P}[L(Y, f(X))]=\\int_{x \\times y} L(y, f(x)) P(x, y) \\mathrm{d} x \\mathrm{~d} y $$ \u5f88\u663e\u7136\uff0c\u6211\u4eec\u5e76\u4e0d\u77e5\u9053\u8054\u5408\u6982\u7387\u5206\u5e03P\uff0c\u6240\u4ee5\u6211\u4eec\u65e0\u6cd5\u8ba1\u7b97\u671f\u671b\u635f\u5931\u3002\u6211\u4eec\u91c7\u7528\u8499\u7279\u5361\u6d1b\u65b9\u6cd5\uff0c\u6c42\u671f\u671b\u7684\u8fd1\u4f3c\uff1a $$ E_P(X)\\approx 1/n\\sum^n_{i=1} X_i $$ \u90a3\u4e48\u671f\u671b\u635f\u5931\u7684\u8fd1\u4f3c\uff0c \u7ecf\u9a8c\u635f\u5931 \u4e3a\uff1a $$ R_{\\mathrm{emp}}(f)=\\frac{1}{N} \\sum_{i=1}^{N} L\\left(y_{i}, f\\left(x_{i}\\right)\\right) $$ \u9009\u62e9\u6a21\u578b\u7684\u51c6\u5219\uff1a \u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u5316 \\[ \\min _{f \\in \\mathcal{F}} \\frac{1}{N} \\sum_{i=1}^{N} L\\left(y_{i}, f\\left(x_{i}\\right)\\right) \\] \u7ed3\u6784\u98ce\u9669\u6700\u5c0f\u5316 \\[ R_{\\mathrm{smm}}(f)=\\frac{1}{N} \\sum_{i=1}^{N} L\\left(y_{i}, f\\left(x_{i}\\right)\\right)+\\lambda J(f) \\] \\[ \\min _{f \\in \\mathcal{F}} \\frac{1}{N} \\sum_{i=1}^{N} L\\left(y_{i}, f\\left(x_{i}\\right)\\right)+\\lambda J(f) \\]","title":"\u7b56\u7565"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_12","text":"\u6839\u636e\u7b56\u7565\uff0c\u627e\u5230\u5047\u8bbe\u7a7a\u95f4\u4e2d\u7684\u6700\u4f18\u6a21\u578b\u3002","title":"\u7b97\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_13","text":"\u6b63\u5219\u5316 \u4ea4\u53c9\u9a8c\u8bc1 \u7b80\u5355\u4ea4\u53c9\u9a8c\u8bc1 s\u6298\u4ea4\u53c9\u9a8c\u8bc1 \u7559\u4e00\u4ea4\u53c9\u9a8c\u8bc1 \u7559\u4e00\u4ea4\u53c9\u9a8c\u8bc1","title":"\u6a21\u578b\u8bc4\u4f30\u4e0e\u6a21\u578b\u9009\u62e9"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_14","text":"\u7531\u8be5\u65b9\u6cd5\u5b66\u4e60\u5230\u7684\u6a21\u578b\u5bf9\u672a\u77e5\u6570\u636e\u7684\u9884\u6d4b\u80fd\u529b\u3002","title":"\u6cdb\u5316\u80fd\u529b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_15","text":"\u751f\u6210\u6a21\u578b\u7684\u5b66\u4e60\u76ee\u6807\u662f\u8054\u5408\u6982\u7387\u5206\u5e03 \\(P(X,Y)\\) \uff0c\u6700\u540e\u6c42\u51fa\u6761\u4ef6\u6982\u7387\u5206\u5e03 \u4f8b\u5b50\u6709\uff1a\u6734\u7d20\u8d1d\u53f6\u65af\u6cd5\uff0c\u9690\u9a6c\u5c14\u53ef\u592b\u6a21\u578b \u5224\u522b\u6a21\u578b\u76f4\u63a5\u5b66\u4e60 \\(f(X),P(Y|X)\\) , \u4f8b\u5b50\u6709\uff1ak\u8fd1\u90bb\uff0c\u611f\u77e5\u673a\uff0c\u51b3\u7b56\u6811\uff0c\u903b\u8f91\u65af\u8482\u56de\u5f52\uff0c\u6700\u5927\u71b5\u6a21\u578b\uff0c\u652f\u6301\u5411\u91cf\u673a\uff0c\u63d0\u5347\u65b9\u6cd5\u7b49\u3002","title":"\u751f\u6210\u6a21\u578b\u4e0e\u5224\u522b\u6a21\u578b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_16","text":"\u4e8c\u5206\u7c7b\u95ee\u9898\u7684\u8bc4\u4ef7\u6307\u6807\uff1a \u7cbe\u786e\u7387\uff08\u9884\u6d4b\u6b63\uff0c\u6b63\u786e\u7684\u6982\u7387\uff09 \u53ec\u56de\u7387\uff08\u771f\u6b63\u7684\u6b63\u4e2d\uff0c\u9884\u6d4b\u5230\u7684\uff09 F1\u503c","title":"\u5206\u7c7b\u95ee\u9898"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_17","text":"\u6807\u6ce8\u95ee\u9898\u5176\u5b9e\u5c31\u662f\u591a\u5206\u7c7b\u95ee\u9898\u3002","title":"\u6807\u6ce8\u95ee\u9898"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_18","text":"\u51fd\u6570\u62df\u5408","title":"\u56de\u5f52\u95ee\u9898"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_19","text":"","title":"\u611f\u77e5\u673a"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_20","text":"\\[ f(x)=\\operatorname{sign}(w \\cdot x+b) \\] \\[ \\operatorname{sign}(x)= \\begin{cases}+1, & x \\geqslant 0 \\\\ -1, & x<0\\end{cases} \\]","title":"\u6a21\u578b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_21","text":"\u5047\u8bbe\u6570\u636e\u662f\u7ebf\u6027\u53ef\u5206\u7684 \u635f\u5931\u51fd\u6570\u5199\u4e3a\uff1a $$ L(w, b)=-\\sum_{x_{i} \\in M} y_{i}\\left(w \\cdot x_{i}+b\\right) $$","title":"\u7b56\u7565"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_22","text":"\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u6cd5","title":"\u7b97\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#k","text":"","title":"K\u8fd1\u90bb"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_23","text":"\u8ddd\u79bb\u5ea6\u91cf\uff0ck\u503c\uff0c\u5206\u7c7b\u51b3\u7b56\u89c4\u5219\u3002 \u5982\u679ck=1\uff0c\u90a3\u4e48\u5c31\u662f\u6700\u8fd1\u90bb\u7b97\u6cd5\uff0c\u9884\u6d4b\u4e3a\u548c\u6700\u8fd1\u7684 \\(x\\) \u4e00\u7c7b\u3002 \u5982\u679ck = k\uff0c\u90a3\u4e48\u5c31\u627e\u5230\u4e0ex\u6700\u8fd1\u7684k\u4e2ax\uff0c\u8fdb\u884c\u6295\u7968\u9009\u62e9\u3002","title":"\u6a21\u578b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_24","text":"\u8861\u91cf\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u6216\u8005\u8bf4\u76f8\u4f3c\u5ea6\uff1a Lp\u8ddd\u79bb \u6b27\u5f0f\u8ddd\u79bb\uff0c\u5e73\u65b9\u5f00\u6839\u53f7 \u66fc\u54c8\u987f\u8ddd\u79bb\uff0c\u5dee\u503c\u7684\u7edd\u5bf9\u503c\u76f8\u52a0","title":"\u8ddd\u79bb\u5ea6\u91cf"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#k_1","text":"\u4e00\u822c\u91c7\u7528\u4ea4\u53c9\u9a8c\u8bc1\u6765\u786e\u5b9ak\u503c","title":"k\u503c"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_25","text":"\u4e00\u822c\u662f\u591a\u6570\u8868\u51b3","title":"\u5206\u7c7b\u51b3\u7b56\u89c4\u5219"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_26","text":"\u6700\u4f18\u5316k\u503c\uff0c\u4f7f\u5f97 $$ \\sum_{x_{i} \\in N_{k}(x)} I\\left(y_{i}=c_{j}\\right) $$ \u8fbe\u5230\u6700\u5927","title":"\u7b56\u7565"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_27","text":"k\u8fd1\u90bb\u7684\u53c2\u6570\u662fk\uff0c\u4e00\u822c\u91c7\u7528\u591a\u6298\u4ea4\u53c9\u9a8c\u8bc1\u7684\u65b9\u5f0f\u6765\u786e\u5b9a\uff0c\u4e3b\u8981\u9762\u4e34\u7684\u95ee\u9898\u662f\u5982\u4f55\u5bf9\u6570\u636e\u8fdb\u884c\u9ad8\u6548\u7684k\u8fd1\u90bb\u641c\u7d22\u3002","title":"\u7b97\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#kd","text":"kd\u6811\u7528\u4e8e\u5bf9\u6570\u636e\u8fdb\u884c\u9ad8\u6548\u7684k\u8fd1\u90bb\u641c\u7d22\u3002 kd\u6811\u662f\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u7528\u4e8e\u5b9e\u73b0\u641c\u7d22\u3002 kd\u6811\u7684\u5e73\u5747\u641c\u7d22\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(logn)\\) , \u76f8\u6bd4\u8d77\u5168\u90e8\u904d\u5386\u4e00\u904d\uff0c\u8282\u7ea6\u65f6\u95f4\u3002 \u4e8c\u53c9\u6811\u7684\u5de6\u679d\u53f6\u5c0f\u4e8e\u7236\u8282\u70b9\uff0c\u53f3\u679d\u53f6\u5927\u4e8e\u7236\u8282\u70b9\uff0c\u901a\u8fc7\u4e0e\u7236\u8282\u70b9\u6bd4\u8f83\uff0c\u9012\u5f52\u5730\u5411\u5de6\u53f3\u679d\u53f6\u9012\u5f52\u3002\u8fbe\u5230\u53f6\u5b50\u8282\u70b9\u6216\u8005\u76ee\u6807\u503c\u540e\uff0c\u518d\u56de\u6eaf\u627e\u5230k\u8fd1\u90bb\u3002\u6709\u70b9\u7c7b\u4f3c\u4e8e \u5806 \u7684\u601d\u60f3","title":"\u9884\u6d4b\uff08kd\u6811\uff09"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_28","text":"","title":"\u6734\u7d20\u8d1d\u53f6\u65af"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_29","text":"\u6734\u7d20\u8d1d\u53f6\u65af\u7684\u5047\u8bbe\uff1a \u6bcf\u4e2a\u7279\u5f81\u90fd\u662f\u7b26\u5408\u6761\u4ef6\u72ec\u7acb \uff0c\u6240\u4ee5\u5176\u8d1d\u53f6\u65af\u7f51\u7edc\u7ed3\u6784\u662f\u4e2a\u7b80\u5355\u7684\u6811\u7ed3\u6784\u3002 \u6734\u7d20\u8d1d\u53f6\u65af\u6cd5\u662f\u4e00\u4e2a \u751f\u6210\u6a21\u578b \uff0c\u7528\u4e8e\u5b66\u4e60 \\(P(X, Y)\\) \u6839\u636e\u4e0a\u9762\u7684\u5047\u8bbe\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u51fa \u4f3c\u7136\u6982\u7387 \uff1a $$ P(X|Y)=P(x_1,x_2,...,x_n|Y) $$ \u4e5f\u53ef\u4ee5\u7ed9\u5b9a \u5148\u9a8c\u6982\u7387 \uff1a $$ P(Y) $$ \u90a3\u4e48\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa \u540e\u9a8c\u6982\u7387 \uff1a $$ P(Y|X) \\propto P(X|Y)P(Y)=P(x_1,x_2,...,x_n|Y)P(Y) $$ \\[ P(Y|X) \\propto P(x_1|Y)P(x_2|Y)P(X_3|Y)...P(Y) \\] \u6a21\u578b\u5305\u62ec\u6982\u7387\u5206\u5e03\u7684\u5f62\u72b6\u53ca\u5176\u53c2\u6570\uff0c\u6709\u4e86\u8fd9\u4e9b\u53ef\u4ee5\u7528x\u9884\u6d4by\uff0c\u4e5f\u53ef\u4ee5\u7531y\u8ba1\u7b97x\uff0c\u8fd9\u5c31\u662f\u751f\u6210\u6a21\u578b\u3002 \u5206\u7c7b\u5668\u53ef\u4ee5\u5199\u4e3a\uff1a $$ y=f(x)=\\arg \\max {c {k}} \\frac{P\\left(Y=c_{k}\\right) \\prod_{j} P\\left(X^{(j)}=x^{(j)} \\mid Y=c_{k}\\right)}{\\sum_{k} P\\left(Y=c_{k}\\right) \\prod_{j} P\\left(X^{(j)}=x^{(j)} \\mid Y=c_{k}\\right)} $$ \u53ef\u4ee5\u770b\u5230\uff0c\u5176\u5b9e\u662f\u770b\u54ea\u4e00\u4e2a\u7c7b\u522b \\(c_k\\) \uff0c\u53ef\u4ee5\u8ba9 \u540e\u9a8c\u6982\u7387 \u8fbe\u5230\u6700\u5927\u3002","title":"\u6a21\u578b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_30","text":"\u6700\u5927\u4f3c\u7136\u4f30\u8ba1 \uff1a\u6211\u4eec\u9700\u8981\u77e5\u9053\u6761\u4ef6\u6982\u7387\u4e0e\u5148\u9a8c\u6982\u7387\uff0c\u53ef\u4ee5\u91c7\u7528\u6781\u5927\u4f3c\u7136\u6cd5\u8fdb\u884c\u4f30\u8ba1\u3002 \u5bf9\u4e8e\u79bb\u6563\u7684\u904d\u5386\uff0c\u6781\u5927\u4f3c\u7136\u53ef\u4ee5\u6839\u636e\u89c2\u6d4b\u6837\u672c\u4f30\u8ba1\u51fa\u8868\u683c\u5f0f\u7684\u6761\u4ef6\u6982\u7387\u4e0e\u5148\u9a8c\u6982\u7387\u3002 \u8d1d\u53f6\u65af\u4f30\u8ba1 \uff1a\u91c7\u7528\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\uff0c\u53ef\u80fd\u51fa\u73b0\u6982\u7387\u503c\u4e3a0\u7684\u6781\u7aef\u60c5\u51b5\u3002 \u8d1d\u53f6\u65af\u4f30\u8ba1\u7684\u6761\u4ef6\u6982\u7387\u5982\u6b64\u8868\u793a\uff0c \u62c9\u666e\u62c9\u65af\u5e73\u6ed1 $$ P_{\\lambda}\\left(X^{(j)}=a_{j l} \\mid Y=c_{k}\\right)=\\frac{\\sum_{i=1}^{N} I\\left(x_{i}^{(j)}=a_{j l}, y_{i}=c_{k}\\right)+\\lambda}{\\sum_{i=1}^{N} I\\left(y_{i}=c_{k}\\right)+S_{j} \\lambda} $$","title":"\u7b56\u7565"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_31","text":"\u4e3b\u8981\u662f\u6982\u7387\u5206\u5e03\u7684\u4f30\u8ba1\u4e0e\u8ba1\u7b97","title":"\u7b97\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_32","text":"\u7279\u5f81\u53d8\u91cf\u7684\u76f8\u4e92\u72ec\u7acb\uff0c\u6781\u5927\u5730\u7f29\u5c0f\u4e86\u6761\u4ef6\u6982\u7387\u7684\u590d\u6742\u5ea6","title":"\u603b\u7ed3\uff1a"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_33","text":"\u51b3\u7b56\u6811\u662f\u4e00\u79cd\u57fa\u672c\u7684\u5206\u7c7b\u3001\u56de\u5f52\u65b9\u6cd5\u3002 \u7279\u70b9\uff1a\u6a21\u578b\u5177\u6709\u53ef\u8bfb\u6027\uff0c\u5206\u7c7b\u901f\u5ea6\u5feb\u3002","title":"\u51b3\u7b56\u6811"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_34","text":"\u51b3\u7b56\u6811\u662fif-then\u89c4\u5219\u7684\u96c6\u5408 \u8282\u70b9\u548c\u6709\u5411\u8fb9\u7ec4\u6210\u3002 \u4e92\u65a5\u4e14\u5b8c\u5907\uff1a\u6bcf\u4e00\u4e2a\u53ef\u80fd\u7684\u5b9e\u4f8b\u90fd\u8981\u88ab\u5305\u62ec\uff0c\u800c\u4e14\u53ea\u80fd\u88ab\u4e00\u6761\u8def\u5f84\u5305\u62ec\u3002","title":"\u6a21\u578b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_35","text":"\u51b3\u7b56\u6811\u7684\u5b66\u4e60\u672c\u8d28\u4e0a\u662f\u4ece\u8bad\u7ec3\u96c6\u5408\u4e0a\u5f52\u7eb3\u51fa\u4e00\u7ec4\u5206\u7c7b\u89c4\u5219\uff0c\u4e0e\u8bad\u7ec3\u96c6\u4e0d\u77db\u76fe\u7684\u5206\u7c7b\u89c4\u5219\u4e0d\u6b62\u4e00\u79cd\uff0c\u4e5f\u53ef\u80fd\u4e00\u4e2a\u90fd\u6ca1\u6709\u3002 \u7279\u5f81\u9009\u62e9\uff0c\u51b3\u7b56\u6811\u7684\u751f\u6210\uff0c\u526a\u679d\u8fd9\u4e09\u4e2a\u8fc7\u7a0b","title":"\u7b56\u7565"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_36","text":"\u6839\u636e\u4fe1\u606f\u8bba\u7684\u539f\u7406\u8fdb\u884c\u9009\u62e9\u3002 \u71b5 \uff1a\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\u7684\u71b5\u63cf\u8ff0\u4e86\u5176\u201c\u4e0d\u786e\u5b9a\u5ea6\u201d\u3002 \u6761\u4ef6\u71b5 \uff1a\u63cf\u8ff0\u4e86\u5728\u7ed9\u5b9a\u67d0\u4e2a\u53d8\u91cf\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u53d8\u91cf\u7684\u4e0d\u786e\u5b9a\u6027\u3002 \u4fe1\u606f\u589e\u76ca \uff1a\u5728\u672a\u7ed9\u5b9aY\uff0c\u4e0e\u7ed9\u5b9aY\uff0c\u8fd9\u4e24\u4e2a\u60c5\u51b5\u4e0b\uff0cX\u7684\u71b5\u7684\u5dee\u3002 $$ g(D, A)=H(D)-H(D \\mid A) $$ \u4fe1\u606f\u589e\u76ca\u6bd4 \uff1a $$ g_{R}(D, A)=\\frac{g(D, A)}{H(D)} $$ \u6839\u636e\u4fe1\u606f\u589e\u76ca\u6765\u8fdb\u884c\u7279\u5f81\u9009\u62e9 \uff1a\u6570\u636e\u96c6D\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u53d8\u91cf\u7684\u4fe1\u606f\u589e\u76ca\uff0c\u9009\u62e9\u4fe1\u606f\u589e\u76ca\u6700\u5927\u7684\u7279\u5f81\u3002 \u8ba1\u7b97\u4fe1\u606f\u589e\u76ca\uff1a \u8ba1\u7b97D\u7684\u71b5 \u8ba1\u7b97A\u5bf9\u6570\u636e\u96c6D\u7684\u6761\u4ef6\u71b5 \u6c42\u5dee \u4fe1\u606f\u589e\u76ca\u6700\u5927\u7684\u53d8\u91cfA\uff1a\u5982\u679c\u7ed9\u5b9aA\uff0c\u4f1a\u4f7f\u5f97\u6570\u636e\u7684\u71b5\u51cf\u5c0f\u6700\u591a\u3002","title":"\u7279\u5f81\u9009\u62e9\uff1a"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_37","text":"","title":"\u7b97\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#id3","text":"\u4f7f\u7528\u4fe1\u606f\u589e\u76ca\u6765\u9009\u62e9\u7279\u5f81\uff0c\u9012\u5f52\u6784\u5efa\u51b3\u7b56\u6811\u3002 \u8f93\u5165\uff1a\u6570\u636e\u96c6D\uff0c\u7279\u5f81\u96c6A\uff0c\u9608\u503c \\(\\mathcal{E}\\) \u8ba1\u7b97\u6700\u5927\u4fe1\u606f\u589e\u76ca\u7684\u7279\u5f81 \\(A_g\\) \u5982\u679c \\(A_g>\\mathcal{E}\\) \uff1a \u4f9d\u636e\u8be5\u7279\u5f81\u5c06D\u8fdb\u884c\u5206\u5272\uff0c\u5728\u4ee5\u6b64\u6570\u636e\u96c6\u9012\u5f52\u6267\u884cID3 \u5982\u679c\u5c0f\u4e8e \\(\\mathcal{E}\\) \uff0c \u4f5c\u4e3a\u53f6\u5b50\u8282\u70b9","title":"ID3\u7b97\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_38","text":"\u6700\u5c0f\u5316\u6574\u68f5\u6811\u7684\u635f\u5931\u51fd\u6570\uff1a $$ C_{\\alpha}(T)=\\sum_{t=1}^{|T|} N_{t} H_{t}(T)+\\alpha|T| $$ \\(H()\\) \u662f\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u4e0a\u7684\u7ecf\u9a8c\u71b5\uff0c\u5c55\u5f00\u5199\u4e3a\uff1a $$ H_{t}(T)=-\\sum_{k} \\frac{N_{t k}}{N_{t}} \\log \\frac{N_{t k}}{N_{t}} $$ \u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u53f6\u5b50\u8282\u70b9\u4e0a\u76f4\u843d\u4e86\u4e00\u7c7b\u6837\u672c\uff0c\u90a3\u4e48\u7ecf\u9a8c\u71b5\u4e3a0\u3002 \\(N()\\) \u662f\u8be5\u53f6\u5b50\u8282\u70b9\u7684\u6837\u672c\u70b9 \u540e\u9762\u662f\u4e00\u4e2a\u5bf9\u590d\u6742\u6811\u7684\u60e9\u7f5a \u901a\u8fc7\u51cf\u5c11\u679d\u53f6\u6765\u6700\u5c0f\u5316\u6574\u68f5\u6811\u7684\u635f\u5931\u51fd\u6570\u3002","title":"\u526a\u679d\u7b97\u6cd5\uff1a"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#cart","text":"\u5224\u522b\u6a21\u578b\uff0c\u5b66\u4e60\u51fa\u7684\u662fP(Y|X)\u3002 \u57fa\u4e8e\u6570\u636e\u96c6\u751f\u6210\u51b3\u7b56\u6811\uff0c\u51b3\u7b56\u6811\u8981\u5c3d\u91cf\u5927 \u51b3\u7b56\u6811\u526a\u679d\uff0c\u7528\u9a8c\u8bc1\u6570\u636e\u96c6\u5bf9\u5df2\u7ecf\u751f\u6210\u7684\u6811\u8fdb\u884c\u526a\u679d\u5e76\u9009\u62e9\u6700\u4f18\u5b50\u6811\uff0c\u8fd9\u65f6\u4f7f\u7528\u635f\u5931\u51fd\u6570\u6700\u5c0f\u4f5c\u4e3a\u526a\u679d\u6807\u51c6\u3002","title":"CART\u7b97\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_39","text":"\u6811\u6a21\u578b\u5b9e\u9645\u4e0a\u662f\u5bf9\u7a7a\u95f4\u7684\u5212\u5206\uff0c\u5047\u8bbe\u5212\u5206\u4e3aM\u4e2a\u5355\u5143\uff0c\u6bcf\u4e2a\u5355\u5143\u5bf9\u5e94\u7684\u8f93\u51fa\u503c\u4e3a \\(c_m\\) $$ f(x)=\\sum_{m=1}^{M} c_{m} I\\left(x \\in R_{m}\\right) $$ \u635f\u5931\u51fd\u6570\uff1a $$ \\hat{c} {m}=\\operatorname{ave}\\left(y {i} \\mid x_{i} \\in R_{m}\\right) $$ \u5982\u4f55\u627e\u5230\u6700\u4f18\u5207\u5206\u70b9\uff0c\u5c31\u662f\u6784\u5efa\u6811\u7684\u8fc7\u7a0b\uff1a \u5bf9\u4e8e \\(x^{(j)}\\) \u6765\u8bf4\uff0c\u5207\u5206\u4e3a\u4e24\u90e8\u5206 \\(R_1\\) , \\(R_2\\) \uff1a $$ R_{1}(j, s)=\\left{x \\mid x^{(j)} \\leqslant s\\right} \\quad \\text { \u548c } \\quad R_{2}(j, s)=\\left{x \\mid x^{(j)}>s\\right} $$ \u6700\u4f18\u5207\u5206\u70b9\u4e3a\uff1a $$ \\min {j, s}\\left[\\min {c_{1}} \\sum_{x_{i} \\in R_{1}(j, s)}\\left(y_{i}-c_{1}\\right)^{2}+\\min {c {2}} \\sum_{x_{i} \\in R_{2}(j, s)}\\left(y_{i}-c_{2}\\right)^{2}\\right] $$","title":"\u56de\u5f52\u6811"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_40","text":"\u904d\u5386\u904d\u5386 \\(x_j\\) \u4e0e\u5207\u5206\u70b9 \\(s\\) \uff0c\u4f7f\u4e4b\u635f\u5931\u51fd\u6570\u6700\u5c0f \\[ \\min _{j, s}\\left[\\min _{c_{1}} \\sum_{x_{i} \\in R_{1}(j, s)}\\left(y_{i}-c_{1}\\right)^{2}+\\min _{c_{2}} \\sum_{x_{i} \\in R_{2}(j, s)}\\left(y_{i}-c_{2}\\right)^{2}\\right] \\] \u6839\u636e\u5df2\u7ecf\u786e\u5b9a\u597d\u7684j, s \u786e\u5b9a\u5212\u5206\u533a\u57df\u7684\u8f93\u51fa\u503c \u7ee7\u7eed\u5f80\u4e0b\u5212\u5206\uff0c\u76f4\u5230\u6ee1\u8db3\u7ec8\u6b62\u6761\u4ef6\u3002","title":"\u6700\u5c0f\u4e8c\u4e58\u56de\u5f52\u6811\uff1a"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_41","text":"\u5206\u7c7b\u6811\u7528\u57fa\u5c3c\u7cfb\u6570\u6765\u9009\u62e9\u6700\u4f18\u7279\u5f81\u3002 $$ \\operatorname{Gini}(p)=\\sum_{k=1}^{K} p_{k}\\left(1-p_{k}\\right)=1-\\sum_{k=1}^{K} p_{k}^{2} $$ \u5bf9\u4e8e\u4e00\u4e2a \u6837\u672c\u96c6 \uff08\u5176\u5b9e\u6307\u7684\u662f \\(P(D)\\) \uff09\uff0c\u5176\u57fa\u5c3c\u7cfb\u6570\u4e3a\uff1a $$ \\operatorname{Gini}(D)=1-\\sum_{k=1}^{K}\\left(\\frac{\\left|C_{k}\\right|}{|D|}\\right)^{2} $$ \u57fa\u5c3c\u7cfb\u6570\u8868\u793a\u96c6\u5408\u7684\u4e0d\u786e\u5b9a\u6027\uff0c\u57fa\u5c3c\u6307\u6570 \\(Gini(D,A)\\) \u8868\u793a\u7ecf\u8fc7A\u5206\u5272\u540e\u96c6\u5408D\u7684\u4e0d\u786e\u5b9a\u6027\u3002 \\(D_1\\) \u548c \\(D_2\\) \u662f\u4f9d\u636e\u7279\u5f81A\u7684\u5206\u5272\u70b9a\u6765\u786e\u5b9a\u7684\u3002 $$ \\operatorname{Gini}(D, A)=\\frac{\\left|D_{1}\\right|}{|D|} \\operatorname{Gini}\\left(D_{1}\\right)+\\frac{\\left|D_{2}\\right|}{|D|} \\operatorname{Gini}\\left(D_{2}\\right) $$","title":"\u5206\u7c7b\u6811"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#cart_1","text":"\u904d\u5386\u5404\u4e2a\u7279\u5f81\uff0c\u4ee5\u53ca\u7279\u5f81a\u7684\u5206\u5272\u70b9\uff0c\u627e\u5230\u6700\u4f18\u7684A\uff0c\u4e0e\u5206\u5272\u70b9a\u3002 \u751f\u6210\u4e24\u4e2a\u5b50\u8282\u70b9 \u9012\u5f52\u7684\u4f7f\u7528\u8be5\u7b97\u6cd5\uff0c\u77e5\u9053\u8282\u70b9\u7684\u6837\u672c\u6570\u5c11\u4e8e\u9608\u503c","title":"CART\u751f\u6210\u7b97\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#cart_2","text":"\u8ba1\u7b97 \u5b50\u6811 \u7684\u635f\u5931\u51fd\u6570\uff1a $$ C_{\\alpha}(T)=C(T)+\\alpha|T| $$ \u67d0\u4e2a \u8282\u70b9 \u7684\u635f\u5931\u51fd\u6570\uff1a $$ C_{\\alpha}(t)=C(t)+\\alpha $$ \u5982\u679c\u8bf4T\u662f\u4e00\u4e2a\u68f5\u6811\uff0ct\u662f\u4e00\u4e2a\u5355\u8282\u70b9\uff0c\u90a3\u4e48\u5b58\u5728\u4e00\u4e2a\u8db3\u591f\u5927\u7684 \\(\\alpha\\) \u4f7f\u5f97\uff1a $$ C_{\\alpha}\\left(T_{t}\\right)=C_{\\alpha}(t) $$ \u6b64\u65f6\uff1a $$ \\alpha=\\frac{C(t)-C\\left(T_{t}\\right)}{\\left|T_{t}\\right|-1} $$ \u628a\u8fd9\u4e2a\u6570\u503c\u4f5c\u4e3a\u526a\u679d\u7684\u6807\u51c6g(t): $$ g(t)=\\frac{C(t)-C\\left(T_{t}\\right)}{\\left|T_{t}\\right|-1} $$ \u8fd9\u4e2a\u6570\u5b57\u8d8a\u5927\uff0c\u8bf4\u660e\u8d8a\u9700\u8981\u4f9d\u8d56\u6b63\u5219\u9879\u4f18\u52bf\uff0c\u6240\u4ee5\u6700\u5c0f\u7684 \\(g(t)\\) , \u662f\u6211\u4eec\u9700\u8981\u51cf\u53bb\u7684\u3002 \u8d8a\u662f\u62e5\u6709\u5927\u7684 \\(\\alpha\\) \u8d8a\u662f\u4f1a\u526a\u679d\uff0c\u6240\u4ee5\u5bf9\u5e94\u4e8e \\(\\alpha_1, \\alpha_2,...,\\alpha_n\\) \u90fd\u6709\u4e00\u9897\u5b50\u6811 \u627e\u5230\u6700\u4f18\u5b50\u6811\uff08\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\uff09\uff0c \u5c31\u53ef\u4ee5\u786e\u5b9a \\(\\alpha\\) \u4e86\u3002","title":"CART\u526a\u679d"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#logistic","text":"logistic distribution\uff1a $$ \\begin{aligned} &F(x)=P(X \\leqslant x)=\\frac{1}{1+\\mathrm{e}^{-(x-\\mu) / \\gamma}} \\ &f(x)=F^{\\prime}(x)=\\frac{\\mathrm{e}^{-(x-\\mu) / \\gamma}}{\\gamma\\left(1+\\mathrm{e}^{-(x-\\mu) / \\gamma}\\right)^{2}} \\end{aligned} $$","title":"Logistic \u56de\u5f52"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_42","text":"\u4e8c\u9879\u903b\u8f91\u65af\u8482\u56de\u5f52\u662f\u4e00\u4e2a\u5224\u522b\u6a21\u578b\uff0c\u62df\u5408P(Y|X)\uff0c\u5176\u6a21\u578b\u7684\u663e\u5f0f\u8868\u8fbe\u4e3a\uff1a $$ \\begin{aligned} &P(Y=1 \\mid x)=\\frac{\\exp (w \\cdot x+b)}{1+\\exp (w \\cdot x+b)} \\ &P(Y=0 \\mid x)=\\frac{1}{1+\\exp (w \\cdot x+b)} \\end{aligned} $$ \u6709\u53c2\u6570 \\(w,b\\) \u3002\u53ef\u4ee5\u5c06b\u6574\u5408\u5230\u8f93\u5165\u5411\u91cf\u4e2d\uff0c\u5f97\u5230 $$ \\begin{aligned} &P(Y=1 \\mid x)=\\frac{\\exp (w \\cdot x)}{1+\\exp (w \\cdot x)} \\ &P(Y=0 \\mid x)=\\frac{1}{1+\\exp (w \\cdot x)} \\end{aligned} $$ \u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u7684\u6982\u7387\u4e0e\u4e0d\u53d1\u751f\u7684\u6982\u7387\u7684\u6bd4\u503c\uff0c\u662f\u8be5\u4e8b\u4ef6\u7684 \u51e0\u7387 \uff08odds\uff09\u3002 $$ odds = p/(1-p) $$ \u90a3\u4e48\u5bf9\u4e8e\u903b\u8f91\u65af\u8482\u56de\u5f52\u800c\u8a00\uff0c\u4e8b\u4ef6\u7684 \u5bf9\u6570\u51e0\u7387 \uff1a $$ \\log \\frac{P(Y=1 \\mid x)}{1-P(Y=1 \\mid x)}=w \\cdot x $$ \u8fd9\u65e2\u662f\u8bf4\uff1a\u903b\u8f91\u65af\u8482\u6a21\u578b\u8f93\u51faY=1\u7684 \u5bf9\u6570\u51e0\u7387 \u662f\u8f93\u5165\u5411\u91cfx\u7684 \u7ebf\u6027\u51fd\u6570 \u3002","title":"\u4e8c\u9879\u5206\u7c7b\u6a21\u578b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_43","text":"\u53c2\u6570\u4f7f\u7528\u6700\u5927\u4f3c\u7136\u4f30\u8ba1\u3002 \u8bb0\uff1a $$ P(Y=1 \\mid x)=\\pi(x), \\quad P(Y=0 \\mid x)=1-\\pi(x) $$ \u4f3c\u7136\u51fd\u6570\u5199\u4e3a\uff1a $$ \\prod_{i=1}^{N}\\left[\\pi\\left(x_{i}\\right)\\right]^{y_{i}}\\left[1-\\pi\\left(x_{i}\\right)\\right]^{1-y_{i}} $$ \u5c06\u5176\u5c55\u5f00\uff0c\u5e76\u7ed3\u5408\u4e0a\u6587\u63d0\u5230\u7684\u6027\u8d28\uff0c\u6700\u7ec8\u4f3c\u7136\u51fd\u6570\u53ef\u4ee5\u5199\u4e3a\uff1a $$ L(w) =\\sum_{i=1}^{N}\\left[y_{i}\\left(w \\cdot x_{i}\\right)-\\log \\left(1+\\exp \\left(w \\cdot x_{i}\\right)\\right]\\right. $$","title":"\u7b56\u7565"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_44","text":"\\[ \\max_w L(w) \\] \u4e00\u822c\u4f7f\u7528\u725b\u987f\u6cd5\u6216\u8005\u68af\u5ea6\u4e0b\u964d\u6cd5\u3002","title":"\u7b97\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_45","text":"\\[ \\begin{gathered} P(Y=k \\mid x)=\\frac{\\exp \\left(w_{k} \\cdot x\\right)}{1+\\sum_{k=1}^{K-1} \\exp \\left(w_{k} \\cdot x\\right)}, \\quad k=1,2, \\cdots, K-1 \\\\ P(Y=K \\mid x)=\\frac{1}{1+\\sum_{k=1}^{K-1} \\exp \\left(w_{k} \\cdot x\\right)} \\end{gathered} \\] \u524dK-1\u4e2a\u7684\u5206\u5b50\u662f \\(exp(w_k\\cdot x)\\) , \u7b2cK\u4e2a\u662f1\u3002","title":"\u591a\u9879\u5206\u7c7b\u6a21\u578b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_46","text":"\u71b5 \uff1a\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\u7684\u71b5\u63cf\u8ff0\u4e86\u5176\u201c\u4e0d\u786e\u5b9a\u5ea6\u201d\u3002 \u4e00\u4e2a\u6982\u7387\u5206\u5e03\u7684\u71b5\u8ba1\u7b97\u516c\u5f0f\uff1a $$ H(P)=-\\sum_{x} P(x) \\log P(x) $$ \u5f53X\u53d6\u5747\u5300\u5206\u5e03\u7684\u65f6\u5019\uff0c\u71b5\u6700\u5927\u3002 \u6761\u4ef6\u71b5 \uff1a\u63cf\u8ff0\u4e86\u5728\u7ed9\u5b9a\u67d0\u4e2a\u53d8\u91cf\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u53d8\u91cf\u7684\u4e0d\u786e\u5b9a\u6027\u3002 $$ H(Y \\mid X)=\\sum_{i=1}^{n} p\\left(x_{i}\\right) H\\left(Y \\mid X=x_{i}\\right)=-\\sum_{i=1}^{n} p\\left(x_{i}\\right) \\sum_{j=1}^{m} p\\left(y_{j} \\mid x_{i}\\right) \\log p\\left(y_{j} \\mid x_{i}\\right) $$ \u6700\u5927\u71b5\u53ef\u4ee5\u4f5c\u4e3a\u6211\u4eec\u6a21\u578b\u9009\u62e9\u7684\u51c6\u5219\u3002 \u73b0\u5047\u8bbe\u6570\u636e\u7684\u8054\u5408\u6982\u7387\u4e3a\uff1a $$ P(X,Y) $$ \u6839\u636e\u89c2\u6d4b\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 \u7ecf\u9a8c\u8054\u5408\u6982\u7387\u5206\u5e03 \u4e3a\uff1a $$ \\begin{aligned} &\\tilde{P}(X=x, Y=y)=\\frac{v(X=x, Y=y)}{N} \\ &\\tilde{P}(X=x)=\\frac{v(X=x)}{N} \\end{aligned} $$ \u5bf9\u4e8e\u5224\u522b\u6a21\u578b \\(P(y|x)\\) $$ \\sum_{x, y} \\tilde{P}(x) P(y \\mid x) f(x, y)=\\sum_{x, y} \\tilde{P}(x, y) f(x, y) $$ \u5bf9\u4e8e\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u7684\u6a21\u578b \\(P(y|x)\\) \uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u8ba4\u4e3a\u5b83\u662f\u201c\u6709\u6548\u201d\u7684\uff0c\u4f46\u4e0d\u4e00\u5b9a\u662f\u6700\u597d\u7684\u3002 \u4e3e\u4e2a\u4f8b\u5b50: \u5bf9\u4e8ex=0,y=? p(y=1|x=0)=1,p(y=1|x=0)=0 \u662f\u4e00\u79cd\u6a21\u578b\uff1b p(y=1|x=0)=0.75,p(y=1|x=0)=0.25 \u4e5f\u662f\u4e00\u79cd\u6a21\u578b\uff1b \u5b83\u4eec\u90fd\u53ef\u4ee5\u6b63\u786e\u5730\u4f30\u8ba1\u51fay=1\u8fd9\u4e2a\u7ed3\u679c\uff0c\u4f46\u662f\u54ea\u4e2a\u6a21\u578b\u66f4\u597d\u5462\uff1f \u8bb0 $$ \\mathcal{C} \\equiv\\left{P \\in \\mathcal{P} \\mid E_{P}\\left(f_{i}\\right)=E_{\\tilde{P}}\\left(f_{i}\\right), \\quad i=1,2, \\cdots, n\\right} $$ \u8fd9\u4e2a\u96c6\u5408\u91cc\u7684\u6240\u6709\u6a21\u578b\u90fd\u662f\u6709\u6548\u7684\uff0c\u5177\u6709\u6700\u5927\u71b5\u7684\u6a21\u578b\u4e3a\uff1a $$ H(P)=-\\sum_{x, y} \\tilde{P}(x) P(y \\mid x) \\log P(y \\mid x) $$ \u6700\u5927\u5316\u8fd9\u4e2a\u5f0f\u5b50\uff0c\u5f97\u5230\u7684P(Y|X)\u662f\u5177\u6709\u6700\u5927\u71b5\u7684\u201c\u6709\u6548\u201d\u6a21\u578b\u3002 \u8fd9\u5c31\u662f\u6700\u5927\u71b5\u6a21\u578b\u9009\u62e9\u3002","title":"\u6700\u5927\u71b5\u6a21\u578b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_47","text":"\u7528\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5\u8fdb\u884c\u6c42\u89e3\u3002\uff08\u7b49\u53f7\u7ea6\u675f\u662f\u4e00\u79cd\u5f3a\u7ea6\u675f\uff0c\u5982\u679c\u662f\u5c0f\u4e8e\u7b49\u4e8e\u7684\u5f31\u7ea6\u675f\u5219\u4f7f\u7528KKT\u5b9a\u7406\uff09","title":"\u7b56\u7565"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#svm","text":"","title":"\u652f\u6301\u5411\u91cf\u673aSVM"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_48","text":"SVM\u662f\u4e00\u79cd\u4e8c\u5206\u7c7b\u6a21\u578b\u3002 \u5f53\u6570\u636e\u7ebf\u6027\u53ef\u5206\u7684\u65f6\u5019\uff0c\u4f7f\u7528 \u8fc7\u786c\u95f4\u9694\u6700\u5927\u5316 \u5b66\u4e60\u4e00\u4e2a\u7ebf\u6027\u5206\u7c7b\u5668\uff1b \u5f53\u6570\u636e\u8fd1\u4f3c\u7ebf\u6027\u53ef\u5206\u65f6\uff0c\u4f7f\u7528 \u8f6f\u95f4\u9694\u6700\u5927\u5316 \u5b66\u4e60\u4e00\u4e2a\u7ebf\u6027\u5206\u7c7b\u5668\uff1b \u5f53\u6570\u636e \u7ebf\u6027\u4e0d\u53ef\u5206\u65f6\uff0c\u4f7f\u7528 \u6838\u65b9\u6cd5 \u548c \u8f6f\u95f4\u9694\u6700\u5927\u5316 \uff0c\u5b66\u4e60\u975e\u7ebf\u6027\u652f\u6301\u5411\u91cf\u673a\u3002","title":"\u6a21\u578b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_49","text":"\u5047\u8bbe\u6570\u636e\u662f\u7ebf\u6027\u53ef\u5206\u7684\uff0c\u8fd9\u662f\u4e00\u79cd\u975e\u5e38\u5f3a\u7684\u5047\u8bbe\u3002 \u5982\u679c\u8fd9\u4e2a\u8d85\u5e73\u9762\u4e3a\uff1a $$ w^{ } \\cdot x+b^{ }=0 $$ \u652f\u6301\u5411\u91cf\u673a\u6a21\u578b\u53ef\u5199\u4e3a\uff1a $$ f(x)=\\operatorname{sign}\\left(w^{ } \\cdot x+b^{ }\\right) $$","title":"\u7ebf\u6027\u53ef\u5206\u652f\u6301\u5411\u91cf\u673a"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_50","text":"\u51fd\u6570\u95f4\u9694\uff0c\u63cf\u8ff0\u6837\u672c\u70b9\u4e0e\u8d85\u5e73\u9762\u7684\u8ddd\u79bb\uff1a $$ \\hat{\\gamma} {i}=y {i}\\left(w \\cdot x_{i}+b\\right) $$ \u5728\u6b64\uff0c\u590d\u4e60\u4e00\u4e0b\u70b9\u5230\u76f4\u7ebf\u7684\u8ddd\u79bb\u8ba1\u7b97\u516c\u5f0f\uff1a Ax+By+C=0, \u70b9 \\((x_0,y_0)\\) \u8ddd\u79bbd\u4e3a\uff1a \\(d=\\frac{\\left|A x_{0}+B y_{0}+C\\right|}{\\sqrt{A^{2}+B^{2}}}\\) \u6240\u4ee5\u5bf9\u4e8e\u5e73\u9762 wx+b=0, \u8ddd\u79bb\u6b63\u6bd4\u4e8e \\(wx_i+b\\) \u6240\u6709\u95f4\u9694\u4e2d\u6700\u5c0f\u503c\u4e3a\uff1a $$ \\hat{\\gamma}=\\min {i=1, \\cdots, N} \\hat{\\gamma} {i} $$ \u51fd\u6570\u95f4\u9694\u4f1a\u53d7\u5230 w,b\u7684\u5f71\u54cd\uff0c\u5982\u679c\u628aw,b\u53d8\u4e3a\u4e24\u500d\uff0c\u8d85\u5e73\u9762\u4f4d\u7f6e\u4e0d\u53d8\uff0c\u4f46\u662f\u8ddd\u79bb\u589e\u52a0\u4e86\u4e24\u500d\u3002\u6240\u4ee5\u4e00\u822c\u91c7\u7528\u51e0\u4f55\u95f4\u9694\uff1a $$ \\gamma_{i}=y_{i}\\left(\\frac{w}{|w|} \\cdot x_{i}+\\frac{b}{|w|}\\right) $$ \u95f4\u9694\u6700\u5927\u5316\uff1a\u5bf9\u8bad\u7ec3\u6570\u636e\u96c6\u627e\u5230\u51e0\u4f55\u95f4\u9694\u6700\u5927\u7684\u8d85\u5e73\u9762\u610f\u5473\u7740\u5df2\u5145\u5206\u7684\u7684\u786e\u4fe1\u5ea6\u5bf9\u8bad\u7ec3\u6570\u636e\u8fdb\u884c\u5206\u7c7b\u3002 \u8003\u8651\u5230\u51e0\u4f55\u95f4\u9694\u548c\u51fd\u6570\u95f4\u9694\u7684\u5173\u7cfb\uff0c\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\uff1a","title":"\u7b56\u7565"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B/#_51","text":"\u6700\u5927\u95f4\u9694\u6cd5\u6765\u5b66\u4e60\u201c\u7ebf\u6027\u53ef\u5206\u652f\u6301\u5411\u91cf\u673a\u201d\u3002 \u8bc1\u660e\uff1a\u6700\u5927\u95f4\u9694\u5206\u79bb\u8d85\u5e73\u9762\u7684 \u5b58\u5728\u6027 \uff0c \u552f\u4e00\u6027 \u3002 \u652f\u6301\u5411\u91cf\uff0c\u8bad\u7ec3\u6570\u636e\u96c6\u7684\u6837\u672c\u4e2d\u4e0e\u5206\u79bb\u8d85\u5e73\u9762\u8ddd\u79bb\u6700\u8fd1\u7684\u6837\u672c\u70b9\u7684\u5b9e\u4f8b\u79f0\u4e3a \u652f\u6301\u5411\u91cf \u3002 $$ y_{i}\\left(w \\cdot x_{i}+b\\right)-1=0 $$ \u95f4\u9694\u8fb9\u754c\u4f9d\u8d56\u4e8e\u6cd5\u5411\u91cfw\uff1a $$ \\frac{2}{|w|} $$ \u51b3\u5b9a\u5206\u79bb\u8d85\u5e73\u9762\u65f6\uff0c\u53ea\u6709\u652f\u6301\u5411\u91cf\u8d77\u4f5c\u7528\uff0c\u800c\u5176\u4ed6\u5b9e\u4f8b\u5e76\u4e0d\u8d77\u4f5c\u7528\uff0c\u6240\u4ee5\u652f\u6301\u5411\u91cf\u673a\u7531\u5f88\u5c11\u7684\u201c \u91cd\u8981\u6837\u672c \u201d\u51b3\u5b9a\u3002 \u9488\u5bf9\u4e0a\u9762\u7684\u6700\u4f18\u5316\u95ee\u9898\uff08\u88ab\u8bc1\u660e\u4e3a\u51f8\uff09\uff0c\u5148\u8f6c\u5316\u4e3a\u5bf9\u5076\u95ee\u9898\uff0c\u4f7f\u7528\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5\u6216\u8005KKT\u5b9a\u7406\uff0c\u8fdb\u884c\u6c42\u89e3\uff1a \u6784\u9020\u5bf9\u5076\u95ee\u9898\uff0c\u5e76\u6c42\u89e3\u7ea6\u675f\u4f18\u5316\u95ee\u9898\uff1a \u6c42\u5f97\uff1a $$ \\alpha^{ }=\\left(\\alpha_{1}^{ }, \\alpha_{2}^{ }, \\cdots, \\alpha_{N}^{ }\\right)^{\\mathrm{T}} $$ \u8ba1\u7b97w,b \\[ w^{*}=\\sum_{i=1}^{N} \\alpha_{i}^{*} y_{i} x_{i}\\\\ b^{*}=y_{j}-\\sum_{i=1}^{N} \\alpha_{i}^{*} y_{i}\\left(x_{i} \\cdot x_{j}\\right) \\] \u5e26\u5165\u7684\u5230\u6a21\u578b \\[ f(x)=sign(w^*\\cdot x+b^*) \\]","title":"\u7b97\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/","text":"\u300a\u8ba1\u7b97\u673a\u7f51\u7edc\u300b\u8bfb\u4e66\u7b14\u8bb0 \u4e92\u8054\u7f51\u7684\u7ec4\u6210 \u8fb9\u7f18\u90e8\u5206\uff1a\u7aef\u7cfb\u7edf\uff0c\u53ef\u4ee5\u662f\u4e2a\u4eba\u7535\u8111\uff0c\u4e5f\u53ef\u4ee5\u662f\u5927\u578b\u8ba1\u7b97\u673a \u6838\u5fc3\u90e8\u5206 \u201c\u4e3b\u673aA\u4e0e\u4e3b\u673aB\u8fdb\u884c\u901a\u4fe1\u201d\uff0c\u5b9e\u9645\u4e0a\u6307\u7684\u662f\u8fd0\u884c\u5728\u4e3b\u673aA \u4e0a\u7684\u67d0\u4e2a\u7a0b\u5e8f\u548c\u8fd0\u884c\u5728\u4e3b\u673aB\u4e0a\u7684\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u8fdb\u884c\u901a\u4fe1\u3002 \u7aef\u7cfb\u7edf\u4e4b\u95f4\u7684\u901a\u8baf\u65b9\u5f0f \u5ba2\u6237-\u670d\u52a1\u5668\uff1a \u200b \u8fdb\u7a0b\u4e4b\u95f4\u670d\u52a1\u548c\u88ab\u670d\u52a1\u7684\u5173\u7cfb\uff0c\u5ba2\u6237\u662f\u8bf7\u6c42\u65b9\uff0c\u670d\u52a1\u5668\u662f\u670d\u52a1\u63d0\u4f9b\u65b9\u3002 \u200b \u670d\u52a1\u5668\u7a0b\u5e8f\uff1a\u4e00\u79cd\u4e13\u95e8\u7528\u6765\u63d0\u4f9b\u67d0\u79cd\u670d\u52a1\u7684\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u540c\u65f6\u5904\u7406\u591a\u4e2a\u8fdc\u5730\u6216\u672c\u5730\u5ba2\u6237\u7684\u8bf7\u6c42 \u200b \u5ba2\u6237\u548c\u670d\u52a1\u5668\u6307\u7684\u662f \u8ba1\u7b97\u673a\u8fdb\u7a0b \u5bf9\u7b49\u8fde\u63a5\u65b9\u5f0f\uff1a \u4e24\u53f0\u4e3b\u673a\u8fd0\u884c\u4e86\u5bf9\u7b49\u8fde\u63a5\u8f6f\u4ef6\uff0cP2P\u8f6f\u4ef6\uff0c\u4ed6\u4eec\u5c31\u53ef\u4ee5\u8fdb\u884c\u5e73\u7b49\u7684\u5bf9\u7b49\u4e24\u5c4a\u901a\u4fe1\u3002\u6bd4\u5982\u53cc\u65b9\u90fd\u53ef\u4ee5\u4e0b\u8f7d\u5bf9\u65b9\u7684\u6587\u6863\u3002 \u6838\u5fc3\u90e8\u5206 \u8def\u7531\u5668router\uff0c\u5b83\u662f\u4e00\u79cd\u4e13\u95e8\u8ba1\u7b97\u673a\uff0c\u5b9e\u73b0\u5206\u7ec4\u4ea4\u6362\uff0c\u8f6c\u53d1\u6536\u5230\u7684\u5206\u7ec4\u3002 \u7535\u8def\u4ea4\u6362 \uff1a\u6309\u7167\u67d0\u79cd\u65b9\u5f0f\u52a8\u6001\u5730\u5206\u914d\u4f20\u8f93\u7ebf\u8def\u8d44\u6e90\u3002 \u5efa\u7acb\u8fde\u63a5->\u901a\u8bdd->\u91ca\u653e\u8fde\u63a5 \u7279\u70b9\uff1a\u5728\u7ae5\u8bdd\u7684\u5168\u90e8\u65f6\u95f4\u5185\uff0c\u901a\u8bdd\u7684\u4e24\u4e2a\u7528\u6237\u59cb\u7ec8\u5360\u7528\u7aef\u5230\u7aef\u7684\u901a\u4fe1\u8d44\u6e90\u3002 \u5206\u7ec4\u4ea4\u6362 \uff1a \u62a5\u6587\uff1a\u8981\u53d1\u9001\u7684\u6574\u5757\u6570\u636e \u5206\u7ec4 \u5305 \u8def\u7531\u5668\u6682\u65f6\u5b58\u50a8\u7684\u662f\u4e00\u4e2a\u4e2a\u77ed\u5206\u7ec4\uff0c\u800c\u4e0d\u662f\u6574\u4e2a\u957f\u62a5\u6587\u3002 \u5206\u7ec4\u5728\u4f20\u8f93\u65f6\uff0c\u4e00\u6bb5\u4e00\u6bb5\u5730\u5360\u7528\u901a\u8baf\u8d44\u6e90\u3002 \u8def\u7531\u9009\u62e9\u534f\u8bae-->\u81ea\u52a8\u627e\u5230\u8f6c\u53d1\u5206\u7ec4\u7684\u6700\u5408\u9002\u7684\u8def\u5f84 internet \u7ed3\u6784 \u5176\u4e2d\u6709ISP\uff0cISP\u5206\u5c42 IXP\u5c06ISP\u9ad8\u901f\u8fde\u63a5\u8d77\u6765 \u7f51\u7edc\u5185\u5bb9\u63d0\u4f9b\u5546ICP\u5efa\u7acb\u81ea\u5df1\u7684\u6570\u636e\u4e2d\u5fc3\uff0c\u52a0\u5feb\u7528\u6237\u4f53\u9a8c \u4e2d\u56fd\u6559\u80b2\u4e0e\u79d1\u7814\u7f51 CERNET \u9aa8\u5e72\u7f51\u5206\u5e03 \u5341\u5927ISP\uff1a \u7535\u4fe1\uff1a \u4e2d\u56fd\u516c\u7528\u8ba1\u7b97\u673a\u4e92\u8054\u7f51 (CHINANET\uff0c\u5373 \u4e2d\u56fd\u7535\u4fe1 \u7f51) \u7f51\u901a\uff1a \u4e2d\u56fd\u7f51\u901a \u516c\u7528\u4e92\u8054\u7f51(CNCNET\uff0c\u5305\u62ec\u91d1\u6865\u7f51CHINAGBN) \u79fb\u52a8\uff1a\u4e2d\u56fd\u79fb\u52a8\u4e92\u8054\u7f51\uff08CMNET\uff09 \u8054\u901a\uff1a \u4e2d\u56fd\u8054\u901a \u4e92\u8054\u7f51\uff08UNINET\uff09 \u94c1\u901a\uff1a \u4e2d\u56fd\u94c1\u901a \u4e92\u8054\u7f51\uff08CRCNET\uff09 \u536b\u661f\uff1a \u4e2d\u56fd\u536b\u661f \u96c6\u56e2\u4e92\u8054\u7f51\uff08CSNET\uff09 \u79d1\u6280\uff1a \u4e2d\u56fd\u79d1\u6280\u7f51 \uff08CSTNET\uff09 \u6559\u80b2\uff1a \u4e2d\u56fd\u6559\u80b2\u548c\u79d1\u7814\u8ba1\u7b97\u673a\u7f51 \uff08CERNET\uff09 \u8d38\u6613\uff1a\u4e2d\u56fd\u56fd\u9645\u7ecf\u6d4e\u8d38\u6613\u4e92\u8054\u7f51\uff08CIETNET\uff09 \u957f\u57ce\uff1a\u4e2d\u56fd\u957f\u57ce\u4e92\u8054\u7f51\uff08CGWNET\uff09 \u8ba1\u7b97\u673a\u7f51\u7edc\u7684\u6027\u80fd\u6307\u6807 \u901f\u7387 \u5e26\u5bbd \u541e\u5410\u91cf \u65f6\u5ef6 \u5229\u7528\u7387 \u8ba1\u7b97\u673a\u7f51\u7edc\u4f53\u7cfb\u7ed3\u6784 OSI \u592a\u8fc7\u4e8e\u590d\u6742\uff0c\u4e0d\u5b9e\u7528\u3002 TCP/IP\u56db\u5c42\u534f\u8bae\u6bd4\u8f83\u6e05\u6670\uff0c\u5e76\u4e14\u5e7f\u6cdb\u5e94\u7528\u3002 \u5e94\u7528\u5c42\uff1a\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1\u548c\u4ea4\u4e92\u89c4\u5219\uff0c\u4f8b\u5982DNS,SMTP\uff0c\u5904\u7406\u7684\u6570\u636e\u79f0\u4e3a\u62a5\u6587\u3002 \u8fd0\u8f93\u5c42\uff1a\u4e24\u53f0\u4e3b\u673a\u4e2d\uff0c\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u63d0\u4f9b\u901a\u7528\u7684\u6570\u636e\u4f20\u8f93\u670d\u52a1\u3002TCP,UDP \u7f51\u7edc\u5c42\uff1a\u628a\u8fd0\u8f93\u5c42\u4ea7\u751f\u7684\u62a5\u6587\u6bb5\u6216\u8005\u7528\u6237\u6570\u636e\u62a5\u5c01\u88c5\u6210\u5206\u7ec4\u6216\u5305\u8fdb\u884c\u4f20\u9001\uff0c\u79f0\u4e3aIP\u6570\u636e\u62a5\u3002\u4e92\u8054\u7f51\u4f7f\u7528\u7684\u7f51\u7edc\u5c42\u534f\u8bae\u4e3a\uff1a\u7f51\u9645\u534f\u8baeIP\u548c\u591a\u79cd\u8def\u7531\u9009\u62e9\u534f\u8bae \u6570\u636e\u94fe\u8def\u5c42\uff1a\u5c06IP\u6570\u636e\u62a5\u7ec4\u88c5\u6210\u5e27\uff0c\u6bcf\u4e00\u5e27\u5305\u62ec\u6570\u636e\u548c\u5fc5\u8981\u7684\u63a7\u5236\u4fe1\u606f\u3002 \u7269\u7406\u5c42\uff1a\u4f20\u8f93\u6bd4\u7279 \u7269\u7406\u5c42 \u5bbd\u5e26\u63a5\u5165\u6280\u672f \u6570\u636e\u94fe\u8def\u5c42 \u70b9\u5bf9\u70b9\u4fe1\u9053 \u5e7f\u64ad\u4fe1\u9053 \u5c06IP\u6570\u636e\u62a5\u6dfb\u52a0\u9996\u90e8\u548c\u5c3e\u90e8\u5c01\u88c5\u6210\u5e27 \u53d1\u9001\u7ed9\u8282\u70b9B \u8282\u70b9B\u68c0\u67e5\u65e0\u8bef\u540e\u63d0\u53d6IP\u6570\u636e\u62a5\u7ed9\u4e0a\u5c42\u7f51\u7edc\u5c42 \u4e09\u4e2a\u57fa\u672c\u95ee\u9898\uff1a \u5c01\u88c5\u6210\u5e27\uff0c\u900f\u660e\u4f20\u8f93\uff0c\u5dee\u9519\u68c0\u6d4b\u3002 \u70b9\u5bf9\u70b9\u534f\u8baePPP PPPoE\u662fPPP\u534f\u8bae\u8fd0\u7528\u4e8e\u4ee5\u592a\u7f51\u7684\u4f8b\u5b50\u3002 \u7f51\u7edc\u5c42 \u8fd0\u8f93\u5c42 \u5e94\u7528\u5c42 \u53ef\u80fd\u7684\u5e94\u7528\u6784\u67b6\uff1a \u5ba2\u6237\u7aef\uff0c\u670d\u52a1\u7aef\u6a21\u5f0f P2P C/S\u6a21\u5f0f \u670d\u52a1\u5668\u4e0a\u90e8\u7f72\u8d44\u6e90 \u670d\u52a1\u5668\u4fdd\u6301\u4e00\u76f4\u8fd0\u884c \u76d1\u542c\u77e5\u540dIP \u7f3a\u70b9\uff1a\u53ef\u62d3\u5c55\u6027\u5dee\uff0c\u9ad8\u5e76\u53d1\u6027\u5f31 P2P peer to peer \u5e73\u7b49 \u8bf7\u6c42\u670d\u52a1\u589e\u52a0\uff0c\u670d\u52a1\u89c4\u6a21\u4e5f\u5728\u589e\u52a0 \u96be\u4ee5\u7ba1\u7406 \u8fdb\u7a0b\u901a\u4fe1 \u4e00\u53f0\u8bbe\u5907\u4e0a\u4e24\u4e2a\u8fdb\u7a0b\u901a\u4fe1\u65b9\u5f0f\uff1a \u7ba1\u9053\uff0c\u6d88\u606f\u961f\u5217\u7b49 \u4e0d\u540c\u8bbe\u5907\u4e0a\u7684\u4e24\u4e2a\u8fdb\u7a0b\u901a\u4fe1\u65b9\u5f0f\uff1a \u62a5\u6587message \u89e3\u51b3\u7684\u95ee\u9898\uff1a \u8fdb\u7a0b\u6807\u8bc6 \u5e94\u7528\u5c42\u4e0e\u8fd0\u8f93\u5c42\u7684\u6c9f\u901a \u7528\u6237\u4f7f\u7528\u670d\u52a1 \u8fdb\u7a0b\u6807\u8bc6 ip, udp/tcp\uff0c\u7aef\u53e3\u53f7 tcp\u4e0eudp\u90fd\u6709\u5404\u81ea\u7684\u7aef\u53e3\u53f7\uff0c16\u4e2a\u6bd4\u7279 2^16 TCP\u4e4b\u4e0a\u7684Scoket UDP socket \u5e94\u7528\u5c42\u534f\u8bae \u4f20\u8f93\u5c42\u63d0\u4f9b\u7684\u670d\u52a1 web\u4e0ehttp url\u683c\u5f0f prot://user:psw@","title":"\u300a\u8ba1\u7b97\u673a\u7f51\u7edc\u300b\u8bfb\u4e66\u7b14\u8bb0"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_1","text":"","title":"\u300a\u8ba1\u7b97\u673a\u7f51\u7edc\u300b\u8bfb\u4e66\u7b14\u8bb0"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_2","text":"\u8fb9\u7f18\u90e8\u5206\uff1a\u7aef\u7cfb\u7edf\uff0c\u53ef\u4ee5\u662f\u4e2a\u4eba\u7535\u8111\uff0c\u4e5f\u53ef\u4ee5\u662f\u5927\u578b\u8ba1\u7b97\u673a \u6838\u5fc3\u90e8\u5206 \u201c\u4e3b\u673aA\u4e0e\u4e3b\u673aB\u8fdb\u884c\u901a\u4fe1\u201d\uff0c\u5b9e\u9645\u4e0a\u6307\u7684\u662f\u8fd0\u884c\u5728\u4e3b\u673aA \u4e0a\u7684\u67d0\u4e2a\u7a0b\u5e8f\u548c\u8fd0\u884c\u5728\u4e3b\u673aB\u4e0a\u7684\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u8fdb\u884c\u901a\u4fe1\u3002","title":"\u4e92\u8054\u7f51\u7684\u7ec4\u6210"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_3","text":"\u5ba2\u6237-\u670d\u52a1\u5668\uff1a \u200b \u8fdb\u7a0b\u4e4b\u95f4\u670d\u52a1\u548c\u88ab\u670d\u52a1\u7684\u5173\u7cfb\uff0c\u5ba2\u6237\u662f\u8bf7\u6c42\u65b9\uff0c\u670d\u52a1\u5668\u662f\u670d\u52a1\u63d0\u4f9b\u65b9\u3002 \u200b \u670d\u52a1\u5668\u7a0b\u5e8f\uff1a\u4e00\u79cd\u4e13\u95e8\u7528\u6765\u63d0\u4f9b\u67d0\u79cd\u670d\u52a1\u7684\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u540c\u65f6\u5904\u7406\u591a\u4e2a\u8fdc\u5730\u6216\u672c\u5730\u5ba2\u6237\u7684\u8bf7\u6c42 \u200b \u5ba2\u6237\u548c\u670d\u52a1\u5668\u6307\u7684\u662f \u8ba1\u7b97\u673a\u8fdb\u7a0b \u5bf9\u7b49\u8fde\u63a5\u65b9\u5f0f\uff1a \u4e24\u53f0\u4e3b\u673a\u8fd0\u884c\u4e86\u5bf9\u7b49\u8fde\u63a5\u8f6f\u4ef6\uff0cP2P\u8f6f\u4ef6\uff0c\u4ed6\u4eec\u5c31\u53ef\u4ee5\u8fdb\u884c\u5e73\u7b49\u7684\u5bf9\u7b49\u4e24\u5c4a\u901a\u4fe1\u3002\u6bd4\u5982\u53cc\u65b9\u90fd\u53ef\u4ee5\u4e0b\u8f7d\u5bf9\u65b9\u7684\u6587\u6863\u3002","title":"\u7aef\u7cfb\u7edf\u4e4b\u95f4\u7684\u901a\u8baf\u65b9\u5f0f"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_4","text":"\u8def\u7531\u5668router\uff0c\u5b83\u662f\u4e00\u79cd\u4e13\u95e8\u8ba1\u7b97\u673a\uff0c\u5b9e\u73b0\u5206\u7ec4\u4ea4\u6362\uff0c\u8f6c\u53d1\u6536\u5230\u7684\u5206\u7ec4\u3002 \u7535\u8def\u4ea4\u6362 \uff1a\u6309\u7167\u67d0\u79cd\u65b9\u5f0f\u52a8\u6001\u5730\u5206\u914d\u4f20\u8f93\u7ebf\u8def\u8d44\u6e90\u3002 \u5efa\u7acb\u8fde\u63a5->\u901a\u8bdd->\u91ca\u653e\u8fde\u63a5 \u7279\u70b9\uff1a\u5728\u7ae5\u8bdd\u7684\u5168\u90e8\u65f6\u95f4\u5185\uff0c\u901a\u8bdd\u7684\u4e24\u4e2a\u7528\u6237\u59cb\u7ec8\u5360\u7528\u7aef\u5230\u7aef\u7684\u901a\u4fe1\u8d44\u6e90\u3002 \u5206\u7ec4\u4ea4\u6362 \uff1a \u62a5\u6587\uff1a\u8981\u53d1\u9001\u7684\u6574\u5757\u6570\u636e \u5206\u7ec4 \u5305 \u8def\u7531\u5668\u6682\u65f6\u5b58\u50a8\u7684\u662f\u4e00\u4e2a\u4e2a\u77ed\u5206\u7ec4\uff0c\u800c\u4e0d\u662f\u6574\u4e2a\u957f\u62a5\u6587\u3002 \u5206\u7ec4\u5728\u4f20\u8f93\u65f6\uff0c\u4e00\u6bb5\u4e00\u6bb5\u5730\u5360\u7528\u901a\u8baf\u8d44\u6e90\u3002 \u8def\u7531\u9009\u62e9\u534f\u8bae-->\u81ea\u52a8\u627e\u5230\u8f6c\u53d1\u5206\u7ec4\u7684\u6700\u5408\u9002\u7684\u8def\u5f84","title":"\u6838\u5fc3\u90e8\u5206"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#internet","text":"\u5176\u4e2d\u6709ISP\uff0cISP\u5206\u5c42 IXP\u5c06ISP\u9ad8\u901f\u8fde\u63a5\u8d77\u6765 \u7f51\u7edc\u5185\u5bb9\u63d0\u4f9b\u5546ICP\u5efa\u7acb\u81ea\u5df1\u7684\u6570\u636e\u4e2d\u5fc3\uff0c\u52a0\u5feb\u7528\u6237\u4f53\u9a8c \u4e2d\u56fd\u6559\u80b2\u4e0e\u79d1\u7814\u7f51 CERNET \u9aa8\u5e72\u7f51\u5206\u5e03 \u5341\u5927ISP\uff1a \u7535\u4fe1\uff1a \u4e2d\u56fd\u516c\u7528\u8ba1\u7b97\u673a\u4e92\u8054\u7f51 (CHINANET\uff0c\u5373 \u4e2d\u56fd\u7535\u4fe1 \u7f51) \u7f51\u901a\uff1a \u4e2d\u56fd\u7f51\u901a \u516c\u7528\u4e92\u8054\u7f51(CNCNET\uff0c\u5305\u62ec\u91d1\u6865\u7f51CHINAGBN) \u79fb\u52a8\uff1a\u4e2d\u56fd\u79fb\u52a8\u4e92\u8054\u7f51\uff08CMNET\uff09 \u8054\u901a\uff1a \u4e2d\u56fd\u8054\u901a \u4e92\u8054\u7f51\uff08UNINET\uff09 \u94c1\u901a\uff1a \u4e2d\u56fd\u94c1\u901a \u4e92\u8054\u7f51\uff08CRCNET\uff09 \u536b\u661f\uff1a \u4e2d\u56fd\u536b\u661f \u96c6\u56e2\u4e92\u8054\u7f51\uff08CSNET\uff09 \u79d1\u6280\uff1a \u4e2d\u56fd\u79d1\u6280\u7f51 \uff08CSTNET\uff09 \u6559\u80b2\uff1a \u4e2d\u56fd\u6559\u80b2\u548c\u79d1\u7814\u8ba1\u7b97\u673a\u7f51 \uff08CERNET\uff09 \u8d38\u6613\uff1a\u4e2d\u56fd\u56fd\u9645\u7ecf\u6d4e\u8d38\u6613\u4e92\u8054\u7f51\uff08CIETNET\uff09 \u957f\u57ce\uff1a\u4e2d\u56fd\u957f\u57ce\u4e92\u8054\u7f51\uff08CGWNET\uff09","title":"internet \u7ed3\u6784"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_5","text":"\u901f\u7387 \u5e26\u5bbd \u541e\u5410\u91cf \u65f6\u5ef6 \u5229\u7528\u7387","title":"\u8ba1\u7b97\u673a\u7f51\u7edc\u7684\u6027\u80fd\u6307\u6807"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_6","text":"OSI \u592a\u8fc7\u4e8e\u590d\u6742\uff0c\u4e0d\u5b9e\u7528\u3002 TCP/IP\u56db\u5c42\u534f\u8bae\u6bd4\u8f83\u6e05\u6670\uff0c\u5e76\u4e14\u5e7f\u6cdb\u5e94\u7528\u3002 \u5e94\u7528\u5c42\uff1a\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1\u548c\u4ea4\u4e92\u89c4\u5219\uff0c\u4f8b\u5982DNS,SMTP\uff0c\u5904\u7406\u7684\u6570\u636e\u79f0\u4e3a\u62a5\u6587\u3002 \u8fd0\u8f93\u5c42\uff1a\u4e24\u53f0\u4e3b\u673a\u4e2d\uff0c\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u63d0\u4f9b\u901a\u7528\u7684\u6570\u636e\u4f20\u8f93\u670d\u52a1\u3002TCP,UDP \u7f51\u7edc\u5c42\uff1a\u628a\u8fd0\u8f93\u5c42\u4ea7\u751f\u7684\u62a5\u6587\u6bb5\u6216\u8005\u7528\u6237\u6570\u636e\u62a5\u5c01\u88c5\u6210\u5206\u7ec4\u6216\u5305\u8fdb\u884c\u4f20\u9001\uff0c\u79f0\u4e3aIP\u6570\u636e\u62a5\u3002\u4e92\u8054\u7f51\u4f7f\u7528\u7684\u7f51\u7edc\u5c42\u534f\u8bae\u4e3a\uff1a\u7f51\u9645\u534f\u8baeIP\u548c\u591a\u79cd\u8def\u7531\u9009\u62e9\u534f\u8bae \u6570\u636e\u94fe\u8def\u5c42\uff1a\u5c06IP\u6570\u636e\u62a5\u7ec4\u88c5\u6210\u5e27\uff0c\u6bcf\u4e00\u5e27\u5305\u62ec\u6570\u636e\u548c\u5fc5\u8981\u7684\u63a7\u5236\u4fe1\u606f\u3002 \u7269\u7406\u5c42\uff1a\u4f20\u8f93\u6bd4\u7279","title":"\u8ba1\u7b97\u673a\u7f51\u7edc\u4f53\u7cfb\u7ed3\u6784"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_7","text":"\u5bbd\u5e26\u63a5\u5165\u6280\u672f","title":"\u7269\u7406\u5c42"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_8","text":"\u70b9\u5bf9\u70b9\u4fe1\u9053 \u5e7f\u64ad\u4fe1\u9053 \u5c06IP\u6570\u636e\u62a5\u6dfb\u52a0\u9996\u90e8\u548c\u5c3e\u90e8\u5c01\u88c5\u6210\u5e27 \u53d1\u9001\u7ed9\u8282\u70b9B \u8282\u70b9B\u68c0\u67e5\u65e0\u8bef\u540e\u63d0\u53d6IP\u6570\u636e\u62a5\u7ed9\u4e0a\u5c42\u7f51\u7edc\u5c42 \u4e09\u4e2a\u57fa\u672c\u95ee\u9898\uff1a \u5c01\u88c5\u6210\u5e27\uff0c\u900f\u660e\u4f20\u8f93\uff0c\u5dee\u9519\u68c0\u6d4b\u3002","title":"\u6570\u636e\u94fe\u8def\u5c42"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#ppp","text":"PPPoE\u662fPPP\u534f\u8bae\u8fd0\u7528\u4e8e\u4ee5\u592a\u7f51\u7684\u4f8b\u5b50\u3002","title":"\u70b9\u5bf9\u70b9\u534f\u8baePPP"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_9","text":"","title":"\u7f51\u7edc\u5c42"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_10","text":"","title":"\u8fd0\u8f93\u5c42"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_11","text":"\u53ef\u80fd\u7684\u5e94\u7528\u6784\u67b6\uff1a \u5ba2\u6237\u7aef\uff0c\u670d\u52a1\u7aef\u6a21\u5f0f P2P","title":"\u5e94\u7528\u5c42"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#cs","text":"\u670d\u52a1\u5668\u4e0a\u90e8\u7f72\u8d44\u6e90 \u670d\u52a1\u5668\u4fdd\u6301\u4e00\u76f4\u8fd0\u884c \u76d1\u542c\u77e5\u540dIP \u7f3a\u70b9\uff1a\u53ef\u62d3\u5c55\u6027\u5dee\uff0c\u9ad8\u5e76\u53d1\u6027\u5f31","title":"C/S\u6a21\u5f0f"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#p2p","text":"peer to peer \u5e73\u7b49 \u8bf7\u6c42\u670d\u52a1\u589e\u52a0\uff0c\u670d\u52a1\u89c4\u6a21\u4e5f\u5728\u589e\u52a0 \u96be\u4ee5\u7ba1\u7406","title":"P2P"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_12","text":"\u4e00\u53f0\u8bbe\u5907\u4e0a\u4e24\u4e2a\u8fdb\u7a0b\u901a\u4fe1\u65b9\u5f0f\uff1a \u7ba1\u9053\uff0c\u6d88\u606f\u961f\u5217\u7b49 \u4e0d\u540c\u8bbe\u5907\u4e0a\u7684\u4e24\u4e2a\u8fdb\u7a0b\u901a\u4fe1\u65b9\u5f0f\uff1a \u62a5\u6587message \u89e3\u51b3\u7684\u95ee\u9898\uff1a \u8fdb\u7a0b\u6807\u8bc6 \u5e94\u7528\u5c42\u4e0e\u8fd0\u8f93\u5c42\u7684\u6c9f\u901a \u7528\u6237\u4f7f\u7528\u670d\u52a1","title":"\u8fdb\u7a0b\u901a\u4fe1"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_13","text":"ip, udp/tcp\uff0c\u7aef\u53e3\u53f7 tcp\u4e0eudp\u90fd\u6709\u5404\u81ea\u7684\u7aef\u53e3\u53f7\uff0c16\u4e2a\u6bd4\u7279 2^16","title":"\u8fdb\u7a0b\u6807\u8bc6"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#tcpscoket","text":"","title":"TCP\u4e4b\u4e0a\u7684Scoket"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#udp-socket","text":"","title":"UDP socket"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_14","text":"","title":"\u5e94\u7528\u5c42\u534f\u8bae"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_15","text":"","title":"\u4f20\u8f93\u5c42\u63d0\u4f9b\u7684\u670d\u52a1"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#webhttp","text":"url\u683c\u5f0f prot://user:psw@","title":"web\u4e0ehttp"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%BF%90%E7%AD%B9%E5%AD%A6%E6%95%99%E7%A8%8B%E3%80%8B/","text":"\u300a\u8fd0\u7b79\u5b66\u6559\u7a0b\u300b \u8fd0\u7b79\u5b66\u7684\u4e3b\u8981\u5206\u652f \u7ebf\u6027\u89c4\u5212 \u975e\u7ebf\u6027\u89c4\u5212 \u6574\u6570\u89c4\u5212 \u76ee\u6807\u89c4\u5212 \u52a8\u6001\u89c4\u5212 \u56fe\u8bba\u4e0e\u7f51\u7edc\u5206\u6790 \u4ee5\u53ca\u50a8\u5b58\u8bba\uff0c\u6392\u961f\u8bba\uff0c\u5bf9\u7b56\u8bba\uff0c\u51b3\u7b56\u8bba\u3002 \u7ebf\u6027\u89c4\u5212 \u4e00\u822c\u6765\u8bb2\uff0c\u4e3b\u8981\u95ee\u9898\u6d89\u53ca\u5230\u8d44\u6e90\u7684\u9650\u5236\uff08\u6bcf\u5929\u53ef\u7528\u7684\u80fd\u529b\uff09\uff0c\u5355\u4f4d\u9879\u76ee\u5e26\u6765\u7684\u6536\u76ca\u3002 \u7ebf\u6027\u89c4\u5212\u4e3b\u8981\u7531\uff1a \u53d8\u91cf\uff0c\u51b3\u7b56\u53d8\u91cf \u76ee\u6807\u51fd\u6570 \u7ea6\u675f\u6761\u4ef6\uff1a\u53d8\u91cf\u53d6\u503c\u7684\u65f6\u5019\u8981\u53d7\u5230\u5404\u79cd\u9650\u5236 \u7ebf\u6027\u89c4\u5212\u95ee\u9898\u7684\u6807\u51c6\u578b \u6781\u5927\u503c\uff0c\u7ea6\u675f\u6761\u4ef6\u4e3a\u7b49\u5f0f\uff0c \\(b_i\\) \u4e3a\u975e\u8d1f\u503c\uff0c \\(x_i\\) \u4e3a\u975e\u8d1f\u7684\uff0c\u5199\u4e3a\u4ee5\u4e0b\u6807\u51c6\u5f62\u5f0f\uff1a \u6c42\u89e3\u7ebf\u6027\u89c4\u5212 \u56fe\u89e3\u6cd5 \u7ebf\u6027\u89c4\u5212\u53ef\u80fd\u7684\u51e0\u79cd\u89e3 \u65e0\u7a77\u591a\u6700\u4f18\u89e3\uff1a\u6700\u4f18\u7684\u53d6\u503c\u843d\u5728\u4e00\u6839\u7ebf\u4e0a\u3002 \u65e0\u754c\u89e3\uff1a\u89e3\u7684\u503c\u6ca1\u6709\u88ab\u9650\u5236\u4f4f\uff0c\u53ef\u80fd\u8d8b\u4e8e\u65e0\u7a77\u5927 \u65e0\u53ef\u884c\u89e3\uff1a\u6ca1\u6709\u53ef\u884c\u57df \u5355\u7eaf\u5f62\u6cd5\u539f\u7406 \u5bf9\u4e8e\u4e00\u4e2a\u6807\u51c6\u5f62\u5f0f\u7684\u7ebf\u6027\u89c4\u5212\uff1a \u505a\u4ee5\u4e0b\u5b9a\u4e49\uff1a \u6ee1\u8db3\u7ea6\u675f\u6761\u4ef6\u7684\u89e3 \\(X\\) \u662f \u53ef\u884c\u89e3 \u4f7f\u76ee\u6807\u51fd\u6570\u8fbe\u5230\u6700\u5927\u7684\uff0c\u662f \u6700\u4f18\u89e3 \u5bf9\u4e8e\u7ea6\u675f\u6761\u4ef6\uff0c\u4e00\u822c\u5c06\u5176\u5199\u4e3a\u7ea6\u675f\u77e9\u9635 \\(A\\) \uff0c\u4e00\u822c\u6765\u8bb2\u5b83\u7684 \u79e9\u4e3am \uff0c\u6216\u8005\u5c0f\u4e8em\u3002\u5728\u6b64\u6211\u4eec\u5047\u8bbe\u4e3am\u3002 \\(B\\) \u662f\u77e9\u9635 \\(A\\) \u4e2d\u7684\u4e00\u4e2a\u6ee1\u79e9\u7684\u77e9\u9635\uff0c\u5b83\u662f\u4e00\u4e2a \u57fa $$ \\boldsymbol{B}=\\left(\\begin{array}{ccc} a_{11} & \\cdots & a_{1 m} \\ \\vdots & & \\vdots \\ a_{m 1} & \\cdots & a_{m m} \\end{array}\\right)=\\left(\\boldsymbol{P} {1}, \\cdots, \\boldsymbol{P} {m}\\right) $$ \u57fa\u89e3 \uff1a\u4f7f\u6240\u6709\u7684\u975e\u57fa\u53d8\u91cf\u4e3a0\uff0c \\(BX=b\\) \u8fd9\u4e2a\u65b9\u7a0b\u7531\u4e8e\u6ee1\u79e9\uff0c\u53ef\u4ee5\u89e3\u51fa\u552f\u4e00\u89e3\uff0c\u79f0\u4e4b\u4e3a\u57fa\u89e3\u3002\u57fa\u89e3\u4e0d\u591a\u4e8e \\(C_n^{m}\\) \u4e2a\u3002 \u57fa\u53ef\u884c\u89e3 \uff1a\u57fa\u89e3\u4e2d\uff0c\u6ee1\u8db3\u975e\u8d1f\u6761\u4ef6\u7684\u89e3\uff0c\u79f0\u4e3a\u57fa\u53ef\u884c\u89e3\u3002 \u91cd\u8981\u5b9a\u7406 \u5982\u679c\u7ebf\u6027\u89c4\u5212\u95ee\u9898\u5b58\u5728\u53ef\u884c\u89e3\uff0c\u90a3\u4e48\u95ee\u9898\u7684\u53ef\u884c\u57df\u662f\u51f8\u96c6\uff1b \u7ebf\u6027\u95ee\u9898\u7684\u57fa\u53ef\u884c\u89e3\u5bf9\u5e94\u53ef\u884c\u57df\u7684\u9876\u70b9\uff1b \u5982\u679c\u7ebf\u6027\u89c4\u5212\u95ee\u9898\u7531\u6700\u4f18\u89e3\uff0c\u90a3\u4e48\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u57fa\u53ef\u884c\u89e3\u662f\u6700\u4f18\u89e3\u3002 \u901a\u8fc7\u521d\u7b49\u884c\u53d8\u6362\uff0c\u7531\u4e8e\u79e9\u662fm\uff0c\u80af\u5b9a\u53ef\u4ee5\u5f97\u5230\u8fd9\u6837\u7684\u60c5\u51b5\uff1a $$ \\left(\\boldsymbol{P} {1}, \\boldsymbol{P} {2}, \\cdots, \\boldsymbol{P} {m}\\right)=\\left(\\begin{array}{cccc} 1 & 0 & \\cdots & 0 \\ 0 & 1 & \\cdots & 0 \\ \\vdots & \\vdots & & \\vdots \\ 0 & 0 & \\cdots & 1 \\end{array}\\right) $$ \u5bf9\u8fd9\u4e2a\u6c42\u89e3\uff0c\u53ef\u4ee5\u5f97\u5230\uff1a $$ \\mathbf{X}=\\left(x {1}, \\cdots, x_{m}, x_{m+1}, \\cdots, x_{n}\\right)^{\\mathrm{T}}=\\left(b_{1}, \\cdots, b_{m}, 0, \\cdots, 0\\right)^{\\mathrm{T}} $$ \u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u7b2c\u4e00\u57fa\u89e3\uff0c\u5982\u4f55\u901a\u8fc7\u5b83\u6765\u8ba1\u7b97\u4e0b\u4e00\u4e2a\u9876\u70b9\u5462\uff1f \u9996\u5148\uff1a $$ \\sum_{i-1}^{m} \\boldsymbol{P} {i} x {i}^{0}=\\boldsymbol{b} $$ \u56e0\u4e3a \\(\\left(\\boldsymbol{P}_{1}, \\boldsymbol{P}_{2}, \\cdots, \\boldsymbol{P}_{m}\\right)\\) \u662f\u7ebf\u6027\u65e0\u5173\u7684\uff0c\u53ef\u4ee5\u7528\u8fd9\u4e9b\u5411\u91cf\u7684\u7ebf\u6027\u7ec4\u5408\u6765\u5f97\u5230\u5176\u4ed6\u5411\u91cf \\(\\boldsymbol{P}_{j}\\) \uff1a $$ \\boldsymbol{P} {j}=\\sum {i=1}^{m} a_{i j} \\boldsymbol{P} {i} $$ \u6240\u4ee5\uff0c\u52a0\u4e0a\u6570\u5b66\u6280\u5de7\uff0c\u4e58\u4e0a\u4e00\u4e2a \\(\\theta>0\\) \uff1a $$ \\theta\\left(\\boldsymbol{P} {j}-\\sum_{i=1}^{m} a_{i j} \\boldsymbol{P} {i}\\right)=0 $$ \u76ee\u7684\u662f\u4e3a\u4e86\u627e\u5230 \\(x_i^0\\) \u4e0e \\(P_j\\) \u7684\u5173\u7cfb\uff0c\u6240\u4ee5\u628a\u4e0a\u9762\u7684\u5f0f\u5b50\uff0c\u548c\u4e0a\u4e0a\u7684\u5f0f\u5b50\u52a0\u548c\uff0c\u5f97\u5230\uff1a $$ \\sum {i=1}^{m}\\left(x_{i}^{0}-\\theta a_{i j}\\right) \\boldsymbol{P} {i}+\\theta \\mathbf{P} {j}=\\boldsymbol{b} $$ \u8fd9\u6837\u7684\u5173\u7cfb\u5f0f\u53ef\u4ee5\u7528\u4e8e\u6211\u4eec\u627e\u4e0b\u4e00\u4e2a\u57fa\u89e3\uff1a \u5bf9\u4e8e\u524d\u9762\u7684 \\(P_i\\) ,\u9700\u8981\u6709\u4e00\u4e2a\u4e0d\u518d\u4f5c\u4e3a\u57fa\u5411\u91cf\uff0c\u6240\u4ee5 $$ x_{i}^{0}-\\theta a_{i j} \\geqslant 0 $$ \u6709\u4e00\u4e2a \\(i\\) \u662f\u5bfc\u81f4\u8fd9\u4e2a\u5f0f\u5b50\u53d6\u7b49\u53f7\u7684\uff0c\u6240\u4ee5 $$ \\theta=\\min {i}\\left{\\frac{x {i}^{0}}{a_{i j}}\\left|a_{i j}\\right\\rangle 0\\right}=\\frac{x_{l}^{0}}{a_{l j}} $$ \u6700\u4f18\u6027\u68c0\u9a8c \u7b2c\u4e00\u6b21\u57fa\u89e3\uff1a $$ z^{(0)}=\\sum_{i=1}^{m} c_{i} x_{i}^{0} $$ \u7b2c\u4e8c\u6b21\u57fa\u89e3\uff1a $$ \\begin{aligned} z^{(1)} &=\\sum_{i=1}^{m} c_{i}\\left(x_{i}^{0}-\\theta a_{i j}\\right)+\\theta c_{j} \\ &=\\sum_{i=1}^{m} c_{i} x_{i}^{0}+\\theta\\left(c_{j}-\\sum_{i=1}^{m} c_{i} a_{i j}\\right) \\ &=z^{(0)}+\\theta\\left(c_{j}-\\sum_{i=1}^{m} c_{i} a_{i j}\\right) \\end{aligned} $$ \u662f\u5b58\u5728\u9012\u63a8\u5173\u7cfb\u7684\uff0c\u5982\u679c $$ c_j-\\sum_{i=1}^{m} c_{i} a_{i j} $$ \u8fd9\u4e00\u9879\u5c0f\u4e8e\u96f6\uff0c\u5219\u8bf4\u660e\u79fb\u5165\u8be5\u57fa\u5411\u91cf\u4f1a\u4f7f\u76ee\u6807\u51fd\u6570\u51cf\u5c0f\u3002\u5927\u4e8e\u96f6\u5219\u8bf4\u660e\u4f1a\u589e\u5927\u3002 \u5224\u65ad\uff1a \u6240\u6709 \\(\\sigma_{j}<=0\\) , \u8be5\u57fa\u89e3\u662f\u6700\u4f18\u89e3\uff1b \u6240\u6709 \\(\\sigma_{j}<=0\\) \uff0c\u5e76\u4e14\u8fd8\u6709\u7b49\u4e8e\u96f6\u7684\uff0c\u8bf4\u660e\u6709\u65e0\u7a77\u591a\u89e3\uff1b \u6240\u6709 \\(\\sigma_{j}<=0\\) \uff0c\u90fd\u662f\u4e25\u683c\u5c0f\u4e8e\uff0c\u8bf4\u660e\u662f\u552f\u4e00\u6700\u4f18\u89e3\uff1b \u5982\u679c\u5b58\u5728 \\(\\sigma_{j}>0\\) ,\u4e14 \\(P_j<=0\\) , \u5219\u8bf4\u660e\u6709 \u65e0\u754c\u89e3 \u3002 \u5355\u7eaf\u5f62\u6cd5\u6848\u4f8b\uff1a","title":"\u300a\u8fd0\u7b79\u5b66\u6559\u7a0b\u300b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%BF%90%E7%AD%B9%E5%AD%A6%E6%95%99%E7%A8%8B%E3%80%8B/#_1","text":"","title":"\u300a\u8fd0\u7b79\u5b66\u6559\u7a0b\u300b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%BF%90%E7%AD%B9%E5%AD%A6%E6%95%99%E7%A8%8B%E3%80%8B/#_2","text":"\u7ebf\u6027\u89c4\u5212 \u975e\u7ebf\u6027\u89c4\u5212 \u6574\u6570\u89c4\u5212 \u76ee\u6807\u89c4\u5212 \u52a8\u6001\u89c4\u5212 \u56fe\u8bba\u4e0e\u7f51\u7edc\u5206\u6790 \u4ee5\u53ca\u50a8\u5b58\u8bba\uff0c\u6392\u961f\u8bba\uff0c\u5bf9\u7b56\u8bba\uff0c\u51b3\u7b56\u8bba\u3002","title":"\u8fd0\u7b79\u5b66\u7684\u4e3b\u8981\u5206\u652f"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%BF%90%E7%AD%B9%E5%AD%A6%E6%95%99%E7%A8%8B%E3%80%8B/#_3","text":"\u4e00\u822c\u6765\u8bb2\uff0c\u4e3b\u8981\u95ee\u9898\u6d89\u53ca\u5230\u8d44\u6e90\u7684\u9650\u5236\uff08\u6bcf\u5929\u53ef\u7528\u7684\u80fd\u529b\uff09\uff0c\u5355\u4f4d\u9879\u76ee\u5e26\u6765\u7684\u6536\u76ca\u3002 \u7ebf\u6027\u89c4\u5212\u4e3b\u8981\u7531\uff1a \u53d8\u91cf\uff0c\u51b3\u7b56\u53d8\u91cf \u76ee\u6807\u51fd\u6570 \u7ea6\u675f\u6761\u4ef6\uff1a\u53d8\u91cf\u53d6\u503c\u7684\u65f6\u5019\u8981\u53d7\u5230\u5404\u79cd\u9650\u5236","title":"\u7ebf\u6027\u89c4\u5212"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%BF%90%E7%AD%B9%E5%AD%A6%E6%95%99%E7%A8%8B%E3%80%8B/#_4","text":"\u6781\u5927\u503c\uff0c\u7ea6\u675f\u6761\u4ef6\u4e3a\u7b49\u5f0f\uff0c \\(b_i\\) \u4e3a\u975e\u8d1f\u503c\uff0c \\(x_i\\) \u4e3a\u975e\u8d1f\u7684\uff0c\u5199\u4e3a\u4ee5\u4e0b\u6807\u51c6\u5f62\u5f0f\uff1a","title":"\u7ebf\u6027\u89c4\u5212\u95ee\u9898\u7684\u6807\u51c6\u578b"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%BF%90%E7%AD%B9%E5%AD%A6%E6%95%99%E7%A8%8B%E3%80%8B/#_5","text":"","title":"\u6c42\u89e3\u7ebf\u6027\u89c4\u5212"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%BF%90%E7%AD%B9%E5%AD%A6%E6%95%99%E7%A8%8B%E3%80%8B/#_6","text":"","title":"\u56fe\u89e3\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%BF%90%E7%AD%B9%E5%AD%A6%E6%95%99%E7%A8%8B%E3%80%8B/#_7","text":"\u65e0\u7a77\u591a\u6700\u4f18\u89e3\uff1a\u6700\u4f18\u7684\u53d6\u503c\u843d\u5728\u4e00\u6839\u7ebf\u4e0a\u3002 \u65e0\u754c\u89e3\uff1a\u89e3\u7684\u503c\u6ca1\u6709\u88ab\u9650\u5236\u4f4f\uff0c\u53ef\u80fd\u8d8b\u4e8e\u65e0\u7a77\u5927 \u65e0\u53ef\u884c\u89e3\uff1a\u6ca1\u6709\u53ef\u884c\u57df","title":"\u7ebf\u6027\u89c4\u5212\u53ef\u80fd\u7684\u51e0\u79cd\u89e3"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%BF%90%E7%AD%B9%E5%AD%A6%E6%95%99%E7%A8%8B%E3%80%8B/#_8","text":"\u5bf9\u4e8e\u4e00\u4e2a\u6807\u51c6\u5f62\u5f0f\u7684\u7ebf\u6027\u89c4\u5212\uff1a \u505a\u4ee5\u4e0b\u5b9a\u4e49\uff1a \u6ee1\u8db3\u7ea6\u675f\u6761\u4ef6\u7684\u89e3 \\(X\\) \u662f \u53ef\u884c\u89e3 \u4f7f\u76ee\u6807\u51fd\u6570\u8fbe\u5230\u6700\u5927\u7684\uff0c\u662f \u6700\u4f18\u89e3 \u5bf9\u4e8e\u7ea6\u675f\u6761\u4ef6\uff0c\u4e00\u822c\u5c06\u5176\u5199\u4e3a\u7ea6\u675f\u77e9\u9635 \\(A\\) \uff0c\u4e00\u822c\u6765\u8bb2\u5b83\u7684 \u79e9\u4e3am \uff0c\u6216\u8005\u5c0f\u4e8em\u3002\u5728\u6b64\u6211\u4eec\u5047\u8bbe\u4e3am\u3002 \\(B\\) \u662f\u77e9\u9635 \\(A\\) \u4e2d\u7684\u4e00\u4e2a\u6ee1\u79e9\u7684\u77e9\u9635\uff0c\u5b83\u662f\u4e00\u4e2a \u57fa $$ \\boldsymbol{B}=\\left(\\begin{array}{ccc} a_{11} & \\cdots & a_{1 m} \\ \\vdots & & \\vdots \\ a_{m 1} & \\cdots & a_{m m} \\end{array}\\right)=\\left(\\boldsymbol{P} {1}, \\cdots, \\boldsymbol{P} {m}\\right) $$ \u57fa\u89e3 \uff1a\u4f7f\u6240\u6709\u7684\u975e\u57fa\u53d8\u91cf\u4e3a0\uff0c \\(BX=b\\) \u8fd9\u4e2a\u65b9\u7a0b\u7531\u4e8e\u6ee1\u79e9\uff0c\u53ef\u4ee5\u89e3\u51fa\u552f\u4e00\u89e3\uff0c\u79f0\u4e4b\u4e3a\u57fa\u89e3\u3002\u57fa\u89e3\u4e0d\u591a\u4e8e \\(C_n^{m}\\) \u4e2a\u3002 \u57fa\u53ef\u884c\u89e3 \uff1a\u57fa\u89e3\u4e2d\uff0c\u6ee1\u8db3\u975e\u8d1f\u6761\u4ef6\u7684\u89e3\uff0c\u79f0\u4e3a\u57fa\u53ef\u884c\u89e3\u3002","title":"\u5355\u7eaf\u5f62\u6cd5\u539f\u7406"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%BF%90%E7%AD%B9%E5%AD%A6%E6%95%99%E7%A8%8B%E3%80%8B/#_9","text":"\u5982\u679c\u7ebf\u6027\u89c4\u5212\u95ee\u9898\u5b58\u5728\u53ef\u884c\u89e3\uff0c\u90a3\u4e48\u95ee\u9898\u7684\u53ef\u884c\u57df\u662f\u51f8\u96c6\uff1b \u7ebf\u6027\u95ee\u9898\u7684\u57fa\u53ef\u884c\u89e3\u5bf9\u5e94\u53ef\u884c\u57df\u7684\u9876\u70b9\uff1b \u5982\u679c\u7ebf\u6027\u89c4\u5212\u95ee\u9898\u7531\u6700\u4f18\u89e3\uff0c\u90a3\u4e48\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u57fa\u53ef\u884c\u89e3\u662f\u6700\u4f18\u89e3\u3002 \u901a\u8fc7\u521d\u7b49\u884c\u53d8\u6362\uff0c\u7531\u4e8e\u79e9\u662fm\uff0c\u80af\u5b9a\u53ef\u4ee5\u5f97\u5230\u8fd9\u6837\u7684\u60c5\u51b5\uff1a $$ \\left(\\boldsymbol{P} {1}, \\boldsymbol{P} {2}, \\cdots, \\boldsymbol{P} {m}\\right)=\\left(\\begin{array}{cccc} 1 & 0 & \\cdots & 0 \\ 0 & 1 & \\cdots & 0 \\ \\vdots & \\vdots & & \\vdots \\ 0 & 0 & \\cdots & 1 \\end{array}\\right) $$ \u5bf9\u8fd9\u4e2a\u6c42\u89e3\uff0c\u53ef\u4ee5\u5f97\u5230\uff1a $$ \\mathbf{X}=\\left(x {1}, \\cdots, x_{m}, x_{m+1}, \\cdots, x_{n}\\right)^{\\mathrm{T}}=\\left(b_{1}, \\cdots, b_{m}, 0, \\cdots, 0\\right)^{\\mathrm{T}} $$ \u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u7b2c\u4e00\u57fa\u89e3\uff0c\u5982\u4f55\u901a\u8fc7\u5b83\u6765\u8ba1\u7b97\u4e0b\u4e00\u4e2a\u9876\u70b9\u5462\uff1f \u9996\u5148\uff1a $$ \\sum_{i-1}^{m} \\boldsymbol{P} {i} x {i}^{0}=\\boldsymbol{b} $$ \u56e0\u4e3a \\(\\left(\\boldsymbol{P}_{1}, \\boldsymbol{P}_{2}, \\cdots, \\boldsymbol{P}_{m}\\right)\\) \u662f\u7ebf\u6027\u65e0\u5173\u7684\uff0c\u53ef\u4ee5\u7528\u8fd9\u4e9b\u5411\u91cf\u7684\u7ebf\u6027\u7ec4\u5408\u6765\u5f97\u5230\u5176\u4ed6\u5411\u91cf \\(\\boldsymbol{P}_{j}\\) \uff1a $$ \\boldsymbol{P} {j}=\\sum {i=1}^{m} a_{i j} \\boldsymbol{P} {i} $$ \u6240\u4ee5\uff0c\u52a0\u4e0a\u6570\u5b66\u6280\u5de7\uff0c\u4e58\u4e0a\u4e00\u4e2a \\(\\theta>0\\) \uff1a $$ \\theta\\left(\\boldsymbol{P} {j}-\\sum_{i=1}^{m} a_{i j} \\boldsymbol{P} {i}\\right)=0 $$ \u76ee\u7684\u662f\u4e3a\u4e86\u627e\u5230 \\(x_i^0\\) \u4e0e \\(P_j\\) \u7684\u5173\u7cfb\uff0c\u6240\u4ee5\u628a\u4e0a\u9762\u7684\u5f0f\u5b50\uff0c\u548c\u4e0a\u4e0a\u7684\u5f0f\u5b50\u52a0\u548c\uff0c\u5f97\u5230\uff1a $$ \\sum {i=1}^{m}\\left(x_{i}^{0}-\\theta a_{i j}\\right) \\boldsymbol{P} {i}+\\theta \\mathbf{P} {j}=\\boldsymbol{b} $$ \u8fd9\u6837\u7684\u5173\u7cfb\u5f0f\u53ef\u4ee5\u7528\u4e8e\u6211\u4eec\u627e\u4e0b\u4e00\u4e2a\u57fa\u89e3\uff1a \u5bf9\u4e8e\u524d\u9762\u7684 \\(P_i\\) ,\u9700\u8981\u6709\u4e00\u4e2a\u4e0d\u518d\u4f5c\u4e3a\u57fa\u5411\u91cf\uff0c\u6240\u4ee5 $$ x_{i}^{0}-\\theta a_{i j} \\geqslant 0 $$ \u6709\u4e00\u4e2a \\(i\\) \u662f\u5bfc\u81f4\u8fd9\u4e2a\u5f0f\u5b50\u53d6\u7b49\u53f7\u7684\uff0c\u6240\u4ee5 $$ \\theta=\\min {i}\\left{\\frac{x {i}^{0}}{a_{i j}}\\left|a_{i j}\\right\\rangle 0\\right}=\\frac{x_{l}^{0}}{a_{l j}} $$","title":"\u91cd\u8981\u5b9a\u7406"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%BF%90%E7%AD%B9%E5%AD%A6%E6%95%99%E7%A8%8B%E3%80%8B/#_10","text":"\u7b2c\u4e00\u6b21\u57fa\u89e3\uff1a $$ z^{(0)}=\\sum_{i=1}^{m} c_{i} x_{i}^{0} $$ \u7b2c\u4e8c\u6b21\u57fa\u89e3\uff1a $$ \\begin{aligned} z^{(1)} &=\\sum_{i=1}^{m} c_{i}\\left(x_{i}^{0}-\\theta a_{i j}\\right)+\\theta c_{j} \\ &=\\sum_{i=1}^{m} c_{i} x_{i}^{0}+\\theta\\left(c_{j}-\\sum_{i=1}^{m} c_{i} a_{i j}\\right) \\ &=z^{(0)}+\\theta\\left(c_{j}-\\sum_{i=1}^{m} c_{i} a_{i j}\\right) \\end{aligned} $$ \u662f\u5b58\u5728\u9012\u63a8\u5173\u7cfb\u7684\uff0c\u5982\u679c $$ c_j-\\sum_{i=1}^{m} c_{i} a_{i j} $$ \u8fd9\u4e00\u9879\u5c0f\u4e8e\u96f6\uff0c\u5219\u8bf4\u660e\u79fb\u5165\u8be5\u57fa\u5411\u91cf\u4f1a\u4f7f\u76ee\u6807\u51fd\u6570\u51cf\u5c0f\u3002\u5927\u4e8e\u96f6\u5219\u8bf4\u660e\u4f1a\u589e\u5927\u3002 \u5224\u65ad\uff1a \u6240\u6709 \\(\\sigma_{j}<=0\\) , \u8be5\u57fa\u89e3\u662f\u6700\u4f18\u89e3\uff1b \u6240\u6709 \\(\\sigma_{j}<=0\\) \uff0c\u5e76\u4e14\u8fd8\u6709\u7b49\u4e8e\u96f6\u7684\uff0c\u8bf4\u660e\u6709\u65e0\u7a77\u591a\u89e3\uff1b \u6240\u6709 \\(\\sigma_{j}<=0\\) \uff0c\u90fd\u662f\u4e25\u683c\u5c0f\u4e8e\uff0c\u8bf4\u660e\u662f\u552f\u4e00\u6700\u4f18\u89e3\uff1b \u5982\u679c\u5b58\u5728 \\(\\sigma_{j}>0\\) ,\u4e14 \\(P_j<=0\\) , \u5219\u8bf4\u660e\u6709 \u65e0\u754c\u89e3 \u3002 \u5355\u7eaf\u5f62\u6cd5\u6848\u4f8b\uff1a","title":"\u6700\u4f18\u6027\u68c0\u9a8c"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/","text":"\u7b97\u6cd5\u7ec3\u4e60\u7b14\u8bb0 \u4ee5\u6b64\u7b14\u8bb0\u672c\u8bb0\u5f55\u7b97\u6cd5\u9898\u76ee\u7684\u89e3\u9898\u601d\u8def\u4e0e\u9898\u578b\u5206\u7c7b\u3002 \u672c\u7b14\u8bb0\u672c\u4ee5\u5b9e\u6218\u7f16\u7a0b\u4e3a\u4e3b\uff0c\u7406\u8bba\u4e0e\u601d\u60f3\u4e3b\u8981\u5199\u5728\u300a\u7b97\u6cd5\u5bfc\u8bba\u300b\u9605\u8bfb\u7b14\u8bb0\u4e2d\u3002 [toc] \u6570\u636e\u7ed3\u6784 \u524d\u7f00\u6811Trie Trie\u6811\uff0c\u5373\u5b57\u5178\u6811\uff0c\u53c8\u79f0\u5355\u8bcd\u67e5\u627e\u6811\u6216\u952e\u6811\uff0c\u662f\u4e00\u79cd\u6811\u5f62\u7ed3\u6784\uff0c\u662f\u4e00\u79cd\u54c8\u5e0c\u6811\u7684\u53d8\u79cd\u3002\u5178\u578b\u5e94\u7528\u662f\u7528\u4e8e\u7edf\u8ba1\u548c\u6392\u5e8f\u5927\u91cf\u7684\u5b57\u7b26\u4e32\uff08\u4f46\u4e0d\u4ec5\u9650\u4e8e\u5b57\u7b26\u4e32\uff09\uff0c\u6240\u4ee5\u7ecf\u5e38\u88ab\u641c\u7d22\u5f15\u64ce\u7cfb\u7edf\u7528\u4e8e\u6587\u672c\u8bcd\u9891\u7edf\u8ba1\u3002\u5b83\u7684\u4f18\u70b9\u662f\uff1a\u5229\u7528\u5b57\u7b26\u4e32\u7684\u516c\u5171\u524d\u7f00\u6765\u51cf\u5c11\u67e5\u8be2\u65f6\u95f4\uff0c\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u65e0\u8c13\u7684\u5b57\u7b26\u4e32\u6bd4\u8f83\u3002 \u627e\u51fa\u81ea\u9664\u6570 https://leetcode-cn.com/problems/self-dividing-numbers/ \u8fd9\u9053\u9898\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662f\u5982\u4f55\u627e\u51fan\u7684\u6bcf\u4e00\u4f4d\u6570\uff1f str() n,d = divmod(n,10) \u53cc\u6307\u9488\uff0c\u6ed1\u52a8\u7a97\u53e3 \u6709\u6548\u7684\u5c71\u8109\u6570\u7ec4 https://leetcode-cn.com/problems/valid-mountain-array/ \u53cc\u6307\u9488\u5939\u5fc3 \u548c\u5927\u4e8e\u7b49\u4e8etarget\u7684\u6700\u77ed\u5b50\u6570\u7ec4 \u6ed1\u52a8\u7a97\u53e3\u6a21\u677f \u521d\u59cb\u5316\u5de6\u8fb9\u754c left = 0 \u521d\u59cb\u5316\u8fd4\u56de\u503c ret = \u6700\u5c0f\u503c or \u6700\u5927\u503c for \u53f3\u8fb9\u754c in \u53ef\u8fed\u4ee3\u5bf9\u8c61: \u66f4\u65b0\u7a97\u53e3\u5185\u90e8\u4fe1\u606f while \u6839\u636e\u9898\u610f\u8fdb\u884c\u8c03\u6574\uff1a \u6bd4\u8f83\u5e76\u66f4\u65b0ret(\u6536\u7f29\u573a\u666f\u65f6) \u6269\u5f20\u6216\u6536\u7f29\u7a97\u53e3\u5927\u5c0f \u6bd4\u8f83\u5e76\u66f4\u65b0ret(\u6269\u5f20\u573a\u666f\u65f6) \u8fd4\u56de ret \u4ec5\u4ec5\u7ffb\u8f6c\u5b57\u6bcd https://leetcode-cn.com/problems/reverse-only-letters/ \u4f7f\u7528\u53cc\u6307\u9488\u6216\u8005\u6808 \u6808\u662f\u4e00\u4e2a\u9ad8\u6548\u7684\u7ffb\u8f6c\u5de5\u5177\u3002 \u4e58\u79ef\u5c0f\u4e8ek\u7684\u5b50\u6570\u7ec4 https://leetcode-cn.com/problems/subarray-product-less-than-k/ \u6ed1\u52a8\u7a97\u53e3\uff0c\u4e3b\u8981\u95ee\u9898\u662f\uff0c\u7a97\u53e3\u6269\u5f20\u548c\u672a\u6269\u5c55\u4e4b\u524d\u7684\u5b50\u6570\u7ec4\u589e\u52a0\u6570\u91cf\u7684\u8ba1\u7b97\u3002 \u641c\u7d22\u65cb\u8f6c\u6392\u5e8f\u6570\u7ec4 \u5f53\u6570\u7ec4\u662f\u5c40\u90e8\u6709\u5e8f\u7684\uff0c\u8fd8\u662f\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\uff01 \u9012\u5f52\u7b97\u6cd5 \u4e8c\u53c9\u6811 \u4e8c\u53c9\u51fd\u6570\u5c55\u5f00\u4e3a\u94fe\u8868 \u540e\u5e8f\u904d\u5386 https://leetcode-cn.com/problems/flatten-binary-tree-to-linked-list/ \u4e8c\u53c9\u641c\u7d22\u6811\u7b2ck\u5c0f\u7684\u5143\u7d20 https://leetcode-cn.com/problems/kth-smallest-element-in-a-bst/ \u4e8c\u53c9\u641c\u7d22\u6811\u7684\u4e2d\u5e8f\u904d\u5386\uff0c\u5f97\u5230\u5347\u5e8f\u6570\u7ec4\u3002 \u901a\u8fc7\u4e2d\u5e8f\u904d\u5386\uff0c\u540e\u5e8f\u904d\u5386\u7684\u6570\u7ec4\u6784\u5efa\u4e8c\u53c9\u6811 https://leetcode-cn.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/ \u901a\u8fc7\u540e\u7eed\u904d\u5386\u627e\u5230\u5f53\u524droot\uff0c\u518d\u901a\u8fc7root\u5728\u4e2d\u5e8f\u904d\u5386\u4e2d\u627e\u5de6\u53f3\u5b50\u6811\u3002\u9012\u5f52\u6784\u5efa \u56de\u6eaf\u7b97\u6cd5 \u5206\u5272\u56de\u6587\u4e32 https://leetcode-cn.com/problems/palindrome-partitioning/ \u6a21\u62df\u4e00\u5200\u4e00\u5200\u5730\u5207\u8fc7\u7a0b\uff0c\u4fdd\u8bc1\u6bcf\u4e00\u6b21\u5207\u65f6\uff0c\u524d\u9762\u7684\u5b57\u7b26\u662f\u56de\u6587\u4e32\u3002 \u8ff7\u8def\u7684\u673a\u5668\u4eba https://leetcode-cn.com/problems/robot-in-a-grid-lcci/ \u8bb0\u5f55\u4e0b\u5df2\u7ecf\u56de\u6eaf\u8fc7\u7684\u70b9\uff0c\u907f\u514d\u91cd\u590d\u63a2\u7d22\u3002 \u96f6\u94b1\u5151\u6362 \u6bcf\u6b21\u9009\u62e9\u4e00\u79cd\u786c\u5e01\uff0cpath\u4e3a\u9009\u62e9\u7684\u786c\u5e01\u3002 https://leetcode-cn.com/problems/coin-change/ \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22 \u6700\u5927\u4eba\u5de5\u5c9b\u95ee\u9898 https://leetcode-cn.com/problems/making-a-large-island/ \u5bf9\u4e8e\u6bcf\u4e2a\u7b97\u51fa\u9762\u79ef\u7684\u5c9b\u5c7f\u53ef\u4ee5\u4e3a\u5b83\u6253\u4e0a\u72ec\u4e00\u65e0\u4e8c\u7684\u6807\u7b7e\uff0c\u4ee5\u65b9\u4fbf\u8ba1\u7b97\u540e\u9762\u7684\u9762\u79ef\u6269\u5f20\u4e0e\u907f\u514d\u91cd\u590d\u3002 \u52a8\u6001\u89c4\u5212 \u6700\u5927\u516c\u5171\u5b50\u6570\u7ec4\u95ee\u9898 \u8d2a\u5fc3\u7b97\u6cd5 \u6392\u5e03\u4e8c\u8fdb\u5236\u7f51\u683c\u7684\u6700\u5c11\u4ea4\u6362\u6b21\u6570 https://leetcode-cn.com/problems/minimum-swaps-to-arrange-a-binary-grid/ \u7ffb\u5361\u7247\u6e38\u620f https://leetcode-cn.com/problems/card-flipping-game/ \u4efb\u4f55\u6b63\u53cd\u9762\u4e0d\u91cd\u590d\u7684\u5361\u90fd\u53ef\u80fd\u662f\u7b54\u6848\uff01 \u7f8e\u5316\u6570\u7ec4\u4e2d\u7684\u6700\u5c0f\u5220\u9664\u6570\u5b57 https://leetcode-cn.com/problems/minimum-deletions-to-make-array-beautiful/ \u8d2a\u5fc3\u7684\u601d\u60f3 \u5c1a\u672a\u5f52\u7c7b\u7b97\u6cd5 \u627e\u5230\u6307\u5b9a\u957f\u5ea6\u7684\u56de\u6587\u6570 https://leetcode-cn.com/problems/find-palindrome-with-fixed-length/ \u56de\u6587\u6570\u7ec4\u53ef\u4ee5\u4f7f\u7528\u5b57\u7b26\u4e32\u8fdb\u884c\u6784\u5efa\u3002 \u957f\u5ea6\u4e3a5\u7684\u56de\u6587\u6570\u4e2d\uff0c\u7b2cn\u5927\u7684\u4e3a\uff1a100+n-1 \u8fd9\u662f\u89e3\u9898\u7684\u5173\u952e","title":"\u7b97\u6cd5\u7ec3\u4e60\u7b14\u8bb0"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/#_1","text":"\u4ee5\u6b64\u7b14\u8bb0\u672c\u8bb0\u5f55\u7b97\u6cd5\u9898\u76ee\u7684\u89e3\u9898\u601d\u8def\u4e0e\u9898\u578b\u5206\u7c7b\u3002 \u672c\u7b14\u8bb0\u672c\u4ee5\u5b9e\u6218\u7f16\u7a0b\u4e3a\u4e3b\uff0c\u7406\u8bba\u4e0e\u601d\u60f3\u4e3b\u8981\u5199\u5728\u300a\u7b97\u6cd5\u5bfc\u8bba\u300b\u9605\u8bfb\u7b14\u8bb0\u4e2d\u3002 [toc]","title":"\u7b97\u6cd5\u7ec3\u4e60\u7b14\u8bb0"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/#_2","text":"","title":"\u6570\u636e\u7ed3\u6784"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/#trie","text":"Trie\u6811\uff0c\u5373\u5b57\u5178\u6811\uff0c\u53c8\u79f0\u5355\u8bcd\u67e5\u627e\u6811\u6216\u952e\u6811\uff0c\u662f\u4e00\u79cd\u6811\u5f62\u7ed3\u6784\uff0c\u662f\u4e00\u79cd\u54c8\u5e0c\u6811\u7684\u53d8\u79cd\u3002\u5178\u578b\u5e94\u7528\u662f\u7528\u4e8e\u7edf\u8ba1\u548c\u6392\u5e8f\u5927\u91cf\u7684\u5b57\u7b26\u4e32\uff08\u4f46\u4e0d\u4ec5\u9650\u4e8e\u5b57\u7b26\u4e32\uff09\uff0c\u6240\u4ee5\u7ecf\u5e38\u88ab\u641c\u7d22\u5f15\u64ce\u7cfb\u7edf\u7528\u4e8e\u6587\u672c\u8bcd\u9891\u7edf\u8ba1\u3002\u5b83\u7684\u4f18\u70b9\u662f\uff1a\u5229\u7528\u5b57\u7b26\u4e32\u7684\u516c\u5171\u524d\u7f00\u6765\u51cf\u5c11\u67e5\u8be2\u65f6\u95f4\uff0c\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u65e0\u8c13\u7684\u5b57\u7b26\u4e32\u6bd4\u8f83\u3002","title":"\u524d\u7f00\u6811Trie"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/#_3","text":"https://leetcode-cn.com/problems/self-dividing-numbers/ \u8fd9\u9053\u9898\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662f\u5982\u4f55\u627e\u51fan\u7684\u6bcf\u4e00\u4f4d\u6570\uff1f str() n,d = divmod(n,10)","title":"\u627e\u51fa\u81ea\u9664\u6570"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/#_4","text":"","title":"\u53cc\u6307\u9488\uff0c\u6ed1\u52a8\u7a97\u53e3"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/#_5","text":"https://leetcode-cn.com/problems/valid-mountain-array/ \u53cc\u6307\u9488\u5939\u5fc3","title":"\u6709\u6548\u7684\u5c71\u8109\u6570\u7ec4"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/#target","text":"","title":"\u548c\u5927\u4e8e\u7b49\u4e8etarget\u7684\u6700\u77ed\u5b50\u6570\u7ec4"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/#_6","text":"\u521d\u59cb\u5316\u5de6\u8fb9\u754c left = 0 \u521d\u59cb\u5316\u8fd4\u56de\u503c ret = \u6700\u5c0f\u503c or \u6700\u5927\u503c for \u53f3\u8fb9\u754c in \u53ef\u8fed\u4ee3\u5bf9\u8c61: \u66f4\u65b0\u7a97\u53e3\u5185\u90e8\u4fe1\u606f while \u6839\u636e\u9898\u610f\u8fdb\u884c\u8c03\u6574\uff1a \u6bd4\u8f83\u5e76\u66f4\u65b0ret(\u6536\u7f29\u573a\u666f\u65f6) \u6269\u5f20\u6216\u6536\u7f29\u7a97\u53e3\u5927\u5c0f \u6bd4\u8f83\u5e76\u66f4\u65b0ret(\u6269\u5f20\u573a\u666f\u65f6) \u8fd4\u56de ret","title":"\u6ed1\u52a8\u7a97\u53e3\u6a21\u677f"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/#_7","text":"https://leetcode-cn.com/problems/reverse-only-letters/ \u4f7f\u7528\u53cc\u6307\u9488\u6216\u8005\u6808 \u6808\u662f\u4e00\u4e2a\u9ad8\u6548\u7684\u7ffb\u8f6c\u5de5\u5177\u3002","title":"\u4ec5\u4ec5\u7ffb\u8f6c\u5b57\u6bcd"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/#k","text":"https://leetcode-cn.com/problems/subarray-product-less-than-k/ \u6ed1\u52a8\u7a97\u53e3\uff0c\u4e3b\u8981\u95ee\u9898\u662f\uff0c\u7a97\u53e3\u6269\u5f20\u548c\u672a\u6269\u5c55\u4e4b\u524d\u7684\u5b50\u6570\u7ec4\u589e\u52a0\u6570\u91cf\u7684\u8ba1\u7b97\u3002","title":"\u4e58\u79ef\u5c0f\u4e8ek\u7684\u5b50\u6570\u7ec4"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/#_8","text":"\u5f53\u6570\u7ec4\u662f\u5c40\u90e8\u6709\u5e8f\u7684\uff0c\u8fd8\u662f\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\uff01","title":"\u641c\u7d22\u65cb\u8f6c\u6392\u5e8f\u6570\u7ec4"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/#_9","text":"","title":"\u9012\u5f52\u7b97\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/#_10","text":"","title":"\u4e8c\u53c9\u6811"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/#_11","text":"\u540e\u5e8f\u904d\u5386 https://leetcode-cn.com/problems/flatten-binary-tree-to-linked-list/","title":"\u4e8c\u53c9\u51fd\u6570\u5c55\u5f00\u4e3a\u94fe\u8868"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/#k_1","text":"https://leetcode-cn.com/problems/kth-smallest-element-in-a-bst/ \u4e8c\u53c9\u641c\u7d22\u6811\u7684\u4e2d\u5e8f\u904d\u5386\uff0c\u5f97\u5230\u5347\u5e8f\u6570\u7ec4\u3002","title":"\u4e8c\u53c9\u641c\u7d22\u6811\u7b2ck\u5c0f\u7684\u5143\u7d20"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/#_12","text":"https://leetcode-cn.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/ \u901a\u8fc7\u540e\u7eed\u904d\u5386\u627e\u5230\u5f53\u524droot\uff0c\u518d\u901a\u8fc7root\u5728\u4e2d\u5e8f\u904d\u5386\u4e2d\u627e\u5de6\u53f3\u5b50\u6811\u3002\u9012\u5f52\u6784\u5efa","title":"\u901a\u8fc7\u4e2d\u5e8f\u904d\u5386\uff0c\u540e\u5e8f\u904d\u5386\u7684\u6570\u7ec4\u6784\u5efa\u4e8c\u53c9\u6811"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/#_13","text":"","title":"\u56de\u6eaf\u7b97\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/#_14","text":"https://leetcode-cn.com/problems/palindrome-partitioning/ \u6a21\u62df\u4e00\u5200\u4e00\u5200\u5730\u5207\u8fc7\u7a0b\uff0c\u4fdd\u8bc1\u6bcf\u4e00\u6b21\u5207\u65f6\uff0c\u524d\u9762\u7684\u5b57\u7b26\u662f\u56de\u6587\u4e32\u3002","title":"\u5206\u5272\u56de\u6587\u4e32"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/#_15","text":"https://leetcode-cn.com/problems/robot-in-a-grid-lcci/ \u8bb0\u5f55\u4e0b\u5df2\u7ecf\u56de\u6eaf\u8fc7\u7684\u70b9\uff0c\u907f\u514d\u91cd\u590d\u63a2\u7d22\u3002","title":"\u8ff7\u8def\u7684\u673a\u5668\u4eba"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/#_16","text":"\u6bcf\u6b21\u9009\u62e9\u4e00\u79cd\u786c\u5e01\uff0cpath\u4e3a\u9009\u62e9\u7684\u786c\u5e01\u3002 https://leetcode-cn.com/problems/coin-change/","title":"\u96f6\u94b1\u5151\u6362"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/#_17","text":"","title":"\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/#_18","text":"https://leetcode-cn.com/problems/making-a-large-island/ \u5bf9\u4e8e\u6bcf\u4e2a\u7b97\u51fa\u9762\u79ef\u7684\u5c9b\u5c7f\u53ef\u4ee5\u4e3a\u5b83\u6253\u4e0a\u72ec\u4e00\u65e0\u4e8c\u7684\u6807\u7b7e\uff0c\u4ee5\u65b9\u4fbf\u8ba1\u7b97\u540e\u9762\u7684\u9762\u79ef\u6269\u5f20\u4e0e\u907f\u514d\u91cd\u590d\u3002","title":"\u6700\u5927\u4eba\u5de5\u5c9b\u95ee\u9898"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/#_19","text":"","title":"\u52a8\u6001\u89c4\u5212"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/#_20","text":"","title":"\u6700\u5927\u516c\u5171\u5b50\u6570\u7ec4\u95ee\u9898"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/#_21","text":"","title":"\u8d2a\u5fc3\u7b97\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/#_22","text":"https://leetcode-cn.com/problems/minimum-swaps-to-arrange-a-binary-grid/","title":"\u6392\u5e03\u4e8c\u8fdb\u5236\u7f51\u683c\u7684\u6700\u5c11\u4ea4\u6362\u6b21\u6570"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/#_23","text":"https://leetcode-cn.com/problems/card-flipping-game/ \u4efb\u4f55\u6b63\u53cd\u9762\u4e0d\u91cd\u590d\u7684\u5361\u90fd\u53ef\u80fd\u662f\u7b54\u6848\uff01","title":"\u7ffb\u5361\u7247\u6e38\u620f"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/#_24","text":"https://leetcode-cn.com/problems/minimum-deletions-to-make-array-beautiful/ \u8d2a\u5fc3\u7684\u601d\u60f3","title":"\u7f8e\u5316\u6570\u7ec4\u4e2d\u7684\u6700\u5c0f\u5220\u9664\u6570\u5b57"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/#_25","text":"","title":"\u5c1a\u672a\u5f52\u7c7b\u7b97\u6cd5"},{"location":"%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/#_26","text":"https://leetcode-cn.com/problems/find-palindrome-with-fixed-length/ \u56de\u6587\u6570\u7ec4\u53ef\u4ee5\u4f7f\u7528\u5b57\u7b26\u4e32\u8fdb\u884c\u6784\u5efa\u3002 \u957f\u5ea6\u4e3a5\u7684\u56de\u6587\u6570\u4e2d\uff0c\u7b2cn\u5927\u7684\u4e3a\uff1a100+n-1 \u8fd9\u662f\u89e3\u9898\u7684\u5173\u952e","title":"\u627e\u5230\u6307\u5b9a\u957f\u5ea6\u7684\u56de\u6587\u6570"}]}