{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Huang Hao' Blog Enjoy the tour of exploring. [toc]","title":"Huang Hao' Blog"},{"location":"#huang-hao-blog","text":"Enjoy the tour of exploring. [toc]","title":"Huang Hao' Blog"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/Bayesian%20network%20structure%20learning%20%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98/","text":"Bayesian network structure learning: \u6700\u77ed\u8def\u5f84\u95ee\u9898 order graph order graph \u5b9e\u9645\u4e0a\u8bb0\u5f55\u4e86\uff1a\u5728\u8fd9\u4e48\u591a\u8282\u70b9\u7684\u60c5\u51b5\u4e0b\uff0c\u6709\u591a\u5c11\u79cd\u6392\u5e8f\u65b9\u5f0f\u3002 \u5bf9\u4e8e n\u4e2a\u53d8\u91cf\uff0corder graph \u4e00\u5171\u6709n! \u79cd\u6392\u5e8f\u65b9\u5f0f\uff0c$2^n$\u4e2a\u8282\u70b9\u3002 U --> X + U order graph \u8fb9\u7684\u6743\u91cd\u4e3a BestScore(X,U) order graph \u7684\u8fb9\u7684\u6743\u91cd\u7528parent graph\u8fdb\u884c\u8ba1\u7b97\u3002 parent graph \u4f7f\u7528parent graph \u6765\u8ba1\u7b97order graph\u7684\u8fb9\u7684\u6743\u91cd\u3002\u6bcf\u4e2a\u53d8\u91cf\u90fd\u6709\u81ea\u5df1\u7684parent graph\u3002 \u5bf9\u4e8e$x_1$\u6765\u8bf4\uff0cparent graph \u5982\u56fe \u901a\u8fc7\u8ba1\u7b97\u8fd9\u4e2a\u56fe\uff0c\u53ef\u4ee5\u5f97\u5230 $$ BestScore(X_1,{})\\ BestScore(X_1,X_2)\\ BestScore(X_1,X_3)\\ ...\\ BestScore(X_1,{X_2,X_3,X_4}) $$ \u5bf9\u4e8en\u4e2a\u53d8\u91cf\uff0cparent graph \u91cc\u5171\u6709 $2^{n-1}$ \u4e2a\u8282\u70b9\uff0c\u6240\u4ee5\u4e00\u5171\u6709$n 2^{n-1}$ \u4e2a BestScore \u3002\u4e0e\u4e4b\u5bf9\u5e94\u7684 order graph\u91cc\u521a\u597d\u4e5f\u6709$n 2^{n-1}$ \u4e2a\u8fb9\u3002 \u4f9d\u636e\u4e0a\u9762\u7684\u5b9a\u7406 conclusion \u9996\u5148\u5bf9\u6bcf\u4e2a\u53d8\u91cf\u90fd\u6784\u5efaparent graph\uff0c\u5f97\u5230\u4e00\u7cfb\u5217\u7684 BestScore\uff0c\u7136\u540e\u6784\u5efaorder graph\uff0c\u4f7f\u7528BestScore\u6765\u5b8c\u5584order graph\u7684\u6743\u91cd\uff0c\u6700\u540e\u5bfb\u627e\u6700\u77ed\u8def\u5f84\u3002 frozenset() frozenset({'tub'}) 324.8488083696086 frozenset({'tub'}) frozenset({'lung', 'tub'}) 1040.536428179004 frozenset({'lung', 'tub'}) frozenset({'lung', 'tub', 'smoke'}) 3370.702169702024 frozenset({'lung', 'tub', 'smoke'}) frozenset({'bronc', 'lung', 'tub', 'smoke'}) 3222.269284216359 frozenset({'bronc', 'lung', 'tub', 'smoke'}) frozenset({'either', 'lung', 'bronc', 'tub', 'smoke'}) 39.51805503466176 frozenset({'either', 'lung', 'bronc', 'tub', 'smoke'}) frozenset({'either', 'lung', 'bronc', 'asia', 'tub', 'smoke'}) 256.31658272029216 frozenset({'either', 'lung', 'bronc', 'asia', 'tub', 'smoke'}) frozenset({'either', 'lung', 'bronc', 'asia', 'tub', 'xray', 'smoke'}) 966.700642651686 frozenset({'either', 'lung', 'bronc', 'asia', 'tub', 'xray', 'smoke'}) frozenset({'either', 'lung', 'dysp', 'bronc', 'asia', 'tub', 'xray', 'smoke'}) 2133.9156545006185 11354.807625374253","title":"Bayesian network structure learning: \u6700\u77ed\u8def\u5f84\u95ee\u9898"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/Bayesian%20network%20structure%20learning%20%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98/#bayesian-network-structure-learning","text":"","title":"Bayesian network structure learning: \u6700\u77ed\u8def\u5f84\u95ee\u9898"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/Bayesian%20network%20structure%20learning%20%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98/#order-graph","text":"order graph \u5b9e\u9645\u4e0a\u8bb0\u5f55\u4e86\uff1a\u5728\u8fd9\u4e48\u591a\u8282\u70b9\u7684\u60c5\u51b5\u4e0b\uff0c\u6709\u591a\u5c11\u79cd\u6392\u5e8f\u65b9\u5f0f\u3002 \u5bf9\u4e8e n\u4e2a\u53d8\u91cf\uff0corder graph \u4e00\u5171\u6709n! \u79cd\u6392\u5e8f\u65b9\u5f0f\uff0c$2^n$\u4e2a\u8282\u70b9\u3002 U --> X + U order graph \u8fb9\u7684\u6743\u91cd\u4e3a BestScore(X,U) order graph \u7684\u8fb9\u7684\u6743\u91cd\u7528parent graph\u8fdb\u884c\u8ba1\u7b97\u3002","title":"order graph"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/Bayesian%20network%20structure%20learning%20%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98/#parent-graph","text":"\u4f7f\u7528parent graph \u6765\u8ba1\u7b97order graph\u7684\u8fb9\u7684\u6743\u91cd\u3002\u6bcf\u4e2a\u53d8\u91cf\u90fd\u6709\u81ea\u5df1\u7684parent graph\u3002 \u5bf9\u4e8e$x_1$\u6765\u8bf4\uff0cparent graph \u5982\u56fe \u901a\u8fc7\u8ba1\u7b97\u8fd9\u4e2a\u56fe\uff0c\u53ef\u4ee5\u5f97\u5230 $$ BestScore(X_1,{})\\ BestScore(X_1,X_2)\\ BestScore(X_1,X_3)\\ ...\\ BestScore(X_1,{X_2,X_3,X_4}) $$ \u5bf9\u4e8en\u4e2a\u53d8\u91cf\uff0cparent graph \u91cc\u5171\u6709 $2^{n-1}$ \u4e2a\u8282\u70b9\uff0c\u6240\u4ee5\u4e00\u5171\u6709$n 2^{n-1}$ \u4e2a BestScore \u3002\u4e0e\u4e4b\u5bf9\u5e94\u7684 order graph\u91cc\u521a\u597d\u4e5f\u6709$n 2^{n-1}$ \u4e2a\u8fb9\u3002 \u4f9d\u636e\u4e0a\u9762\u7684\u5b9a\u7406","title":"parent graph"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/Bayesian%20network%20structure%20learning%20%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98/#conclusion","text":"\u9996\u5148\u5bf9\u6bcf\u4e2a\u53d8\u91cf\u90fd\u6784\u5efaparent graph\uff0c\u5f97\u5230\u4e00\u7cfb\u5217\u7684 BestScore\uff0c\u7136\u540e\u6784\u5efaorder graph\uff0c\u4f7f\u7528BestScore\u6765\u5b8c\u5584order graph\u7684\u6743\u91cd\uff0c\u6700\u540e\u5bfb\u627e\u6700\u77ed\u8def\u5f84\u3002 frozenset() frozenset({'tub'}) 324.8488083696086 frozenset({'tub'}) frozenset({'lung', 'tub'}) 1040.536428179004 frozenset({'lung', 'tub'}) frozenset({'lung', 'tub', 'smoke'}) 3370.702169702024 frozenset({'lung', 'tub', 'smoke'}) frozenset({'bronc', 'lung', 'tub', 'smoke'}) 3222.269284216359 frozenset({'bronc', 'lung', 'tub', 'smoke'}) frozenset({'either', 'lung', 'bronc', 'tub', 'smoke'}) 39.51805503466176 frozenset({'either', 'lung', 'bronc', 'tub', 'smoke'}) frozenset({'either', 'lung', 'bronc', 'asia', 'tub', 'smoke'}) 256.31658272029216 frozenset({'either', 'lung', 'bronc', 'asia', 'tub', 'smoke'}) frozenset({'either', 'lung', 'bronc', 'asia', 'tub', 'xray', 'smoke'}) 966.700642651686 frozenset({'either', 'lung', 'bronc', 'asia', 'tub', 'xray', 'smoke'}) frozenset({'either', 'lung', 'dysp', 'bronc', 'asia', 'tub', 'xray', 'smoke'}) 2133.9156545006185 11354.807625374253","title":"conclusion"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/EM%20algorithm%20%E6%9C%9F%E6%9C%9B%E6%9C%80%E5%A4%A7%E7%AE%97%E6%B3%95/","text":"EM algorithm \u671f\u671b\u6700\u5927\u7b97\u6cd5 background EM \u7b97\u6cd5\uff0c\u5168\u79f0 Expectation Maximization Algorithm\u3002\u671f\u671b\u6700\u5927\u7b97\u6cd5\u662f\u4e00\u79cd\u8fed\u4ee3\u7b97\u6cd5\uff0c\u7528\u4e8e\u542b\u6709\u9690\u53d8\u91cf\uff08Hidden Variable\uff09\u7684\u6982\u7387\u53c2\u6570\u6a21\u578b\u7684\u6700\u5927\u4f3c\u7136\u4f30\u8ba1\u6216\u6781\u5927\u540e\u9a8c\u6982\u7387\u4f30\u8ba1\u3002 \u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u4f18\u5316\u7b97\u6cd5\uff0c\u7528\u4e8e\u6c42\u89e3\uff1a $$ \\hat \\theta = \\arg \\max _\\theta p(x,z;\\theta) $$ Example \u5047\u8bbe\u6709\u4e24\u679a\u786c\u5e01 A \u548c B\uff0c\u4ed6\u4eec\u7684\u968f\u673a\u629b\u63b7\u7684\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u6211\u4eec\u5f88\u5bb9\u6613\u4f30\u8ba1\u51fa\u4e24\u679a\u786c\u5e01\u629b\u51fa\u6b63\u9762\u7684\u6982\u7387\uff1a -->\u95ee\u9898\u8f6c\u5316\uff1a \u73b0\u5728\u6211\u4eec\u52a0\u5165\u9690\u53d8\u91cf\uff0c\u62b9\u53bb\u6bcf\u8f6e\u6295\u63b7\u7684\u786c\u5e01\u6807\u8bb0\uff1a \u6b64\u65f6\u5c31\u591a\u4e86\u4e00\u4e2a\u9690\u53d8\u91cf\uff1a$Z = (z_1,z_2,z_3,z_4,z_5)$ \u7528\u4e8e\u4ee3\u8868\u786c\u5e01\u7684\u79cd\u7c7b\u3002 \u5982\u679c\u60f3\u8981\u4f30\u8ba1\u53c2\u6570 $\\theta_A, \\theta_B$ ,\u6211\u4eec\u9996\u5148\u8981\u77e5\u9053 $Z$ \u3002 \u4f46\u662f\u60f3\u8981\u4f30\u8ba1 $Z$, \u9996\u5148\u8981\u77e5\u9053 $\\theta_A, \\theta_B$ \u3002 solve\uff1a \u62bd\u8c61\u6a21\u578b\uff1a \u5982\u679c\u8bf4\uff0cx\uff0cz\u90fd\u80fd\u88ab\u89c2\u6d4b\u5230\uff0c\u90a3\u4e48 \u8054\u5408\u6982\u7387\u5206\u5e03 \u5199\u4e3a\uff1a $$ P(X,Z)=P(X|Z)P(Z) $$ \u8054\u5408\u6982\u7387\u5206\u5e03 \u662f\u6982\u7387\u8bba\u7684\u6700\u9ad8\u76ee\u6807\uff0c\u83b7\u5f97\u4e86\u8054\u5408\u6982\u7387\u5206\u5e03\uff0c\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u5c31\u662f\u5bf9\u8fd9\u4e2a\u6a21\u578b\u6709\u4e86\u900f\u5f7b\u7684\u4e86\u89e3\u3002 \u5728\u8fd9\u4e2a\u95ee\u9898\u6211\u4eec\u7684\u76ee\u6807\u5e76\u4e0d\u662f\u8054\u5408\u6982\u7387\u5206\u5e03\uff0c\u800c\u662f\u6b21\u7ea7\u76ee\u6807\uff1a $$ p(X=\u4e0a|Z=A\u79cd\u786c\u5e01)=?\\ p(X=\u4e0b|Z=A\u79cd\u786c\u5e01)=?\\ p(X=\u4e0a|Z=B\u79cd\u786c\u5e01)=?\\ p(X=\u4e0b|Z=B\u79cd\u786c\u5e01)=?\\ $$ \u4e5f\u5c31\u662f \u6761\u4ef6\u6982\u7387\u5206\u5e03 $$ P(X|Z) $$ \u8fb9\u7f18\u6982\u7387\u5206\u5e03 P(X) \u4e3a\uff1a $$ P(X;\\theta)=\\sum_{Z}P(X,Z;\\theta)=\\sum_{Z}P(X|Z;\\theta) $$ \u6700\u5927\u4f3c\u7136\u6cd5\u6c42\u53c2\u6570\u53ef\u4ee5\u5199\u4e3a\uff1a $$ \\hat \\theta = \\arg \\max \\theta P(X;\\theta)\\ = \\arg \\max \\theta \\sum_i^{\u6837\u672c\u6570} \\log p(x^{(i)};\\theta)\\ =\\arg \\max \\theta \\sum_i^{\u6837\u672c\u6570} \\log \\sum {z^{(i)}} p(x^{(i)},z^{(i)};\\theta)\\ =\\arg \\max \\theta \\sum_i^{\u6837\u672c\u6570} \\log \\sum {z^{(i)}} p(x^{(i)}|z^{(i)};\\theta) $$ \u5f53 $x^{(i)},z^{(i)}$ \u662f\u53ef\u89c2\u6d4b, \u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u7b49\u6700\u4f18\u5316\u65b9\u6cd5\u6765\u627e\u5230$\\hat \\theta $ \u5982\u679c\uff0c\u53ea\u80fd\u89c2\u6d4b\u5230 $x^{(i)} $, \u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u6f2b\u65e0\u76ee\u7684\u5730\u66f4\u65b0 $\\theta $, \u4f1a\u5bfc\u81f4\u6536\u655b\u901f\u5ea6\u8fc7\u6162\u3002 \u4e0a\u6587\u7684$\\sum_{Z}P(X,Z;\\theta)=\\sum_{Z}P(X|Z;\\theta)$ \u662f\u5efa\u7acb\u5728\u786c\u5e01\u6848\u4f8b\u7684\u60c5\u666f\u4e0b\u7684\uff0c\u4e00\u822c\u60c5\u51b5X\u4e0eZ\u7684\u4f9d\u8d56\u5173\u7cfb\u4e0d\u80fd\u786e\u5b9a\uff0c\u6240\u4ee5\u540e\u9762\u7684\u63a8\u5230\u4f7f\u7528\u8054\u5408\u6982\u7387\u5206\u5e03\u7684\u5f62\u5f0f\u3002 $$ \\sum_i^{\u6837\u672c\u6570} \\log \\sum_{z^{(i)}} p(x^{(i)},z^{(i)};\\theta)\\ =\\sum_i^{\u6837\u672c\u6570} \\log \\sum_{z^{(i)}} Q_i(z^{(i)})\\frac{p(x^{(i)},z^{(i)};\\theta)}{Q_i(z^{(i)})}\\ =\\sum_i^{\u6837\u672c\u6570} \\sum_{z^{(i)}} Q_i(z^{(i)})\\log \\frac{p(x^{(i)},z^{(i)};\\theta)}{Q_i(z^{(i)})}\\ $$ \u5047\u8bbe $z^{(i)}$ \u670d\u4ece\u5206\u5e03 $Q_i$ , \u6839\u636eJenson\u4e0d\u7b49\u5f0f\uff1a $$ f(E(x)) \\geq E(f(x)), \\text { \u5982\u679c } f(x) \\text { \u662f\u51f9\u51fd\u6570 }\\ \\ log(E(\\frac{p(x^{(i)},z^{(i)};\\theta)}{Q_i(z^{(i)})}))\\ \\geq E(log(\\frac{p(x^{(i)},z^{(i)};\\theta)}{Q_i(z^{(i)})})) $$ \u5e76\u4e14\u5e26\u5165\uff1a $$ \\sum_{z^{(i)}} Q_i(z^{(i)}) =1 $$ \u6700\u7ec8\u5c31\u80fd\u5f97\u5230\u4e0a\u9762\u7684\u4e0d\u7b49\u5f0f\u3002\u4e14\u5f53$\\frac{p(x^{(i)},z^{(i)};\\theta)}{Q_i(z^{(i)})}=constant$ \u7684\u65f6\u5019\u53d6\u7b49\u53f7\uff0c\u8be6\u60c5\u53ef\u89c1\uff1a https://baike.baidu.com/item/%E7%90%B4%E7%94%9F%E4%B8%8D%E7%AD%89%E5%BC%8F/397409 \u7136\u540e\uff0c $$ p(x^{(i)},z^{(i)};\\theta)=constant \\times {Q_i(z^{(i)})}\\ \\sum_{z^{(i)}} Q_i(z^{(i)}) =1\\ $$ \u4e09\u4e2a\u672a\u77e5\u6570\uff0c\u4e24\u4e2a\u7b49\u5f0f\uff0c\u80af\u5b9a\u80fd\u5316\u7b80\u4e3a\u4e24\u4e2a\u672a\u77e5\u6570\u7684\u4e00\u4e2a\u7b49\u5f0f\u3002\u6240\u4ee5\u4e24\u8fb9\u540c\u65f6\u5bf9z\u6c42\u548c\uff0c\u5e76\u56de\u4ee3\u5f97\u5230\uff1a $$ Q_{i}\\left(z^{(i)}\\right)=\\frac{P\\left(x^{(i)}, z^{(i)} ; \\theta\\right)}{\\sum_{z} P\\left(x^{(i)}, z^{(i)} ; \\theta\\right)}=\\frac{P\\left(x^{(i)}, z^{(i)} ; \\theta\\right)}{P\\left(x^{(i)} ; \\theta\\right)}=P\\left(z^{(i)} \\mid x^{(i)} ; \\theta\\right) $$ \u4e5f\u5c31\u662f\u8bf4\uff1a\u5f53\u4e0a\u5f0f\u6ee1\u8db3\u65f6\uff0c\u4f3c\u7136\u51fd\u6570\u8fbe\u5230\u6700\u5c0f\uff0c\u4e5f\u5c31\u662f\u4f3c\u7136\u51fd\u6570\u8fbe\u5230\u5176 \u4e0b\u754c \u3002 \u6211\u4eec\u9700\u8981\u4e0d\u65ad\u5730\u53bb \u63d0\u9ad8\u4e0b\u754c \u6765\u4f7f\u4f3c\u7136\u51fd\u6570\u8fbe\u5230\u6700\u5927\u503c\u3002\u8fd9\u5c31\u662fM\u90e8\u5206\u3002 E\u90e8\u5206\u662f\u6c42\u671f\u671b\u7684\u8fc7\u7a0b \u7b97\u6cd5\u6b65\u9aa4 \u8f93\u5165\uff1a\u89c2\u6d4b\u6570\u636e\uff1a$x=\\left(x^{(1)}, x^{(2)}, \\ldots x^{(m)}\\right)$ , \u8054\u5408\u6982\u7387\u5206\u5e03\u6a21\u578b\uff1a$p(x, z ; \\theta)$ \u968f\u673a\u521d\u59cb\u5316 $\\theta_0$ \u8fed\u4ee3\uff1a E-step \u5bf9\u4e8e\u5f53\u524d\u7684\u6a21\u578b\u53c2\u6570$\\theta$ $$ Q_{i}\\left(z^{(i)}\\right)=p\\left(z^{(i)} \\mid x^{(i)} ; \\theta\\right) $$ \u4f3c\u7136\u51fd\u6570\u7684\u4e0b\u754c\u4e3a\uff1a $$ L(\\theta) = \\sum_i^{\u6837\u672c\u6570} \\sum_{z^{(i)}} Q_i(z^{(i)})\\log \\frac{p(x^{(i)},z^{(i)};\\theta)}{Q_i(z^{(i)})}\\ $$ M-step \u6700\u5927\u5316 $L(\\theta)$ $$ new_ \\theta=\\arg \\max _{\\theta} L\\left(\\theta\\right) $$ \u601d\u8003 EM \u7b97\u6cd5\u9002\u7528\u4e8e\u5f88\u591a\u6700\u4f18\u5316\u95ee\u9898\uff0c\u5b83\u548c\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u6709\u7684\u5dee\u522b\u6709\uff1a \u6574\u4e2a\u7b97\u6cd5\u4e0d\u9700\u8981\u6c42\u5bfc\uff0c\u5373\u53ef\u5f97\u5230\u76ee\u6807\u51fd\u6570\u7684\u6700\u5927\u503c\uff08\u5c40\u90e8\u6700\u4f18\uff09\u3002 \u5728\u4e00\u4e9b\u6700\u4f18\u5316\u95ee\u9898\u4e2d\uff0c\u53ef\u4ee5\u4eba\u4e3a\u5730\u5f15\u5165\u9690\u53d8\u91cf\u6765\u7b80\u5316\u6a21\u578b\u7684\u8ba1\u7b97\u3002 \u9700\u8981\u8ba1\u7b97$p\\left(z^{(i)} \\mid x^{(i)} ; \\theta\\right)$, \u8fd9\u4e2a\u540e\u9a8c\u6982\u7387\u5728\u9ad8\u7ef4\u5ea6\uff0c\u5927\u6837\u672c\u6570\u636e\u7684\u65f6\u5019\uff0c\u5176\u5b9e\u975e\u5e38\u96be\u4ee5\u8ba1\u7b97\u3002","title":"EM algorithm \u671f\u671b\u6700\u5927\u7b97\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/EM%20algorithm%20%E6%9C%9F%E6%9C%9B%E6%9C%80%E5%A4%A7%E7%AE%97%E6%B3%95/#em-algorithm","text":"","title":"EM algorithm \u671f\u671b\u6700\u5927\u7b97\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/EM%20algorithm%20%E6%9C%9F%E6%9C%9B%E6%9C%80%E5%A4%A7%E7%AE%97%E6%B3%95/#background","text":"EM \u7b97\u6cd5\uff0c\u5168\u79f0 Expectation Maximization Algorithm\u3002\u671f\u671b\u6700\u5927\u7b97\u6cd5\u662f\u4e00\u79cd\u8fed\u4ee3\u7b97\u6cd5\uff0c\u7528\u4e8e\u542b\u6709\u9690\u53d8\u91cf\uff08Hidden Variable\uff09\u7684\u6982\u7387\u53c2\u6570\u6a21\u578b\u7684\u6700\u5927\u4f3c\u7136\u4f30\u8ba1\u6216\u6781\u5927\u540e\u9a8c\u6982\u7387\u4f30\u8ba1\u3002 \u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u4f18\u5316\u7b97\u6cd5\uff0c\u7528\u4e8e\u6c42\u89e3\uff1a $$ \\hat \\theta = \\arg \\max _\\theta p(x,z;\\theta) $$","title":"background"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/EM%20algorithm%20%E6%9C%9F%E6%9C%9B%E6%9C%80%E5%A4%A7%E7%AE%97%E6%B3%95/#example","text":"\u5047\u8bbe\u6709\u4e24\u679a\u786c\u5e01 A \u548c B\uff0c\u4ed6\u4eec\u7684\u968f\u673a\u629b\u63b7\u7684\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u6211\u4eec\u5f88\u5bb9\u6613\u4f30\u8ba1\u51fa\u4e24\u679a\u786c\u5e01\u629b\u51fa\u6b63\u9762\u7684\u6982\u7387\uff1a -->\u95ee\u9898\u8f6c\u5316\uff1a \u73b0\u5728\u6211\u4eec\u52a0\u5165\u9690\u53d8\u91cf\uff0c\u62b9\u53bb\u6bcf\u8f6e\u6295\u63b7\u7684\u786c\u5e01\u6807\u8bb0\uff1a \u6b64\u65f6\u5c31\u591a\u4e86\u4e00\u4e2a\u9690\u53d8\u91cf\uff1a$Z = (z_1,z_2,z_3,z_4,z_5)$ \u7528\u4e8e\u4ee3\u8868\u786c\u5e01\u7684\u79cd\u7c7b\u3002 \u5982\u679c\u60f3\u8981\u4f30\u8ba1\u53c2\u6570 $\\theta_A, \\theta_B$ ,\u6211\u4eec\u9996\u5148\u8981\u77e5\u9053 $Z$ \u3002 \u4f46\u662f\u60f3\u8981\u4f30\u8ba1 $Z$, \u9996\u5148\u8981\u77e5\u9053 $\\theta_A, \\theta_B$ \u3002","title":"Example"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/EM%20algorithm%20%E6%9C%9F%E6%9C%9B%E6%9C%80%E5%A4%A7%E7%AE%97%E6%B3%95/#solve","text":"\u62bd\u8c61\u6a21\u578b\uff1a \u5982\u679c\u8bf4\uff0cx\uff0cz\u90fd\u80fd\u88ab\u89c2\u6d4b\u5230\uff0c\u90a3\u4e48 \u8054\u5408\u6982\u7387\u5206\u5e03 \u5199\u4e3a\uff1a $$ P(X,Z)=P(X|Z)P(Z) $$ \u8054\u5408\u6982\u7387\u5206\u5e03 \u662f\u6982\u7387\u8bba\u7684\u6700\u9ad8\u76ee\u6807\uff0c\u83b7\u5f97\u4e86\u8054\u5408\u6982\u7387\u5206\u5e03\uff0c\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u5c31\u662f\u5bf9\u8fd9\u4e2a\u6a21\u578b\u6709\u4e86\u900f\u5f7b\u7684\u4e86\u89e3\u3002 \u5728\u8fd9\u4e2a\u95ee\u9898\u6211\u4eec\u7684\u76ee\u6807\u5e76\u4e0d\u662f\u8054\u5408\u6982\u7387\u5206\u5e03\uff0c\u800c\u662f\u6b21\u7ea7\u76ee\u6807\uff1a $$ p(X=\u4e0a|Z=A\u79cd\u786c\u5e01)=?\\ p(X=\u4e0b|Z=A\u79cd\u786c\u5e01)=?\\ p(X=\u4e0a|Z=B\u79cd\u786c\u5e01)=?\\ p(X=\u4e0b|Z=B\u79cd\u786c\u5e01)=?\\ $$ \u4e5f\u5c31\u662f \u6761\u4ef6\u6982\u7387\u5206\u5e03 $$ P(X|Z) $$ \u8fb9\u7f18\u6982\u7387\u5206\u5e03 P(X) \u4e3a\uff1a $$ P(X;\\theta)=\\sum_{Z}P(X,Z;\\theta)=\\sum_{Z}P(X|Z;\\theta) $$ \u6700\u5927\u4f3c\u7136\u6cd5\u6c42\u53c2\u6570\u53ef\u4ee5\u5199\u4e3a\uff1a $$ \\hat \\theta = \\arg \\max \\theta P(X;\\theta)\\ = \\arg \\max \\theta \\sum_i^{\u6837\u672c\u6570} \\log p(x^{(i)};\\theta)\\ =\\arg \\max \\theta \\sum_i^{\u6837\u672c\u6570} \\log \\sum {z^{(i)}} p(x^{(i)},z^{(i)};\\theta)\\ =\\arg \\max \\theta \\sum_i^{\u6837\u672c\u6570} \\log \\sum {z^{(i)}} p(x^{(i)}|z^{(i)};\\theta) $$ \u5f53 $x^{(i)},z^{(i)}$ \u662f\u53ef\u89c2\u6d4b, \u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u7b49\u6700\u4f18\u5316\u65b9\u6cd5\u6765\u627e\u5230$\\hat \\theta $ \u5982\u679c\uff0c\u53ea\u80fd\u89c2\u6d4b\u5230 $x^{(i)} $, \u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u6f2b\u65e0\u76ee\u7684\u5730\u66f4\u65b0 $\\theta $, \u4f1a\u5bfc\u81f4\u6536\u655b\u901f\u5ea6\u8fc7\u6162\u3002 \u4e0a\u6587\u7684$\\sum_{Z}P(X,Z;\\theta)=\\sum_{Z}P(X|Z;\\theta)$ \u662f\u5efa\u7acb\u5728\u786c\u5e01\u6848\u4f8b\u7684\u60c5\u666f\u4e0b\u7684\uff0c\u4e00\u822c\u60c5\u51b5X\u4e0eZ\u7684\u4f9d\u8d56\u5173\u7cfb\u4e0d\u80fd\u786e\u5b9a\uff0c\u6240\u4ee5\u540e\u9762\u7684\u63a8\u5230\u4f7f\u7528\u8054\u5408\u6982\u7387\u5206\u5e03\u7684\u5f62\u5f0f\u3002 $$ \\sum_i^{\u6837\u672c\u6570} \\log \\sum_{z^{(i)}} p(x^{(i)},z^{(i)};\\theta)\\ =\\sum_i^{\u6837\u672c\u6570} \\log \\sum_{z^{(i)}} Q_i(z^{(i)})\\frac{p(x^{(i)},z^{(i)};\\theta)}{Q_i(z^{(i)})}\\ =\\sum_i^{\u6837\u672c\u6570} \\sum_{z^{(i)}} Q_i(z^{(i)})\\log \\frac{p(x^{(i)},z^{(i)};\\theta)}{Q_i(z^{(i)})}\\ $$ \u5047\u8bbe $z^{(i)}$ \u670d\u4ece\u5206\u5e03 $Q_i$ , \u6839\u636eJenson\u4e0d\u7b49\u5f0f\uff1a $$ f(E(x)) \\geq E(f(x)), \\text { \u5982\u679c } f(x) \\text { \u662f\u51f9\u51fd\u6570 }\\ \\ log(E(\\frac{p(x^{(i)},z^{(i)};\\theta)}{Q_i(z^{(i)})}))\\ \\geq E(log(\\frac{p(x^{(i)},z^{(i)};\\theta)}{Q_i(z^{(i)})})) $$ \u5e76\u4e14\u5e26\u5165\uff1a $$ \\sum_{z^{(i)}} Q_i(z^{(i)}) =1 $$ \u6700\u7ec8\u5c31\u80fd\u5f97\u5230\u4e0a\u9762\u7684\u4e0d\u7b49\u5f0f\u3002\u4e14\u5f53$\\frac{p(x^{(i)},z^{(i)};\\theta)}{Q_i(z^{(i)})}=constant$ \u7684\u65f6\u5019\u53d6\u7b49\u53f7\uff0c\u8be6\u60c5\u53ef\u89c1\uff1a https://baike.baidu.com/item/%E7%90%B4%E7%94%9F%E4%B8%8D%E7%AD%89%E5%BC%8F/397409 \u7136\u540e\uff0c $$ p(x^{(i)},z^{(i)};\\theta)=constant \\times {Q_i(z^{(i)})}\\ \\sum_{z^{(i)}} Q_i(z^{(i)}) =1\\ $$ \u4e09\u4e2a\u672a\u77e5\u6570\uff0c\u4e24\u4e2a\u7b49\u5f0f\uff0c\u80af\u5b9a\u80fd\u5316\u7b80\u4e3a\u4e24\u4e2a\u672a\u77e5\u6570\u7684\u4e00\u4e2a\u7b49\u5f0f\u3002\u6240\u4ee5\u4e24\u8fb9\u540c\u65f6\u5bf9z\u6c42\u548c\uff0c\u5e76\u56de\u4ee3\u5f97\u5230\uff1a $$ Q_{i}\\left(z^{(i)}\\right)=\\frac{P\\left(x^{(i)}, z^{(i)} ; \\theta\\right)}{\\sum_{z} P\\left(x^{(i)}, z^{(i)} ; \\theta\\right)}=\\frac{P\\left(x^{(i)}, z^{(i)} ; \\theta\\right)}{P\\left(x^{(i)} ; \\theta\\right)}=P\\left(z^{(i)} \\mid x^{(i)} ; \\theta\\right) $$ \u4e5f\u5c31\u662f\u8bf4\uff1a\u5f53\u4e0a\u5f0f\u6ee1\u8db3\u65f6\uff0c\u4f3c\u7136\u51fd\u6570\u8fbe\u5230\u6700\u5c0f\uff0c\u4e5f\u5c31\u662f\u4f3c\u7136\u51fd\u6570\u8fbe\u5230\u5176 \u4e0b\u754c \u3002 \u6211\u4eec\u9700\u8981\u4e0d\u65ad\u5730\u53bb \u63d0\u9ad8\u4e0b\u754c \u6765\u4f7f\u4f3c\u7136\u51fd\u6570\u8fbe\u5230\u6700\u5927\u503c\u3002\u8fd9\u5c31\u662fM\u90e8\u5206\u3002 E\u90e8\u5206\u662f\u6c42\u671f\u671b\u7684\u8fc7\u7a0b","title":"solve\uff1a"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/EM%20algorithm%20%E6%9C%9F%E6%9C%9B%E6%9C%80%E5%A4%A7%E7%AE%97%E6%B3%95/#_1","text":"\u8f93\u5165\uff1a\u89c2\u6d4b\u6570\u636e\uff1a$x=\\left(x^{(1)}, x^{(2)}, \\ldots x^{(m)}\\right)$ , \u8054\u5408\u6982\u7387\u5206\u5e03\u6a21\u578b\uff1a$p(x, z ; \\theta)$ \u968f\u673a\u521d\u59cb\u5316 $\\theta_0$ \u8fed\u4ee3\uff1a E-step \u5bf9\u4e8e\u5f53\u524d\u7684\u6a21\u578b\u53c2\u6570$\\theta$ $$ Q_{i}\\left(z^{(i)}\\right)=p\\left(z^{(i)} \\mid x^{(i)} ; \\theta\\right) $$ \u4f3c\u7136\u51fd\u6570\u7684\u4e0b\u754c\u4e3a\uff1a $$ L(\\theta) = \\sum_i^{\u6837\u672c\u6570} \\sum_{z^{(i)}} Q_i(z^{(i)})\\log \\frac{p(x^{(i)},z^{(i)};\\theta)}{Q_i(z^{(i)})}\\ $$ M-step \u6700\u5927\u5316 $L(\\theta)$ $$ new_ \\theta=\\arg \\max _{\\theta} L\\left(\\theta\\right) $$","title":"\u7b97\u6cd5\u6b65\u9aa4"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/EM%20algorithm%20%E6%9C%9F%E6%9C%9B%E6%9C%80%E5%A4%A7%E7%AE%97%E6%B3%95/#_2","text":"EM \u7b97\u6cd5\u9002\u7528\u4e8e\u5f88\u591a\u6700\u4f18\u5316\u95ee\u9898\uff0c\u5b83\u548c\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u6709\u7684\u5dee\u522b\u6709\uff1a \u6574\u4e2a\u7b97\u6cd5\u4e0d\u9700\u8981\u6c42\u5bfc\uff0c\u5373\u53ef\u5f97\u5230\u76ee\u6807\u51fd\u6570\u7684\u6700\u5927\u503c\uff08\u5c40\u90e8\u6700\u4f18\uff09\u3002 \u5728\u4e00\u4e9b\u6700\u4f18\u5316\u95ee\u9898\u4e2d\uff0c\u53ef\u4ee5\u4eba\u4e3a\u5730\u5f15\u5165\u9690\u53d8\u91cf\u6765\u7b80\u5316\u6a21\u578b\u7684\u8ba1\u7b97\u3002 \u9700\u8981\u8ba1\u7b97$p\\left(z^{(i)} \\mid x^{(i)} ; \\theta\\right)$, \u8fd9\u4e2a\u540e\u9a8c\u6982\u7387\u5728\u9ad8\u7ef4\u5ea6\uff0c\u5927\u6837\u672c\u6570\u636e\u7684\u65f6\u5019\uff0c\u5176\u5b9e\u975e\u5e38\u96be\u4ee5\u8ba1\u7b97\u3002","title":"\u601d\u8003"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/K2%E7%AE%97%E6%B3%95%E3%80%8AA%20Bayesian%20Method%20for%20the%20Induction%20of%20Probabilistic%20Networks%20from%20Data%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/","text":"K2\u7b97\u6cd5\u300aA Bayesian Method for the Induction of Probabilistic Networks from Data\u300b\u9605\u8bfb\u7b14\u8bb0 abstract Paper proposes a new method on constructing Bayesian network. BN potentially is applied in computer-assisted hypothesis testing, automated scientific discovery and automated construction of probabilistic expert systems. Our method are able to handle missing data and latent variable. Introduction Suppose the database is: Introduction of BN: DAG variable should be continuous or discrete the arc from $x_1$ to $x_2$ indicates these two variable are probabilistically dependency. The construction of the network remains difficult and time-consuming task. The basic model Formulate: $P\\left(B_{S}, D\\right)=P\\left(B_{S}| D\\right) P(D)$ Assumption 1 : variables $Z$ are discrete. $P\\left(B_{S}, D\\right)=\\int_{B_{p}} P\\left(D \\mid B_{S}, B_{P}\\right) f\\left(B_{P} \\mid B_{S}\\right) P\\left(B_{S}\\right) d B_{P}$ $B_P$ is the conditional probability assignments associated with the structure $B_S$. Assumption 2 : cases occur independently, given a belief-network model. $P\\left(D \\mid B_{S}, B_{P}\\right)=\\prod_{h=1}^{m} P\\left(C_{h} \\mid B_{S}, B_{P}\\right)$ $P\\left(B_{S}, D\\right)=\\int_{B_{P}}\\left[\\prod_{h=1}^{m} P\\left(C_{h} \\mid B_{S}, B_{P}\\right)\\right] f\\left(B_{P} \\mid B_{S}\\right) P\\left(B_{S}\\right) d B_{P}$ $m$ is the number of cases, $C_h$ is the $h$-th case in $D$. Assumption 3 : there is no cases that have variables with missing values. Assumption 4 : $f\\left(B_{P} \\mid B_{S}\\right)$ is uniform. Theorem 1 : $$ P\\left(B_{S}, D\\right)=P\\left(B_{S}\\right) \\prod_{i=1}^{n} \\prod_{j=1}^{q_{i}} \\frac{\\left(r_{i}-1\\right) !}{\\left(N_{i j}+r_{i}-1\\right) !} \\prod_{k=1}^{r_{i}} N_{i j k} ! $$ assume that each possible network structure have same probability, we can get $P\\left(B_{S}\\right)$, and denote all possible structure are included in $Q$ $P\\left(B_{S_{i}} \\mid D\\right)=\\frac{P\\left(B_{S_{i}}, D\\right)}{\\sum_{B_{S} \\in Q} P\\left(B_{S}, D\\right)}$ However, $Q$ grow rapidly with the number of variable. Finding the most probable structure Since $P\\left(B_{S}, D\\right) \\propto P\\left(B_{S} \\mid D\\right)$, we need to maximize it: $$ P\\left(B_{S}, D\\right)=P\\left(B_{S}\\right) \\prod_{i=1}^{n} \\prod_{j=1}^{q_{i}} \\frac{\\left(r_{i}-1\\right) !}{\\left(N_{i j}+r_{i}-1\\right) !} \\prod_{k=1}^{r_{i}} N_{i j k} ! $$ $$ \\max {B {S}}\\left[P\\left(B_{S}, D\\right)\\right]=c \\prod_{i=1}^{n} \\max {\\pi {i}}\\left[\\prod_{j=1}^{q_{i}} \\frac{\\left(r_{i}-1\\right) !}{\\left(N_{i j}+r_{i}-1\\right) !} \\prod_{k=1}^{r_{i}} N_{i j k} !\\right] $$ denote the $\\pi_i$ is the parents of $x_i$, assume $P\\left(B_{S}\\right)=\\Pi_{1 \\leq i \\leq n} P\\left(\\pi_{i}^{S} \\rightarrow x_{i}\\right)$. this assumption makes the equation decomposable. $$ P\\left(B_{S}, D\\right)=\\prod_{i=1}^{n} P\\left(\\pi_{i}^{S} \\rightarrow x_{i}\\right) \\prod_{j=1}^{q_{i}} \\frac{\\left(r_{i}-1\\right) !}{\\left(N_{i j}+r_{i}-1\\right) !} \\prod_{k=1}^{r_{i}} N_{i j k} ! $$ if there is an order on the nodes, sufficiently tight limit on the number of the parents, $P\\left(\\pi_{i}^{S} \\rightarrow x_{i}\\right)$ is dependent to each other. Heuristic method $$ g\\left(i, \\pi_{i}\\right)=\\prod_{j=1}^{q_{i}} \\frac{\\left(r_{i}-1\\right) !}{\\left(N_{i j}+r_{i}-1\\right) !} \\prod_{k=1}^{r_{i}} N_{i j k} ! $$","title":"K2\u7b97\u6cd5\u300aA Bayesian Method for the Induction of Probabilistic Networks from Data\u300b\u9605\u8bfb\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/K2%E7%AE%97%E6%B3%95%E3%80%8AA%20Bayesian%20Method%20for%20the%20Induction%20of%20Probabilistic%20Networks%20from%20Data%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#k2a-bayesian-method-for-the-induction-of-probabilistic-networks-from-data","text":"","title":"K2\u7b97\u6cd5\u300aA Bayesian Method for the Induction of Probabilistic Networks from Data\u300b\u9605\u8bfb\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/K2%E7%AE%97%E6%B3%95%E3%80%8AA%20Bayesian%20Method%20for%20the%20Induction%20of%20Probabilistic%20Networks%20from%20Data%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#abstract","text":"Paper proposes a new method on constructing Bayesian network. BN potentially is applied in computer-assisted hypothesis testing, automated scientific discovery and automated construction of probabilistic expert systems. Our method are able to handle missing data and latent variable.","title":"abstract"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/K2%E7%AE%97%E6%B3%95%E3%80%8AA%20Bayesian%20Method%20for%20the%20Induction%20of%20Probabilistic%20Networks%20from%20Data%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#introduction","text":"Suppose the database is: Introduction of BN: DAG variable should be continuous or discrete the arc from $x_1$ to $x_2$ indicates these two variable are probabilistically dependency. The construction of the network remains difficult and time-consuming task.","title":"Introduction"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/K2%E7%AE%97%E6%B3%95%E3%80%8AA%20Bayesian%20Method%20for%20the%20Induction%20of%20Probabilistic%20Networks%20from%20Data%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#the-basic-model","text":"","title":"The basic model"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/K2%E7%AE%97%E6%B3%95%E3%80%8AA%20Bayesian%20Method%20for%20the%20Induction%20of%20Probabilistic%20Networks%20from%20Data%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#formulate","text":"$P\\left(B_{S}, D\\right)=P\\left(B_{S}| D\\right) P(D)$ Assumption 1 : variables $Z$ are discrete. $P\\left(B_{S}, D\\right)=\\int_{B_{p}} P\\left(D \\mid B_{S}, B_{P}\\right) f\\left(B_{P} \\mid B_{S}\\right) P\\left(B_{S}\\right) d B_{P}$ $B_P$ is the conditional probability assignments associated with the structure $B_S$. Assumption 2 : cases occur independently, given a belief-network model. $P\\left(D \\mid B_{S}, B_{P}\\right)=\\prod_{h=1}^{m} P\\left(C_{h} \\mid B_{S}, B_{P}\\right)$ $P\\left(B_{S}, D\\right)=\\int_{B_{P}}\\left[\\prod_{h=1}^{m} P\\left(C_{h} \\mid B_{S}, B_{P}\\right)\\right] f\\left(B_{P} \\mid B_{S}\\right) P\\left(B_{S}\\right) d B_{P}$ $m$ is the number of cases, $C_h$ is the $h$-th case in $D$. Assumption 3 : there is no cases that have variables with missing values. Assumption 4 : $f\\left(B_{P} \\mid B_{S}\\right)$ is uniform. Theorem 1 : $$ P\\left(B_{S}, D\\right)=P\\left(B_{S}\\right) \\prod_{i=1}^{n} \\prod_{j=1}^{q_{i}} \\frac{\\left(r_{i}-1\\right) !}{\\left(N_{i j}+r_{i}-1\\right) !} \\prod_{k=1}^{r_{i}} N_{i j k} ! $$ assume that each possible network structure have same probability, we can get $P\\left(B_{S}\\right)$, and denote all possible structure are included in $Q$ $P\\left(B_{S_{i}} \\mid D\\right)=\\frac{P\\left(B_{S_{i}}, D\\right)}{\\sum_{B_{S} \\in Q} P\\left(B_{S}, D\\right)}$ However, $Q$ grow rapidly with the number of variable.","title":"Formulate:"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/K2%E7%AE%97%E6%B3%95%E3%80%8AA%20Bayesian%20Method%20for%20the%20Induction%20of%20Probabilistic%20Networks%20from%20Data%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#finding-the-most-probable-structure","text":"Since $P\\left(B_{S}, D\\right) \\propto P\\left(B_{S} \\mid D\\right)$, we need to maximize it: $$ P\\left(B_{S}, D\\right)=P\\left(B_{S}\\right) \\prod_{i=1}^{n} \\prod_{j=1}^{q_{i}} \\frac{\\left(r_{i}-1\\right) !}{\\left(N_{i j}+r_{i}-1\\right) !} \\prod_{k=1}^{r_{i}} N_{i j k} ! $$ $$ \\max {B {S}}\\left[P\\left(B_{S}, D\\right)\\right]=c \\prod_{i=1}^{n} \\max {\\pi {i}}\\left[\\prod_{j=1}^{q_{i}} \\frac{\\left(r_{i}-1\\right) !}{\\left(N_{i j}+r_{i}-1\\right) !} \\prod_{k=1}^{r_{i}} N_{i j k} !\\right] $$ denote the $\\pi_i$ is the parents of $x_i$, assume $P\\left(B_{S}\\right)=\\Pi_{1 \\leq i \\leq n} P\\left(\\pi_{i}^{S} \\rightarrow x_{i}\\right)$. this assumption makes the equation decomposable. $$ P\\left(B_{S}, D\\right)=\\prod_{i=1}^{n} P\\left(\\pi_{i}^{S} \\rightarrow x_{i}\\right) \\prod_{j=1}^{q_{i}} \\frac{\\left(r_{i}-1\\right) !}{\\left(N_{i j}+r_{i}-1\\right) !} \\prod_{k=1}^{r_{i}} N_{i j k} ! $$ if there is an order on the nodes, sufficiently tight limit on the number of the parents, $P\\left(\\pi_{i}^{S} \\rightarrow x_{i}\\right)$ is dependent to each other.","title":"Finding the most probable structure"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/K2%E7%AE%97%E6%B3%95%E3%80%8AA%20Bayesian%20Method%20for%20the%20Induction%20of%20Probabilistic%20Networks%20from%20Data%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#heuristic-method","text":"$$ g\\left(i, \\pi_{i}\\right)=\\prod_{j=1}^{q_{i}} \\frac{\\left(r_{i}-1\\right) !}{\\left(N_{i j}+r_{i}-1\\right) !} \\prod_{k=1}^{r_{i}} N_{i j k} ! $$","title":"Heuristic method"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/Linear%20non-Gaussian%20Acyclic%20Model/","text":"A Linear Non-Gaussian Acyclic Model for Causal Discovery \u8fd9\u4e2a\u6a21\u578b\u88ab\u56e0\u679c\u63a8\u65ad\u9886\u57df\u7684\u7b97\u6cd5\u5e7f\u6cdb\u4f7f\u7528\u3002 abstract discover the causal structure of continuous-valued data assumptions: \u6570\u636e\u7684\u751f\u6210\u8fc7\u7a0b\u662f\u7ebf\u6027\u7684 \u6ca1\u6709\u9690\u53d8\u91cf \u6270\u52a8\u53d8\u91cf\u4e0d\u670d\u4ece\u9ad8\u65af\u5206\u5e03 intro \u73b0\u6709\u65b9\u6cd5\u4e3b\u8981\u5206\u4e3a\u4e24\u79cd\uff1a \u79bb\u6563\u6570\u636e\uff0c\u6ca1\u6709\u65b9\u7a0b\u5f62\u5f0f\u7684\u4f9d\u8d56\u5173\u7cfb\u3002 \u8fde\u7eed\u6570\u636e\uff0c\u4e3b\u8981\u4f7f\u7528\u7684\u662f\u7ebf\u6027\u9ad8\u65af\u3002 linear Gaussian network \u7279\u70b9\uff1a \u5bf9\u4e8e\u89c2\u6d4b\u5230\u7684\u6570\u636e $x_{i}, i \\in{1, \\ldots, m}$ \u89c2\u6d4b\u53d8\u91cf\u5b58\u5728\u4e00\u4e2acasual order, so that no later variable causes any earlier variable\u3002 \u6bcf\u4e2a\u53d8\u91cf\u7684\u53d6\u503c\uff0c\u662f\u7531earlier variable\u3001\u566a\u58f0\u3001\u504f\u7f6e\u51b3\u5b9a\u7684\u3002 $$ x_{i}=\\sum_{k(j)<k(i)} b_{i j} x_{j}+e_{i}+c_{i} $$ $e_i$\u662f\u4e00\u4e2a\u8fde\u7eed\u53d8\u91cf\uff0c\u670d\u4ece\u975e\u9ad8\u65af\u5206\u5e03\uff0c\u5e76\u4e14\u76f8\u4e92\u72ec\u7acb\u3002 \u8fd9\u5c31\u662fLiNGAM model identify $$ \\mathbf{x}=\\mathbf{B x}+\\mathbf{e} $$ \u5982\u679c\u77e5\u9053$k(i)$,\u90a3\u4e48\u53ef\u4ee5\u901a\u8fc7\u53d8\u6362\u5c06$\\mathbf{B}$\u5199\u4e3a\u4e00\u4e2a\u4e25\u683c\u4e0b\u4e09\u89d2\u77e9\u9635\uff08\u5bf9\u89d2\u7ebf\u5143\u7d20\u4ee5\u53ca\u4e0a\u4e09\u89d2\u4e3a0\uff09 $$ \\mathbf{A}=(\\mathbf{I}-\\mathbf{B})^{-1} \\ \\mathbf{x}=\\mathbf{A} \\mathbf{e} $$ \u5bf9\u4e8e\u4e00\u4e2a\u5408\u9002\u7684$k(i)$\uff0c$A$\u53ef\u4ee5\u88ab\u53d8\u6362\u4e3a\u4e0b\u4e09\u89d2\u77e9\u9635\u3002 \u53ef\u4ee5\u901a\u8fc7ICA\u6c42\u89e3A\u548ce\u3002 \u4f46\u662f\u5f97\u5230\u7684A\u5e76\u6ca1\u6709\u6ee1\u8db3causal order\uff0c\u6240\u4ee5\u53ef\u4ee5\u5bf9independet component\u8fdb\u884c\u6392\u5e8f\uff0c\u4ee5\u5f97\u5230\u7b49\u4ef7\u7684ICA\u6a21\u578b\u3002 \u7b2c\u4e8c\u4e2a\u672a\u89e3\u51b3\u7684\u95ee\u9898\u662f\uff0cindependent components\u7684\u5927\u5c0f\u8fd8\u6ca1\u786e\u5b9a\u3002\u56e0\u4e3a\u5728ICA\u6a21\u578b\u4e2d\u5047\u8bbe\u6bcf\u4e2a\u6270\u52a8\u53d8\u91cf\u7684\u65b9\u5dee\u4e3a1\uff0c\u5b9e\u9645\u4e0a\u6a21\u578b\u7684\u65b9\u5dee\u53ea\u8981\u6c42\u4e0d\u4e3a0\uff0c\u6240\u4ee5\u9700\u8981\u56fa\u5b9a\u4f4f\u6bcf\u4e2aconnection weight\u7684\u6bd4\u4f8b\uff0c\u8fdb\u884c\u7b49\u6bd4\u7f29\u653e\uff0c\u4f7fA\u7684\u5bf9\u89d2\u7ebf\u5143\u7d20\u4e3a1\u3002 \u7b97\u6cd5","title":"A Linear Non-Gaussian Acyclic Model for Causal Discovery"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/Linear%20non-Gaussian%20Acyclic%20Model/#a-linear-non-gaussian-acyclic-model-for-causal-discovery","text":"\u8fd9\u4e2a\u6a21\u578b\u88ab\u56e0\u679c\u63a8\u65ad\u9886\u57df\u7684\u7b97\u6cd5\u5e7f\u6cdb\u4f7f\u7528\u3002","title":"A Linear Non-Gaussian Acyclic Model for Causal Discovery"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/Linear%20non-Gaussian%20Acyclic%20Model/#abstract","text":"discover the causal structure of continuous-valued data assumptions: \u6570\u636e\u7684\u751f\u6210\u8fc7\u7a0b\u662f\u7ebf\u6027\u7684 \u6ca1\u6709\u9690\u53d8\u91cf \u6270\u52a8\u53d8\u91cf\u4e0d\u670d\u4ece\u9ad8\u65af\u5206\u5e03","title":"abstract"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/Linear%20non-Gaussian%20Acyclic%20Model/#intro","text":"\u73b0\u6709\u65b9\u6cd5\u4e3b\u8981\u5206\u4e3a\u4e24\u79cd\uff1a \u79bb\u6563\u6570\u636e\uff0c\u6ca1\u6709\u65b9\u7a0b\u5f62\u5f0f\u7684\u4f9d\u8d56\u5173\u7cfb\u3002 \u8fde\u7eed\u6570\u636e\uff0c\u4e3b\u8981\u4f7f\u7528\u7684\u662f\u7ebf\u6027\u9ad8\u65af\u3002","title":"intro"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/Linear%20non-Gaussian%20Acyclic%20Model/#linear-gaussian-network","text":"\u7279\u70b9\uff1a \u5bf9\u4e8e\u89c2\u6d4b\u5230\u7684\u6570\u636e $x_{i}, i \\in{1, \\ldots, m}$ \u89c2\u6d4b\u53d8\u91cf\u5b58\u5728\u4e00\u4e2acasual order, so that no later variable causes any earlier variable\u3002 \u6bcf\u4e2a\u53d8\u91cf\u7684\u53d6\u503c\uff0c\u662f\u7531earlier variable\u3001\u566a\u58f0\u3001\u504f\u7f6e\u51b3\u5b9a\u7684\u3002 $$ x_{i}=\\sum_{k(j)<k(i)} b_{i j} x_{j}+e_{i}+c_{i} $$ $e_i$\u662f\u4e00\u4e2a\u8fde\u7eed\u53d8\u91cf\uff0c\u670d\u4ece\u975e\u9ad8\u65af\u5206\u5e03\uff0c\u5e76\u4e14\u76f8\u4e92\u72ec\u7acb\u3002 \u8fd9\u5c31\u662fLiNGAM","title":"linear Gaussian network"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/Linear%20non-Gaussian%20Acyclic%20Model/#model-identify","text":"$$ \\mathbf{x}=\\mathbf{B x}+\\mathbf{e} $$ \u5982\u679c\u77e5\u9053$k(i)$,\u90a3\u4e48\u53ef\u4ee5\u901a\u8fc7\u53d8\u6362\u5c06$\\mathbf{B}$\u5199\u4e3a\u4e00\u4e2a\u4e25\u683c\u4e0b\u4e09\u89d2\u77e9\u9635\uff08\u5bf9\u89d2\u7ebf\u5143\u7d20\u4ee5\u53ca\u4e0a\u4e09\u89d2\u4e3a0\uff09 $$ \\mathbf{A}=(\\mathbf{I}-\\mathbf{B})^{-1} \\ \\mathbf{x}=\\mathbf{A} \\mathbf{e} $$ \u5bf9\u4e8e\u4e00\u4e2a\u5408\u9002\u7684$k(i)$\uff0c$A$\u53ef\u4ee5\u88ab\u53d8\u6362\u4e3a\u4e0b\u4e09\u89d2\u77e9\u9635\u3002 \u53ef\u4ee5\u901a\u8fc7ICA\u6c42\u89e3A\u548ce\u3002 \u4f46\u662f\u5f97\u5230\u7684A\u5e76\u6ca1\u6709\u6ee1\u8db3causal order\uff0c\u6240\u4ee5\u53ef\u4ee5\u5bf9independet component\u8fdb\u884c\u6392\u5e8f\uff0c\u4ee5\u5f97\u5230\u7b49\u4ef7\u7684ICA\u6a21\u578b\u3002 \u7b2c\u4e8c\u4e2a\u672a\u89e3\u51b3\u7684\u95ee\u9898\u662f\uff0cindependent components\u7684\u5927\u5c0f\u8fd8\u6ca1\u786e\u5b9a\u3002\u56e0\u4e3a\u5728ICA\u6a21\u578b\u4e2d\u5047\u8bbe\u6bcf\u4e2a\u6270\u52a8\u53d8\u91cf\u7684\u65b9\u5dee\u4e3a1\uff0c\u5b9e\u9645\u4e0a\u6a21\u578b\u7684\u65b9\u5dee\u53ea\u8981\u6c42\u4e0d\u4e3a0\uff0c\u6240\u4ee5\u9700\u8981\u56fa\u5b9a\u4f4f\u6bcf\u4e2aconnection weight\u7684\u6bd4\u4f8b\uff0c\u8fdb\u884c\u7b49\u6bd4\u7f29\u653e\uff0c\u4f7fA\u7684\u5bf9\u89d2\u7ebf\u5143\u7d20\u4e3a1\u3002","title":"model identify"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/Linear%20non-Gaussian%20Acyclic%20Model/#_1","text":"","title":"\u7b97\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AA%20Survey%20of%20Learning%20Causality%20with%20Data%20Problems%20and%20Methods%E3%80%8B/","text":"\u300aA Survey of Learning Causality with Data: Problems and Methods\u300b\u9605\u8bfb\u7b14\u8bb0 intro \u56e0\u679c\u662f\u4e00effect\u4e0ecause\u7684\u672c\u8d28\u8054\u7cfb\uff0c\u5f88\u96be\u88ab\u5b9a\u4e49\uff0c\u4f46\u662f\u4eba\u7c7b\u901a\u5e38\u80fd\u77e5\u9053\u3002\u5f53\u5c1d\u8bd5\u4f7f\u7528\u6570\u636e\u6765\u5b66\u4e60\u56e0\u679c\u7684\u65f6\u5019\uff0c\u9996\u5148\u5e94\u8be5\u660e\u786estatistical associations\u4e0ecausations\u3002 \u5b66\u4e60\u56e0\u679c\u7684\u80fd\u529b\u662f\u4eba\u5de5\u667a\u80fd\u8fbe\u5230human-level intelligence\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\u3002 1.1 overview and organization \u673a\u5668\u5b66\u4e60\u4efb\u52a1\u901a\u5e38predictive \u6216\u8005 descriptive \u5728\u7406\u89e3\u4ec0\u4e48\u662f\u56e0\u679c\u4e4b\u524d\uff0c\u5148\u8003\u8651\u4e24\u4e2a\u95ee\u9898\uff1a \u5982\u679c\u6211\u4eec\u6539\u53d8\u4e00\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u53e6\u4e00\u4e2a\u53d8\u91cf\u4f1a\u6539\u53d8\u591a\u5c11\uff1f \u5982\u679c\u60f3\u6539\u53d8\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u6211\u4eec\u5e94\u8be5\u64cd\u4f5c\u90a3\u4e9b\u53d8\u91cf\u5462\uff1f \u95ee\u98981\uff0c\u5b9a\u4e49\u4e3acausal inference\u3002\u95ee\u98982\uff0c\u5b9a\u4e49\u4e3acausal discovery\u3002 \u5c06\u88ab\u6539\u53d8/\u64cd\u4f5c\u7684\u53d8\u91cf\u79f0\u4e3atreatment \u89c2\u5bdf\u5230\u7684\u6539\u53d8\u4e3aoutcome 1.2 data for learning causality \u4e3a\u4e86\u7814\u7a76Yelp\u7684\u8bc4\u7ea7\u5bf9\u9910\u5385\u5ba2\u6d41\u91cf\u7684\u56e0\u679c\u5f71\u54cdcasual effect\uff0c\u53ef\u4ee5\u4f7f\u7528\u73b0\u6709\u7684\u89c2\u5bdf\u6570\u636e\uff0c\u6216\u8005\u901a\u8fc7\u64cd\u4f5c\u9910\u5385\u8bc4\u7ea7\u6765\u83b7\u5f97\u5e72\u9884\u6570\u636e\u3002 casual effect\u548ccasual relationship\u3002 \u5b66\u4e60causal effects \u7279\u5f81\u5411\u91cfX\uff0ctreatments t\uff0coutcome y \u5b66\u4e60casual relations \u591a\u53d8\u91cf\u7684\u6570\u636eX\uff0c\u4f30\u8ba1\u4e00\u4e2a\u56e0\u679c\u7f51\u7edcG 1.3 previous work and contributions Pearl aims to convey the fundamental theory of causality based on the structural causal models. Gelman provides high-level opinions about the existing formal frameworks and problems for causal learning. Mooji et al. focus on learning causal relations for bivariate data Spirtes and Zhang summarize methods for learning causal relations on both i.i.d. and time series data with a focus on several semi-parametric score based methods. Athey and Imbens describe decision trees and ensemble machine learning models for learning causal effects. preliminaries \u73b0\u6709\u4e24\u4e2a\u57fa\u7840\u6846\u67b6\uff0cstructural causal models\uff0cpotential outcome framework\u3002 \u4e3a\u4e86formulate causal knowledge\uff0c\u9996\u5148\u9700\u8981\u4e00\u4e2acasual model\uff0c\u4e5f\u5c31\u662f\u524d\u9762\u63d0\u5230\u7684\u4e24\u79cd\uff0c\u662f\u5b9a\u91cf\u63cf\u8ff0\u56e0\u679c\u5173\u7cfb\u7684\u6570\u5b66\u6a21\u578b\u3002 structural causal models SCM\u5305\u62ec\u4e24\u90e8\u5206\uff0ccausal graph \u548c structural equations \u56e0\u679c\u56fe\u5f62\u6210\u4e86\u4e00\u7c7b\u7279\u6b8a\u7684\u8d1d\u53f6\u65af\u7f51\u7edc\uff0c\u5176\u8fb9\u8868\u793a\u56e0\u679c\u6548\u5e94\uff0c\u56e0\u6b64\u5b83\u7ee7\u627f\u4e86\u5b9a\u4e49\u826f\u597d\u7684\u6761\u4ef6\u72ec\u7acb\u6027\u51c6\u5219\u3002 potential outcome framework learning causal effect causal discovery: learning causal relations \u4f20\u7edf\u65b9\u6cd5 constraint-based score-based functional causal models constraint-based algorithm \u5b66\u4e60\u4e00\u7ec4\u56e0\u679c\u56fe\uff0c\u8fd9\u4e9b\u56e0\u679c\u56fe\u6ee1\u8db3\u5d4c\u5165\u5728\u6570\u636e\u4e2d\u7684\u6761\u4ef6\u72ec\u7acb\u6027\u3002\u7edf\u8ba1\u68c0\u9a8c\u7528\u4e8e\u9a8c\u8bc1\u5019\u9009\u56fe\u662f\u5426\u6ee1\u8db3\u57fa\u4e8efaithfulness assumption\u7684\u72ec\u7acb\u6027","title":"\u300aA Survey of Learning Causality with Data: Problems and Methods\u300b\u9605\u8bfb\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AA%20Survey%20of%20Learning%20Causality%20with%20Data%20Problems%20and%20Methods%E3%80%8B/#a-survey-of-learning-causality-with-data-problems-and-methods","text":"","title":"\u300aA Survey of Learning Causality with Data: Problems and Methods\u300b\u9605\u8bfb\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AA%20Survey%20of%20Learning%20Causality%20with%20Data%20Problems%20and%20Methods%E3%80%8B/#intro","text":"\u56e0\u679c\u662f\u4e00effect\u4e0ecause\u7684\u672c\u8d28\u8054\u7cfb\uff0c\u5f88\u96be\u88ab\u5b9a\u4e49\uff0c\u4f46\u662f\u4eba\u7c7b\u901a\u5e38\u80fd\u77e5\u9053\u3002\u5f53\u5c1d\u8bd5\u4f7f\u7528\u6570\u636e\u6765\u5b66\u4e60\u56e0\u679c\u7684\u65f6\u5019\uff0c\u9996\u5148\u5e94\u8be5\u660e\u786estatistical associations\u4e0ecausations\u3002 \u5b66\u4e60\u56e0\u679c\u7684\u80fd\u529b\u662f\u4eba\u5de5\u667a\u80fd\u8fbe\u5230human-level intelligence\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\u3002","title":"intro"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AA%20Survey%20of%20Learning%20Causality%20with%20Data%20Problems%20and%20Methods%E3%80%8B/#11-overview-and-organization","text":"\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u901a\u5e38predictive \u6216\u8005 descriptive \u5728\u7406\u89e3\u4ec0\u4e48\u662f\u56e0\u679c\u4e4b\u524d\uff0c\u5148\u8003\u8651\u4e24\u4e2a\u95ee\u9898\uff1a \u5982\u679c\u6211\u4eec\u6539\u53d8\u4e00\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u53e6\u4e00\u4e2a\u53d8\u91cf\u4f1a\u6539\u53d8\u591a\u5c11\uff1f \u5982\u679c\u60f3\u6539\u53d8\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u6211\u4eec\u5e94\u8be5\u64cd\u4f5c\u90a3\u4e9b\u53d8\u91cf\u5462\uff1f \u95ee\u98981\uff0c\u5b9a\u4e49\u4e3acausal inference\u3002\u95ee\u98982\uff0c\u5b9a\u4e49\u4e3acausal discovery\u3002 \u5c06\u88ab\u6539\u53d8/\u64cd\u4f5c\u7684\u53d8\u91cf\u79f0\u4e3atreatment \u89c2\u5bdf\u5230\u7684\u6539\u53d8\u4e3aoutcome","title":"1.1 overview and organization"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AA%20Survey%20of%20Learning%20Causality%20with%20Data%20Problems%20and%20Methods%E3%80%8B/#12-data-for-learning-causality","text":"\u4e3a\u4e86\u7814\u7a76Yelp\u7684\u8bc4\u7ea7\u5bf9\u9910\u5385\u5ba2\u6d41\u91cf\u7684\u56e0\u679c\u5f71\u54cdcasual effect\uff0c\u53ef\u4ee5\u4f7f\u7528\u73b0\u6709\u7684\u89c2\u5bdf\u6570\u636e\uff0c\u6216\u8005\u901a\u8fc7\u64cd\u4f5c\u9910\u5385\u8bc4\u7ea7\u6765\u83b7\u5f97\u5e72\u9884\u6570\u636e\u3002 casual effect\u548ccasual relationship\u3002 \u5b66\u4e60causal effects \u7279\u5f81\u5411\u91cfX\uff0ctreatments t\uff0coutcome y \u5b66\u4e60casual relations \u591a\u53d8\u91cf\u7684\u6570\u636eX\uff0c\u4f30\u8ba1\u4e00\u4e2a\u56e0\u679c\u7f51\u7edcG","title":"1.2 data for learning causality"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AA%20Survey%20of%20Learning%20Causality%20with%20Data%20Problems%20and%20Methods%E3%80%8B/#13-previous-work-and-contributions","text":"Pearl aims to convey the fundamental theory of causality based on the structural causal models. Gelman provides high-level opinions about the existing formal frameworks and problems for causal learning. Mooji et al. focus on learning causal relations for bivariate data Spirtes and Zhang summarize methods for learning causal relations on both i.i.d. and time series data with a focus on several semi-parametric score based methods. Athey and Imbens describe decision trees and ensemble machine learning models for learning causal effects.","title":"1.3 previous work and contributions"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AA%20Survey%20of%20Learning%20Causality%20with%20Data%20Problems%20and%20Methods%E3%80%8B/#preliminaries","text":"\u73b0\u6709\u4e24\u4e2a\u57fa\u7840\u6846\u67b6\uff0cstructural causal models\uff0cpotential outcome framework\u3002 \u4e3a\u4e86formulate causal knowledge\uff0c\u9996\u5148\u9700\u8981\u4e00\u4e2acasual model\uff0c\u4e5f\u5c31\u662f\u524d\u9762\u63d0\u5230\u7684\u4e24\u79cd\uff0c\u662f\u5b9a\u91cf\u63cf\u8ff0\u56e0\u679c\u5173\u7cfb\u7684\u6570\u5b66\u6a21\u578b\u3002","title":"preliminaries"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AA%20Survey%20of%20Learning%20Causality%20with%20Data%20Problems%20and%20Methods%E3%80%8B/#structural-causal-models","text":"SCM\u5305\u62ec\u4e24\u90e8\u5206\uff0ccausal graph \u548c structural equations \u56e0\u679c\u56fe\u5f62\u6210\u4e86\u4e00\u7c7b\u7279\u6b8a\u7684\u8d1d\u53f6\u65af\u7f51\u7edc\uff0c\u5176\u8fb9\u8868\u793a\u56e0\u679c\u6548\u5e94\uff0c\u56e0\u6b64\u5b83\u7ee7\u627f\u4e86\u5b9a\u4e49\u826f\u597d\u7684\u6761\u4ef6\u72ec\u7acb\u6027\u51c6\u5219\u3002","title":"structural causal models"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AA%20Survey%20of%20Learning%20Causality%20with%20Data%20Problems%20and%20Methods%E3%80%8B/#potential-outcome-framework","text":"","title":"potential outcome framework"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AA%20Survey%20of%20Learning%20Causality%20with%20Data%20Problems%20and%20Methods%E3%80%8B/#learning-causal-effect","text":"","title":"learning causal effect"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AA%20Survey%20of%20Learning%20Causality%20with%20Data%20Problems%20and%20Methods%E3%80%8B/#causal-discovery-learning-causal-relations","text":"","title":"causal discovery: learning causal relations"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AA%20Survey%20of%20Learning%20Causality%20with%20Data%20Problems%20and%20Methods%E3%80%8B/#_1","text":"constraint-based score-based functional causal models constraint-based algorithm \u5b66\u4e60\u4e00\u7ec4\u56e0\u679c\u56fe\uff0c\u8fd9\u4e9b\u56e0\u679c\u56fe\u6ee1\u8db3\u5d4c\u5165\u5728\u6570\u636e\u4e2d\u7684\u6761\u4ef6\u72ec\u7acb\u6027\u3002\u7edf\u8ba1\u68c0\u9a8c\u7528\u4e8e\u9a8c\u8bc1\u5019\u9009\u56fe\u662f\u5426\u6ee1\u8db3\u57fa\u4e8efaithfulness assumption\u7684\u72ec\u7acb\u6027","title":"\u4f20\u7edf\u65b9\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AAtomistic%20Line%20Graph%20Neural%20Network%20for%20improved%20materials%20property%20predictions%E3%80%8B%20%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/","text":"\u300aAtomistic Line Graph Neural Network for improved materials property predictions\u300b \u9605\u8bfb\u7b14\u8bb0 \u672c\u6587\u6765\u81ea\u4e8e\u300anpj \u8ba1\u7b97\u6750\u6599\u5b66\u300b\u3002\u9886\u57df\u662f\u7ed3\u5408\u8ba1\u7b97\u6a21\u62df\u4e0e\u8bbe\u8ba1\u7684\u6750\u6599\u5b66\u3002\u7531\u4e2d\u56fd\u79d1\u5b66\u9662\u4e0a\u6d77\u7845\u9178\u76d0\u7814\u7a76\u6240\u4e0e\u82f1\u56fd\u81ea\u7136\u51fa\u7248\u96c6\u56e2\uff08Nature Publishing Group\uff0cNPG\uff09\u4ee5\u4f19\u4f34\u5173\u7cfb\u5408\u4f5c\u51fa\u7248\u3002 abstract GNN\u76f8\u6bd4\u8d77\u57fa\u4e8edescriptor-based machine learning\uff0c\u5728\u539f\u5b50\u6750\u6599\u8868\u5f81\u4e0e\u5efa\u6a21\u65b9\u9762\u5177\u6709\u4f18\u52bf\u3002 \u8868\u793a\u5316\u5b66\u5143\u7d20\u5b58\u5728\u7684\u4e8c\u8fdb\u5236\u5143\u7d20\u63cf\u8ff0\u7b26\u3002\u4e8c\u8fdb\u5236\u5143\u7d20\u63cf\u8ff0\u7b26\u7684\u6570\u91cf\u5bf9\u5e94\u4e8e\u8bad\u7ec3\u6570\u636e\u4e2d\u5305\u542b\u7684\u5143\u7d20\u7c7b\u578b\u7684\u6570\u91cf \u73b0\u6709\u7684GNN\u6a21\u578b\u4e00\u822c\u662f\u57fa\u4e8e atomic distance information\uff0c\u5e76\u4e0d\u663e\u5f0f\u5730\u8003\u8651bond angle\uff08\u952e\u89d2\uff0c\u901a\u5e38\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\u3002\u7136\u800c\u8fd9\u4e2a\u7279\u5f81\u5bf9\u4e8e\u4e00\u4e9b\u539f\u5b50\u7ed3\u6784\u975e\u5e38\u91cd\u8981\u3002 \u672c\u6587\u63d0\u51faALIGNN\uff0catomistic line graph neural network\u3002\u8fd9\u4e2a\u7f51\u7edc\u7ed3\u6784\u540c\u65f6\u8003\u8651 interatomic bond graph \u4e0e \u4ee3\u8868\u952e\u89d2\u7684 line graph\u3002\u5c55\u793a\u4e86\u952e\u89d2\u7684\u4fe1\u606f\u53ef\u4ee5\u6709\u6548\u5730\u8fdb\u5165\u7f51\u7edc\uff0c\u5e76\u4e14\u63d0\u5347\u591a\u4e2a\u4efb\u52a1\u7684\u6027\u80fd\u3002 ALIGNN\u9884\u6d4b\u4e86JARVIS-DFT\u6570\u636e\u96c6\u4e0a\u768452\u4e2a\u56fa\u6001\u7684\u5206\u5b50\u6027\u8d28\uff0c\u51c6\u786e\u5ea6\u8fbe\u523085%\u3002 introduction \u56fe\u662f\u4e00\u79cd\u975e\u5e38\u6709\u6548\u7684\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u63cf\u8ff0features\uff08nodes\uff09\u548crelationships\uff08edges\uff09\u3002 GNN\u88ab\u5e7f\u6cdb\u5e94\u7528\uff1a\u793e\u7fa4\u53d1\u73b0\uff0c\u57fa\u56e0\u8c03\u63a7\u7f51\u7edc\uff0c\u5206\u5b50\u548c\u56fa\u4f53\u7269\u8d28\u7684\u6027\u8d28\u9884\u6d4b\u3002\u4ece\u91cf\u5b50\u5316\u5b66\u7684\u89d2\u5ea6\u6765\u8bf4\uff0cGNN\u63d0\u4f9b\u4e86\u4e00\u4e2a\u673a\u4f1a\u6765\u66f4\u5feb\u5730\u9884\u6d4b solids\uff0cmolecules\uff0cprotein\u7684\u6027\u80fd\uff0c\u800c\u4e0d\u662f\u6c42\u89e3Schrodinger equation \u859b\u5b9a\u8c14\u65b9\u7a0b\u3002 \u73b0\u6709\uff1aSchNet\uff0cCGCNN\u7b49\u7b49\uff0c\u8fd9\u4e00\u7cfb\u5217\u6a21\u578b\u5c06\u5206\u5b50\u6216\u6676\u4f53\u6750\u6599\u8868\u793a\u4e3a\u4e00\u4e2a\u56fe\uff0c\u6bcf\u4e2a\u7ec4\u6210\u539f\u5b50\u90fd\u6709\u4e00\u4e2a\u8282\u70b9\uff0c\u8fb9\u5bf9\u5e94\u4e8e\u539f\u5b50\u95f4\u952e\u3002\u4e00\u4e2a\u5171\u540c\u70b9\u662f\u4f7f\u7528\u5143\u7d20\u5c5e\u6027\u4f5c\u4e3a\u8282\u70b9\u7279\u5f81\u548c\u539f\u5b50\u95f4\u8ddd\u79bb\u548c/\u6216\u952e\u5408\u4ef7\u4f5c\u4e3a\u8fb9\u7279\u5f81\u3002 \u4f46\u662f\u6709\u4e9b\u91cd\u8981\u7684\u7269\u6027\u5e76\u672a\u8003\u8651\uff1a\u80fd\u9699\uff0c\u6216\u8005\u8bf4\u662f\u5e26\u9699\uff08\u7535\u5b50\u8131\u79bb\u675f\u7f1a\u6001\u6240\u9700\u7684\u6700\u5c0f\u80fd\u91cf\u3002\u5f53\u6ee1\u8db3\u5e26\u9699\u80fd\u91cf\u65f6\uff0c\u7535\u5b50\u88ab\u6fc0\u53d1\u6210\u81ea\u7531\u6001\uff0c\u56e0\u6b64\u53ef\u4ee5\u53c2\u4e0e\u4f20\u5bfc\uff09\uff0c\u5e26\u9699\u5bf9\u4e8e\u952e\u89d2\u548c\u5c40\u90e8\u7684\u51e0\u4f55\u53d8\u5f62\u975e\u5e38\u654f\u611f\u3002\u300aMachine learning with force-field-inspired descriptors for materials: Fast screening and mapping energy landscape\u300b\u8fd9\u7bc7\u6587\u7ae0\u5df2\u7ecf\u8bc1\u660e\u4e86\uff0c\u901a\u8fc7\u7279\u5b9a\u7684descriptor\u6765\u663e\u5f0f\u5730\u589e\u52a0\u89d2\u5ea6\u4fe1\u606f\u53ef\u4ee5\u63d0\u9ad8\u6a21\u578b\u6027\u80fd\u3002 \u672c\u6587\u4f7f\u7528 line graph neural network \u6765\u8868\u8fbe\u89d2\u5ea6\u4fe1\u606f\u3002 Line graph \u662f\u4e00\u4e2a\u56fe\uff0c\u7531\u53e6\u4e00\u4e2a\u56feg\u63a8\u5bfc\u800c\u6765\uff0c\u7528\u4e8e\u63cf\u8ff0\u8fb9\u7684\u8fde\u63a5\u6027\u3002 \u56fe g \u7684\u8282\u70b9\u4ee3\u8868\u539f\u5b50\uff0c\u8fb9\u4ee3\u8868\u952e \u7ebf\u56fe line graph \u7684\u8282\u70b9\u4ee3\u8868\u539f\u5b50\u95f4\u952e\uff0c\u8fb9\u4ee3\u8868bond angle\u3002 GNN\u5728\u4e24\u4e2a\u56fe\u4e0a\u8fdb\u884c\u5377\u79ef\u3002 \u672c\u6587\u7684\u5b9e\u73b0\u7528\u7684\u662fDGL\uff0cdeep graph library\u3002 \u4f7f\u7528JARVIS-density functional theory \u548c material project datasets\u548cQM9\u6570\u636e\u5e93\u8fdb\u884c\u8bad\u7ec3\u3002 result and discussion Atomistic graph representation ALIGNN\u4f7f\u7528 edges-gated graph convolution\uff0c\u540c\u65f6\u4f7f\u7528atomistic bond graph\u548cline graph\u3002 atomistic bond graph\u4e2datoms \u662f\u8282\u70b9\uff0cbonds \u662fedges line graph\u4e2d\uff0cbonds\u662f\u8282\u70b9\uff0cbond pairs with one common atom \u662fedges \u4ee5\u56db\u6c27\u5316\u7845\u4e3a\u4f8b\u3002\u6bcf\u4e2a\u8282\u70b9\u90fd\u662f\u4e00\u4e2a\u539f\u5b50\uff0c\u539f\u5b50\u67099\u4e2a\u7279\u5f81\uff1aelectronegativity, group number, covalent radius, valence electrons, first ionization energy, electron affinity, block, and atomic volume. e \u8bb0\u5f55\u7684\u662f \u5316\u5b66\u952e\u957f\u5ea6\u7684\u4fe1\u606f t \u8bb0\u5f55\u7684\u662f\u5316\u5b66\u952e\u89d2\u5ea6\u7684\u4fe1\u606f edge gated graph convolution ALIGNN\u4f7f\u7528 edge gated \u5377\u79ef\u64cd\u4f5c\u6765\u66f4\u65b0\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81\u3002 \u5148\u770b\uff084\uff09 \u5bf9\u4e8e\u4e00\u4e2a\u5f53\u524d\u7684$e_{ij}$\u6765\u8bf4\uff0c$h_i,h_j$ \u90fd\u662f\u5df2\u77e5\u7684\uff0cABC\u662f\u6743\u91cd\uff0c\u53ef\u4ee5\u8ba1\u7b97\u4e0b\u4e00\u5c42\u7684$e_{ij}$\uff1a $N_i$\u662f $i$ \u8282\u70b9\u7684\u90bb\u8282\u70b9\uff0c\u90a3\u4e48\uff1a \u6240\u4ee5\u8bf4\uff0c\u73b0\u5728\u7ed9\u5b9a h\u548ce\uff0c\u5c31\u80fd\u6309\u7167\u4e0a\u9762\u7684\u516c\u5f0f\u8fdb\u884c\u66f4\u65b0\u3002 \u628a\u4ee5\u4e0a\u516c\u5f0f\u7b80\u5316\uff0c\u91cd\u65b0\u6539\u5199\u4e3a\uff1a ALIGNN update \u4e00\u4e00\u5bf9\u5e94\u6765\u770b\uff1a $h_i,h_j,m_{ij}$ \u5206\u522b\u5bf9\u5e94 h\uff0ce\uff1a \u7ea2\u8272\u5bf9\u5e94\uff084\uff09 \u7eff\u8272\u5bf9\u5e94\uff082\uff09 \u6574\u4f53\u4e0a\u6765\u770b\uff1a \u8f93\u5165\u4e86h\uff0ce\uff0ct\uff0c\u5e76\u4e14\u5c06\u5176\u66f4\u65b0\u3002 \u628a\u4ee5\u4e0a\u64cd\u4f5c\u8bb0\u4e3aEdgeGatedGraphConv\u64cd\u4f5c\uff0c\u90a3\u4e48\u53ef\u5f97\uff1a Overall model architecture and training \u6a21\u578b\u75314\u4e2aALIGNN \u5c42\u548c4\u4e2aGCN\u5c42\u3002 ALIGNN\u5c42\u6307\u7684\u662f\u524d\u9762\u7684 ALIGNN update GCN\u5c42\u6307\u7684\u662f \u4ec5\u4ec5 edge-gated graph convolution \u64cd\u4f5c \u5728 bond graph( \u4e5f\u5c31\u662f\u53ea\u8f93\u5165 h \u548c e) \u7ecf\u8fc7\u4e86 4 + 4 \u7684\u5377\u79ef\u5c42\uff0c\u518d\u6267\u884c \u5168\u5c40\u5e73\u5747\u6c60\u5316 \uff0c\u6700\u540e \u5168\u8fde\u63a5 \u8fdb\u884c\u9884\u6d4b\u4efb\u52a1\u3002 Model performance \u6570\u636e\u96c6\uff1a Materials Project\uff0cJARVIS-DFT \u548c QM9\uff0c \u5e76\u4e0d\u662f\u5c063\u4e2a\u6570\u636e\u96c6\u6574\u5408\u540c\u65f6\u8bad\u7ec3\uff0c\u800c\u662f\u5206\u522b\u5728\u4e09\u4e2a\u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u8bad\u7ec3\uff0c\u9884\u6d4b\u4efb\u52a1\u3002\u6570\u636e\u5212\u5206\u4e3a8\uff1a1\uff1a1\u3002 \u5176\u4e2d MP 2018\u5e746\u67081\u65e5\u7248\u672c\uff0c\u670969239\u79cd\u6750\u6599\uff0c\u4ee5\u53caPBE bandgaps \u548c \u5f62\u6210\u80fd\u7b49\u3002 CFID,CGCNN,MEGNet, SchNet \u90fd\u662f\u7528\u4e8e\u5bf9\u6bd4\u7684 MAD \u662f\u5e73\u5747\u7edd\u5bf9\u504f\u5dee MAD: MAE \u5e73\u5747\u7edd\u5bf9\u8bef\u5dee\u6807\u51c6\uff08\uff1f\uff09\u89c2\u5bdf\u523042.27\uff0c\u4e00\u822c\u6765\u8bb2\u5927\u4e8e5\u5219\u8bf4\u660e\u6a21\u578b\u6027\u80fd\u5f88\u597d\u3002 \u6570\u636e\u4f7f\u7528\u5728JARVIS-DFT\u6570\u636e\u96c6\u4e0a\uff0c\u6bd4CFID\u8981\u597d4\u500d\u3002 \u4f46\u662f\u56de\u5f52\u4efb\u52a1\u4e0d\u7b97\u8868\u73b0\u4f18\u5f02\uff0cMAD\uff1aMAE\u4f4e\u4e8e5\u3002 \u8be6\u7ec6\u8ba8\u8bba\uff1a \u5bf9\u4e8e\u5206\u7c7b\u4efb\u52a1\uff0c\u4f7f\u7528\u6307\u6807\u4e3a ROC AUC\uff0c\u4e00\u4e2a\u968f\u673a\u731c\u6d4b\u6a21\u578b\u7684ROC AUC\u4e3a0.5\uff0c\u5b8c\u7f8e\u7684\u6a21\u578b\u4e3a1. \u5bf9\u4e8e\u56de\u5f52\u6a21\u578b\uff1a","title":"\u300aAtomistic Line Graph Neural Network for improved materials property predictions\u300b \u9605\u8bfb\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AAtomistic%20Line%20Graph%20Neural%20Network%20for%20improved%20materials%20property%20predictions%E3%80%8B%20%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#atomistic-line-graph-neural-network-for-improved-materials-property-predictions","text":"\u672c\u6587\u6765\u81ea\u4e8e\u300anpj \u8ba1\u7b97\u6750\u6599\u5b66\u300b\u3002\u9886\u57df\u662f\u7ed3\u5408\u8ba1\u7b97\u6a21\u62df\u4e0e\u8bbe\u8ba1\u7684\u6750\u6599\u5b66\u3002\u7531\u4e2d\u56fd\u79d1\u5b66\u9662\u4e0a\u6d77\u7845\u9178\u76d0\u7814\u7a76\u6240\u4e0e\u82f1\u56fd\u81ea\u7136\u51fa\u7248\u96c6\u56e2\uff08Nature Publishing Group\uff0cNPG\uff09\u4ee5\u4f19\u4f34\u5173\u7cfb\u5408\u4f5c\u51fa\u7248\u3002","title":"\u300aAtomistic Line Graph Neural Network for improved materials property predictions\u300b \u9605\u8bfb\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AAtomistic%20Line%20Graph%20Neural%20Network%20for%20improved%20materials%20property%20predictions%E3%80%8B%20%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#abstract","text":"GNN\u76f8\u6bd4\u8d77\u57fa\u4e8edescriptor-based machine learning\uff0c\u5728\u539f\u5b50\u6750\u6599\u8868\u5f81\u4e0e\u5efa\u6a21\u65b9\u9762\u5177\u6709\u4f18\u52bf\u3002 \u8868\u793a\u5316\u5b66\u5143\u7d20\u5b58\u5728\u7684\u4e8c\u8fdb\u5236\u5143\u7d20\u63cf\u8ff0\u7b26\u3002\u4e8c\u8fdb\u5236\u5143\u7d20\u63cf\u8ff0\u7b26\u7684\u6570\u91cf\u5bf9\u5e94\u4e8e\u8bad\u7ec3\u6570\u636e\u4e2d\u5305\u542b\u7684\u5143\u7d20\u7c7b\u578b\u7684\u6570\u91cf \u73b0\u6709\u7684GNN\u6a21\u578b\u4e00\u822c\u662f\u57fa\u4e8e atomic distance information\uff0c\u5e76\u4e0d\u663e\u5f0f\u5730\u8003\u8651bond angle\uff08\u952e\u89d2\uff0c\u901a\u5e38\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\u3002\u7136\u800c\u8fd9\u4e2a\u7279\u5f81\u5bf9\u4e8e\u4e00\u4e9b\u539f\u5b50\u7ed3\u6784\u975e\u5e38\u91cd\u8981\u3002 \u672c\u6587\u63d0\u51faALIGNN\uff0catomistic line graph neural network\u3002\u8fd9\u4e2a\u7f51\u7edc\u7ed3\u6784\u540c\u65f6\u8003\u8651 interatomic bond graph \u4e0e \u4ee3\u8868\u952e\u89d2\u7684 line graph\u3002\u5c55\u793a\u4e86\u952e\u89d2\u7684\u4fe1\u606f\u53ef\u4ee5\u6709\u6548\u5730\u8fdb\u5165\u7f51\u7edc\uff0c\u5e76\u4e14\u63d0\u5347\u591a\u4e2a\u4efb\u52a1\u7684\u6027\u80fd\u3002 ALIGNN\u9884\u6d4b\u4e86JARVIS-DFT\u6570\u636e\u96c6\u4e0a\u768452\u4e2a\u56fa\u6001\u7684\u5206\u5b50\u6027\u8d28\uff0c\u51c6\u786e\u5ea6\u8fbe\u523085%\u3002","title":"abstract"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AAtomistic%20Line%20Graph%20Neural%20Network%20for%20improved%20materials%20property%20predictions%E3%80%8B%20%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#introduction","text":"\u56fe\u662f\u4e00\u79cd\u975e\u5e38\u6709\u6548\u7684\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u63cf\u8ff0features\uff08nodes\uff09\u548crelationships\uff08edges\uff09\u3002 GNN\u88ab\u5e7f\u6cdb\u5e94\u7528\uff1a\u793e\u7fa4\u53d1\u73b0\uff0c\u57fa\u56e0\u8c03\u63a7\u7f51\u7edc\uff0c\u5206\u5b50\u548c\u56fa\u4f53\u7269\u8d28\u7684\u6027\u8d28\u9884\u6d4b\u3002\u4ece\u91cf\u5b50\u5316\u5b66\u7684\u89d2\u5ea6\u6765\u8bf4\uff0cGNN\u63d0\u4f9b\u4e86\u4e00\u4e2a\u673a\u4f1a\u6765\u66f4\u5feb\u5730\u9884\u6d4b solids\uff0cmolecules\uff0cprotein\u7684\u6027\u80fd\uff0c\u800c\u4e0d\u662f\u6c42\u89e3Schrodinger equation \u859b\u5b9a\u8c14\u65b9\u7a0b\u3002 \u73b0\u6709\uff1aSchNet\uff0cCGCNN\u7b49\u7b49\uff0c\u8fd9\u4e00\u7cfb\u5217\u6a21\u578b\u5c06\u5206\u5b50\u6216\u6676\u4f53\u6750\u6599\u8868\u793a\u4e3a\u4e00\u4e2a\u56fe\uff0c\u6bcf\u4e2a\u7ec4\u6210\u539f\u5b50\u90fd\u6709\u4e00\u4e2a\u8282\u70b9\uff0c\u8fb9\u5bf9\u5e94\u4e8e\u539f\u5b50\u95f4\u952e\u3002\u4e00\u4e2a\u5171\u540c\u70b9\u662f\u4f7f\u7528\u5143\u7d20\u5c5e\u6027\u4f5c\u4e3a\u8282\u70b9\u7279\u5f81\u548c\u539f\u5b50\u95f4\u8ddd\u79bb\u548c/\u6216\u952e\u5408\u4ef7\u4f5c\u4e3a\u8fb9\u7279\u5f81\u3002 \u4f46\u662f\u6709\u4e9b\u91cd\u8981\u7684\u7269\u6027\u5e76\u672a\u8003\u8651\uff1a\u80fd\u9699\uff0c\u6216\u8005\u8bf4\u662f\u5e26\u9699\uff08\u7535\u5b50\u8131\u79bb\u675f\u7f1a\u6001\u6240\u9700\u7684\u6700\u5c0f\u80fd\u91cf\u3002\u5f53\u6ee1\u8db3\u5e26\u9699\u80fd\u91cf\u65f6\uff0c\u7535\u5b50\u88ab\u6fc0\u53d1\u6210\u81ea\u7531\u6001\uff0c\u56e0\u6b64\u53ef\u4ee5\u53c2\u4e0e\u4f20\u5bfc\uff09\uff0c\u5e26\u9699\u5bf9\u4e8e\u952e\u89d2\u548c\u5c40\u90e8\u7684\u51e0\u4f55\u53d8\u5f62\u975e\u5e38\u654f\u611f\u3002\u300aMachine learning with force-field-inspired descriptors for materials: Fast screening and mapping energy landscape\u300b\u8fd9\u7bc7\u6587\u7ae0\u5df2\u7ecf\u8bc1\u660e\u4e86\uff0c\u901a\u8fc7\u7279\u5b9a\u7684descriptor\u6765\u663e\u5f0f\u5730\u589e\u52a0\u89d2\u5ea6\u4fe1\u606f\u53ef\u4ee5\u63d0\u9ad8\u6a21\u578b\u6027\u80fd\u3002 \u672c\u6587\u4f7f\u7528 line graph neural network \u6765\u8868\u8fbe\u89d2\u5ea6\u4fe1\u606f\u3002 Line graph \u662f\u4e00\u4e2a\u56fe\uff0c\u7531\u53e6\u4e00\u4e2a\u56feg\u63a8\u5bfc\u800c\u6765\uff0c\u7528\u4e8e\u63cf\u8ff0\u8fb9\u7684\u8fde\u63a5\u6027\u3002 \u56fe g \u7684\u8282\u70b9\u4ee3\u8868\u539f\u5b50\uff0c\u8fb9\u4ee3\u8868\u952e \u7ebf\u56fe line graph \u7684\u8282\u70b9\u4ee3\u8868\u539f\u5b50\u95f4\u952e\uff0c\u8fb9\u4ee3\u8868bond angle\u3002 GNN\u5728\u4e24\u4e2a\u56fe\u4e0a\u8fdb\u884c\u5377\u79ef\u3002 \u672c\u6587\u7684\u5b9e\u73b0\u7528\u7684\u662fDGL\uff0cdeep graph library\u3002 \u4f7f\u7528JARVIS-density functional theory \u548c material project datasets\u548cQM9\u6570\u636e\u5e93\u8fdb\u884c\u8bad\u7ec3\u3002","title":"introduction"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AAtomistic%20Line%20Graph%20Neural%20Network%20for%20improved%20materials%20property%20predictions%E3%80%8B%20%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#result-and-discussion","text":"","title":"result and discussion"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AAtomistic%20Line%20Graph%20Neural%20Network%20for%20improved%20materials%20property%20predictions%E3%80%8B%20%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#atomistic-graph-representation","text":"ALIGNN\u4f7f\u7528 edges-gated graph convolution\uff0c\u540c\u65f6\u4f7f\u7528atomistic bond graph\u548cline graph\u3002 atomistic bond graph\u4e2datoms \u662f\u8282\u70b9\uff0cbonds \u662fedges line graph\u4e2d\uff0cbonds\u662f\u8282\u70b9\uff0cbond pairs with one common atom \u662fedges \u4ee5\u56db\u6c27\u5316\u7845\u4e3a\u4f8b\u3002\u6bcf\u4e2a\u8282\u70b9\u90fd\u662f\u4e00\u4e2a\u539f\u5b50\uff0c\u539f\u5b50\u67099\u4e2a\u7279\u5f81\uff1aelectronegativity, group number, covalent radius, valence electrons, first ionization energy, electron affinity, block, and atomic volume. e \u8bb0\u5f55\u7684\u662f \u5316\u5b66\u952e\u957f\u5ea6\u7684\u4fe1\u606f t \u8bb0\u5f55\u7684\u662f\u5316\u5b66\u952e\u89d2\u5ea6\u7684\u4fe1\u606f","title":"Atomistic graph representation"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AAtomistic%20Line%20Graph%20Neural%20Network%20for%20improved%20materials%20property%20predictions%E3%80%8B%20%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#edge-gated-graph-convolution","text":"ALIGNN\u4f7f\u7528 edge gated \u5377\u79ef\u64cd\u4f5c\u6765\u66f4\u65b0\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81\u3002 \u5148\u770b\uff084\uff09 \u5bf9\u4e8e\u4e00\u4e2a\u5f53\u524d\u7684$e_{ij}$\u6765\u8bf4\uff0c$h_i,h_j$ \u90fd\u662f\u5df2\u77e5\u7684\uff0cABC\u662f\u6743\u91cd\uff0c\u53ef\u4ee5\u8ba1\u7b97\u4e0b\u4e00\u5c42\u7684$e_{ij}$\uff1a $N_i$\u662f $i$ \u8282\u70b9\u7684\u90bb\u8282\u70b9\uff0c\u90a3\u4e48\uff1a \u6240\u4ee5\u8bf4\uff0c\u73b0\u5728\u7ed9\u5b9a h\u548ce\uff0c\u5c31\u80fd\u6309\u7167\u4e0a\u9762\u7684\u516c\u5f0f\u8fdb\u884c\u66f4\u65b0\u3002 \u628a\u4ee5\u4e0a\u516c\u5f0f\u7b80\u5316\uff0c\u91cd\u65b0\u6539\u5199\u4e3a\uff1a","title":"edge gated graph convolution"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AAtomistic%20Line%20Graph%20Neural%20Network%20for%20improved%20materials%20property%20predictions%E3%80%8B%20%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#alignn-update","text":"\u4e00\u4e00\u5bf9\u5e94\u6765\u770b\uff1a $h_i,h_j,m_{ij}$ \u5206\u522b\u5bf9\u5e94 h\uff0ce\uff1a \u7ea2\u8272\u5bf9\u5e94\uff084\uff09 \u7eff\u8272\u5bf9\u5e94\uff082\uff09 \u6574\u4f53\u4e0a\u6765\u770b\uff1a \u8f93\u5165\u4e86h\uff0ce\uff0ct\uff0c\u5e76\u4e14\u5c06\u5176\u66f4\u65b0\u3002 \u628a\u4ee5\u4e0a\u64cd\u4f5c\u8bb0\u4e3aEdgeGatedGraphConv\u64cd\u4f5c\uff0c\u90a3\u4e48\u53ef\u5f97\uff1a","title":"ALIGNN update"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AAtomistic%20Line%20Graph%20Neural%20Network%20for%20improved%20materials%20property%20predictions%E3%80%8B%20%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#overall-model-architecture-and-training","text":"\u6a21\u578b\u75314\u4e2aALIGNN \u5c42\u548c4\u4e2aGCN\u5c42\u3002 ALIGNN\u5c42\u6307\u7684\u662f\u524d\u9762\u7684 ALIGNN update GCN\u5c42\u6307\u7684\u662f \u4ec5\u4ec5 edge-gated graph convolution \u64cd\u4f5c \u5728 bond graph( \u4e5f\u5c31\u662f\u53ea\u8f93\u5165 h \u548c e) \u7ecf\u8fc7\u4e86 4 + 4 \u7684\u5377\u79ef\u5c42\uff0c\u518d\u6267\u884c \u5168\u5c40\u5e73\u5747\u6c60\u5316 \uff0c\u6700\u540e \u5168\u8fde\u63a5 \u8fdb\u884c\u9884\u6d4b\u4efb\u52a1\u3002","title":"Overall model architecture and training"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AAtomistic%20Line%20Graph%20Neural%20Network%20for%20improved%20materials%20property%20predictions%E3%80%8B%20%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#model-performance","text":"\u6570\u636e\u96c6\uff1a Materials Project\uff0cJARVIS-DFT \u548c QM9\uff0c \u5e76\u4e0d\u662f\u5c063\u4e2a\u6570\u636e\u96c6\u6574\u5408\u540c\u65f6\u8bad\u7ec3\uff0c\u800c\u662f\u5206\u522b\u5728\u4e09\u4e2a\u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u8bad\u7ec3\uff0c\u9884\u6d4b\u4efb\u52a1\u3002\u6570\u636e\u5212\u5206\u4e3a8\uff1a1\uff1a1\u3002 \u5176\u4e2d MP 2018\u5e746\u67081\u65e5\u7248\u672c\uff0c\u670969239\u79cd\u6750\u6599\uff0c\u4ee5\u53caPBE bandgaps \u548c \u5f62\u6210\u80fd\u7b49\u3002 CFID,CGCNN,MEGNet, SchNet \u90fd\u662f\u7528\u4e8e\u5bf9\u6bd4\u7684 MAD \u662f\u5e73\u5747\u7edd\u5bf9\u504f\u5dee MAD: MAE \u5e73\u5747\u7edd\u5bf9\u8bef\u5dee\u6807\u51c6\uff08\uff1f\uff09\u89c2\u5bdf\u523042.27\uff0c\u4e00\u822c\u6765\u8bb2\u5927\u4e8e5\u5219\u8bf4\u660e\u6a21\u578b\u6027\u80fd\u5f88\u597d\u3002 \u6570\u636e\u4f7f\u7528\u5728JARVIS-DFT\u6570\u636e\u96c6\u4e0a\uff0c\u6bd4CFID\u8981\u597d4\u500d\u3002 \u4f46\u662f\u56de\u5f52\u4efb\u52a1\u4e0d\u7b97\u8868\u73b0\u4f18\u5f02\uff0cMAD\uff1aMAE\u4f4e\u4e8e5\u3002 \u8be6\u7ec6\u8ba8\u8bba\uff1a \u5bf9\u4e8e\u5206\u7c7b\u4efb\u52a1\uff0c\u4f7f\u7528\u6307\u6807\u4e3a ROC AUC\uff0c\u4e00\u4e2a\u968f\u673a\u731c\u6d4b\u6a21\u578b\u7684ROC AUC\u4e3a0.5\uff0c\u5b8c\u7f8e\u7684\u6a21\u578b\u4e3a1. \u5bf9\u4e8e\u56de\u5f52\u6a21\u578b\uff1a","title":"Model performance"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ACAUSAL%20DISCOVERY%20WITH%20REINFORCEMENT%20LEARNING%E3%80%8B%20%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/","text":"\u300aCAUSAL DISCOVERY WITH REINFORCEMENT LEARNING\u300b \u8bfb\u4e66\u7b14\u8bb0 \u4f5c\u8005Shengyu Zhu\u534e\u4e3a\u8bfa\u4e9a\u5b9e\u9a8c\u5ba4\uff0c\u53d1\u8868\u5728ICLR\u3002 https://cn.linkedin.com/in/shengyuzhu https://github.com/huawei-noah/trustworthyAI/tree/master/Causal_Structure_Learning/Causal_Discovery_RL abstract causal inference = causal effect + causal relationships\uff08\u8d1d\u53f6\u65af\u7f51\u7edc\u505a\u7684\u662f\u56e0\u679c\u5173\u7cfb\u53d1\u73b0\uff09 \u56e0\u679c\u53d1\u73b0\u3002\u4f20\u7edf\u7684\u56e0\u679c\u53d1\u73b0\u57fa\u4e8e\u7684\u662flocal heuristics\uff0c\u4f9d\u636e score function\u3002 \u4f46\u662f\uff0cgreedy equivalence search \u53ef\u80fd\u5728\u65e0\u9650\u7684\u6837\u672c\u6570\u76ee\u4e0b\uff0c\u4e00\u5b9a\u7684\u6a21\u578b\u5047\u8bbe\u60c5\u51b5\u4e0b\u6709\u4e0d\u9519\u7684\u7ed3\u679c\uff0c\u5b83\u7684\u8868\u73b0\u5728\u6709\u9650\u6570\u636e\u5df2\u7ecf\u5047\u8bbe\u4e0d\u6ee1\u8db3\u7684\u60c5\u51b5\u4e0b\u8868\u73b0\u6b20\u4f73\u3002 \u57fa\u4e8eneural combinatorial optimization\u7684\u5de5\u4f5c\uff0c\u63d0\u51faRL \u6765\u641c\u7d22DAG\u3002 encoder-decoder\u6a21\u578b\uff1a\u8f93\u5165\u6570\u636e\uff0c\u751f\u6210\u90bb\u63a5\u77e9\u9635\uff0c\u5e76\u8ba1\u7b97reward\u3002reward\u8003\u8651\u4e86score function \u548c \u4e24\u4e2a\u60e9\u7f5a\u9879\u6765\u4fdd\u8bc1\u65e0\u73af\u6027\u3002 \u4e0e\u4f20\u7edf\u7684RL\u6a21\u578b\uff0c\u4e3a\u4e86\u5f97\u5230policy\u3002\u6211\u4eec\u4f7f\u7528RL\u6765\u5f97\u5230\u4e00\u4e2asearch strategy\uff0c\u6211\u4eec\u6700\u7ec8\u7684\u7ed3\u679c\u662f\u4e00\u4e2aDAG\u3002 synthetic data\u4e0ereal data\u540c\u6837\u9002\u7528\u3002 intro \u95ee\u9898\uff1a \u5176\u4e2d$S()$\u5df2\u7ecf\u88ab\u5927\u91cf\u7814\u7a76\uff0c\u4f8b\u5982\uff1aBIC, MDL, BGe. \u8fd9\u4e2a\u95ee\u9898\u662f\u4e00\u4e2aNP\u96be\u95ee\u9898\u3002 \u5e38\u7528local heuristic\u89e3\u51b3\uff1aGreedy Equivalence Search\uff0cMMHC\u3002 \u6700\u8fd1\uff1aX. Zheng, B. Aragam, P. Ravikumar, and E. P. Xing. DAGs with NO TEARS: Continuous optimization for structure learning. In Advances in Neural Information Processing Systems, 2018. \u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\u8fde\u7eed\u4f18\u5316\u95ee\u9898\u3002 \u968f\u540e\u8fd8\u6709\u4eba\u5728\u6b64\u57fa\u7840\u4e0a\u505a\u4e86\u6539\u826f\uff1a \u672c\u6587\u63d0\u51fa\uff1a\u4f7f\u7528RL\u6765\u641c\u7d22DAG\u3002 \u4f7f\u7528\u7f16\u7801\u5668-\u89e3\u7801\u5668\u8f93\u51fa\u4e00\u4e2a G \u6839\u636e\u8fd9\u4e2aG\u8ba1\u7b97reward\uff0c\u8fd9\u4e2areward\u8003\u8651\u4e86\uff1a\u2018\u5f97\u5206\u2019\u4e0e\u2018\u65e0\u73af\u6027\u2019\u3002 \u4f7f\u7528policy gradient\u4e0e\u968f\u673a\u4f18\u5316\u7b56\u7565\u6765\u4f18\u5316 \u2018\u7f16\u7801\u5668-\u89e3\u7801\u5668\u2019\u3002 related work \u57fa\u4e8econstraint-based \u7684\u56e0\u679c\u63a8\u65ad\u65b9\u6cd5\uff0c\u9996\u5148\u4f7f\u7528\u6761\u4ef6\u72ec\u7acb\u6027\u68c0\u9a8c\u6765\u786e\u5b9a\u9aa8\u67b6\uff0c\u7136\u540e\u518d\u51b3\u5b9a\u65b9\u5411\u3002PC\u7b97\u6cd5\u3002 \u8fd8\u6709\u4e00\u7c7b\u56e0\u679c\u63a8\u65ad\u65b9\u6cd5\u57fa\u4e8eproperly defined functional causal models\u3002\u4f8b\u5982\uff1a LiNGAM the nonlinear additive noise model post-nonlinear causal model model definition $$ x_{i}:=f_{i}\\left(\\mathrm{x} {\\mathrm{pa}(i)}\\right)+n {i}, i=1,2, \\ldots, d $$ \u5176\u4e2d$\\mathrm{x} {\\mathrm{pa}(i)}$\u662f$x {i}$\u7684\u7236\u8282\u70b9\uff08s\uff09\uff0c$f_{i}()$\u662f\u4e00\u4e2a\u56fa\u5b9a\u7684\u51fd\u6570\uff0c$n_{i}$\u56fa\u5b9a\u5206\u5e03\u7684\u566a\u97f3\u3002 \u5bf9\u4e8e\u6837\u672c $$ X_{n \\times d} $$ \u8bb0\u4e3a\uff1a $$ \\mathbf{x}:=\\left{{x} {i}\\right} {i=1}^{d} $$ Neural network architecture for graph generation \u5728\u6570\u636e\u4e2d\uff0c\u968f\u673a\u62bd\u53d6n\u4e2a\u6837\u672c\uff08\u53ef\u91cd\u590d\uff09\uff0c$x^k$\u662f\u7b2ck\u4e2a\u6837\u672c\uff0c\u5171\u6709n\u4e2a\u6837\u672c\u3002 \u6240\u4ee5\u6570\u636e\u4e3a\uff1a $$ {x^l}^n_{l=1} $$ \u4e00\u5171\u6709n\u884c\uff0cd\u5217\uff0c\u6240\u4ee5\u8bb0\uff1a $$ s ={\\tilde{x}}^d_{i=1} $$ \u4f7f\u7528\u6307\u9488\u795e\u7ecf\u7f51\u7edc\uff1a \u968f\u673a\u62bd\u53d6n\u4e2a\u6837\u672c\u51fa\u6765\uff08with replacement\uff09\uff0c$\\left{\\mathrm{x}^{l}\\right}_{l=1}^{n}$ \u5f97\u5230$\\mathbf{s}:=\\left{\\tilde{\\mathbf{x}} {i}\\right} {i=1}^{d}$ \uff0c\u8fd9\u91cc\u7684$\\tilde{\\mathbf{x}}_{i}$\uff0c\u662f\u4e00\u4e2a\u53d8\u91cf\u7684\u6240\u6709\u53d6\u503c\uff0c\u5c31\u662f\u539f\u6765x\u7684\u4e00\u5217\u3002 $\\tilde{\\mathbf{x}}_{i} \\in R^{1\\times n}$, \u7c7b\u6bd4\u4e8eTSP\u95ee\u9898\uff0c\u5b83\u662f$d$ \u4e2a\u57ce\u5e02\u7684 n-dim\u5750\u6807\u3002 encoder \u4f7f\u7528transformer\u6a21\u578b\u3002 \u8fc7\u7a0b\uff1a \u89c2\u6d4b\u6570\u636e [n,d] \u8f6c\u7f6e\u4e00\u4e0b [d,n] \u8fdbencoder\uff08\u5047\u8bbe\u6700\u540e\u7684feed forwad\u4e3a\uff09\uff0c\u5f97\u5230 [d,512] encoder---> $enc_i,i=1,2,3...d$ decoder \u4ee5\u6210\u5bf9\u7684\u65b9\u5f0f\u8003\u8651\u8fb9\u7684\u60c5\u51b5\u3002building relationship between two $enc_i$, \u6240\u4ee5decoder\u5f97\u5230\u7684\u7ed3\u679c\uff1a $$ g_{i j}\\left(W_{1}, W_{2}, u\\right)=u^{T} \\tanh \\left(W_{1} \\text { enc } {i}+W {2} \\text { enc }_{j}\\right) $$ $$ [g_{0, 0},g_{0, 1},...,g_{0, j}],\\ [g_{1, 0},g_{1, 1},...,g_{1, j}],\\ ...\\ [g_{1, 0},g_{1, 1},...,g_{i, j}] $$ Reinforcement learning for search \u4f7f\u7528RL\u4f5c\u4e3a\u641c\u7d22\u7b56\u7565\u3002 score function, acyclicity, reward \u8bc4\u5206\u51fd\u6570\uff1a\u672c\u6587\u4f7f\u7528RL agent\u6765\u6700\u5927\u5316\u8bc4\u5206\u51fd\u6570 BIC\u8bc4\u5206\uff1a $$ \\mathcal{S} {\\mathrm{BIC}}(\\mathcal{G})=\\sum {i=1}^{d}\\left(m \\log \\left(\\mathrm{RSS}_{i} / m\\right)\\right)+#(\\text { edges }) \\log m $$ $$ \\mathcal{S} {\\mathrm{BIC}}(\\mathcal{G})=m d \\log \\left(\\left(\\sum {i=1}^{d} \\operatorname{RSS}_{i}\\right) /(m d)\\right)+#(\\text { edges }) \\log m $$ acyclicity\uff1a $$ h(A):=\\operatorname{trace}\\left(e^{A}\\right)-d=0 $$ reward\uff1a $$ \\text { reward := }-\\left[\\mathcal{S}(\\mathcal{G})+\\lambda_{1} \\mathbf{I}(\\mathcal{G} \\notin \\mathrm{DAGs})+\\lambda_{2} h(A)\\right] $$ $I$\u662f\u4e00\u4e2a\u6307\u793a\u51fd\u6570\u3002 \u6240\u4ee5\u73b0\u5728\u8981\u5904\u7406\u7684\u95ee\u9898\u88ab\u6539\u5199\u4e3a\uff1a $$ \\min {\\mathcal{G}}\\left[\\mathcal{S}(\\mathcal{G})+\\lambda {1} \\mathbf{I}(\\mathcal{G} \\notin \\mathrm{DAGs})+\\lambda_{2} h(A)\\right] $$ \u539f\u95ee\u9898\u662f: $$ \\min _{\\mathcal{G}} \\mathcal{S}(\\mathcal{G}), \\text { subject to } \\mathcal{G} \\in \\mathrm{DAGs} $$ \u4e24\u4e2a\u95ee\u9898\u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\u7b49\u4ef7\u5462\uff1f \u56e0\u4e3ah(A)\u7684\u8ba1\u7b97\u91c7\u7528\u7684\u662f\u8fd1\u4f3c\u7b97\u6cd5\uff0c\u6240\u4ee5\u5e76\u4e0d\u80fd\u4e25\u683c\u9075\u5b88h(A)=0\u3002\u4e00\u822c\u60c5\u51b5\u4e0bh(A)<$h_{min}$\u5c31\u8ba4\u5b9aA\u4e3a\u65e0\u5411\u56fe\u3002 \u8bb0\uff1a$h_{min}$ \u662f\u6700\u5c0f\u7684\u6709\u73af\u56fe\uff0c$S^ $\u662f\u539f\u95ee\u9898\u7684\u6700\u4f4e\u5206\u3002$S_L$\u662f\u677e\u5f1b\u4ee5\u540e\u7684\u4e0b\u754c\uff0c$S_U$\u662f\u677e\u5f1b\u4ee5\u540e\u7684\u4e0a\u754c\u3002\uff08$S_L$<=$S^ $<=$S_U$\uff09 \u4e24\u4e2a\u95ee\u9898\u7b49\u4ef7\uff0c\u5f53\uff1a $$ \\lambda_{1}+\\lambda_{2} h_{\\min } \\geq \\mathcal{S} {U}-\\mathcal{S} {L} $$ \u8bc1\u660e\uff1a $$ \u5bf9\u4e8e\u539f\u95ee\u9898\u6765\u8bf4\uff1a\u5047\u8bbe G \u662f\u4e00\u4e2a\u89e3\uff0c\u90a3\u4e48 S^ = S(G) \\ \u5982\u679c\u8bf4G \u4e0d\u662f\"\u6539\u5199\u95ee\u9898\" \u7684\u89e3\uff0c\u90a3\u4e48\u5b58\u5728\u4e00\u4e2a G\uff08\u53ef\u80fd\u6709\u5411\uff09\\ \\mathcal{S}^{ }>\\mathcal{S}\\left(\\mathcal{G}^{\\prime}\\right)+\\lambda_{1} \\mathbf{I}\\left(\\mathcal{G}^{\\prime} \\notin \\text { DAGs }\\right)+\\lambda_{2} h\\left(A^{\\prime}\\right)\\ \u5f88\u660e\u663e\uff0c\\mathcal{G}^{\\prime}\u4e0d\u662f\u4e00\u4e2aDAG\uff0c\\ \\mathcal{S}\\left(\\mathcal{G}^{\\prime}\\right)+\\lambda_{1} \\mathbf{I}\\left(\\mathcal{G}^{\\prime} \\notin \\text { DAGs }\\right)+\\lambda_{2} h\\left(A^{\\prime}\\right)>S_L+\\lambda_{1}+\\lambda_{2} h_{\\min }>=S_U $$ actor-critic algorithm policy\uff1a $$ \\pi(\\cdot \\mid \\mathrm{s}) $$ NN\uff08\u7f16\u7801\u5668\uff0c\u89e3\u7801\u5668\uff09\u7684\u53c2\u6570\uff1a $$ \\psi $$ \u8bad\u7ec3\u7684\u76ee\u6807\uff0c\u671f\u671b\u5956\u52b1\u4e3a\uff1a $$ J(\\psi \\mid \\mathbf{s})=\\mathbb{E} {A \\sim \\pi(\\cdot \\mid \\mathrm{s})}\\left{-\\left[\\mathcal{S}(\\mathcal{G})+\\lambda {1} \\mathbf{I}(\\mathcal{G} \\notin \\mathrm{DAGs})+\\lambda_{2} h(A)\\right]\\right} $$ \u7b97\u6cd5\u8be6\u7ec6\uff1a data \u5148\u8fdb\u5165 encoder\uff0c\u5f97\u5230 encs encs\u8fdb\u5165critic\uff0c\u5f97\u5230\u9884\u6d4b\u5230\u7684reward encs\u548c\u9884\u6d4breward\u8fdb\u5165\u5230decoder\uff0c\u5f97\u5230\u56fe\uff0c\u56fe\u518d\u4f7f\u7528\u51c6\u786e\u8ba1\u7b97\uff0c\u5f97\u5230\u771f\u5b9ereward \u771f\u5b9e\u7684reward-\u9884\u6d4b\u7684reward\uff0c\u5f97\u5230loss\uff0c\u4f7f\u7528\u8fd9\u4e2aloss\u6765\u66f4\u65b0critc \u7136\u540e\u4f7f\u7528\u66f4\u65b0\u540e\u7684critc\u9884\u6d4b\u7684reward\uff0cencs\u8fdb\u5165\u5230decoder\uff0c\u4f7f\u7528\u8fd9\u4e2aloss\u6765\u66f4\u65b0actor","title":"\u300aCAUSAL DISCOVERY WITH REINFORCEMENT LEARNING\u300b \u8bfb\u4e66\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ACAUSAL%20DISCOVERY%20WITH%20REINFORCEMENT%20LEARNING%E3%80%8B%20%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#causal-discovery-with-reinforcement-learning","text":"\u4f5c\u8005Shengyu Zhu\u534e\u4e3a\u8bfa\u4e9a\u5b9e\u9a8c\u5ba4\uff0c\u53d1\u8868\u5728ICLR\u3002 https://cn.linkedin.com/in/shengyuzhu https://github.com/huawei-noah/trustworthyAI/tree/master/Causal_Structure_Learning/Causal_Discovery_RL","title":"\u300aCAUSAL DISCOVERY WITH REINFORCEMENT LEARNING\u300b \u8bfb\u4e66\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ACAUSAL%20DISCOVERY%20WITH%20REINFORCEMENT%20LEARNING%E3%80%8B%20%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#abstract","text":"causal inference = causal effect + causal relationships\uff08\u8d1d\u53f6\u65af\u7f51\u7edc\u505a\u7684\u662f\u56e0\u679c\u5173\u7cfb\u53d1\u73b0\uff09 \u56e0\u679c\u53d1\u73b0\u3002\u4f20\u7edf\u7684\u56e0\u679c\u53d1\u73b0\u57fa\u4e8e\u7684\u662flocal heuristics\uff0c\u4f9d\u636e score function\u3002 \u4f46\u662f\uff0cgreedy equivalence search \u53ef\u80fd\u5728\u65e0\u9650\u7684\u6837\u672c\u6570\u76ee\u4e0b\uff0c\u4e00\u5b9a\u7684\u6a21\u578b\u5047\u8bbe\u60c5\u51b5\u4e0b\u6709\u4e0d\u9519\u7684\u7ed3\u679c\uff0c\u5b83\u7684\u8868\u73b0\u5728\u6709\u9650\u6570\u636e\u5df2\u7ecf\u5047\u8bbe\u4e0d\u6ee1\u8db3\u7684\u60c5\u51b5\u4e0b\u8868\u73b0\u6b20\u4f73\u3002 \u57fa\u4e8eneural combinatorial optimization\u7684\u5de5\u4f5c\uff0c\u63d0\u51faRL \u6765\u641c\u7d22DAG\u3002 encoder-decoder\u6a21\u578b\uff1a\u8f93\u5165\u6570\u636e\uff0c\u751f\u6210\u90bb\u63a5\u77e9\u9635\uff0c\u5e76\u8ba1\u7b97reward\u3002reward\u8003\u8651\u4e86score function \u548c \u4e24\u4e2a\u60e9\u7f5a\u9879\u6765\u4fdd\u8bc1\u65e0\u73af\u6027\u3002 \u4e0e\u4f20\u7edf\u7684RL\u6a21\u578b\uff0c\u4e3a\u4e86\u5f97\u5230policy\u3002\u6211\u4eec\u4f7f\u7528RL\u6765\u5f97\u5230\u4e00\u4e2asearch strategy\uff0c\u6211\u4eec\u6700\u7ec8\u7684\u7ed3\u679c\u662f\u4e00\u4e2aDAG\u3002 synthetic data\u4e0ereal data\u540c\u6837\u9002\u7528\u3002","title":"abstract"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ACAUSAL%20DISCOVERY%20WITH%20REINFORCEMENT%20LEARNING%E3%80%8B%20%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#intro","text":"\u95ee\u9898\uff1a \u5176\u4e2d$S()$\u5df2\u7ecf\u88ab\u5927\u91cf\u7814\u7a76\uff0c\u4f8b\u5982\uff1aBIC, MDL, BGe. \u8fd9\u4e2a\u95ee\u9898\u662f\u4e00\u4e2aNP\u96be\u95ee\u9898\u3002 \u5e38\u7528local heuristic\u89e3\u51b3\uff1aGreedy Equivalence Search\uff0cMMHC\u3002 \u6700\u8fd1\uff1aX. Zheng, B. Aragam, P. Ravikumar, and E. P. Xing. DAGs with NO TEARS: Continuous optimization for structure learning. In Advances in Neural Information Processing Systems, 2018. \u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\u8fde\u7eed\u4f18\u5316\u95ee\u9898\u3002 \u968f\u540e\u8fd8\u6709\u4eba\u5728\u6b64\u57fa\u7840\u4e0a\u505a\u4e86\u6539\u826f\uff1a \u672c\u6587\u63d0\u51fa\uff1a\u4f7f\u7528RL\u6765\u641c\u7d22DAG\u3002 \u4f7f\u7528\u7f16\u7801\u5668-\u89e3\u7801\u5668\u8f93\u51fa\u4e00\u4e2a G \u6839\u636e\u8fd9\u4e2aG\u8ba1\u7b97reward\uff0c\u8fd9\u4e2areward\u8003\u8651\u4e86\uff1a\u2018\u5f97\u5206\u2019\u4e0e\u2018\u65e0\u73af\u6027\u2019\u3002 \u4f7f\u7528policy gradient\u4e0e\u968f\u673a\u4f18\u5316\u7b56\u7565\u6765\u4f18\u5316 \u2018\u7f16\u7801\u5668-\u89e3\u7801\u5668\u2019\u3002","title":"intro"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ACAUSAL%20DISCOVERY%20WITH%20REINFORCEMENT%20LEARNING%E3%80%8B%20%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#related-work","text":"\u57fa\u4e8econstraint-based \u7684\u56e0\u679c\u63a8\u65ad\u65b9\u6cd5\uff0c\u9996\u5148\u4f7f\u7528\u6761\u4ef6\u72ec\u7acb\u6027\u68c0\u9a8c\u6765\u786e\u5b9a\u9aa8\u67b6\uff0c\u7136\u540e\u518d\u51b3\u5b9a\u65b9\u5411\u3002PC\u7b97\u6cd5\u3002 \u8fd8\u6709\u4e00\u7c7b\u56e0\u679c\u63a8\u65ad\u65b9\u6cd5\u57fa\u4e8eproperly defined functional causal models\u3002\u4f8b\u5982\uff1a LiNGAM the nonlinear additive noise model post-nonlinear causal model","title":"related work"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ACAUSAL%20DISCOVERY%20WITH%20REINFORCEMENT%20LEARNING%E3%80%8B%20%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#model-definition","text":"$$ x_{i}:=f_{i}\\left(\\mathrm{x} {\\mathrm{pa}(i)}\\right)+n {i}, i=1,2, \\ldots, d $$ \u5176\u4e2d$\\mathrm{x} {\\mathrm{pa}(i)}$\u662f$x {i}$\u7684\u7236\u8282\u70b9\uff08s\uff09\uff0c$f_{i}()$\u662f\u4e00\u4e2a\u56fa\u5b9a\u7684\u51fd\u6570\uff0c$n_{i}$\u56fa\u5b9a\u5206\u5e03\u7684\u566a\u97f3\u3002 \u5bf9\u4e8e\u6837\u672c $$ X_{n \\times d} $$ \u8bb0\u4e3a\uff1a $$ \\mathbf{x}:=\\left{{x} {i}\\right} {i=1}^{d} $$","title":"model definition"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ACAUSAL%20DISCOVERY%20WITH%20REINFORCEMENT%20LEARNING%E3%80%8B%20%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#neural-network-architecture-for-graph-generation","text":"\u5728\u6570\u636e\u4e2d\uff0c\u968f\u673a\u62bd\u53d6n\u4e2a\u6837\u672c\uff08\u53ef\u91cd\u590d\uff09\uff0c$x^k$\u662f\u7b2ck\u4e2a\u6837\u672c\uff0c\u5171\u6709n\u4e2a\u6837\u672c\u3002 \u6240\u4ee5\u6570\u636e\u4e3a\uff1a $$ {x^l}^n_{l=1} $$ \u4e00\u5171\u6709n\u884c\uff0cd\u5217\uff0c\u6240\u4ee5\u8bb0\uff1a $$ s ={\\tilde{x}}^d_{i=1} $$ \u4f7f\u7528\u6307\u9488\u795e\u7ecf\u7f51\u7edc\uff1a \u968f\u673a\u62bd\u53d6n\u4e2a\u6837\u672c\u51fa\u6765\uff08with replacement\uff09\uff0c$\\left{\\mathrm{x}^{l}\\right}_{l=1}^{n}$ \u5f97\u5230$\\mathbf{s}:=\\left{\\tilde{\\mathbf{x}} {i}\\right} {i=1}^{d}$ \uff0c\u8fd9\u91cc\u7684$\\tilde{\\mathbf{x}}_{i}$\uff0c\u662f\u4e00\u4e2a\u53d8\u91cf\u7684\u6240\u6709\u53d6\u503c\uff0c\u5c31\u662f\u539f\u6765x\u7684\u4e00\u5217\u3002 $\\tilde{\\mathbf{x}}_{i} \\in R^{1\\times n}$, \u7c7b\u6bd4\u4e8eTSP\u95ee\u9898\uff0c\u5b83\u662f$d$ \u4e2a\u57ce\u5e02\u7684 n-dim\u5750\u6807\u3002","title":"Neural network architecture for graph generation"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ACAUSAL%20DISCOVERY%20WITH%20REINFORCEMENT%20LEARNING%E3%80%8B%20%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#encoder","text":"\u4f7f\u7528transformer\u6a21\u578b\u3002 \u8fc7\u7a0b\uff1a \u89c2\u6d4b\u6570\u636e [n,d] \u8f6c\u7f6e\u4e00\u4e0b [d,n] \u8fdbencoder\uff08\u5047\u8bbe\u6700\u540e\u7684feed forwad\u4e3a\uff09\uff0c\u5f97\u5230 [d,512] encoder---> $enc_i,i=1,2,3...d$","title":"encoder"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ACAUSAL%20DISCOVERY%20WITH%20REINFORCEMENT%20LEARNING%E3%80%8B%20%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#decoder","text":"\u4ee5\u6210\u5bf9\u7684\u65b9\u5f0f\u8003\u8651\u8fb9\u7684\u60c5\u51b5\u3002building relationship between two $enc_i$, \u6240\u4ee5decoder\u5f97\u5230\u7684\u7ed3\u679c\uff1a $$ g_{i j}\\left(W_{1}, W_{2}, u\\right)=u^{T} \\tanh \\left(W_{1} \\text { enc } {i}+W {2} \\text { enc }_{j}\\right) $$ $$ [g_{0, 0},g_{0, 1},...,g_{0, j}],\\ [g_{1, 0},g_{1, 1},...,g_{1, j}],\\ ...\\ [g_{1, 0},g_{1, 1},...,g_{i, j}] $$","title":"decoder"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ACAUSAL%20DISCOVERY%20WITH%20REINFORCEMENT%20LEARNING%E3%80%8B%20%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#reinforcement-learning-for-search","text":"\u4f7f\u7528RL\u4f5c\u4e3a\u641c\u7d22\u7b56\u7565\u3002","title":"Reinforcement learning for search"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ACAUSAL%20DISCOVERY%20WITH%20REINFORCEMENT%20LEARNING%E3%80%8B%20%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#score-function-acyclicity-reward","text":"\u8bc4\u5206\u51fd\u6570\uff1a\u672c\u6587\u4f7f\u7528RL agent\u6765\u6700\u5927\u5316\u8bc4\u5206\u51fd\u6570 BIC\u8bc4\u5206\uff1a $$ \\mathcal{S} {\\mathrm{BIC}}(\\mathcal{G})=\\sum {i=1}^{d}\\left(m \\log \\left(\\mathrm{RSS}_{i} / m\\right)\\right)+#(\\text { edges }) \\log m $$ $$ \\mathcal{S} {\\mathrm{BIC}}(\\mathcal{G})=m d \\log \\left(\\left(\\sum {i=1}^{d} \\operatorname{RSS}_{i}\\right) /(m d)\\right)+#(\\text { edges }) \\log m $$ acyclicity\uff1a $$ h(A):=\\operatorname{trace}\\left(e^{A}\\right)-d=0 $$ reward\uff1a $$ \\text { reward := }-\\left[\\mathcal{S}(\\mathcal{G})+\\lambda_{1} \\mathbf{I}(\\mathcal{G} \\notin \\mathrm{DAGs})+\\lambda_{2} h(A)\\right] $$ $I$\u662f\u4e00\u4e2a\u6307\u793a\u51fd\u6570\u3002 \u6240\u4ee5\u73b0\u5728\u8981\u5904\u7406\u7684\u95ee\u9898\u88ab\u6539\u5199\u4e3a\uff1a $$ \\min {\\mathcal{G}}\\left[\\mathcal{S}(\\mathcal{G})+\\lambda {1} \\mathbf{I}(\\mathcal{G} \\notin \\mathrm{DAGs})+\\lambda_{2} h(A)\\right] $$ \u539f\u95ee\u9898\u662f: $$ \\min _{\\mathcal{G}} \\mathcal{S}(\\mathcal{G}), \\text { subject to } \\mathcal{G} \\in \\mathrm{DAGs} $$ \u4e24\u4e2a\u95ee\u9898\u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\u7b49\u4ef7\u5462\uff1f \u56e0\u4e3ah(A)\u7684\u8ba1\u7b97\u91c7\u7528\u7684\u662f\u8fd1\u4f3c\u7b97\u6cd5\uff0c\u6240\u4ee5\u5e76\u4e0d\u80fd\u4e25\u683c\u9075\u5b88h(A)=0\u3002\u4e00\u822c\u60c5\u51b5\u4e0bh(A)<$h_{min}$\u5c31\u8ba4\u5b9aA\u4e3a\u65e0\u5411\u56fe\u3002 \u8bb0\uff1a$h_{min}$ \u662f\u6700\u5c0f\u7684\u6709\u73af\u56fe\uff0c$S^ $\u662f\u539f\u95ee\u9898\u7684\u6700\u4f4e\u5206\u3002$S_L$\u662f\u677e\u5f1b\u4ee5\u540e\u7684\u4e0b\u754c\uff0c$S_U$\u662f\u677e\u5f1b\u4ee5\u540e\u7684\u4e0a\u754c\u3002\uff08$S_L$<=$S^ $<=$S_U$\uff09 \u4e24\u4e2a\u95ee\u9898\u7b49\u4ef7\uff0c\u5f53\uff1a $$ \\lambda_{1}+\\lambda_{2} h_{\\min } \\geq \\mathcal{S} {U}-\\mathcal{S} {L} $$ \u8bc1\u660e\uff1a $$ \u5bf9\u4e8e\u539f\u95ee\u9898\u6765\u8bf4\uff1a\u5047\u8bbe G \u662f\u4e00\u4e2a\u89e3\uff0c\u90a3\u4e48 S^ = S(G) \\ \u5982\u679c\u8bf4G \u4e0d\u662f\"\u6539\u5199\u95ee\u9898\" \u7684\u89e3\uff0c\u90a3\u4e48\u5b58\u5728\u4e00\u4e2a G\uff08\u53ef\u80fd\u6709\u5411\uff09\\ \\mathcal{S}^{ }>\\mathcal{S}\\left(\\mathcal{G}^{\\prime}\\right)+\\lambda_{1} \\mathbf{I}\\left(\\mathcal{G}^{\\prime} \\notin \\text { DAGs }\\right)+\\lambda_{2} h\\left(A^{\\prime}\\right)\\ \u5f88\u660e\u663e\uff0c\\mathcal{G}^{\\prime}\u4e0d\u662f\u4e00\u4e2aDAG\uff0c\\ \\mathcal{S}\\left(\\mathcal{G}^{\\prime}\\right)+\\lambda_{1} \\mathbf{I}\\left(\\mathcal{G}^{\\prime} \\notin \\text { DAGs }\\right)+\\lambda_{2} h\\left(A^{\\prime}\\right)>S_L+\\lambda_{1}+\\lambda_{2} h_{\\min }>=S_U $$","title":"score function, acyclicity, reward"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ACAUSAL%20DISCOVERY%20WITH%20REINFORCEMENT%20LEARNING%E3%80%8B%20%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#actor-critic-algorithm","text":"policy\uff1a $$ \\pi(\\cdot \\mid \\mathrm{s}) $$ NN\uff08\u7f16\u7801\u5668\uff0c\u89e3\u7801\u5668\uff09\u7684\u53c2\u6570\uff1a $$ \\psi $$ \u8bad\u7ec3\u7684\u76ee\u6807\uff0c\u671f\u671b\u5956\u52b1\u4e3a\uff1a $$ J(\\psi \\mid \\mathbf{s})=\\mathbb{E} {A \\sim \\pi(\\cdot \\mid \\mathrm{s})}\\left{-\\left[\\mathcal{S}(\\mathcal{G})+\\lambda {1} \\mathbf{I}(\\mathcal{G} \\notin \\mathrm{DAGs})+\\lambda_{2} h(A)\\right]\\right} $$","title":"actor-critic algorithm"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ACAUSAL%20DISCOVERY%20WITH%20REINFORCEMENT%20LEARNING%E3%80%8B%20%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_1","text":"data \u5148\u8fdb\u5165 encoder\uff0c\u5f97\u5230 encs encs\u8fdb\u5165critic\uff0c\u5f97\u5230\u9884\u6d4b\u5230\u7684reward encs\u548c\u9884\u6d4breward\u8fdb\u5165\u5230decoder\uff0c\u5f97\u5230\u56fe\uff0c\u56fe\u518d\u4f7f\u7528\u51c6\u786e\u8ba1\u7b97\uff0c\u5f97\u5230\u771f\u5b9ereward \u771f\u5b9e\u7684reward-\u9884\u6d4b\u7684reward\uff0c\u5f97\u5230loss\uff0c\u4f7f\u7528\u8fd9\u4e2aloss\u6765\u66f4\u65b0critc \u7136\u540e\u4f7f\u7528\u66f4\u65b0\u540e\u7684critc\u9884\u6d4b\u7684reward\uff0cencs\u8fdb\u5165\u5230decoder\uff0c\u4f7f\u7528\u8fd9\u4e2aloss\u6765\u66f4\u65b0actor","title":"\u7b97\u6cd5\u8be6\u7ec6\uff1a"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AExploiting%20Experts%E2%80%99%20Knowledge%20for%20Structure%20Learning%20of%20Bayesian%20Networks%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/","text":"\u300aExploiting Experts\u2019 Knowledge for Structure Learning of Bayesian Networks\u300b\u9605\u8bfb\u7b14\u8bb0 \u8fd9\u662f\u4e00\u7bc7\u6570\u5b66\u529f\u5e95\u5f88\u4e0d\u9519\u7684\u878d\u5408\u4e13\u5bb6\u77e5\u8bc6\u7684\u7ed3\u6784\u5b66\u4e60\u7b97\u6cd5 Abstract In this paper, it is investigated whether Bayesian network structure learning can be improved by exploiting the opinions of multiple domain experts regarding cause-effect relationships. \u6bcf\u4e2a\u4e13\u5bb6\u7684\u51c6\u786e\u6027\u88ab\u4e09\u4e2a\u53c2\u6570\u8861\u91cf\u3002 \u63d0\u51fa\u4e86\u4e24\u4e2a\u65b0\u7684\u8bc4\u5206\u51fd\u6570\u3002\u7b2c\u4e00\u4e2a\u8bc4\u5206\u51fd\u6570\uff0c\u4e13\u5bb6\u7684\u51c6\u786e\u6027\u7528EM\u7b97\u6cd5\u6765\u4f30\u8ba1\uff1b\u7b2c\u4e8c\u4e2a\u8bc4\u5206\u51fd\u6570marginalizes out the accuracy parameters to obtain more robust scores\u3002 Introduction the challenges faced by Bayesian network structure learning\uff1a candidate graph is super exponential in the number of the variables insufficient data Markov equivalent graph encodes the same joint distribution in this paper : proposed two scoring functions, advantages: impossible have a completely reliable expert expert only have to label some of the edges deal conflicts approaches: EM algorithm to estimate the accuracy of experts propose a Bayesian alternative by taking into account the uncertainty in the accuracy of each expert. Thus the first one is named as explicit accuracy based score , the second one is marginalization-based score Bayesian networks Omitted If two graphs encode the same set of independences, then we say that these graphs are Markov equivalent. usually convert DAG to CPDAG to determine whether DAGs are in Markov equivalent class. Score-based structure learning introduce BD score edge types, experts' opinions and accuracies there are three types of opinions three parameters model the accuracy of an expert an example to illustrate: an expert with $\\gamma_1 = 0.6,\\gamma_2 = 0.1 ,\\gamma_3 = 0.8$ problem setting multi experts' abstract model\uff1a single expert's abstract model\uff1a use d-separation to identify independence relationships: Score derivation get the explicit accuracy based score function above it is since Bayesian theory and law of probability, then log it the first two parts of this score have been researched. Now we focus on the last part: start from left: $logP(O|g,\\gamma)$ is computed as : then, $N$ is the number of node pairs. $R$ is the number of expert. this paper does not mention the decomposability of the score function, which is critical in the heuristics. EM based Accuracy estimation here, use EM algorithm to estimate the accuracy of experts. optimal problem: $p$ is the prior distribution, and $\\gamma$ is the accuracy parameters. Such conditional probability is obtained from . Given prior distribution and the accuracy parameters, the probability of expert opinions. find when the probability reach max, what the $p$, $\\gamma$ is? in other word, what $p$, $\\gamma$ can make the biggest likelihood. solve this optimize problem with EM algorithm. MARGINALIZATION-BASED SCORE Marginalization based score does not need the accuracy of experts, and does not expilitly estimate it. Marginalization based score uses integration to eliminate expert accuracy $\\gamma$. after deriving... where $\\beta,\\alpha$ are hyper parameters. experiments datasets: there are small, medium, big, very big 4 different datasets. experts: five different methods: BDeu score totally expert perfect experts, it means explicit accuaracy based score mean, every expert has the same accuracy EM marginalization-based score asia network experts are weak, marginalization score performs best. experts are mediocre, marginalization score performs best experts are good, marginalization score performs best, 3/4. and perfect-expert algorithm 1/4 performs best. insurance network alarm network Halifinder network real world experiments breast cancer diagnosis","title":"\u300aExploiting Experts\u2019 Knowledge for Structure Learning of Bayesian Networks\u300b\u9605\u8bfb\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AExploiting%20Experts%E2%80%99%20Knowledge%20for%20Structure%20Learning%20of%20Bayesian%20Networks%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#exploiting-experts-knowledge-for-structure-learning-of-bayesian-networks","text":"\u8fd9\u662f\u4e00\u7bc7\u6570\u5b66\u529f\u5e95\u5f88\u4e0d\u9519\u7684\u878d\u5408\u4e13\u5bb6\u77e5\u8bc6\u7684\u7ed3\u6784\u5b66\u4e60\u7b97\u6cd5","title":"\u300aExploiting Experts\u2019 Knowledge for Structure Learning of Bayesian Networks\u300b\u9605\u8bfb\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AExploiting%20Experts%E2%80%99%20Knowledge%20for%20Structure%20Learning%20of%20Bayesian%20Networks%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#abstract","text":"In this paper, it is investigated whether Bayesian network structure learning can be improved by exploiting the opinions of multiple domain experts regarding cause-effect relationships. \u6bcf\u4e2a\u4e13\u5bb6\u7684\u51c6\u786e\u6027\u88ab\u4e09\u4e2a\u53c2\u6570\u8861\u91cf\u3002 \u63d0\u51fa\u4e86\u4e24\u4e2a\u65b0\u7684\u8bc4\u5206\u51fd\u6570\u3002\u7b2c\u4e00\u4e2a\u8bc4\u5206\u51fd\u6570\uff0c\u4e13\u5bb6\u7684\u51c6\u786e\u6027\u7528EM\u7b97\u6cd5\u6765\u4f30\u8ba1\uff1b\u7b2c\u4e8c\u4e2a\u8bc4\u5206\u51fd\u6570marginalizes out the accuracy parameters to obtain more robust scores\u3002","title":"Abstract"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AExploiting%20Experts%E2%80%99%20Knowledge%20for%20Structure%20Learning%20of%20Bayesian%20Networks%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#introduction","text":"the challenges faced by Bayesian network structure learning\uff1a candidate graph is super exponential in the number of the variables insufficient data Markov equivalent graph encodes the same joint distribution in this paper : proposed two scoring functions, advantages: impossible have a completely reliable expert expert only have to label some of the edges deal conflicts approaches: EM algorithm to estimate the accuracy of experts propose a Bayesian alternative by taking into account the uncertainty in the accuracy of each expert. Thus the first one is named as explicit accuracy based score , the second one is marginalization-based score","title":"Introduction"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AExploiting%20Experts%E2%80%99%20Knowledge%20for%20Structure%20Learning%20of%20Bayesian%20Networks%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#bayesian-networks","text":"Omitted If two graphs encode the same set of independences, then we say that these graphs are Markov equivalent. usually convert DAG to CPDAG to determine whether DAGs are in Markov equivalent class.","title":"Bayesian networks"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AExploiting%20Experts%E2%80%99%20Knowledge%20for%20Structure%20Learning%20of%20Bayesian%20Networks%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#score-based-structure-learning","text":"introduce BD score","title":"Score-based structure learning"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AExploiting%20Experts%E2%80%99%20Knowledge%20for%20Structure%20Learning%20of%20Bayesian%20Networks%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#edge-types-experts-opinions-and-accuracies","text":"there are three types of opinions three parameters model the accuracy of an expert an example to illustrate: an expert with $\\gamma_1 = 0.6,\\gamma_2 = 0.1 ,\\gamma_3 = 0.8$","title":"edge types, experts' opinions and accuracies"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AExploiting%20Experts%E2%80%99%20Knowledge%20for%20Structure%20Learning%20of%20Bayesian%20Networks%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#problem-setting","text":"multi experts' abstract model\uff1a single expert's abstract model\uff1a use d-separation to identify independence relationships:","title":"problem setting"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AExploiting%20Experts%E2%80%99%20Knowledge%20for%20Structure%20Learning%20of%20Bayesian%20Networks%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#score-derivation","text":"get the explicit accuracy based score function above it is since Bayesian theory and law of probability, then log it the first two parts of this score have been researched. Now we focus on the last part: start from left: $logP(O|g,\\gamma)$ is computed as : then, $N$ is the number of node pairs. $R$ is the number of expert. this paper does not mention the decomposability of the score function, which is critical in the heuristics.","title":"Score derivation"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AExploiting%20Experts%E2%80%99%20Knowledge%20for%20Structure%20Learning%20of%20Bayesian%20Networks%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#em-based-accuracy-estimation","text":"here, use EM algorithm to estimate the accuracy of experts. optimal problem: $p$ is the prior distribution, and $\\gamma$ is the accuracy parameters. Such conditional probability is obtained from . Given prior distribution and the accuracy parameters, the probability of expert opinions. find when the probability reach max, what the $p$, $\\gamma$ is? in other word, what $p$, $\\gamma$ can make the biggest likelihood. solve this optimize problem with EM algorithm.","title":"EM based Accuracy estimation"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AExploiting%20Experts%E2%80%99%20Knowledge%20for%20Structure%20Learning%20of%20Bayesian%20Networks%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#marginalization-based-score","text":"Marginalization based score does not need the accuracy of experts, and does not expilitly estimate it. Marginalization based score uses integration to eliminate expert accuracy $\\gamma$. after deriving... where $\\beta,\\alpha$ are hyper parameters.","title":"MARGINALIZATION-BASED SCORE"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AExploiting%20Experts%E2%80%99%20Knowledge%20for%20Structure%20Learning%20of%20Bayesian%20Networks%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#experiments","text":"datasets: there are small, medium, big, very big 4 different datasets. experts: five different methods: BDeu score totally expert perfect experts, it means explicit accuaracy based score mean, every expert has the same accuracy EM marginalization-based score","title":"experiments"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AExploiting%20Experts%E2%80%99%20Knowledge%20for%20Structure%20Learning%20of%20Bayesian%20Networks%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#asia-network","text":"experts are weak, marginalization score performs best. experts are mediocre, marginalization score performs best experts are good, marginalization score performs best, 3/4. and perfect-expert algorithm 1/4 performs best.","title":"asia network"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AExploiting%20Experts%E2%80%99%20Knowledge%20for%20Structure%20Learning%20of%20Bayesian%20Networks%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#insurance-network","text":"","title":"insurance network"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AExploiting%20Experts%E2%80%99%20Knowledge%20for%20Structure%20Learning%20of%20Bayesian%20Networks%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#alarm-network","text":"","title":"alarm network"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AExploiting%20Experts%E2%80%99%20Knowledge%20for%20Structure%20Learning%20of%20Bayesian%20Networks%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#halifinder-network","text":"","title":"Halifinder network"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AExploiting%20Experts%E2%80%99%20Knowledge%20for%20Structure%20Learning%20of%20Bayesian%20Networks%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#real-world-experiments","text":"breast cancer diagnosis","title":"real world experiments"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AImproved%20K2%20algorithm%20for%20Bayesian%20network%20structure%20learning%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/","text":"\u300aImproved K2 algorithm for Bayesian network structure learning\u300b\u9605\u8bfb\u7b14\u8bb0 abstract K2\u7b97\u6cd5\u662f\u4e00\u4e2a\u57fa\u4e8e\u8bc4\u5206\u7684\u7b97\u6cd5\uff0c\u5c06\u968f\u673a\u8f93\u5165\u7684\u53d8\u91cf\u987a\u5e8f\u4f5c\u4e3a\u8f93\u5165\uff0c\u5b83\u7684\u6548\u7387\u53d7\u53d8\u91cf\u987a\u5e8f\u7684\u5f71\u54cd\u3002\u4e0d\u6b63\u786e\u7684\u53d8\u91cf\u987a\u5e8f\u4f1a\u5bfc\u81f4\u9519\u8bef\u7684\u7f51\u7edc\u7ed3\u6784\u3002 \u5bf9\u4e8eK2\u7b97\u6cd5\uff0c\u4e3b\u8981\u6311\u6218\u662f\uff1a\u4ece\u6570\u636e\u96c6\u4e2d\u83b7\u5f97\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u987a\u5e8f\u3002 \u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u5feb\u901f\u800c\u76f4\u63a5\u7684\u7b97\u6cd5\u3002\u8be5\u7b97\u6cd5\u57fa\u4e8e\u4ece\u6570\u636e\u6784\u5efa\u7684\u56fe\u4e2d\u63d0\u53d6\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6392\u5e8f\u3002\u6211\u4eec\u5c06\u7ed3\u6784\u7684\u8d85\u6307\u6570\u641c\u7d22\u7a7a\u95f4\u7f29\u51cf\u4e3a\u8f83\u5c0f\u7684\u8282\u70b9\u6392\u5e8f\u7a7a\u95f4\u3002\u6211\u4eec\u4f7f\u7528\u4e00\u4e9b\u6807\u51c6\u7684\u57fa\u51c6\u6570\u636e\u96c6\u5bf9\u8be5\u7b97\u6cd5\u8fdb\u884c\u4e86\u8bc4\u4f30\uff0c\u5e76\u5c06\u7ed3\u679c\u4e0e\u4e00\u4e9b\u6700\u65b0\u7b97\u6cd5\u7684\u7ed3\u679c\u8fdb\u884c\u4e86\u6bd4\u8f83\u3002\u6700\u540e\uff0c\u6211\u4eec\u8bc1\u660e\u4e86\u8be5\u7b97\u6cd5\u4e0e\u4e00\u4e9b\u7ed3\u6784\u5b66\u4e60\u7b97\u6cd5\u662f\u6709\u7ade\u4e89\u529b\u7684\u3002 intro \u4eba\u5de5\u667a\u80fd BN \u4e09\u79cd\u7ed3\u6784\u5b66\u4e60\u65b9\u6cd5 \u63d0\u51fa\u4e86\u4e00\u79cd\u6539\u8fdb\u7684K2\u7b97\u6cd5\uff0c\u5148\u4ece\u6570\u636e\u4e2d\u6784\u5efa\u4e00\u4e2astrongly connected components\uff0c\u4f7f\u7528\u8fd9\u4e2aSCC\u6765\u751f\u6210\u8282\u70b9\u7684\u521d\u59cb\u987a\u5e8f\uff0c\u8fd9\u4e2a\u987a\u5e8f\u7528\u4e8eK2 \u7b97\u6cd5\u7684\u7ed3\u6784\u5b66\u4e60\u3002 structure learning BIC score $$ B I C(B \\mid \\mathcal{D}) =\\sum_{i=1}^{n} \\sum_{j=1}^{q_{i}} \\sum_{k=1}^{r_{i}} N_{i j k} \\log {2}\\left(\\frac{N {i j k}}{N_{i j}}\\right) \\ -\\frac{\\log {2} N}{2} \\sum {i=1}^{n} q_{i}\\left(r_{i}-1\\right) $$ \u5206\u89e3\uff1a $$ \\operatorname{score}(G)=\\sum_{i=1}^{n} \\operatorname{score}\\left(X_{i} \\mid \\Pi_{i}\\right) $$ ordering-based search algorithm \u7ed9\u5b9aordering $\\prec$ \uff0c\u6765\u627e\u5230\u6700\u4f73\u7684\u7f51\u7edc\u7ed3\u6784\uff0c\u8fd9\u4e0d\u662f\u4e00\u4e2aNP\u96be\u95ee\u9898\uff0c\u5982\u679c\u8bf4\u5c06 \u5165\u5ea6\uff0c\u8bbe\u5b9a\u4e00\u4e2a\u4e0a\u754c$k$\uff0c\u90a3\u4e48\u7b97\u6cd5\u590d\u6742\u5ea6\u4e3a\uff1a$O\\left(n^{k+1}\\right)$ search on space of ordering Teyssier\u548cKoller\uff082005\uff09\u7ed9\u51fa\u4e86\u4e00\u79cd\u89e3\u51b3\u6392\u5e8f\u7a7a\u95f4\u641c\u7d22\u7684\u7b80\u5355\u65b9\u6cd5\u3002\u641c\u7d22\u662f\u901a\u8fc7\u8003\u8651\u6240\u6709(\ud835\udc5b \u2212 1\uff09 \u5f53\u524d\u6392\u5e8f\u7684\u5019\u9009\u7ee7\u4efb\u8005\u3002\u7136\u540e\uff0c\u8be5\u7b97\u6cd5\u6bd4\u8f83\u901a\u8fc7\u8fd9\u4e9b\u4ea4\u6362\u83b7\u5f97\u7684\u540e\u7eed\u6392\u5e8f\u7684\u589e\u91cf\u5206\u6570\uff0c\u5373\u5b83\u4eec\u7684\u5206\u6570\u4e0e\u5f53\u524d\u5206\u6570\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u5e76\u53d6\u7ed9\u51fa\u6700\u9ad8\u589e\u91cf\u5206\u6570\u7684\u90a3\u4e00\u4e2a\u3002\u7981\u5fcc\u5217\u8868\u7528\u4e8e\u9632\u6b62\u7b97\u6cd5\u53cd\u8f6c\u641c\u7d22\u4e2d\u6267\u884c\u7684\u4ea4\u6362\u3002\u7ee7\u7eed\u8be5\u8fc7\u7a0b\uff0c\u76f4\u5230\u8fbe\u5230\u5c40\u90e8\u6700\u5927\u503c\u3002\u6b64\u641c\u7d22\u4f7f\u7528\u8d2a\u5a6a\u722c\u5c71\u3001\u968f\u673a\u91cd\u542f\u548c\u7981\u5fcc\u5217\u8868\u6765\u6267\u884c\u3002 \u5bf9\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u7684ordering $\\prec$\uff0c$X_i$ \u7684possible parent set\u53ef\u4ee5\u5199\u4e3a\uff1a $$ \\mathcal{V} {i,\\prec}=\\left{U: U \\prec X {i},|U| \\leq k\\right} $$ U \u662f\u5728ordering \u4e2d\u5148\u4e8e $X_i$\u7684\uff0c\u5e76\u4e14U \u7684\u4e2a\u6570\u4e0d\u8d85\u8fc7 k \u5bf9\u4e8e$X_i$\uff0c\u6700\u4f73 parent set \u5b9a\u4e49\u4e3a\uff1a $$ \\Pi_{i,\\prec}=\\arg \\max {U \\in \\mathcal{V} {i,\\prec}} \\operatorname{score}\\left(X_{i}, U\\right) $$ \u5bf9\u4e8e\u4e00\u4e2a\u987a\u5e8f\u6765\u8bf4\uff0c\u5f97\u5230\u6240\u6709\u7684 possible parent set \u7684\u590d\u6742\u5ea6\u4e3a\uff1a$O\\left(n^{k+1}\\right)$ search using a given ordering of variables Behjati and Beigy (2018) have proposed a new hybrid algorithm that is based on a ordering learned from data. K2 algorithm \u8f93\u5165\u4e00\u4e2aordering \u548c\u4e00\u4e2a\u5165\u5ea6\u7684\u4e0a\u754c k \u7b2c\u4e00\u6b65\uff0c\u521d\u59cb\u5316\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $X_i$ , \u5019\u9009 parents $\\Pi_{i}$ \u8bbe\u4e3a\u7a7a\u96c6\u3002 \u7b2c\u4e8c\u6b65\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u5728$\\Pi_{i}$\u4e2d\u4f9d\u6b21\u6dfb\u52a0\u8282\u70b9\uff0c\u6307\u5bfc\u4ee5\u4e0b\u60c5\u51b5\u505c\u6b62\uff1a \u8282\u70b9\u6570\u5230\u8fbek \u6ca1\u6709\u8282\u70b9\u53ef\u4ee5\u6dfb\u52a0 \u589e\u52a0\u8282\u70b9\u65e0\u6cd5\u63d0\u9ad8\u8bc4\u5206 K2\u7b97\u6cd5\u7684\u6548\u7387\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8eordering\u3002 learning structure via learning the order of nodes \u6982\u5ff5\uff1a SCC strongly connected components SCC graph topological sorting strongly connected\uff1a\u6709\u5411\u56fe\u4e2d\uff0c\u6709\u4e00\u6761\u8def\u53ef\u4ee5\u4ece\u4efb\u610f\u8282\u70b9\u5230\u8fbe\u4efb\u610f\u8282\u70b9\uff0c\u5219\u8fd9\u4e2a\u56fe\u4e3a strongly connected\u3002 \u4e00\u4e2a\u6709\u5411\u56fe\u53ef\u4ee5\u5206\u89e3\u6210\u591a\u4e2astrongly connected component \u4e00\u4e2a\u6709\u5411\u56fe\u662f\u65e0\u73af\u7684 <--> \u6709\u5411\u65e0\u73af\u56fe\u6ca1\u6709\u5927\u4e8e\u4e00\u4e2a\u8282\u70b9\u7684strongly connected component \u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u53ef\u4ee5\u7b80\u5316\u4e3a\u4e00\u4e2a$G^{SCC}$\uff08\u89c1\u56fec\uff09 \u7b97\u6cd5\u8fc7\u7a0b\uff1a \u5bf9\u6bcf\u4e2a\u7ed3\u70b9\u8ba1\u7b97 best parent set \u751f\u6210initial graph\uff0c\u4e0d\u8003\u8651\u65e0\u73af\u6027\u3002 \u5c06\u4e0a\u56fe\u5206\u89e3\u4e3a$G^{SCC}$ \u5bf9\u6bcf\u4e2a\u7ed3\u70b9\uff0c\u9012\u5f52\u5730\u8fdb\u884c\u4e0a\u9762\u7684\u64cd\u4f5c\u3002\u6bd4\u5982\uff1aLTE\u3002\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u6700\u540e\u7684\u987a\u5e8f\u3002 \u8bc4\u4ef7 \u4f7f\u7528\u4e8612\u4e2a\u57fa\u51c6\u6570\u636e\u96c6\uff1a \u654f\u611f\u6027\u5206\u6790\uff1a sample size\uff1a100\uff0c500\uff0c1000\uff0c2000\uff0c4000\uff0c6000\uff0c8000\uff0c10000\uff0c15000\uff0c100000 \u8d85\u53c2\u6570k\u7684\u53d6\u503c \u4e0e\u5176\u4ed6\u7b97\u6cd5\u5bf9\u6bd4\uff1a \u6bd4\u4e86\u4e24\u4e2a\u65b9\u9762\uff0c\u65f6\u95f4\u548c\u8bc4\u5206","title":"\u300aImproved K2 algorithm for Bayesian network structure learning\u300b\u9605\u8bfb\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AImproved%20K2%20algorithm%20for%20Bayesian%20network%20structure%20learning%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#improved-k2-algorithm-for-bayesian-network-structure-learning","text":"","title":"\u300aImproved K2 algorithm for Bayesian network structure learning\u300b\u9605\u8bfb\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AImproved%20K2%20algorithm%20for%20Bayesian%20network%20structure%20learning%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#abstract","text":"K2\u7b97\u6cd5\u662f\u4e00\u4e2a\u57fa\u4e8e\u8bc4\u5206\u7684\u7b97\u6cd5\uff0c\u5c06\u968f\u673a\u8f93\u5165\u7684\u53d8\u91cf\u987a\u5e8f\u4f5c\u4e3a\u8f93\u5165\uff0c\u5b83\u7684\u6548\u7387\u53d7\u53d8\u91cf\u987a\u5e8f\u7684\u5f71\u54cd\u3002\u4e0d\u6b63\u786e\u7684\u53d8\u91cf\u987a\u5e8f\u4f1a\u5bfc\u81f4\u9519\u8bef\u7684\u7f51\u7edc\u7ed3\u6784\u3002 \u5bf9\u4e8eK2\u7b97\u6cd5\uff0c\u4e3b\u8981\u6311\u6218\u662f\uff1a\u4ece\u6570\u636e\u96c6\u4e2d\u83b7\u5f97\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u987a\u5e8f\u3002 \u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u5feb\u901f\u800c\u76f4\u63a5\u7684\u7b97\u6cd5\u3002\u8be5\u7b97\u6cd5\u57fa\u4e8e\u4ece\u6570\u636e\u6784\u5efa\u7684\u56fe\u4e2d\u63d0\u53d6\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6392\u5e8f\u3002\u6211\u4eec\u5c06\u7ed3\u6784\u7684\u8d85\u6307\u6570\u641c\u7d22\u7a7a\u95f4\u7f29\u51cf\u4e3a\u8f83\u5c0f\u7684\u8282\u70b9\u6392\u5e8f\u7a7a\u95f4\u3002\u6211\u4eec\u4f7f\u7528\u4e00\u4e9b\u6807\u51c6\u7684\u57fa\u51c6\u6570\u636e\u96c6\u5bf9\u8be5\u7b97\u6cd5\u8fdb\u884c\u4e86\u8bc4\u4f30\uff0c\u5e76\u5c06\u7ed3\u679c\u4e0e\u4e00\u4e9b\u6700\u65b0\u7b97\u6cd5\u7684\u7ed3\u679c\u8fdb\u884c\u4e86\u6bd4\u8f83\u3002\u6700\u540e\uff0c\u6211\u4eec\u8bc1\u660e\u4e86\u8be5\u7b97\u6cd5\u4e0e\u4e00\u4e9b\u7ed3\u6784\u5b66\u4e60\u7b97\u6cd5\u662f\u6709\u7ade\u4e89\u529b\u7684\u3002","title":"abstract"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AImproved%20K2%20algorithm%20for%20Bayesian%20network%20structure%20learning%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#intro","text":"\u4eba\u5de5\u667a\u80fd BN \u4e09\u79cd\u7ed3\u6784\u5b66\u4e60\u65b9\u6cd5 \u63d0\u51fa\u4e86\u4e00\u79cd\u6539\u8fdb\u7684K2\u7b97\u6cd5\uff0c\u5148\u4ece\u6570\u636e\u4e2d\u6784\u5efa\u4e00\u4e2astrongly connected components\uff0c\u4f7f\u7528\u8fd9\u4e2aSCC\u6765\u751f\u6210\u8282\u70b9\u7684\u521d\u59cb\u987a\u5e8f\uff0c\u8fd9\u4e2a\u987a\u5e8f\u7528\u4e8eK2 \u7b97\u6cd5\u7684\u7ed3\u6784\u5b66\u4e60\u3002","title":"intro"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AImproved%20K2%20algorithm%20for%20Bayesian%20network%20structure%20learning%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#structure-learning","text":"BIC score $$ B I C(B \\mid \\mathcal{D}) =\\sum_{i=1}^{n} \\sum_{j=1}^{q_{i}} \\sum_{k=1}^{r_{i}} N_{i j k} \\log {2}\\left(\\frac{N {i j k}}{N_{i j}}\\right) \\ -\\frac{\\log {2} N}{2} \\sum {i=1}^{n} q_{i}\\left(r_{i}-1\\right) $$ \u5206\u89e3\uff1a $$ \\operatorname{score}(G)=\\sum_{i=1}^{n} \\operatorname{score}\\left(X_{i} \\mid \\Pi_{i}\\right) $$","title":"structure learning"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AImproved%20K2%20algorithm%20for%20Bayesian%20network%20structure%20learning%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#ordering-based-search-algorithm","text":"\u7ed9\u5b9aordering $\\prec$ \uff0c\u6765\u627e\u5230\u6700\u4f73\u7684\u7f51\u7edc\u7ed3\u6784\uff0c\u8fd9\u4e0d\u662f\u4e00\u4e2aNP\u96be\u95ee\u9898\uff0c\u5982\u679c\u8bf4\u5c06 \u5165\u5ea6\uff0c\u8bbe\u5b9a\u4e00\u4e2a\u4e0a\u754c$k$\uff0c\u90a3\u4e48\u7b97\u6cd5\u590d\u6742\u5ea6\u4e3a\uff1a$O\\left(n^{k+1}\\right)$","title":"ordering-based search algorithm"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AImproved%20K2%20algorithm%20for%20Bayesian%20network%20structure%20learning%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#search-on-space-of-ordering","text":"Teyssier\u548cKoller\uff082005\uff09\u7ed9\u51fa\u4e86\u4e00\u79cd\u89e3\u51b3\u6392\u5e8f\u7a7a\u95f4\u641c\u7d22\u7684\u7b80\u5355\u65b9\u6cd5\u3002\u641c\u7d22\u662f\u901a\u8fc7\u8003\u8651\u6240\u6709(\ud835\udc5b \u2212 1\uff09 \u5f53\u524d\u6392\u5e8f\u7684\u5019\u9009\u7ee7\u4efb\u8005\u3002\u7136\u540e\uff0c\u8be5\u7b97\u6cd5\u6bd4\u8f83\u901a\u8fc7\u8fd9\u4e9b\u4ea4\u6362\u83b7\u5f97\u7684\u540e\u7eed\u6392\u5e8f\u7684\u589e\u91cf\u5206\u6570\uff0c\u5373\u5b83\u4eec\u7684\u5206\u6570\u4e0e\u5f53\u524d\u5206\u6570\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u5e76\u53d6\u7ed9\u51fa\u6700\u9ad8\u589e\u91cf\u5206\u6570\u7684\u90a3\u4e00\u4e2a\u3002\u7981\u5fcc\u5217\u8868\u7528\u4e8e\u9632\u6b62\u7b97\u6cd5\u53cd\u8f6c\u641c\u7d22\u4e2d\u6267\u884c\u7684\u4ea4\u6362\u3002\u7ee7\u7eed\u8be5\u8fc7\u7a0b\uff0c\u76f4\u5230\u8fbe\u5230\u5c40\u90e8\u6700\u5927\u503c\u3002\u6b64\u641c\u7d22\u4f7f\u7528\u8d2a\u5a6a\u722c\u5c71\u3001\u968f\u673a\u91cd\u542f\u548c\u7981\u5fcc\u5217\u8868\u6765\u6267\u884c\u3002 \u5bf9\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u7684ordering $\\prec$\uff0c$X_i$ \u7684possible parent set\u53ef\u4ee5\u5199\u4e3a\uff1a $$ \\mathcal{V} {i,\\prec}=\\left{U: U \\prec X {i},|U| \\leq k\\right} $$ U \u662f\u5728ordering \u4e2d\u5148\u4e8e $X_i$\u7684\uff0c\u5e76\u4e14U \u7684\u4e2a\u6570\u4e0d\u8d85\u8fc7 k \u5bf9\u4e8e$X_i$\uff0c\u6700\u4f73 parent set \u5b9a\u4e49\u4e3a\uff1a $$ \\Pi_{i,\\prec}=\\arg \\max {U \\in \\mathcal{V} {i,\\prec}} \\operatorname{score}\\left(X_{i}, U\\right) $$ \u5bf9\u4e8e\u4e00\u4e2a\u987a\u5e8f\u6765\u8bf4\uff0c\u5f97\u5230\u6240\u6709\u7684 possible parent set \u7684\u590d\u6742\u5ea6\u4e3a\uff1a$O\\left(n^{k+1}\\right)$","title":"search on space of ordering"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AImproved%20K2%20algorithm%20for%20Bayesian%20network%20structure%20learning%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#search-using-a-given-ordering-of-variables","text":"Behjati and Beigy (2018) have proposed a new hybrid algorithm that is based on a ordering learned from data.","title":"search using a given ordering of variables"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AImproved%20K2%20algorithm%20for%20Bayesian%20network%20structure%20learning%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#k2-algorithm","text":"\u8f93\u5165\u4e00\u4e2aordering \u548c\u4e00\u4e2a\u5165\u5ea6\u7684\u4e0a\u754c k \u7b2c\u4e00\u6b65\uff0c\u521d\u59cb\u5316\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $X_i$ , \u5019\u9009 parents $\\Pi_{i}$ \u8bbe\u4e3a\u7a7a\u96c6\u3002 \u7b2c\u4e8c\u6b65\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u5728$\\Pi_{i}$\u4e2d\u4f9d\u6b21\u6dfb\u52a0\u8282\u70b9\uff0c\u6307\u5bfc\u4ee5\u4e0b\u60c5\u51b5\u505c\u6b62\uff1a \u8282\u70b9\u6570\u5230\u8fbek \u6ca1\u6709\u8282\u70b9\u53ef\u4ee5\u6dfb\u52a0 \u589e\u52a0\u8282\u70b9\u65e0\u6cd5\u63d0\u9ad8\u8bc4\u5206 K2\u7b97\u6cd5\u7684\u6548\u7387\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8eordering\u3002","title":"K2 algorithm"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AImproved%20K2%20algorithm%20for%20Bayesian%20network%20structure%20learning%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#learning-structure-via-learning-the-order-of-nodes","text":"\u6982\u5ff5\uff1a SCC strongly connected components SCC graph topological sorting strongly connected\uff1a\u6709\u5411\u56fe\u4e2d\uff0c\u6709\u4e00\u6761\u8def\u53ef\u4ee5\u4ece\u4efb\u610f\u8282\u70b9\u5230\u8fbe\u4efb\u610f\u8282\u70b9\uff0c\u5219\u8fd9\u4e2a\u56fe\u4e3a strongly connected\u3002 \u4e00\u4e2a\u6709\u5411\u56fe\u53ef\u4ee5\u5206\u89e3\u6210\u591a\u4e2astrongly connected component \u4e00\u4e2a\u6709\u5411\u56fe\u662f\u65e0\u73af\u7684 <--> \u6709\u5411\u65e0\u73af\u56fe\u6ca1\u6709\u5927\u4e8e\u4e00\u4e2a\u8282\u70b9\u7684strongly connected component \u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u53ef\u4ee5\u7b80\u5316\u4e3a\u4e00\u4e2a$G^{SCC}$\uff08\u89c1\u56fec\uff09","title":"learning structure via learning the order of nodes"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AImproved%20K2%20algorithm%20for%20Bayesian%20network%20structure%20learning%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_1","text":"\u5bf9\u6bcf\u4e2a\u7ed3\u70b9\u8ba1\u7b97 best parent set \u751f\u6210initial graph\uff0c\u4e0d\u8003\u8651\u65e0\u73af\u6027\u3002 \u5c06\u4e0a\u56fe\u5206\u89e3\u4e3a$G^{SCC}$ \u5bf9\u6bcf\u4e2a\u7ed3\u70b9\uff0c\u9012\u5f52\u5730\u8fdb\u884c\u4e0a\u9762\u7684\u64cd\u4f5c\u3002\u6bd4\u5982\uff1aLTE\u3002\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u6700\u540e\u7684\u987a\u5e8f\u3002","title":"\u7b97\u6cd5\u8fc7\u7a0b\uff1a"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AImproved%20K2%20algorithm%20for%20Bayesian%20network%20structure%20learning%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_2","text":"\u4f7f\u7528\u4e8612\u4e2a\u57fa\u51c6\u6570\u636e\u96c6\uff1a \u654f\u611f\u6027\u5206\u6790\uff1a sample size\uff1a100\uff0c500\uff0c1000\uff0c2000\uff0c4000\uff0c6000\uff0c8000\uff0c10000\uff0c15000\uff0c100000 \u8d85\u53c2\u6570k\u7684\u53d6\u503c \u4e0e\u5176\u4ed6\u7b97\u6cd5\u5bf9\u6bd4\uff1a \u6bd4\u4e86\u4e24\u4e2a\u65b9\u9762\uff0c\u65f6\u95f4\u548c\u8bc4\u5206","title":"\u8bc4\u4ef7"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ALearning%20to%20Optimize%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/","text":"\u300aLearning to Optimize\u300b\u9605\u8bfb\u7b14\u8bb0 \u4e00\u7bc7\u9884\u5370\u672c\uff0c\u4f7f\u7528\u5f3a\u5316\u5b66\u4e60\u7684\u89c6\u89d2\u6765\u89e3\u51b3\u6700\u4f18\u5316\u95ee\u9898\u3002 abstract Algorithm design is a laborious process, need many attempts and validations. This paper proposes a method to learn a optimization algorithm from reinforcement perspective. introduction This paper focuses on the automating the design of unconstrained continuous optimization algorithm. There are extensive work over the unconstrained continuous optimization algorithm, like gradient descent, momentum conjugate gradient and L-BFGS. This paper formulates the problem as a reinforcement learning problem, regarding optimization algorithm as a policy. Method Preliminaries Learner is given a choice of actions to take in each time step. A reinforcement learning problem is typically formally represented as an Markov decision process. $$ \\left(\\mathcal{S}, \\mathcal{A}, p_{0}, p, c, \\gamma\\right) $$ $\\mathcal{S}$ is the set of states A is the action space $p_0$ is the probability of initial states p is the transition probability density c is a function maps state to cost $ \\gamma$ is the discount factor goal is to find a stochastic policy $\\pi$ to get a minimal expected cumulative cost. $$ \\pi^{ }=\\arg \\min {\\pi} \\mathbb{E} {s_{0}, a_{0}, s_{1}, \\ldots, s_{T}}\\left[\\sum_{t=0}^{T} \\gamma^{t} c\\left(s_{t}\\right)\\right] $$ this problem is known as policy search problem *. if we known the p (transition probability density), it can be formulated as a dynamic planning problem. However, we usually do not know the p in practice. Guided policy search is a method for performing policy search in continuous state and action space under possibly unknown dynamics. Formulation a general structure of an algorithm. starting from a random location, use $\\pi$ to select a step vector, move the step iteratively until meeting stopping conditions. Different optimization algorithm differ in the choice of $\\pi$. Some $\\pi$ depends on the gradient of the objective function, e.g. $$ \\pi\\left(f,\\left{x^{(0)}, \\ldots, x^{(i-1)}\\right}\\right)=-\\gamma \\nabla f\\left(x^{(i-1)}\\right) $$ therefore, if we can learn a $\\pi$, we will be able to devise an algorithm. $\\pi$ takes objective values and gradients as inputs. Formulate the optimization algorithm into MDP: state is the current location, action is the step to update, cost is designed by our to penalize the policies that converge slowly and minimize the objective function. implementation current location, previous gradients, previous improvements in objective value are stored for policy. state space: normally H is 25, thus on state space has 1+25+25 vectors. A small network is used to model the policy, it consist of one single hidden layer with 50 units. Experiments training set: randomly generated 100 objective function. The margin of victory is positive when the current algorithm is better than all other algorithms and negative otherwise Guided Policy Search The paper regards this method as a well-known method. \u5728\u6b64\u53ea\u4ecb\u7ecd \u7b56\u7565\u641c\u7d22 \u7684\u57fa\u7840\u90e8\u5206\uff0c\u5e76\u4e0d\u662fGuided Police Search\u3002 \u5047\u8bbe$\\tau$ \u662f\u4e00\u7ec4\u72b6\u6001-\u884c\u4e3a\u5e8f\u5217\uff1a$s_0,u_0,...,s_H,u_H$ $R(\\tau)=\\sum_{t=0}^{H} R\\left(s_{t}, u_{t}\\right)$ \u662f\u8be5\u884c\u4e3a\u72b6\u6001\u5e8f\u5217\u7684\u56de\u62a5 $P(\\tau ; \\theta)$ \u662f\u8be5\u5e8f\u5217\u51fa\u73b0\u7684\u6982\u7387 \u76ee\u6807\u51fd\u6570\uff1a \u4e3a\u4e86\u4f7f\u76ee\u6807\u51fd\u6570\u8fbe\u5230\u6700\u5927\uff0c\u91c7\u7528\u7b56\u7565\u68af\u5ea6\u6cd5\uff1a \u8fd9\u53ef\u4ee5\u91cd\u65b0\u5199\u4e3a$E(\\nabla_{\\theta} \\log P(\\tau ; \\theta) R(\\tau))$ ,\u4f7f\u7528\u8499\u7279\u5361\u6d1b\u91c7\u6837 \u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u5e73\u5747\u503c\u5bf9\u671f\u671b\u8fdb\u884c\u4e00\u4e2a\u8fd1\u4f3c\uff1a \u5bf9\u4e8e\u5f53\u524d$\\theta$, \u91c7\u6837m\u6761\u5e8f\u5217\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230 $\\log P(\\tau ; \\theta)$ ,\u4ee5\u6b64\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa\u68af\u5ea6\uff0c\u8fdb\u884c\u4f18\u5316\u3002","title":"\u300aLearning to Optimize\u300b\u9605\u8bfb\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ALearning%20to%20Optimize%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#learning-to-optimize","text":"\u4e00\u7bc7\u9884\u5370\u672c\uff0c\u4f7f\u7528\u5f3a\u5316\u5b66\u4e60\u7684\u89c6\u89d2\u6765\u89e3\u51b3\u6700\u4f18\u5316\u95ee\u9898\u3002","title":"\u300aLearning to Optimize\u300b\u9605\u8bfb\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ALearning%20to%20Optimize%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#abstract","text":"Algorithm design is a laborious process, need many attempts and validations. This paper proposes a method to learn a optimization algorithm from reinforcement perspective.","title":"abstract"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ALearning%20to%20Optimize%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#introduction","text":"This paper focuses on the automating the design of unconstrained continuous optimization algorithm. There are extensive work over the unconstrained continuous optimization algorithm, like gradient descent, momentum conjugate gradient and L-BFGS. This paper formulates the problem as a reinforcement learning problem, regarding optimization algorithm as a policy.","title":"introduction"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ALearning%20to%20Optimize%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#method","text":"","title":"Method"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ALearning%20to%20Optimize%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#preliminaries","text":"Learner is given a choice of actions to take in each time step. A reinforcement learning problem is typically formally represented as an Markov decision process. $$ \\left(\\mathcal{S}, \\mathcal{A}, p_{0}, p, c, \\gamma\\right) $$ $\\mathcal{S}$ is the set of states A is the action space $p_0$ is the probability of initial states p is the transition probability density c is a function maps state to cost $ \\gamma$ is the discount factor goal is to find a stochastic policy $\\pi$ to get a minimal expected cumulative cost. $$ \\pi^{ }=\\arg \\min {\\pi} \\mathbb{E} {s_{0}, a_{0}, s_{1}, \\ldots, s_{T}}\\left[\\sum_{t=0}^{T} \\gamma^{t} c\\left(s_{t}\\right)\\right] $$ this problem is known as policy search problem *. if we known the p (transition probability density), it can be formulated as a dynamic planning problem. However, we usually do not know the p in practice. Guided policy search is a method for performing policy search in continuous state and action space under possibly unknown dynamics.","title":"Preliminaries"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ALearning%20to%20Optimize%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#formulation","text":"a general structure of an algorithm. starting from a random location, use $\\pi$ to select a step vector, move the step iteratively until meeting stopping conditions. Different optimization algorithm differ in the choice of $\\pi$. Some $\\pi$ depends on the gradient of the objective function, e.g. $$ \\pi\\left(f,\\left{x^{(0)}, \\ldots, x^{(i-1)}\\right}\\right)=-\\gamma \\nabla f\\left(x^{(i-1)}\\right) $$ therefore, if we can learn a $\\pi$, we will be able to devise an algorithm. $\\pi$ takes objective values and gradients as inputs. Formulate the optimization algorithm into MDP: state is the current location, action is the step to update, cost is designed by our to penalize the policies that converge slowly and minimize the objective function.","title":"Formulation"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ALearning%20to%20Optimize%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#implementation","text":"current location, previous gradients, previous improvements in objective value are stored for policy. state space: normally H is 25, thus on state space has 1+25+25 vectors. A small network is used to model the policy, it consist of one single hidden layer with 50 units.","title":"implementation"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ALearning%20to%20Optimize%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#experiments","text":"training set: randomly generated 100 objective function. The margin of victory is positive when the current algorithm is better than all other algorithms and negative otherwise","title":"Experiments"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ALearning%20to%20Optimize%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#guided-policy-search","text":"The paper regards this method as a well-known method. \u5728\u6b64\u53ea\u4ecb\u7ecd \u7b56\u7565\u641c\u7d22 \u7684\u57fa\u7840\u90e8\u5206\uff0c\u5e76\u4e0d\u662fGuided Police Search\u3002 \u5047\u8bbe$\\tau$ \u662f\u4e00\u7ec4\u72b6\u6001-\u884c\u4e3a\u5e8f\u5217\uff1a$s_0,u_0,...,s_H,u_H$ $R(\\tau)=\\sum_{t=0}^{H} R\\left(s_{t}, u_{t}\\right)$ \u662f\u8be5\u884c\u4e3a\u72b6\u6001\u5e8f\u5217\u7684\u56de\u62a5 $P(\\tau ; \\theta)$ \u662f\u8be5\u5e8f\u5217\u51fa\u73b0\u7684\u6982\u7387 \u76ee\u6807\u51fd\u6570\uff1a \u4e3a\u4e86\u4f7f\u76ee\u6807\u51fd\u6570\u8fbe\u5230\u6700\u5927\uff0c\u91c7\u7528\u7b56\u7565\u68af\u5ea6\u6cd5\uff1a \u8fd9\u53ef\u4ee5\u91cd\u65b0\u5199\u4e3a$E(\\nabla_{\\theta} \\log P(\\tau ; \\theta) R(\\tau))$ ,\u4f7f\u7528\u8499\u7279\u5361\u6d1b\u91c7\u6837 \u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u5e73\u5747\u503c\u5bf9\u671f\u671b\u8fdb\u884c\u4e00\u4e2a\u8fd1\u4f3c\uff1a \u5bf9\u4e8e\u5f53\u524d$\\theta$, \u91c7\u6837m\u6761\u5e8f\u5217\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230 $\\log P(\\tau ; \\theta)$ ,\u4ee5\u6b64\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa\u68af\u5ea6\uff0c\u8fdb\u884c\u4f18\u5316\u3002","title":"Guided Policy Search"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ANEURAL%20COMBINATORIAL%20OPTIMIZATION%20WITH%20REINFORCEMENT%20LEARNING%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/","text":"\u300aNEURAL COMBINATORIAL OPTIMIZATION WITH REINFORCEMENT LEARNING\u300b\u8bfb\u4e66\u7b14\u8bb0 \u8c37\u6b4c\u5927\u8111\u51fa\u54c1\u3002 https://www.bilibili.com/video/av66411702/ https://www.bilibili.com/video/BV1FV41177dR?from=search&seid=437844097357445861&spm_id_from=333.337.0.0 \u89c6\u9891\u89e3\u8bfb combinatorial optimization \u795e\u7ecf\u7f51\u7edc\uff1a\u8f93\u5165problem\uff0c\u8f93\u51fasolution\u3002 Euclidean space \u6b27\u51e0\u91cc\u5f97\u7a7a\u95f4\u3002 abstract \u672c\u6587\u63d0\u51fa\u4e86\u4e00\u4e2a\u6846\u67b6\u7528\u4e8e\u89e3\u51b3\u7ec4\u5408\u4f18\u5316\u95ee\u9898\uff0c\u4f7f\u7528NN\u548cRL\u3002 \u672c\u6587\u4e13\u6ce8\u4e8eTSP\u95ee\u9898\uff0c\u8bad\u7ec3\u4e86\u4e00\u4e2aRNN\uff0c\u7ed9\u5b9a\u57ce\u5e02\u7684\u5750\u6807\uff0c\u9884\u6d4b\u6bcf\u4e2acity permutations \u7684\u6982\u7387\u3002 \u7528negative tour length \u4e3a\u5956\u52b1\uff0c\u4f7f\u7528policy gradient method\u4f18\u5316\u53c2\u6570 intro \u7ec4\u5408\u4f18\u5316\u662f\u8ba1\u7b97\u673a\u9886\u57df\u7684\u57fa\u7840\u95ee\u9898\uff0c\u7ecf\u5178\u6848\u4f8b\uff1aTSP\u3002 The travelling salesman problem (also called the traveling salesperson problem [ 1] or TSP ) asks the following question: \"Given a list of cities and the distances between each pair of cities, what is the shortest possible route that visits each city exactly once and returns to the origin city?\" It is an NP-hard problem in combinatorial optimization , important in theoretical computer science and operations research . \u5bfb\u627e\u6700\u4f18\u7684TSP\u8def\u5f84\u662fNP\u96be\uff0c\u5373\u4f7f\u57282d\u7a7a\u95f4\u5185\u3002 \u6211\u4eec\u4f7f\u7528RL\u6765\u89e3\u51b3\u7ec4\u5408\u4f18\u5316\u95ee\u9898\uff0c\u4f5c\u4e3a\u5bf9\u6bd4\uff0c\u6211\u4eec\u4f7f\u7528\u5df2\u77e5\u6700\u4f18\u89e3\u7684\u76d1\u7763\u5b66\u4e60\u65b9\u6cd5\u4e0e\u672c\u65b9\u6cd5\u8fdb\u884c\u5bf9\u6bd4\u3002 \u57fa\u4e8epolicy gradient\uff0c\u63d0\u51fa\u4e24\u79cd\u65b9\u6cd5\uff1a RL pretrain\uff0c\u4f7f\u7528\u4e00\u4e2a\u8bad\u7ec3\u96c6\u8bad\u7ec3RNN that parameterizes a stochastic policy \uff0c\u4f7f\u7528 expected reward\u4f5c\u4e3a\u76ee\u6807\u3002\u6d4b\u8bd5\u671f\u95f4\uff0cpolicy\u7684\u53c2\u6570\u56fa\u5b9a\uff0c\u5e76\u4e14\u6267\u884c\u63a8\u65ad\uff0c\u901a\u8fc7\u8d2a\u5a6a\u7684\u89e3\u7801\u6216\u91c7\u6837\u3002 active search\uff0c\u6ca1\u6709pretrain\u3002\u9996\u5148\u7ed9\u4e00\u4e2a\u968f\u673a\u7684policy\u3002\u5728\u4e00\u4e2a\u6d4b\u8bd5\u6848\u4f8b\u4e0a\u53cd\u590d\u8fed\u4ee3\uff0c\u4ee5\u66f4\u65b0\u8fd9\u4e2aRNN\u53c2\u6570\uff08\u4e5f\u5c31\u662fpolicy\uff09\uff0c\u4f7f\u7528\u671f\u671b\u5956\u52b1\uff0c\u540c\u65f6\u8ddf\u8e2a\u5f53\u524d\u641c\u7d22\u8fc7\u7a0b\u7684\u6700\u4f18\u89e3\u3002\uff08\u611f\u89c9\u6ca1\u8bf4\u6e05\u695a\uff09 \u539f\u6587\uff1aIt starts from a randompolicy and iteratively optimizes the RNN parameters on a single test instance, again using the expected reward objective, while keeping track of the best solution sampled during the search. We find that combining RL pretraining and active search works best in practice. previous work TODO neural network architecture for TSP \u95ee\u9898\u5efa\u6a21\uff1a $n$ \u4e2a\u57ce\u5e02 \u5730\u70b9\u5750\u6807\uff1a${x_i}^n_{i=1}$ $x_i \\in R^2$ \u5750\u6807\u662f2\u7ef4\u7684 \u5bf9\u4e8e$x_i$\u7684\u4e00\u4e2a\u6392\u5e8f\uff0c\u8bb0\u5f55\u4e3a $\\pi$\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u89e3\u3002 \u90a3\u4e48\uff0c\u65c5\u9014\u957f\u5ea6\u5199\u4e3a\uff1a $$ L(\\pi \\mid s)=\\left|\\mathbf{x} {\\pi(n)}-\\mathbf{x} {\\pi(1)}\\right| {2}+\\sum {\\pi(i)}^{n-1}\\left|\\mathbf{x} {\\pi(i+1)}\\right| {2} $$ policy function \u5199\u4e3a\uff1a $$ p(\\pi \\mid s)\\ p(\\pi \\mid s)=\\prod_{i=1}^{n} p(\\pi(i) \\mid \\pi(<i), s) $$ \u8fd9\u4e2a\u51fd\u6570\u7684\u8f93\u5165\u662f\u4e00\u4e2asequence\uff0c\u8f93\u51fa\u4e5f\u662f\u4e2asequence\u3002 \u4f46\u662f\uff0c\u8fd9\u6709\u4e24\u4e2a\u95ee\u9898\uff1a \u8bad\u7ec3\u5b8c\u4e86\u4ee5\u540e\uff0c\u9650\u5236\u4e86\u8f93\u5165n sequence2sequence\u6a21\u578b\u9700\u8981ground truth\u6765\u4f18\u5316\u53c2\u6570\u3002 \u672c\u6587\u5c31\u8981\u89e3\u51b3\u8fd9\u4e24\u4e2aissue\u3002 pointer network \u7ed3\u6784\u7ec6\u8282 pointer network \u5305\u542b\u4e86\u4e24\u4e2aRNN\uff0c\u4e00\u4e2a\u4e3aencoder\uff0c\u53e6\u4e00\u4e2a\u4e3adecoder\u3002\u5e76\u4e14\u90fd\u5305\u542b\u4e86LSTM\u3002 \u524d\u534a\u90e8\u5206\u7528RNN\uff08LSTM\uff09\u7ed3\u6784\uff0c\u5f97\u5230\u4e00\u4e2a\u4e0a\u4e0b\u6587\u5411\u91cf $ $ \u540e\u534a\u90e8\u5206\u4f7f\u7528pointer network\u6765\u89e3\u7801\uff0c\u5f97\u5230\u4e00\u4e2a\u6392\u5e8f\uff0c\u8fd9\u4e2a\u8f93\u51fa\u7684\u957f\u5ea6\u7531\u8f93\u5165\u7684\u957f\u5ea6\u51b3\u5b9a\u3002 https://github.com/keon/pointer-networks \u4f7f\u7528policy gradient\u8fdb\u884c\u4f18\u5316 2015\u5e74Vinyals\u7b49\u4eba\u4f7f\u7528\u7684\u662f\u76d1\u7763\u5b66\u4e60\u8fdb\u884c\u8bad\u7ec3pointer network\uff0c\u8fd9\u4e2a\u60c5\u51b5\u5728\u89e3\u51b3TSP\u95ee\u9898\u65f6\uff0c\u5e76\u4e0d\u9002\u7528\uff1a \u6a21\u578b\u7684\u8d28\u91cf\u5f88\u5927\u7a0b\u5ea6\u53d6\u51b3\u4e8elabel\u3002 \u5f88\u96be\u5f97\u5230\u9ad8\u8d28\u91cf\u7684label\uff0c\u5e76\u4e14infeasible for new problem statements\u3002 TSP\u66f4\u6ce8\u91cdcompetitive\u7684\u7ed3\u679c\uff0c\u800c\u5e76\u4e0d\u662f\u80fd\u591f\u62df\u5408\u91cd\u73b0\u5176\u4ed6\u7b97\u6cd5\u7684\u7ed3\u679c\u3002 \u4f7f\u7528\u5f3a\u5316\u5b66\u4e60\u6765\u4f18\u5316\u6307\u9488\u51fd\u6570\u7684\u53c2\u6570\uff08\u5b9e\u9645\u4e0a\u5c31\u662f\u8bad\u7ec3policy function\uff09 \u8bb0 pinter network\u7684\u53c2\u6570\u4e3a$\\theta$, \u8f93\u5165\u5750\u6807\u7684\u5e8f\u5217\u4e3a $s$ , \u76ee\u6807\u51fd\u6570\u5199\u4e3a\uff08\u5c06\u5176\u6700\u5c0f\u5316\uff09\uff1a $$ J(\\boldsymbol{\\theta} \\mid s)=\\mathbb{E} {\\pi \\sim p {\\theta}(. \\mid s)} L(\\pi \\mid s) $$ specify\uff1a $\\pi \\sim p_{\\theta}(. \\mid s)$ \u5373\u4f7f\u7528pointer network \u8ba1\u7b97\u51fa\u7684 solution\u7684\u6982\u7387\u5206\u5e03\uff1b$L(\\pi \\mid s)$ \u7ed9\u5b9as\uff0c\u8be5\u52a8\u4f5c\u7684loss\u6216cost\uff0c\u5168\u90e8\u76f8\u4e58\u6c42\u548c\u5219\u5f97\u5230\u671f\u671b\u3002 \u76ee\u6807\u51fd\u6570\u7ed9\u5b9a\u540e\uff0c\u9700\u8981\u76ee\u6807\u51fd\u6570\u5bf9\u53c2\u6570\u6c42\u5bfc\uff0c\u4ee5\u5f97\u5230\u68af\u5ea6\u4e0b\u964d\u7684\u65b9\u5411\uff1a $$ \\nabla_{\\theta} J(\\theta \\mid s)=\\mathbb{E} {\\pi \\sim p {\\theta}(. \\mid s)}\\left[(L(\\pi \\mid s)-b(s)) \\nabla_{\\theta} \\log p_{\\theta}(\\pi \\mid s)\\right] $$ \u5176\u4e2d$b(s)$\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u7ed9\u5b9a$s$\u65f6\uff0c\u4f30\u8ba1L\uff0c\u4ed6\u662f\u4e00\u4e2a\u4e0d\u51c6\u786e\u7684\u4f30\u8ba1\u3002 \u6839\u636e\u5927\u6570\u5b9a\u5f8b\uff0c\u6837\u672c\u5747\u503c \u4f9d\u6982\u7387\u6536\u655b \u4e8e\u671f\u671b\u503c\u3002 \u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u8499\u7279\u5361\u6d1b\u91c7\u6837\u8ba1\u7b97\u8fd9\u4e2a\u68af\u5ea6\uff1a \u91c7\u6837\uff1a $$ s_{1}, s_{2}, \\ldots, s_{B} \\sim \\mathcal{S}\\ \\pi_{i} \\sim p_{\\theta}\\left(. \\mid s_{i}\\right) $$ \u8fd1\u4f3c\u8ba1\u7b97\uff1a $$ \\nabla_{\\theta} J(\\theta) \\approx \\frac{1}{B} \\sum_{i=1}^{B}\\left(L\\left(\\pi_{i} \\mid s_{i}\\right)-b\\left(s_{i}\\right)\\right) \\nabla_{\\theta} \\log p_{\\theta}\\left(\\pi_{i} \\mid s_{i}\\right) $$ \u5bf9\u4e8e$b(s)$\u51fd\u6570\u7684\u9009\u62e9\uff0c\u4e00\u822c\u662f\u6700\u8fd1\u4e00\u6bb5\u65f6\u95f4\u5185\u83b7\u5f97reward\u7684\u6ed1\u52a8\u5e73\u5747\u503c\u3002\u4f46\u662f\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5e26\u53c2\u6570\u7684$b(s)$\u51fd\u6570\uff0c\u53ef\u4ee5\u63d0\u9ad8performance\u3002\u672c\u6587\u4f7f\u7528\u4e00\u4e2aauxiliary network\uff0c\u79f0\u4e3acritic\uff0c\u53c2\u6570\u8bb0\u5f55\u4e3a$\\theta_v$ \u8fd9\u4e2acritic\u7684\u4f5c\u7528\uff1a \u5bf9\u4e8e\u5f53\u524d\u7684$p_{\\theta}$ \u4ee5\u53ca $s$\uff0c\u4f30\u8ba1\u4e00\u4e2a \u671f\u671b\u7684 \u8def\u5f84\u957f\u5ea6\u3002 \u6240\u4ee5critic\u7684\u635f\u5931\u51fd\u6570\u5199\u4e3a\uff1a $$ \\mathcal{L}\\left(\\theta_{v}\\right)=\\frac{1}{B} \\sum_{i=1}^{B}\\left|b_{\\theta_{v}}\\left(s_{i}\\right)-L\\left(\\pi_{i} \\mid s_{i}\\right)\\right|_{2}^{2} $$ \u7efc\u4e0a\uff0cactor-critic training \u7b97\u6cd5\uff1a \u4e3a\u4e86\u65b9\u4fbf\u7406\u89e3\uff0c\u628aB\u770b\u62101\uff0c\u6240\u4ee5\u7b97\u6cd5\u6b65\u9aa4\u4e3a\uff1a t = 1 \u91c7\u6837\u62bd\u53d6\u4e00\u4e2as \u6839\u636epointer network(actor), \u5f97\u5230\u4e00\u4e2a $\\pi$ \u7b54\u6848 \u6839\u636ecritic\uff0c\u5f97\u5230\u4e00\u4e2a $b$ \u9884\u4f30\u8def\u5f84\u957f\u5ea6 \u6c42pointer network(actor)\u7684\u68af\u5ea6\uff0c \u6c42critic\u7684\u68af\u5ea6 \u66f4\u65b0pointer network(actor)\u7684\u53c2\u6570 \u66f4\u65b0critic\u7684\u53c2\u6570 \u4e0b\u4e00\u6b21\u8fed\u4ee3 obviously\uff0c\u521a\u5f00\u59cbactor\u548ccritic\u90fd\u662f\u4e0d\u51c6\u786e\u7684\uff0c\u4f46\u662f\u5728\u7b2c7\u6b65\u4e2d\uff0c\u7b2c\u4e00\u6b21\u66f4\u65b0\u4e86critic\u7684\u53c2\u6570\uff0c\u8fd9\u4e00\u6b21\u66f4\u65b0\u4f7f\u5f97critic\u51c6\u786e\u4e86\u4e00\u4e9b\uff0c\u7136\u540e\u518d\u7528\u5b83\u6765\u6307\u5bfcactor\u7684\u66f4\u65b0\u3002 \u62bd\u8c61\u7406\u89e3\uff0c\u4e00\u4e2a\u4f53\u64cd\u8fd0\u52a8\u5458\u548c\u4e00\u4e2a\u6559\u7ec3\uff0c\u4e24\u4eba\u90fd\u662f\u4e00\u65e0\u6240\u77e5\u3002 \u8fd0\u52a8\u5458\u8868\u6f14 \u6559\u7ec3\u6253\u5206 \u8fd0\u52a8\u5458\u6839\u636e\u6559\u7ec3\u6253\u5206\uff0c\u4fee\u6539\u52a8\u4f5c \u6559\u7ec3\u6839\u636eground truth\uff0c\u4fee\u6539\u6253\u5206\u7b56\u7565 \u7ee7\u7eed\u91cd\u590d\uff0c\u6700\u7ec8\u5f97\u5230\u4e86\u4e00\u4e2a\u4f18\u79c0\u8fd0\u52a8\u5458\u4ee5\u53ca\u4f18\u79c0\u7684\u88c1\u5224 ps: \u65e2\u7136ground truth \u5982\u6b64\u597d\u83b7\u5f97\uff0c\u4f55\u5fc5\u8fd8\u8981\u627e\u4e2a\u88c1\u5224\u5462\uff1f\u76f4\u63a5\u4f53\u64cd\u8fd0\u52a8\u5458\u81ea\u5df1\u770bground truth\u4fee\u6539\u52a8\u4f5c\u4e0d\u5c31\u597d\u4e86\u3002 critic\u673a\u5236\u9002\u7528\u4e8eground truth\u96be\u4ee5\u83b7\u5f97\u7684\u65f6\u5019\uff0c\u4f8b\u59825\u6b21\u8868\u6f14\u53ea\u80fd\u83b7\u5f97\u4e00\u6b21ground truth\u3002\u6216\u8005\u8bf4critic\u673a\u5236\u4e3a\u4e86\u907f\u514d\u6bcf\u6b21\u90fd\u53bb\u82b1\u8d39\u7b97\u529b\u8ba1\u7b97ground truth\uff0c\u800c\u91c7\u53d6\u7684\u4e00\u79cd\u52a0\u901f\u7b56\u7565","title":"\u300aNEURAL COMBINATORIAL OPTIMIZATION WITH REINFORCEMENT LEARNING\u300b\u8bfb\u4e66\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ANEURAL%20COMBINATORIAL%20OPTIMIZATION%20WITH%20REINFORCEMENT%20LEARNING%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#neural-combinatorial-optimization-with-reinforcement-learning","text":"\u8c37\u6b4c\u5927\u8111\u51fa\u54c1\u3002 https://www.bilibili.com/video/av66411702/ https://www.bilibili.com/video/BV1FV41177dR?from=search&seid=437844097357445861&spm_id_from=333.337.0.0","title":"\u300aNEURAL COMBINATORIAL OPTIMIZATION WITH REINFORCEMENT LEARNING\u300b\u8bfb\u4e66\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ANEURAL%20COMBINATORIAL%20OPTIMIZATION%20WITH%20REINFORCEMENT%20LEARNING%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_1","text":"combinatorial optimization \u795e\u7ecf\u7f51\u7edc\uff1a\u8f93\u5165problem\uff0c\u8f93\u51fasolution\u3002 Euclidean space \u6b27\u51e0\u91cc\u5f97\u7a7a\u95f4\u3002","title":"\u89c6\u9891\u89e3\u8bfb"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ANEURAL%20COMBINATORIAL%20OPTIMIZATION%20WITH%20REINFORCEMENT%20LEARNING%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#abstract","text":"\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u4e2a\u6846\u67b6\u7528\u4e8e\u89e3\u51b3\u7ec4\u5408\u4f18\u5316\u95ee\u9898\uff0c\u4f7f\u7528NN\u548cRL\u3002 \u672c\u6587\u4e13\u6ce8\u4e8eTSP\u95ee\u9898\uff0c\u8bad\u7ec3\u4e86\u4e00\u4e2aRNN\uff0c\u7ed9\u5b9a\u57ce\u5e02\u7684\u5750\u6807\uff0c\u9884\u6d4b\u6bcf\u4e2acity permutations \u7684\u6982\u7387\u3002 \u7528negative tour length \u4e3a\u5956\u52b1\uff0c\u4f7f\u7528policy gradient method\u4f18\u5316\u53c2\u6570","title":"abstract"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ANEURAL%20COMBINATORIAL%20OPTIMIZATION%20WITH%20REINFORCEMENT%20LEARNING%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#intro","text":"\u7ec4\u5408\u4f18\u5316\u662f\u8ba1\u7b97\u673a\u9886\u57df\u7684\u57fa\u7840\u95ee\u9898\uff0c\u7ecf\u5178\u6848\u4f8b\uff1aTSP\u3002 The travelling salesman problem (also called the traveling salesperson problem [ 1] or TSP ) asks the following question: \"Given a list of cities and the distances between each pair of cities, what is the shortest possible route that visits each city exactly once and returns to the origin city?\" It is an NP-hard problem in combinatorial optimization , important in theoretical computer science and operations research . \u5bfb\u627e\u6700\u4f18\u7684TSP\u8def\u5f84\u662fNP\u96be\uff0c\u5373\u4f7f\u57282d\u7a7a\u95f4\u5185\u3002 \u6211\u4eec\u4f7f\u7528RL\u6765\u89e3\u51b3\u7ec4\u5408\u4f18\u5316\u95ee\u9898\uff0c\u4f5c\u4e3a\u5bf9\u6bd4\uff0c\u6211\u4eec\u4f7f\u7528\u5df2\u77e5\u6700\u4f18\u89e3\u7684\u76d1\u7763\u5b66\u4e60\u65b9\u6cd5\u4e0e\u672c\u65b9\u6cd5\u8fdb\u884c\u5bf9\u6bd4\u3002 \u57fa\u4e8epolicy gradient\uff0c\u63d0\u51fa\u4e24\u79cd\u65b9\u6cd5\uff1a RL pretrain\uff0c\u4f7f\u7528\u4e00\u4e2a\u8bad\u7ec3\u96c6\u8bad\u7ec3RNN that parameterizes a stochastic policy \uff0c\u4f7f\u7528 expected reward\u4f5c\u4e3a\u76ee\u6807\u3002\u6d4b\u8bd5\u671f\u95f4\uff0cpolicy\u7684\u53c2\u6570\u56fa\u5b9a\uff0c\u5e76\u4e14\u6267\u884c\u63a8\u65ad\uff0c\u901a\u8fc7\u8d2a\u5a6a\u7684\u89e3\u7801\u6216\u91c7\u6837\u3002 active search\uff0c\u6ca1\u6709pretrain\u3002\u9996\u5148\u7ed9\u4e00\u4e2a\u968f\u673a\u7684policy\u3002\u5728\u4e00\u4e2a\u6d4b\u8bd5\u6848\u4f8b\u4e0a\u53cd\u590d\u8fed\u4ee3\uff0c\u4ee5\u66f4\u65b0\u8fd9\u4e2aRNN\u53c2\u6570\uff08\u4e5f\u5c31\u662fpolicy\uff09\uff0c\u4f7f\u7528\u671f\u671b\u5956\u52b1\uff0c\u540c\u65f6\u8ddf\u8e2a\u5f53\u524d\u641c\u7d22\u8fc7\u7a0b\u7684\u6700\u4f18\u89e3\u3002\uff08\u611f\u89c9\u6ca1\u8bf4\u6e05\u695a\uff09 \u539f\u6587\uff1aIt starts from a randompolicy and iteratively optimizes the RNN parameters on a single test instance, again using the expected reward objective, while keeping track of the best solution sampled during the search. We find that combining RL pretraining and active search works best in practice.","title":"intro"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ANEURAL%20COMBINATORIAL%20OPTIMIZATION%20WITH%20REINFORCEMENT%20LEARNING%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#previous-work","text":"TODO","title":"previous work"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ANEURAL%20COMBINATORIAL%20OPTIMIZATION%20WITH%20REINFORCEMENT%20LEARNING%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#neural-network-architecture-for-tsp","text":"\u95ee\u9898\u5efa\u6a21\uff1a $n$ \u4e2a\u57ce\u5e02 \u5730\u70b9\u5750\u6807\uff1a${x_i}^n_{i=1}$ $x_i \\in R^2$ \u5750\u6807\u662f2\u7ef4\u7684 \u5bf9\u4e8e$x_i$\u7684\u4e00\u4e2a\u6392\u5e8f\uff0c\u8bb0\u5f55\u4e3a $\\pi$\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u89e3\u3002 \u90a3\u4e48\uff0c\u65c5\u9014\u957f\u5ea6\u5199\u4e3a\uff1a $$ L(\\pi \\mid s)=\\left|\\mathbf{x} {\\pi(n)}-\\mathbf{x} {\\pi(1)}\\right| {2}+\\sum {\\pi(i)}^{n-1}\\left|\\mathbf{x} {\\pi(i+1)}\\right| {2} $$ policy function \u5199\u4e3a\uff1a $$ p(\\pi \\mid s)\\ p(\\pi \\mid s)=\\prod_{i=1}^{n} p(\\pi(i) \\mid \\pi(<i), s) $$ \u8fd9\u4e2a\u51fd\u6570\u7684\u8f93\u5165\u662f\u4e00\u4e2asequence\uff0c\u8f93\u51fa\u4e5f\u662f\u4e2asequence\u3002 \u4f46\u662f\uff0c\u8fd9\u6709\u4e24\u4e2a\u95ee\u9898\uff1a \u8bad\u7ec3\u5b8c\u4e86\u4ee5\u540e\uff0c\u9650\u5236\u4e86\u8f93\u5165n sequence2sequence\u6a21\u578b\u9700\u8981ground truth\u6765\u4f18\u5316\u53c2\u6570\u3002 \u672c\u6587\u5c31\u8981\u89e3\u51b3\u8fd9\u4e24\u4e2aissue\u3002","title":"neural network architecture for TSP"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ANEURAL%20COMBINATORIAL%20OPTIMIZATION%20WITH%20REINFORCEMENT%20LEARNING%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#pointer-network","text":"pointer network \u5305\u542b\u4e86\u4e24\u4e2aRNN\uff0c\u4e00\u4e2a\u4e3aencoder\uff0c\u53e6\u4e00\u4e2a\u4e3adecoder\u3002\u5e76\u4e14\u90fd\u5305\u542b\u4e86LSTM\u3002 \u524d\u534a\u90e8\u5206\u7528RNN\uff08LSTM\uff09\u7ed3\u6784\uff0c\u5f97\u5230\u4e00\u4e2a\u4e0a\u4e0b\u6587\u5411\u91cf $ $ \u540e\u534a\u90e8\u5206\u4f7f\u7528pointer network\u6765\u89e3\u7801\uff0c\u5f97\u5230\u4e00\u4e2a\u6392\u5e8f\uff0c\u8fd9\u4e2a\u8f93\u51fa\u7684\u957f\u5ea6\u7531\u8f93\u5165\u7684\u957f\u5ea6\u51b3\u5b9a\u3002 https://github.com/keon/pointer-networks","title":"pointer network \u7ed3\u6784\u7ec6\u8282"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ANEURAL%20COMBINATORIAL%20OPTIMIZATION%20WITH%20REINFORCEMENT%20LEARNING%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#policy-gradient","text":"2015\u5e74Vinyals\u7b49\u4eba\u4f7f\u7528\u7684\u662f\u76d1\u7763\u5b66\u4e60\u8fdb\u884c\u8bad\u7ec3pointer network\uff0c\u8fd9\u4e2a\u60c5\u51b5\u5728\u89e3\u51b3TSP\u95ee\u9898\u65f6\uff0c\u5e76\u4e0d\u9002\u7528\uff1a \u6a21\u578b\u7684\u8d28\u91cf\u5f88\u5927\u7a0b\u5ea6\u53d6\u51b3\u4e8elabel\u3002 \u5f88\u96be\u5f97\u5230\u9ad8\u8d28\u91cf\u7684label\uff0c\u5e76\u4e14infeasible for new problem statements\u3002 TSP\u66f4\u6ce8\u91cdcompetitive\u7684\u7ed3\u679c\uff0c\u800c\u5e76\u4e0d\u662f\u80fd\u591f\u62df\u5408\u91cd\u73b0\u5176\u4ed6\u7b97\u6cd5\u7684\u7ed3\u679c\u3002 \u4f7f\u7528\u5f3a\u5316\u5b66\u4e60\u6765\u4f18\u5316\u6307\u9488\u51fd\u6570\u7684\u53c2\u6570\uff08\u5b9e\u9645\u4e0a\u5c31\u662f\u8bad\u7ec3policy function\uff09 \u8bb0 pinter network\u7684\u53c2\u6570\u4e3a$\\theta$, \u8f93\u5165\u5750\u6807\u7684\u5e8f\u5217\u4e3a $s$ , \u76ee\u6807\u51fd\u6570\u5199\u4e3a\uff08\u5c06\u5176\u6700\u5c0f\u5316\uff09\uff1a $$ J(\\boldsymbol{\\theta} \\mid s)=\\mathbb{E} {\\pi \\sim p {\\theta}(. \\mid s)} L(\\pi \\mid s) $$ specify\uff1a $\\pi \\sim p_{\\theta}(. \\mid s)$ \u5373\u4f7f\u7528pointer network \u8ba1\u7b97\u51fa\u7684 solution\u7684\u6982\u7387\u5206\u5e03\uff1b$L(\\pi \\mid s)$ \u7ed9\u5b9as\uff0c\u8be5\u52a8\u4f5c\u7684loss\u6216cost\uff0c\u5168\u90e8\u76f8\u4e58\u6c42\u548c\u5219\u5f97\u5230\u671f\u671b\u3002 \u76ee\u6807\u51fd\u6570\u7ed9\u5b9a\u540e\uff0c\u9700\u8981\u76ee\u6807\u51fd\u6570\u5bf9\u53c2\u6570\u6c42\u5bfc\uff0c\u4ee5\u5f97\u5230\u68af\u5ea6\u4e0b\u964d\u7684\u65b9\u5411\uff1a $$ \\nabla_{\\theta} J(\\theta \\mid s)=\\mathbb{E} {\\pi \\sim p {\\theta}(. \\mid s)}\\left[(L(\\pi \\mid s)-b(s)) \\nabla_{\\theta} \\log p_{\\theta}(\\pi \\mid s)\\right] $$ \u5176\u4e2d$b(s)$\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u7ed9\u5b9a$s$\u65f6\uff0c\u4f30\u8ba1L\uff0c\u4ed6\u662f\u4e00\u4e2a\u4e0d\u51c6\u786e\u7684\u4f30\u8ba1\u3002 \u6839\u636e\u5927\u6570\u5b9a\u5f8b\uff0c\u6837\u672c\u5747\u503c \u4f9d\u6982\u7387\u6536\u655b \u4e8e\u671f\u671b\u503c\u3002 \u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u8499\u7279\u5361\u6d1b\u91c7\u6837\u8ba1\u7b97\u8fd9\u4e2a\u68af\u5ea6\uff1a \u91c7\u6837\uff1a $$ s_{1}, s_{2}, \\ldots, s_{B} \\sim \\mathcal{S}\\ \\pi_{i} \\sim p_{\\theta}\\left(. \\mid s_{i}\\right) $$ \u8fd1\u4f3c\u8ba1\u7b97\uff1a $$ \\nabla_{\\theta} J(\\theta) \\approx \\frac{1}{B} \\sum_{i=1}^{B}\\left(L\\left(\\pi_{i} \\mid s_{i}\\right)-b\\left(s_{i}\\right)\\right) \\nabla_{\\theta} \\log p_{\\theta}\\left(\\pi_{i} \\mid s_{i}\\right) $$ \u5bf9\u4e8e$b(s)$\u51fd\u6570\u7684\u9009\u62e9\uff0c\u4e00\u822c\u662f\u6700\u8fd1\u4e00\u6bb5\u65f6\u95f4\u5185\u83b7\u5f97reward\u7684\u6ed1\u52a8\u5e73\u5747\u503c\u3002\u4f46\u662f\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5e26\u53c2\u6570\u7684$b(s)$\u51fd\u6570\uff0c\u53ef\u4ee5\u63d0\u9ad8performance\u3002\u672c\u6587\u4f7f\u7528\u4e00\u4e2aauxiliary network\uff0c\u79f0\u4e3acritic\uff0c\u53c2\u6570\u8bb0\u5f55\u4e3a$\\theta_v$ \u8fd9\u4e2acritic\u7684\u4f5c\u7528\uff1a \u5bf9\u4e8e\u5f53\u524d\u7684$p_{\\theta}$ \u4ee5\u53ca $s$\uff0c\u4f30\u8ba1\u4e00\u4e2a \u671f\u671b\u7684 \u8def\u5f84\u957f\u5ea6\u3002 \u6240\u4ee5critic\u7684\u635f\u5931\u51fd\u6570\u5199\u4e3a\uff1a $$ \\mathcal{L}\\left(\\theta_{v}\\right)=\\frac{1}{B} \\sum_{i=1}^{B}\\left|b_{\\theta_{v}}\\left(s_{i}\\right)-L\\left(\\pi_{i} \\mid s_{i}\\right)\\right|_{2}^{2} $$ \u7efc\u4e0a\uff0cactor-critic training \u7b97\u6cd5\uff1a \u4e3a\u4e86\u65b9\u4fbf\u7406\u89e3\uff0c\u628aB\u770b\u62101\uff0c\u6240\u4ee5\u7b97\u6cd5\u6b65\u9aa4\u4e3a\uff1a t = 1 \u91c7\u6837\u62bd\u53d6\u4e00\u4e2as \u6839\u636epointer network(actor), \u5f97\u5230\u4e00\u4e2a $\\pi$ \u7b54\u6848 \u6839\u636ecritic\uff0c\u5f97\u5230\u4e00\u4e2a $b$ \u9884\u4f30\u8def\u5f84\u957f\u5ea6 \u6c42pointer network(actor)\u7684\u68af\u5ea6\uff0c \u6c42critic\u7684\u68af\u5ea6 \u66f4\u65b0pointer network(actor)\u7684\u53c2\u6570 \u66f4\u65b0critic\u7684\u53c2\u6570 \u4e0b\u4e00\u6b21\u8fed\u4ee3 obviously\uff0c\u521a\u5f00\u59cbactor\u548ccritic\u90fd\u662f\u4e0d\u51c6\u786e\u7684\uff0c\u4f46\u662f\u5728\u7b2c7\u6b65\u4e2d\uff0c\u7b2c\u4e00\u6b21\u66f4\u65b0\u4e86critic\u7684\u53c2\u6570\uff0c\u8fd9\u4e00\u6b21\u66f4\u65b0\u4f7f\u5f97critic\u51c6\u786e\u4e86\u4e00\u4e9b\uff0c\u7136\u540e\u518d\u7528\u5b83\u6765\u6307\u5bfcactor\u7684\u66f4\u65b0\u3002 \u62bd\u8c61\u7406\u89e3\uff0c\u4e00\u4e2a\u4f53\u64cd\u8fd0\u52a8\u5458\u548c\u4e00\u4e2a\u6559\u7ec3\uff0c\u4e24\u4eba\u90fd\u662f\u4e00\u65e0\u6240\u77e5\u3002 \u8fd0\u52a8\u5458\u8868\u6f14 \u6559\u7ec3\u6253\u5206 \u8fd0\u52a8\u5458\u6839\u636e\u6559\u7ec3\u6253\u5206\uff0c\u4fee\u6539\u52a8\u4f5c \u6559\u7ec3\u6839\u636eground truth\uff0c\u4fee\u6539\u6253\u5206\u7b56\u7565 \u7ee7\u7eed\u91cd\u590d\uff0c\u6700\u7ec8\u5f97\u5230\u4e86\u4e00\u4e2a\u4f18\u79c0\u8fd0\u52a8\u5458\u4ee5\u53ca\u4f18\u79c0\u7684\u88c1\u5224 ps: \u65e2\u7136ground truth \u5982\u6b64\u597d\u83b7\u5f97\uff0c\u4f55\u5fc5\u8fd8\u8981\u627e\u4e2a\u88c1\u5224\u5462\uff1f\u76f4\u63a5\u4f53\u64cd\u8fd0\u52a8\u5458\u81ea\u5df1\u770bground truth\u4fee\u6539\u52a8\u4f5c\u4e0d\u5c31\u597d\u4e86\u3002 critic\u673a\u5236\u9002\u7528\u4e8eground truth\u96be\u4ee5\u83b7\u5f97\u7684\u65f6\u5019\uff0c\u4f8b\u59825\u6b21\u8868\u6f14\u53ea\u80fd\u83b7\u5f97\u4e00\u6b21ground truth\u3002\u6216\u8005\u8bf4critic\u673a\u5236\u4e3a\u4e86\u907f\u514d\u6bcf\u6b21\u90fd\u53bb\u82b1\u8d39\u7b97\u529b\u8ba1\u7b97ground truth\uff0c\u800c\u91c7\u53d6\u7684\u4e00\u79cd\u52a0\u901f\u7b56\u7565","title":"\u4f7f\u7528policy gradient\u8fdb\u884c\u4f18\u5316"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ANeural%20Machine%20Translation%20By%20Jointly%20Learning%20To%20Align%20And%20Translate%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/","text":"\u300aNeural Machine Translation By Jointly Learning To Align And Translate\u300b\u9605\u8bfb\u7b14\u8bb0 ICLR 2015\u4e0a\u9996\u6b21\u63d0\u51fa\u4e86attention\u673a\u5236\u3002 abstract \u5e38\u89c1\u7684\u795e\u7ecf\u673a\u5668\u7ffb\u8bd1\u4f7f\u7528\u7684\u662fencoder-decoder\u7ed3\u6784\u3002encoder\u5c06\u539f\u5e8f\u5217\u6620\u5c04\u5230\u4e00\u4e2a\u56fa\u5b9a\u957f\u5ea6\u7684\u5411\u91cf\uff0cdecoder\u6267\u884c\u7ffb\u8bd1\u3002 \u672c\u6587\u8ba4\u4e3a\u4e00\u4e2a\u56fa\u5b9a\u957f\u5ea6\u7684\u5411\u91cf\u662f\u795e\u7ecf\u673a\u5668\u7ffb\u8bd1\u7684\u74f6\u9888\uff0c\u672c\u6587\u6269\u5c55\u4e86\u8fd9\u65b9\u9762\uff0c\u5141\u8bb8\u6a21\u578b\u81ea\u52a8\u641c\u7d22\u4e0e\u9884\u6d4b\u76ee\u6807\u76f8\u5173\u8054\u7684\u6e90\u5e8f\u5217\u90e8\u5206\u3002 \u672c\u6587\u5728\u82f1\u8bed\u7ffb\u8bd1\u6cd5\u8bed\u4e0a\u53d6\u5f97\u4e86\u597d\u7684\u6210\u679c\u3002 intro \u7565 background: neural machine translation \u4ece\u6982\u7387\u7684\u89d2\u5ea6\u51fa\u53d1\uff0c\u7ffb\u8bd1\u5c31\u662f\u627e\u5230\u4e00\u4e2atarget sentence $y$\uff0c\u5b83\u6709\u6700\u5927\u7684\u6761\u4ef6\u6982\u7387\uff1a $$ \\arg \\max _{\\mathbf{y}} p(\\mathbf{y} \\mid \\mathbf{x}) $$ RNN encoder-decoder RNN\u6a21\u578b\uff1a $$ h_{t}=f\\left(x_{t}, h_{t-1}\\right) $$ \u6700\u540e\u5c06$h_t$\u7f16\u7801\u4e3a\u4e00\u4e2a\u56fa\u5b9a\u957f\u5ea6\u7684\u5411\u91cf$c$ $$ c=q\\left(\\left{h_{1}, \\cdots, h_{T_{x}}\\right}\\right) $$ \u89e3\u7801\u5668\uff1a $$ p(\\mathbf{y})=\\prod_{t=1}^{T} p\\left(y_{t} \\mid\\left{y_{1}, \\cdots, y_{t-1}\\right}, c\\right)=\\p(y_1|c)p(y_2|y_1,c)p(y_3|y_2,y_1,c)...p\\left(y_{t} \\mid\\left{y_{1}, \\cdots, y_{t-1}\\right}, c\\right) $$ \u5bf9\u4e8eRNN \u89e3\u7801\u5668\u6765\u8bf4: $$ p\\left(y_{t} \\mid\\left{y_{1}, \\cdots, y_{t-1}\\right}, c\\right)=g\\left(y_{t-1}, s_{t}, c\\right) $$ \u5176\u4e2dg\u53ef\u4ee5\u662f\u4e00\u4e2a\u591a\u5c42\u611f\u77e5\u673a\uff0c$y_{t-1}$\u662f\u4e0a\u4e00\u6b21\u8f93\u51fa\u7684\u6982\u7387\uff0c$s_{t}$\u662fRNN\u7684\u9690\u72b6\u6001\uff0c$c$\u662f\u4e0a\u4e0b\u6587\u5411\u91cf\u3002 Learn to align and translate \u672c\u6587\u63d0\u51fa\u4e00\u79cd\u65b0\u7684\u7ed3\u6784\uff0c\u7531\u4e00\u4e2a\u53cc\u5411RNN\u4f5c\u4e3aencoder\uff0cdecoder \u6a21\u4eff\u641c\u7d22\u8fc7\u7a0b\u3002 decoder: general description \u539f\u6765\uff1a $$ p\\left(y_{t} \\mid\\left{y_{1}, \\cdots, y_{t-1}\\right}, c\\right)=g\\left(y_{t-1}, s_{t}, c\\right) $$ \u65b0\u7ed3\u6784\u4e3a\uff1a $$ p\\left(y_{i} \\mid y_{1}, \\ldots, y_{i-1}, \\mathbf{x}\\right)=g\\left(y_{i-1}, s_{i}, c_{i}\\right) $$ $$ s_{i}=f\\left(s_{i-1}, y_{i-1}, c_{i}\\right) $$ \u4e5f\u5c31\u662f\u6bcf\u4e00\u6b21\u89e3\u7801\u90fd\u4f1a\u5f97\u5230\u5bf9\u5e94\u7684\u4e0a\u4e0b\u6587\u5411\u91cf$c_i$ $c_i$\u53d6\u51b3\u4e8e\u4e00\u7cfb\u5217\u7684annotations $\\left(h_{1}, \\cdots, h_{T_{x}}\\right)$ $$ c_{i}=\\sum_{j=1}^{T_{x}} \\alpha_{i j} h_{j} $$ \u5176\u4e2d\u6bcf\u4e00\u4e2a$h_j$\u7684\u6743\u91cd\u4e3a\uff1a $$ \\alpha_{i j}=\\frac{\\exp \\left(e_{i j}\\right)}{\\sum_{k=1}^{T_{x}} \\exp \\left(e_{i k}\\right)} $$ $e_{ij}$\u662f\uff1a $$ e_{i j}=a\\left(s_{i-1}, h_{j}\\right) $$ $a()$\u662f\u4e00\u4e2a\u8f85\u52a9\u6a21\u578b\uff0c\u7528\u4e8e\u8bc4\u4ef7\u8f93\u5165\u4f4d\u7f6ej\uff0c\u4e0e\u8f93\u51fa\u4f4d\u7f6ei\u7684\u5339\u914d\u7a0b\u5ea6\u3002 encoder: Bidirectional RNN for annotating sequences \u4e5f\u5c31\u662f\u6b63\u53cd\u4e24\u6b21\u5faa\u73af\uff0c\u5206\u522b\u5f97\u5230\u4e24\u4e2a$h_j$ $$ h_{j}=\\left[\\vec{h} {j}^{\\top} ; \\overleftarrow{h} {j}^{\\top}\\right]^{\\top} $$","title":"\u300aNeural Machine Translation By Jointly Learning To Align And Translate\u300b\u9605\u8bfb\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ANeural%20Machine%20Translation%20By%20Jointly%20Learning%20To%20Align%20And%20Translate%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#neural-machine-translation-by-jointly-learning-to-align-and-translate","text":"ICLR 2015\u4e0a\u9996\u6b21\u63d0\u51fa\u4e86attention\u673a\u5236\u3002","title":"\u300aNeural Machine Translation By Jointly Learning To Align And Translate\u300b\u9605\u8bfb\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ANeural%20Machine%20Translation%20By%20Jointly%20Learning%20To%20Align%20And%20Translate%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#abstract","text":"\u5e38\u89c1\u7684\u795e\u7ecf\u673a\u5668\u7ffb\u8bd1\u4f7f\u7528\u7684\u662fencoder-decoder\u7ed3\u6784\u3002encoder\u5c06\u539f\u5e8f\u5217\u6620\u5c04\u5230\u4e00\u4e2a\u56fa\u5b9a\u957f\u5ea6\u7684\u5411\u91cf\uff0cdecoder\u6267\u884c\u7ffb\u8bd1\u3002 \u672c\u6587\u8ba4\u4e3a\u4e00\u4e2a\u56fa\u5b9a\u957f\u5ea6\u7684\u5411\u91cf\u662f\u795e\u7ecf\u673a\u5668\u7ffb\u8bd1\u7684\u74f6\u9888\uff0c\u672c\u6587\u6269\u5c55\u4e86\u8fd9\u65b9\u9762\uff0c\u5141\u8bb8\u6a21\u578b\u81ea\u52a8\u641c\u7d22\u4e0e\u9884\u6d4b\u76ee\u6807\u76f8\u5173\u8054\u7684\u6e90\u5e8f\u5217\u90e8\u5206\u3002 \u672c\u6587\u5728\u82f1\u8bed\u7ffb\u8bd1\u6cd5\u8bed\u4e0a\u53d6\u5f97\u4e86\u597d\u7684\u6210\u679c\u3002","title":"abstract"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ANeural%20Machine%20Translation%20By%20Jointly%20Learning%20To%20Align%20And%20Translate%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#intro","text":"\u7565","title":"intro"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ANeural%20Machine%20Translation%20By%20Jointly%20Learning%20To%20Align%20And%20Translate%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#background-neural-machine-translation","text":"\u4ece\u6982\u7387\u7684\u89d2\u5ea6\u51fa\u53d1\uff0c\u7ffb\u8bd1\u5c31\u662f\u627e\u5230\u4e00\u4e2atarget sentence $y$\uff0c\u5b83\u6709\u6700\u5927\u7684\u6761\u4ef6\u6982\u7387\uff1a $$ \\arg \\max _{\\mathbf{y}} p(\\mathbf{y} \\mid \\mathbf{x}) $$","title":"background: neural machine translation"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ANeural%20Machine%20Translation%20By%20Jointly%20Learning%20To%20Align%20And%20Translate%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#rnn-encoder-decoder","text":"RNN\u6a21\u578b\uff1a $$ h_{t}=f\\left(x_{t}, h_{t-1}\\right) $$ \u6700\u540e\u5c06$h_t$\u7f16\u7801\u4e3a\u4e00\u4e2a\u56fa\u5b9a\u957f\u5ea6\u7684\u5411\u91cf$c$ $$ c=q\\left(\\left{h_{1}, \\cdots, h_{T_{x}}\\right}\\right) $$ \u89e3\u7801\u5668\uff1a $$ p(\\mathbf{y})=\\prod_{t=1}^{T} p\\left(y_{t} \\mid\\left{y_{1}, \\cdots, y_{t-1}\\right}, c\\right)=\\p(y_1|c)p(y_2|y_1,c)p(y_3|y_2,y_1,c)...p\\left(y_{t} \\mid\\left{y_{1}, \\cdots, y_{t-1}\\right}, c\\right) $$ \u5bf9\u4e8eRNN \u89e3\u7801\u5668\u6765\u8bf4: $$ p\\left(y_{t} \\mid\\left{y_{1}, \\cdots, y_{t-1}\\right}, c\\right)=g\\left(y_{t-1}, s_{t}, c\\right) $$ \u5176\u4e2dg\u53ef\u4ee5\u662f\u4e00\u4e2a\u591a\u5c42\u611f\u77e5\u673a\uff0c$y_{t-1}$\u662f\u4e0a\u4e00\u6b21\u8f93\u51fa\u7684\u6982\u7387\uff0c$s_{t}$\u662fRNN\u7684\u9690\u72b6\u6001\uff0c$c$\u662f\u4e0a\u4e0b\u6587\u5411\u91cf\u3002","title":"RNN encoder-decoder"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ANeural%20Machine%20Translation%20By%20Jointly%20Learning%20To%20Align%20And%20Translate%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#learn-to-align-and-translate","text":"\u672c\u6587\u63d0\u51fa\u4e00\u79cd\u65b0\u7684\u7ed3\u6784\uff0c\u7531\u4e00\u4e2a\u53cc\u5411RNN\u4f5c\u4e3aencoder\uff0cdecoder \u6a21\u4eff\u641c\u7d22\u8fc7\u7a0b\u3002","title":"Learn to align and translate"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ANeural%20Machine%20Translation%20By%20Jointly%20Learning%20To%20Align%20And%20Translate%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#decoder-general-description","text":"\u539f\u6765\uff1a $$ p\\left(y_{t} \\mid\\left{y_{1}, \\cdots, y_{t-1}\\right}, c\\right)=g\\left(y_{t-1}, s_{t}, c\\right) $$ \u65b0\u7ed3\u6784\u4e3a\uff1a $$ p\\left(y_{i} \\mid y_{1}, \\ldots, y_{i-1}, \\mathbf{x}\\right)=g\\left(y_{i-1}, s_{i}, c_{i}\\right) $$ $$ s_{i}=f\\left(s_{i-1}, y_{i-1}, c_{i}\\right) $$ \u4e5f\u5c31\u662f\u6bcf\u4e00\u6b21\u89e3\u7801\u90fd\u4f1a\u5f97\u5230\u5bf9\u5e94\u7684\u4e0a\u4e0b\u6587\u5411\u91cf$c_i$ $c_i$\u53d6\u51b3\u4e8e\u4e00\u7cfb\u5217\u7684annotations $\\left(h_{1}, \\cdots, h_{T_{x}}\\right)$ $$ c_{i}=\\sum_{j=1}^{T_{x}} \\alpha_{i j} h_{j} $$ \u5176\u4e2d\u6bcf\u4e00\u4e2a$h_j$\u7684\u6743\u91cd\u4e3a\uff1a $$ \\alpha_{i j}=\\frac{\\exp \\left(e_{i j}\\right)}{\\sum_{k=1}^{T_{x}} \\exp \\left(e_{i k}\\right)} $$ $e_{ij}$\u662f\uff1a $$ e_{i j}=a\\left(s_{i-1}, h_{j}\\right) $$ $a()$\u662f\u4e00\u4e2a\u8f85\u52a9\u6a21\u578b\uff0c\u7528\u4e8e\u8bc4\u4ef7\u8f93\u5165\u4f4d\u7f6ej\uff0c\u4e0e\u8f93\u51fa\u4f4d\u7f6ei\u7684\u5339\u914d\u7a0b\u5ea6\u3002","title":"decoder: general description"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ANeural%20Machine%20Translation%20By%20Jointly%20Learning%20To%20Align%20And%20Translate%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#encoder-bidirectional-rnn-for-annotating-sequences","text":"\u4e5f\u5c31\u662f\u6b63\u53cd\u4e24\u6b21\u5faa\u73af\uff0c\u5206\u522b\u5f97\u5230\u4e24\u4e2a$h_j$ $$ h_{j}=\\left[\\vec{h} {j}^{\\top} ; \\overleftarrow{h} {j}^{\\top}\\right]^{\\top} $$","title":"encoder: Bidirectional RNN for annotating sequences"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8APC%20algorithm%E3%80%8B%E5%AD%A6%E4%B9%A0/","text":"\u300aPC algorithm\u300b\u5b66\u4e60 \u300aEstimating High-Dimensional Directed Acyclic Graphs with the PC-Algorithm\u300b abstract PC\u7b97\u6cd5\u7528\u4e8e\u9ad8\u7eac\u5ea6\u6570\u636e\uff0c\u505a\u4e86\u4e00\u4e2a\u7a00\u758f\u6027\u7684\u5047\u8bbe\uff1athe neighborhoods in the DAG are of lower order than sample size n\u3002 intro \u4ece\u6570\u636e\u4e2d\u5b66\u4e60\u7ed3\u6784\u662f\u975e\u5e38\u56f0\u96be\u7684\uff0c\u56e0\u4e3aDAG\u7684\u641c\u7d22\u7a7a\u95f4\u592a\u5927\u4e86\u3002 search-and-score \u65b9\u6cd5\u5728\u8282\u70b9\u6570\u8f83\u5c11\uff0c\u6216\u4e2d\u7b49\u7684\u65f6\u5019\u6bd4\u8f83\u6210\u529f\u3002 greedy DAG \u641c\u7d20\u53ef\u4ee5\u901a\u8fc7\u63a2\u7d22\u6982\u7387\u7b49\u4ef7\u5173\u7cfb\u8fdb\u884c\u63d0\u5347\uff0c\u641c\u7d22\u7a7a\u95f4\u4f1a\u88ab\u51cf\u5c0f\uff0c\u79f0\u4e3aGES\uff08Greedy Equivalent Search, see Chickering, 2002a.\uff09\u3002 PC\u7b97\u6cd5\u4ece\u4e00\u4e2acomplete\uff0cundirected \u56fe\u5f00\u59cb\uff0c \u9012\u5f52\u5730\u5220\u9664edges\uff0c\u57fa\u4e8e\u6761\u4ef6\u6027\u72ec\u7acb\u68c0\u9a8c\uff0c\u6700\u540e\u5f97\u5230\u90e8\u5206\u6709\u5411\u56fe\u3002\u5982\u679cDAG\u662f\u7a00\u758f\u7684\uff0c\u90a3\u4e48\u53ef\u4ee5\u7f29\u51cf\u5230\u591a\u9879\u5f0f\u8fd0\u884c\u65f6\u95f4\u3002 finding the Equivalence class of a DAG definitions and preliminaries \u5982\u679c\u8bf4\u4e00\u4e2a\u6982\u7387\u5206\u5e03$P$,\u548c\u4e0e\u4e4b\u5bf9\u5e94\u7684\u56fe$G$\u662ffaithful\u7684\uff0c\u5b83\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a \u5bf9\u4e8e\u4efb\u610f\u7684 $i, j \\in V$ with $i \\neq j$ and any set $\\mathrm{s} \\subseteq V$\uff0c\u6ee1\u8db3\uff1a $$ \\begin{aligned} & \\mathbf{X}^{(i)} \\text { and } \\mathbf{X}^{(j)} \\text { are conditionally independent given }\\left{\\mathbf{X}^{(r)} ; r \\in \\mathrm{s}\\right} \\ \\Leftrightarrow & \\text { node } i \\text { and node } j \\text { are d-separated by the set } \\mathrm{s} \\end{aligned} $$ \u5bf9\u4e8e\u4e00\u4e2a\u6982\u7387\u5206\u5e03P\uff0c\u6709\u4e00\u7cfb\u5217\u7684\u7b49\u4ef7DAG\uff0c\u5373\u4f7f\u6709\u65e0\u9650\u7684\u89c2\u6d4b\u6570\u636e\uff0c\u4f9d\u7136\u65e0\u6cd5\u533a\u5206\u4e0d\u540c\u7684DAG\u3002\u5bf9\u4e8e\u8fd9\u79cd\u7b49\u4ef7DAG\uff0cPearl\u63d0\u51fa:\u7b49\u4ef7\u56fe\u5177\u6709\u76f8\u540c\u7684skeleton\u548cv\u7ed3\u6784\u3002 PDAG\uff1a\u90e8\u5206\u6709\u5411\u56fe\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e9b\u65e0\u9650\u8fb9\uff0c\u5f53\u7136\u5b83\u4e5f\u662f\u65e0\u73af\u7684\u3002 CPDAG\uff1a\u5b8c\u5168PDAG\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a every directed edge exists also in every DAG belonging to the equivalence class of the DAG every undirected edge $i-j$ there exists a DAG with $i \\rightarrow j$ and a DAG with $i \\leftarrow j$ in the equivalence class \u4f30\u8ba1CPDAG\u6709\u4e24\u4e2a\u90e8\u5206\u7ec4\u6210\uff1a1. \u4f30\u8ba1skeleton\u30022. partial orientation of edges PC\u7b97\u6cd5\u5bfb\u627eskeleton","title":"\u300aPC algorithm\u300b\u5b66\u4e60"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8APC%20algorithm%E3%80%8B%E5%AD%A6%E4%B9%A0/#pc-algorithm","text":"\u300aEstimating High-Dimensional Directed Acyclic Graphs with the PC-Algorithm\u300b","title":"\u300aPC algorithm\u300b\u5b66\u4e60"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8APC%20algorithm%E3%80%8B%E5%AD%A6%E4%B9%A0/#abstract","text":"PC\u7b97\u6cd5\u7528\u4e8e\u9ad8\u7eac\u5ea6\u6570\u636e\uff0c\u505a\u4e86\u4e00\u4e2a\u7a00\u758f\u6027\u7684\u5047\u8bbe\uff1athe neighborhoods in the DAG are of lower order than sample size n\u3002","title":"abstract"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8APC%20algorithm%E3%80%8B%E5%AD%A6%E4%B9%A0/#intro","text":"\u4ece\u6570\u636e\u4e2d\u5b66\u4e60\u7ed3\u6784\u662f\u975e\u5e38\u56f0\u96be\u7684\uff0c\u56e0\u4e3aDAG\u7684\u641c\u7d22\u7a7a\u95f4\u592a\u5927\u4e86\u3002 search-and-score \u65b9\u6cd5\u5728\u8282\u70b9\u6570\u8f83\u5c11\uff0c\u6216\u4e2d\u7b49\u7684\u65f6\u5019\u6bd4\u8f83\u6210\u529f\u3002 greedy DAG \u641c\u7d20\u53ef\u4ee5\u901a\u8fc7\u63a2\u7d22\u6982\u7387\u7b49\u4ef7\u5173\u7cfb\u8fdb\u884c\u63d0\u5347\uff0c\u641c\u7d22\u7a7a\u95f4\u4f1a\u88ab\u51cf\u5c0f\uff0c\u79f0\u4e3aGES\uff08Greedy Equivalent Search, see Chickering, 2002a.\uff09\u3002 PC\u7b97\u6cd5\u4ece\u4e00\u4e2acomplete\uff0cundirected \u56fe\u5f00\u59cb\uff0c \u9012\u5f52\u5730\u5220\u9664edges\uff0c\u57fa\u4e8e\u6761\u4ef6\u6027\u72ec\u7acb\u68c0\u9a8c\uff0c\u6700\u540e\u5f97\u5230\u90e8\u5206\u6709\u5411\u56fe\u3002\u5982\u679cDAG\u662f\u7a00\u758f\u7684\uff0c\u90a3\u4e48\u53ef\u4ee5\u7f29\u51cf\u5230\u591a\u9879\u5f0f\u8fd0\u884c\u65f6\u95f4\u3002","title":"intro"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8APC%20algorithm%E3%80%8B%E5%AD%A6%E4%B9%A0/#finding-the-equivalence-class-of-a-dag","text":"","title":"finding the Equivalence class of a DAG"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8APC%20algorithm%E3%80%8B%E5%AD%A6%E4%B9%A0/#definitions-and-preliminaries","text":"\u5982\u679c\u8bf4\u4e00\u4e2a\u6982\u7387\u5206\u5e03$P$,\u548c\u4e0e\u4e4b\u5bf9\u5e94\u7684\u56fe$G$\u662ffaithful\u7684\uff0c\u5b83\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a \u5bf9\u4e8e\u4efb\u610f\u7684 $i, j \\in V$ with $i \\neq j$ and any set $\\mathrm{s} \\subseteq V$\uff0c\u6ee1\u8db3\uff1a $$ \\begin{aligned} & \\mathbf{X}^{(i)} \\text { and } \\mathbf{X}^{(j)} \\text { are conditionally independent given }\\left{\\mathbf{X}^{(r)} ; r \\in \\mathrm{s}\\right} \\ \\Leftrightarrow & \\text { node } i \\text { and node } j \\text { are d-separated by the set } \\mathrm{s} \\end{aligned} $$ \u5bf9\u4e8e\u4e00\u4e2a\u6982\u7387\u5206\u5e03P\uff0c\u6709\u4e00\u7cfb\u5217\u7684\u7b49\u4ef7DAG\uff0c\u5373\u4f7f\u6709\u65e0\u9650\u7684\u89c2\u6d4b\u6570\u636e\uff0c\u4f9d\u7136\u65e0\u6cd5\u533a\u5206\u4e0d\u540c\u7684DAG\u3002\u5bf9\u4e8e\u8fd9\u79cd\u7b49\u4ef7DAG\uff0cPearl\u63d0\u51fa:\u7b49\u4ef7\u56fe\u5177\u6709\u76f8\u540c\u7684skeleton\u548cv\u7ed3\u6784\u3002 PDAG\uff1a\u90e8\u5206\u6709\u5411\u56fe\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e9b\u65e0\u9650\u8fb9\uff0c\u5f53\u7136\u5b83\u4e5f\u662f\u65e0\u73af\u7684\u3002 CPDAG\uff1a\u5b8c\u5168PDAG\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a every directed edge exists also in every DAG belonging to the equivalence class of the DAG every undirected edge $i-j$ there exists a DAG with $i \\rightarrow j$ and a DAG with $i \\leftarrow j$ in the equivalence class \u4f30\u8ba1CPDAG\u6709\u4e24\u4e2a\u90e8\u5206\u7ec4\u6210\uff1a1. \u4f30\u8ba1skeleton\u30022. partial orientation of edges","title":"definitions and preliminaries"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8APC%20algorithm%E3%80%8B%E5%AD%A6%E4%B9%A0/#pcskeleton","text":"","title":"PC\u7b97\u6cd5\u5bfb\u627eskeleton"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AThe%20max-min%20hill-climbing%20Bayesian%20network%20structure%20learning%20algorithm%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/","text":"\u300aThe max-min hill-climbing Bayesian network structure learning algorithm\u300b\u9605\u8bfb\u7b14\u8bb0 \u5f15\u7528\u4e861724\u6b21\u7684\u6df7\u5408\u578b\u8d1d\u53f6\u65af\u7f51\u7edc\u7ed3\u6784\u5b66\u4e60\u7b97\u6cd5\u3002 abstract MMHC\u7b97\u6cd5\u878d\u5408\u4e86local learning\uff0c constraint based\uff0c search and score techniques\u3002\u9996\u5148\u7b97\u6cd5\u91cd\u5efa\u51faBN\u7684\u9aa8\u67b6\uff0c\u7136\u540e\u7528\u722c\u5c71\u7b97\u6cd5\u6765\u786e\u5b9a\u8fb9\u7684\u65b9\u5411\u3002 introduction \u8d1d\u53f6\u65af\u7f51\u7edc\u7528\u4e8e\u4ee3\u8868\u4e00\u4e2a\u8054\u5408\u6982\u7387\u5206\u5e03\u3002 \u8d1d\u53f6\u65af\u7f51\u7edc\u7ed3\u6784\u5b66\u4e60\u88ab\u5e7f\u6cdb\u4f7f\u7528\uff0c\u7f51\u7edc\u7ed3\u6784\u7684\u8fb9\u5177\u6709\u56e0\u679c\u8bed\u4e49\u3002\u5f15\u7528\u6587\u732e \u5361\u8010\u57fa\u6885\u9686\u5927\u5b66\u7684\u54f2\u5b66\u4e0e\u4eba\u6587\u793e\u79d1\u7cfb\u3002 \u76ee\u524d\u8d1d\u53f6\u65af\u7f51\u7edc\u7ed3\u6784\u5b66\u4e60\u65e0\u6cd5 reliably scale up to thousands of variables in reasonable time\u3002 \u672c\u6587\u63d0\u51faMMHC\uff0c\u4ed6\u80fd\u514b\u670d\u611f\u77e5\u5c40\u9650\u6027\u3002\u8be5\u7b97\u6cd5\u80fd\u6269\u5c55\u5230\u6570\u5343\u4e2a\u53d8\u91cf\u3002 \u7ed3\u6784\u5b66\u4e60\u65b9\u6cd5\u6709\u8bc4\u5206\u641c\u7d22\u7b97\u6cd5\u3002 \u7ed3\u6784\u5b66\u4e60\u65b9\u6cd5\u6709\u57fa\u4e8e\u7ea6\u675f\u7684\u7b97\u6cd5\u3002 \u4ecb\u7ecdMMHC\u7b97\u6cd5\uff1a\u9996\u5148\u5b66\u4e60\u9aa8\u67b6\uff0c\u4f7f\u7528max min parents and children\uff1b\u7b2c\u4e8c\u90e8\u4f7f\u7528\u8d2a\u5a6a\u7684\u8d1d\u53f6\u65af\u722c\u5c71\u641c\u7d22\u6765\u786e\u5b9a\u9aa8\u67b6\u7684\u65b9\u5411\u3002 MMHC\u7b97\u6cd5\u53ef\u4ee5\u89c6\u4e3aSparse Candidate algorithm \u7684\u4e00\u4e2a\u5b9e\u4f8b\u3002SC\u7b97\u6cd5\u662f\u7b2c\u4e00\u4e2a\u53ef\u4ee5\u5904\u7406\u51e0\u767e\u4e2a\u53d8\u91cf\u7684\u5b66\u4e60\u7b97\u6cd5\u3002SC\u7b97\u6cd5\u9996\u5148\uff0c\u542f\u53d1\u5f0f\u5730\u4e3a\u6bcf\u4e2a\u53d8\u91cf\u4f30\u8ba1\u4e00\u4e2acandidate parent set\uff0c\u7136\u540e\u4f7f\u7528\u722c\u5c71\u7b97\u6cd5\u6765\u6700\u5927\u5316\u8bc4\u5206\u3002\u7136\u540e\u91cd\u65b0\u4e3a\u6bcf\u4e2a\u53d8\u91cf\u4f30\u8ba1candidate parent set\uff0c\u518d\u6b21\u4f7f\u7528\u722c\u5c71\u7b97\u6cd5\u6765\u6700\u5927\u5316\u8bc4\u5206\u3002candidate set re estimate \u63a5\u7740 hill climb\u5c31\u662f\u4e00\u6b21\u8fed\u4ee3\u8fc7\u7a0b\u3002Sparese candidate \u8fed\u4ee3\uff0c\u76f4\u5230\u5019\u9009\u96c6\u6ca1\u6709\u53d8\u5316\uff0c\u6216\u8005\u5176\u4ed6\u7ec8\u6b62\u6761\u4ef6\u6ee1\u8db3\u3002 SC\u7b97\u6cd5\u5b58\u5728\u4e09\u4e2a\u4e3b\u8981\u95ee\u9898\uff1a candidate parents\u4e0d\u53ef\u9760 \u9700\u8981\u6307\u5b9a\u6700\u5927\u7684\u5165\u5ea6k \u53c2\u6570k\u662f\u4e00\u79cd\u4e00\u81f4\u6027\u7684\u7a00\u758f\u7ea6\u675f MMHC alleviates three problems above: remove super parameter k only one iteration can gurantee the accuracy of candidate set background \u5b9a\u4e49\u4e00\uff1a \u5b9a\u4e49\u4e8c\uff1a \u5b9a\u4e49\u4e09\u3001\u56db\u3001\u4e94\u90fd\u662f\u5173\u4e8ed-separation\u7684 Verma\u548c Pearl \u8bc1\u660e\u4e86\uff1a \u5b9a\u4e49\u516d\uff1a a distribution is faithful \u5b9a\u4e49\u4e03\uff1a a faithful Bayesian network \u5b9a\u7406\u4e00\uff1a faithfulness \u662f\u672c\u6587\u7684\u57fa\u672c\u5047\u8bbe\uff0c\u7528d-seperation \u4e0e \u6761\u4ef6\u72ec\u7acb \u8fde\u63a5\u8d77\u6765\u3002 \u5b9a\u7406\u4e8c\uff1a the max min parents and children algorithm \uff08MMPC\u7b97\u6cd5\uff09 \u4f7f\u7528MMPC\u7b97\u6cd5\u6765\u5f97\u5230\u4e00\u4e2a \u5047\u9633\u6027\u7684\u7ed3\u6784\uff1a \u5728\u7b97\u6cd5\u4e2d\u53ef\u80fd\u4f1a\u4f7f\u7528\u5230\u4e24\u4e2a\u51fd\u6570 $\\operatorname{Ind}(X ; T \\mid \\mathbf{Z})$ $\\operatorname{Assoc}(X ; T \\mid \\mathbf{Z})$ \u5206\u522b\u7528\u6765\u8bc4\u4ef7\u6761\u4ef6\u72ec\u7acb\u4e0e\u4f9d\u8d56\u5173\u7cfb\uff0c\u8fd9\u662f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7684\uff0c\u5728\u540e\u7eed\u7ae0\u8282\u4e2d\u4e5f\u6709\u8be6\u7ec6\u63cf\u8ff0\u3002 \u5b9a\u4e49 $\\operatorname{MinAssoc}(X ; T \\mid \\mathbf{Z})$\u4e3a\uff1a \u901a\u8fc7\u6539\u53d8 S \uff08 S \u662f Z \u7684\u5b50\u96c6\uff09\uff0c\u4f7f\u5f97association\u6700\u5c0f\uff1a \u51e0\u4e2a\u70b9\u9700\u8981\u6ce8\u610f\uff1a \u56e0\u4e3a\uff1a$\\mathbf{S} {1} \\subseteq \\mathbf{S} {2} \\Rightarrow \\operatorname{Min} \\operatorname{Assoc}\\left(X ; Y \\mid \\mathbf{S} {1}\\right) \\geq \\operatorname{Min} \\operatorname{Assoc}\\left(X ; Y \\mid \\mathbf{S} {2}\\right)$\uff0c\u6240\u4ee5\uff1a\u968f\u7740CPC\u7684\u589e\u52a0\uff0cMinAssoc\u53ea\u4f1a\u4e0d\u53d8\u6216\u8005\u51cf\u5c0f\u3002\u5982\u679c\u67d0\u4e2a\u53d8\u91cf\u4e0eT\u7684association\u4e3a0\uff0c\u5b83\u4e0d\u5e94\u8be5\u88ab\u52a0\u5165\u5230CPC\uff0c\u5e76\u4e14\u4e4b\u540e\u4e0d\u518d\u8003\u8651\uff0c\u4ee5\u4fdd\u8bc1\uff1a \u968f\u7740CPC\u7684\u589e\u52a0\uff0cthe min association \u51cf\u5c0f \u3002 \u6848\u4f8b\uff1a \u5bf9\u4e8e\u8282\u70b9T, \u6570\u636eD\uff0c\u6570\u636e\u662f\u4ece\u8be5\u7f51\u7edc\u751f\u6210\u7684\uff1a \u8282\u70b9\u8f93\u5165\u4e3aT\uff0c\u8fdb\u5165\u5230MMPC\u7b97\u6cd5\u7684Forward\u73af\u8282\u4e2d\u53bb\uff1a \u7b2c\u4e00\u6b21\u8fed\u4ee3\uff0cCPC\u662f$\\varnothing$ \u5728MaxMinHeuristic\u4e2d\uff0c\u4e0d\u65ad\u5730\u6539\u53d8X\uff0c\u8ba1\u7b97MinAssoc\uff0c\u53d1\u73b0X=A\u7684\u65f6\u5019\uff0cMinAssoc\u6700\u5927\u3002\u5728\u6b64\u65f6\u56e0\u4e3aCPC\u662f$\\varnothing$ \uff0c\u6240\u4ee5\u5c31\u662fA\u4e0eT\u7684\u76f8\u5173\u7cfb\u6570\u6700\u5927\uff0c\u540c\u65f6\u8ba1\u7b97\u5230B, E\u7684\u76f8\u5173\u7cfb\u6570\u4e3a0, \u6807\u8bb0\u4e0b\u6765\uff0c\u4e0d\u518d\u8003\u8651\u3002 \u7ee7\u7eed\uff0c\u6162\u6162\u589e\u52a0CPC\u96c6\u5408 \u7ee7\u7eed\u589e\u52a0CPC\uff0c\u540c\u65f6\u56e0\u4e3aA,D\u8fdb\u5165\u4e86CPC\uff0c\u7531\u4e8eA,D \u7684\u6761\u4ef6\uff0c\u4f1a\u5bfc\u81f4H,T\u7684\u72ec\u7acb\uff0c\u7ee7\u800c\u5220\u9664 H, J \u7b2c\u4e8c\u9636\u6bb5\uff1a\u8fdb\u5165\u5230 backward \u8fc7\u7a0b\uff0c \u8fd9\u4e2a\"\u5b58\u5728 $\\exists$\"\u6807\u8bb0\uff0c\u4ee3\u8868\u7740\u4e00\u79cdpermutation\u3002 \u5f53permutation\u5230 {C,D}\u65f6\u5019\uff0c\u53d1\u73b0A,T\u72ec\u7acb\uff0c\u6240\u4ee5\u8981\u5220\u9664A\uff0c\u6700\u7ec8\u8f93\u51fa Parents and children \u4e3a C\u3001D\u3001I \u4e0e\u4e8b\u5b9e\u76f8\u7b26\u5408\u3002 3.3 MMPC \u7b97\u6cd5\u4fee\u6b63 \u67d0\u4e2a\u7279\u6b8a\u60c5\u51b5\u4e0b\uff0c\u524d\u9762\u63cf\u8ff0\u7684\u7b97\u6cd5\u4f1a\u51fa\u73b0\u5047\u9633\u6027\uff1a \u8fd9\u6837\u7684\u7ed3\u6784\u4e0b\uff0c\u524d\u9762\u63cf\u8ff0\u7684\u7b97\u6cd5\u4f1a\u8f93\u51faPC={A, B, C} \u8fdb\u884c\u4e00\u6b21\u4fee\u6b63\uff0c\u518d\u4e00\u6b21\u4fee\u6539CPC Tests of conditional independence and measures of association \u5bf9\u4e8e$\\operatorname{Ind}\\left(X_{i} ; X_{j} \\mid \\mathbf{X}_{k}\\right)$\uff1a \u8ba1\u7b97\u7edf\u8ba1\u91cf $G^2$ , \u7c7b\u4f3c\u4e8e\u5361\u65b9\u68c0\u9a8c g\u68c0\u9a8c\u8fd4\u56de\u4e00\u4e2ap-value\uff0c\u5982\u679c\u5c0f\u4e8e\u9608\u503c\u5219\u62d2\u7edd\u539f\u5047\u8bbe\u3002 MMHC optimizing the computational performance \u7565 empirical evaluation \u5b9e\u9a8c\u8bbe\u8ba1\uff1a \u9009\u62e9\u6bd4\u8f83\u7b97\u6cd5 SC\u7b97\u6cd5 PC GHC GES MMHC \u5728\u5177\u4f53\u5b9e\u73b0\u65b9\u9762\uff0c\u9075\u5faa\u4ee5\u4e0b\u534f\u8bae\uff1a \uff081\uff09\u66f4\u559c\u6b22\u4f5c\u8005\u7684\u5b9e\u73b0\uff0c\u53ea\u8981\u53ef\u7528\uff0c\u53ea\u8981\u5b83\u6ee1\u8db3\u6211\u4eec\u7684\u5b9e\u9a8c\u9700\u6c42\uff0c\u5373\u53ef\u4ee5\u5728\u6211\u4eec\u7684\u5b9e\u9a8c\u5e73\u53f0\u4e0a\u8fd0\u884c\uff0c\u5bf9\u8f93\u5165\u6ca1\u6709\u53ef\u53d8\u5927\u5c0f\u9650\u5236\uff0c\u5e76\u8f93\u51fa\u8bc4\u4f30\u6240\u9700\u7684\u6700\u5c11\u4e00\u7ec4\u7edf\u8ba1\u6570\u636e\u3002 \uff082\uff09 \u5982\u679c\u4e0d\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\uff0c\u5c06\u4f7f\u7528\u6ee1\u8db3\u8fd9\u4e9b\u6761\u4ef6\u7684\u7b97\u6cd5\u7684\u6700\u4f73\u516c\u5f00\u5b9e\u73b0\u3002 \uff083\uff09 \u5426\u5219\uff0c\u5c06\u91cd\u65b0\u5b9e\u73b0\u8be5\u7b97\u6cd5\u5e76\u4f7f\u7528\u6211\u4eec\u7684\u7248\u672c\u3002 \u9009\u62e9\u516c\u5171\u6570\u636e\u96c6\uff0c\u7f51\u7edc \u6570\u636e\u96c6\u63cf\u8ff0 \u6570\u636e\u63cf\u8ff0 \u8bc4\u4ef7\u6307\u6807 \u65f6\u95f4 statistical call \u8bc4\u5206 SHD \u540c\u65f6\u6bd4\u8f83\u65f6\u95f4\u4e0e\u8d28\u91cf","title":"\u300aThe max-min hill-climbing Bayesian network structure learning algorithm\u300b\u9605\u8bfb\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AThe%20max-min%20hill-climbing%20Bayesian%20network%20structure%20learning%20algorithm%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#the-max-min-hill-climbing-bayesian-network-structure-learning-algorithm","text":"\u5f15\u7528\u4e861724\u6b21\u7684\u6df7\u5408\u578b\u8d1d\u53f6\u65af\u7f51\u7edc\u7ed3\u6784\u5b66\u4e60\u7b97\u6cd5\u3002","title":"\u300aThe max-min hill-climbing Bayesian network structure learning algorithm\u300b\u9605\u8bfb\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AThe%20max-min%20hill-climbing%20Bayesian%20network%20structure%20learning%20algorithm%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#abstract","text":"MMHC\u7b97\u6cd5\u878d\u5408\u4e86local learning\uff0c constraint based\uff0c search and score techniques\u3002\u9996\u5148\u7b97\u6cd5\u91cd\u5efa\u51faBN\u7684\u9aa8\u67b6\uff0c\u7136\u540e\u7528\u722c\u5c71\u7b97\u6cd5\u6765\u786e\u5b9a\u8fb9\u7684\u65b9\u5411\u3002","title":"abstract"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AThe%20max-min%20hill-climbing%20Bayesian%20network%20structure%20learning%20algorithm%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#introduction","text":"\u8d1d\u53f6\u65af\u7f51\u7edc\u7528\u4e8e\u4ee3\u8868\u4e00\u4e2a\u8054\u5408\u6982\u7387\u5206\u5e03\u3002 \u8d1d\u53f6\u65af\u7f51\u7edc\u7ed3\u6784\u5b66\u4e60\u88ab\u5e7f\u6cdb\u4f7f\u7528\uff0c\u7f51\u7edc\u7ed3\u6784\u7684\u8fb9\u5177\u6709\u56e0\u679c\u8bed\u4e49\u3002\u5f15\u7528\u6587\u732e \u5361\u8010\u57fa\u6885\u9686\u5927\u5b66\u7684\u54f2\u5b66\u4e0e\u4eba\u6587\u793e\u79d1\u7cfb\u3002 \u76ee\u524d\u8d1d\u53f6\u65af\u7f51\u7edc\u7ed3\u6784\u5b66\u4e60\u65e0\u6cd5 reliably scale up to thousands of variables in reasonable time\u3002 \u672c\u6587\u63d0\u51faMMHC\uff0c\u4ed6\u80fd\u514b\u670d\u611f\u77e5\u5c40\u9650\u6027\u3002\u8be5\u7b97\u6cd5\u80fd\u6269\u5c55\u5230\u6570\u5343\u4e2a\u53d8\u91cf\u3002 \u7ed3\u6784\u5b66\u4e60\u65b9\u6cd5\u6709\u8bc4\u5206\u641c\u7d22\u7b97\u6cd5\u3002 \u7ed3\u6784\u5b66\u4e60\u65b9\u6cd5\u6709\u57fa\u4e8e\u7ea6\u675f\u7684\u7b97\u6cd5\u3002 \u4ecb\u7ecdMMHC\u7b97\u6cd5\uff1a\u9996\u5148\u5b66\u4e60\u9aa8\u67b6\uff0c\u4f7f\u7528max min parents and children\uff1b\u7b2c\u4e8c\u90e8\u4f7f\u7528\u8d2a\u5a6a\u7684\u8d1d\u53f6\u65af\u722c\u5c71\u641c\u7d22\u6765\u786e\u5b9a\u9aa8\u67b6\u7684\u65b9\u5411\u3002 MMHC\u7b97\u6cd5\u53ef\u4ee5\u89c6\u4e3aSparse Candidate algorithm \u7684\u4e00\u4e2a\u5b9e\u4f8b\u3002SC\u7b97\u6cd5\u662f\u7b2c\u4e00\u4e2a\u53ef\u4ee5\u5904\u7406\u51e0\u767e\u4e2a\u53d8\u91cf\u7684\u5b66\u4e60\u7b97\u6cd5\u3002SC\u7b97\u6cd5\u9996\u5148\uff0c\u542f\u53d1\u5f0f\u5730\u4e3a\u6bcf\u4e2a\u53d8\u91cf\u4f30\u8ba1\u4e00\u4e2acandidate parent set\uff0c\u7136\u540e\u4f7f\u7528\u722c\u5c71\u7b97\u6cd5\u6765\u6700\u5927\u5316\u8bc4\u5206\u3002\u7136\u540e\u91cd\u65b0\u4e3a\u6bcf\u4e2a\u53d8\u91cf\u4f30\u8ba1candidate parent set\uff0c\u518d\u6b21\u4f7f\u7528\u722c\u5c71\u7b97\u6cd5\u6765\u6700\u5927\u5316\u8bc4\u5206\u3002candidate set re estimate \u63a5\u7740 hill climb\u5c31\u662f\u4e00\u6b21\u8fed\u4ee3\u8fc7\u7a0b\u3002Sparese candidate \u8fed\u4ee3\uff0c\u76f4\u5230\u5019\u9009\u96c6\u6ca1\u6709\u53d8\u5316\uff0c\u6216\u8005\u5176\u4ed6\u7ec8\u6b62\u6761\u4ef6\u6ee1\u8db3\u3002 SC\u7b97\u6cd5\u5b58\u5728\u4e09\u4e2a\u4e3b\u8981\u95ee\u9898\uff1a candidate parents\u4e0d\u53ef\u9760 \u9700\u8981\u6307\u5b9a\u6700\u5927\u7684\u5165\u5ea6k \u53c2\u6570k\u662f\u4e00\u79cd\u4e00\u81f4\u6027\u7684\u7a00\u758f\u7ea6\u675f MMHC alleviates three problems above: remove super parameter k only one iteration can gurantee the accuracy of candidate set","title":"introduction"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AThe%20max-min%20hill-climbing%20Bayesian%20network%20structure%20learning%20algorithm%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#background","text":"\u5b9a\u4e49\u4e00\uff1a \u5b9a\u4e49\u4e8c\uff1a \u5b9a\u4e49\u4e09\u3001\u56db\u3001\u4e94\u90fd\u662f\u5173\u4e8ed-separation\u7684 Verma\u548c Pearl \u8bc1\u660e\u4e86\uff1a \u5b9a\u4e49\u516d\uff1a a distribution is faithful \u5b9a\u4e49\u4e03\uff1a a faithful Bayesian network \u5b9a\u7406\u4e00\uff1a faithfulness \u662f\u672c\u6587\u7684\u57fa\u672c\u5047\u8bbe\uff0c\u7528d-seperation \u4e0e \u6761\u4ef6\u72ec\u7acb \u8fde\u63a5\u8d77\u6765\u3002 \u5b9a\u7406\u4e8c\uff1a","title":"background"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AThe%20max-min%20hill-climbing%20Bayesian%20network%20structure%20learning%20algorithm%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#the-max-min-parents-and-children-algorithm-mmpc","text":"\u4f7f\u7528MMPC\u7b97\u6cd5\u6765\u5f97\u5230\u4e00\u4e2a \u5047\u9633\u6027\u7684\u7ed3\u6784\uff1a \u5728\u7b97\u6cd5\u4e2d\u53ef\u80fd\u4f1a\u4f7f\u7528\u5230\u4e24\u4e2a\u51fd\u6570 $\\operatorname{Ind}(X ; T \\mid \\mathbf{Z})$ $\\operatorname{Assoc}(X ; T \\mid \\mathbf{Z})$ \u5206\u522b\u7528\u6765\u8bc4\u4ef7\u6761\u4ef6\u72ec\u7acb\u4e0e\u4f9d\u8d56\u5173\u7cfb\uff0c\u8fd9\u662f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7684\uff0c\u5728\u540e\u7eed\u7ae0\u8282\u4e2d\u4e5f\u6709\u8be6\u7ec6\u63cf\u8ff0\u3002 \u5b9a\u4e49 $\\operatorname{MinAssoc}(X ; T \\mid \\mathbf{Z})$\u4e3a\uff1a \u901a\u8fc7\u6539\u53d8 S \uff08 S \u662f Z \u7684\u5b50\u96c6\uff09\uff0c\u4f7f\u5f97association\u6700\u5c0f\uff1a \u51e0\u4e2a\u70b9\u9700\u8981\u6ce8\u610f\uff1a \u56e0\u4e3a\uff1a$\\mathbf{S} {1} \\subseteq \\mathbf{S} {2} \\Rightarrow \\operatorname{Min} \\operatorname{Assoc}\\left(X ; Y \\mid \\mathbf{S} {1}\\right) \\geq \\operatorname{Min} \\operatorname{Assoc}\\left(X ; Y \\mid \\mathbf{S} {2}\\right)$\uff0c\u6240\u4ee5\uff1a\u968f\u7740CPC\u7684\u589e\u52a0\uff0cMinAssoc\u53ea\u4f1a\u4e0d\u53d8\u6216\u8005\u51cf\u5c0f\u3002\u5982\u679c\u67d0\u4e2a\u53d8\u91cf\u4e0eT\u7684association\u4e3a0\uff0c\u5b83\u4e0d\u5e94\u8be5\u88ab\u52a0\u5165\u5230CPC\uff0c\u5e76\u4e14\u4e4b\u540e\u4e0d\u518d\u8003\u8651\uff0c\u4ee5\u4fdd\u8bc1\uff1a \u968f\u7740CPC\u7684\u589e\u52a0\uff0cthe min association \u51cf\u5c0f \u3002","title":"the max min parents and children algorithm \uff08MMPC\u7b97\u6cd5\uff09"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AThe%20max-min%20hill-climbing%20Bayesian%20network%20structure%20learning%20algorithm%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_1","text":"\u5bf9\u4e8e\u8282\u70b9T, \u6570\u636eD\uff0c\u6570\u636e\u662f\u4ece\u8be5\u7f51\u7edc\u751f\u6210\u7684\uff1a \u8282\u70b9\u8f93\u5165\u4e3aT\uff0c\u8fdb\u5165\u5230MMPC\u7b97\u6cd5\u7684Forward\u73af\u8282\u4e2d\u53bb\uff1a \u7b2c\u4e00\u6b21\u8fed\u4ee3\uff0cCPC\u662f$\\varnothing$ \u5728MaxMinHeuristic\u4e2d\uff0c\u4e0d\u65ad\u5730\u6539\u53d8X\uff0c\u8ba1\u7b97MinAssoc\uff0c\u53d1\u73b0X=A\u7684\u65f6\u5019\uff0cMinAssoc\u6700\u5927\u3002\u5728\u6b64\u65f6\u56e0\u4e3aCPC\u662f$\\varnothing$ \uff0c\u6240\u4ee5\u5c31\u662fA\u4e0eT\u7684\u76f8\u5173\u7cfb\u6570\u6700\u5927\uff0c\u540c\u65f6\u8ba1\u7b97\u5230B, E\u7684\u76f8\u5173\u7cfb\u6570\u4e3a0, \u6807\u8bb0\u4e0b\u6765\uff0c\u4e0d\u518d\u8003\u8651\u3002 \u7ee7\u7eed\uff0c\u6162\u6162\u589e\u52a0CPC\u96c6\u5408 \u7ee7\u7eed\u589e\u52a0CPC\uff0c\u540c\u65f6\u56e0\u4e3aA,D\u8fdb\u5165\u4e86CPC\uff0c\u7531\u4e8eA,D \u7684\u6761\u4ef6\uff0c\u4f1a\u5bfc\u81f4H,T\u7684\u72ec\u7acb\uff0c\u7ee7\u800c\u5220\u9664 H, J \u7b2c\u4e8c\u9636\u6bb5\uff1a\u8fdb\u5165\u5230 backward \u8fc7\u7a0b\uff0c \u8fd9\u4e2a\"\u5b58\u5728 $\\exists$\"\u6807\u8bb0\uff0c\u4ee3\u8868\u7740\u4e00\u79cdpermutation\u3002 \u5f53permutation\u5230 {C,D}\u65f6\u5019\uff0c\u53d1\u73b0A,T\u72ec\u7acb\uff0c\u6240\u4ee5\u8981\u5220\u9664A\uff0c\u6700\u7ec8\u8f93\u51fa Parents and children \u4e3a C\u3001D\u3001I \u4e0e\u4e8b\u5b9e\u76f8\u7b26\u5408\u3002 3.3 MMPC \u7b97\u6cd5\u4fee\u6b63 \u67d0\u4e2a\u7279\u6b8a\u60c5\u51b5\u4e0b\uff0c\u524d\u9762\u63cf\u8ff0\u7684\u7b97\u6cd5\u4f1a\u51fa\u73b0\u5047\u9633\u6027\uff1a \u8fd9\u6837\u7684\u7ed3\u6784\u4e0b\uff0c\u524d\u9762\u63cf\u8ff0\u7684\u7b97\u6cd5\u4f1a\u8f93\u51faPC={A, B, C} \u8fdb\u884c\u4e00\u6b21\u4fee\u6b63\uff0c\u518d\u4e00\u6b21\u4fee\u6539CPC","title":"\u6848\u4f8b\uff1a"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AThe%20max-min%20hill-climbing%20Bayesian%20network%20structure%20learning%20algorithm%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#tests-of-conditional-independence-and-measures-of-association","text":"\u5bf9\u4e8e$\\operatorname{Ind}\\left(X_{i} ; X_{j} \\mid \\mathbf{X}_{k}\\right)$\uff1a \u8ba1\u7b97\u7edf\u8ba1\u91cf $G^2$ , \u7c7b\u4f3c\u4e8e\u5361\u65b9\u68c0\u9a8c g\u68c0\u9a8c\u8fd4\u56de\u4e00\u4e2ap-value\uff0c\u5982\u679c\u5c0f\u4e8e\u9608\u503c\u5219\u62d2\u7edd\u539f\u5047\u8bbe\u3002","title":"Tests of conditional independence and measures of association"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AThe%20max-min%20hill-climbing%20Bayesian%20network%20structure%20learning%20algorithm%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#mmhc","text":"","title":"MMHC"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AThe%20max-min%20hill-climbing%20Bayesian%20network%20structure%20learning%20algorithm%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#optimizing-the-computational-performance","text":"\u7565","title":"optimizing the computational performance"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AThe%20max-min%20hill-climbing%20Bayesian%20network%20structure%20learning%20algorithm%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#empirical-evaluation","text":"\u5b9e\u9a8c\u8bbe\u8ba1\uff1a \u9009\u62e9\u6bd4\u8f83\u7b97\u6cd5 SC\u7b97\u6cd5 PC GHC GES MMHC \u5728\u5177\u4f53\u5b9e\u73b0\u65b9\u9762\uff0c\u9075\u5faa\u4ee5\u4e0b\u534f\u8bae\uff1a \uff081\uff09\u66f4\u559c\u6b22\u4f5c\u8005\u7684\u5b9e\u73b0\uff0c\u53ea\u8981\u53ef\u7528\uff0c\u53ea\u8981\u5b83\u6ee1\u8db3\u6211\u4eec\u7684\u5b9e\u9a8c\u9700\u6c42\uff0c\u5373\u53ef\u4ee5\u5728\u6211\u4eec\u7684\u5b9e\u9a8c\u5e73\u53f0\u4e0a\u8fd0\u884c\uff0c\u5bf9\u8f93\u5165\u6ca1\u6709\u53ef\u53d8\u5927\u5c0f\u9650\u5236\uff0c\u5e76\u8f93\u51fa\u8bc4\u4f30\u6240\u9700\u7684\u6700\u5c11\u4e00\u7ec4\u7edf\u8ba1\u6570\u636e\u3002 \uff082\uff09 \u5982\u679c\u4e0d\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\uff0c\u5c06\u4f7f\u7528\u6ee1\u8db3\u8fd9\u4e9b\u6761\u4ef6\u7684\u7b97\u6cd5\u7684\u6700\u4f73\u516c\u5f00\u5b9e\u73b0\u3002 \uff083\uff09 \u5426\u5219\uff0c\u5c06\u91cd\u65b0\u5b9e\u73b0\u8be5\u7b97\u6cd5\u5e76\u4f7f\u7528\u6211\u4eec\u7684\u7248\u672c\u3002 \u9009\u62e9\u516c\u5171\u6570\u636e\u96c6\uff0c\u7f51\u7edc \u6570\u636e\u96c6\u63cf\u8ff0 \u6570\u636e\u63cf\u8ff0 \u8bc4\u4ef7\u6307\u6807 \u65f6\u95f4 statistical call \u8bc4\u5206 SHD \u540c\u65f6\u6bd4\u8f83\u65f6\u95f4\u4e0e\u8d28\u91cf","title":"empirical evaluation"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8Aattention%20is%20all%20your%20need%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/","text":"\u300aattention is all your need\u300b\u9605\u8bfb\u7b14\u8bb0 \u8fd9\u662f\u4e00\u7bc7\u6df1\u5ea6\u5b66\u4e60\u9886\u57df\u7684\u91cd\u8981\u6587\u7ae0\uff0c\u6765\u81ea\u8c37\u6b4c\u3002 abstract \u4e3b\u8981\u7684\u53e5\u5b50\u7ffb\u8bd1\u6a21\u578b\u4e3b\u8981\u662f\u57fa\u4e8e\u590d\u6742\u7684\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u6216\u8005\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u5305\u542b\u4e86\u7f16\u7801\u5668\u89e3\u7801\u5668\u7ed3\u6784\u3002\u76ee\u524d\u6700\u597d\u6027\u80fd\u7684\u6a21\u578b\u4f7f\u7528attention\u673a\u5236\u6765\u8fde\u63a5\u7f16\u7801\u5668\u89e3\u7801\u5668\u3002\u672c\u6587\u63d0\u51fa\u4e86Transformer\uff0c\u7b80\u5355\u7684\u7f51\u7edc\u7ed3\u6784\uff0c\u53ea\u4f9d\u636eattention\u673a\u5236\uff0c\u5f7b\u5e95\u6452\u5f03\u4e86\u5faa\u73af\u548c\u5377\u79ef\u7684\u7f51\u7edc\u7ed3\u6784\u3002 \u8868\u73b0\uff1a1. \u66f4\u52a0\u5229\u4e8e\u5e76\u884c\u30022. \u6bd4\u5f53\u524d\u6700\u597d\u7684\u7ffb\u8bd1\u6a21\u578b\u597d2BLEU\u3002 intro RNN\u3002 LSTM\u3002 gated recurrent neural networks\u3002 attention\u3002 background \u7565 model architecture \u8f93\u5165\u662f\u4e00\u4e2a\u5e8f\u5217\uff1a $$ x_1,x_2,...,x_n $$ encoder\u8f93\u51fa\u4e3a\uff1a $$ z_1,z_2,...,z_n $$ \u7ed9\u5b9a\u4e86$[z_1,..,z_n]$, \u89e3\u7801\u5668\u5f97\u5230\uff1a $$ y_1,y_2,...,y_m $$ transformer \u4e5f\u670d\u4ece\u8fd9\u6837\u7684\u6574\u4f53\u6784\u9020\uff0c\u4e0b\u9762\u67e5\u770b\u7ec6\u8282\uff1a encoder and decoder stacks encoder\uff1a \u7f16\u7801\u5668\u7531N\uff08N=6\uff09\u4e2a\u8fd9\u6837\u7684\u7ed3\u6784\u7ec4\u6210\uff0c\u7b2c\u4e00\u4e2a\u662f\u591a\u5934\u6ce8\u610f\u529b\uff0c\u7b2c\u4e8c\u4e2a\u662f\u524d\u9988\u7f51\u7edc\uff08\u591a\u5c42\u611f\u77e5\u673a\uff09\u3002 decoder\uff1a \u89e3\u7801\u5668\u662fN\uff08N=6)\u4e2a\u8fd9\u6837\u7684\u7ed3\u6784\u7ec4\u6210\uff0cencoder\u7684\u8f93\u51fa\u5148\u8fdb\u5165\u5230masked \u591a\u5934\u6ce8\u610f\u529b\uff0c\u7136\u540e\u5728\u8fdb\u5165\u5230\u548c\u7f16\u7801\u5668\u76f8\u540c\u7684\u4e24\u4e2a\u7ed3\u6784\u4e2d\u53bb\u3002 attention attention\u51fd\u6570\uff1a\u5c06\u4e00\u4e2aquery\u548c\u4e00\u7cfb\u5217\u7684key-value pairs\u6620\u5c04\u5230\u8f93\u51fa\u3002 scaled \u70b9\u4e58 attention Q\uff1a\u662f\u4e00\u4e2a\u56fa\u5b9a\u7ef4\u5ea6\uff08$d_k$\uff09\u7684\u5411\u91cf\uff0c\u5728\u8fd9\u91cc\u4e00\u822c\u5411\u91cf\u662f $1 \\times d_k$\u7684\u77e9\u9635 K\uff1a\u4e5f\u662f\u56fa\u5b9a\u7ef4\uff08$d_k$\uff09\u5ea6\u7684\u5411\u91cf V\uff1a\u56fa\u5b9a\u7ef4\u5ea6\uff08$d_v$\uff09\u7684\u5411\u91cf \u5982\u679c\u628a\u5411\u91cf\u5168\u90e8\u6253\u5305\u5230\u4e00\u8d77\uff0c\u90a3\u4e48\u8ba1\u7b97\u516c\u5f0f\u5199\u4e3a\uff1a \u5728\u6b64\uff0c\u53ea\u9700\u8981\u4e86\u89e3\u8fd9\u6837\u7684attention\u6a21\u5757\u9700\u8981QKV\u4e09\u4e2a\u8f93\u5165\uff0c\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u8f93\u51fa\u3002 \u5bf9\u4e8e\u4e00\u4e2a\u6837\u672c\u6765\u8bf4, attention \u51fd\u6570\u7684\u5199\u6cd5\u4e3a\uff1a $$ QK^T=\u4e00\u4e2a\u6807\u91cf\\ (QK^T)V= 1 \\times d_v \u7684\u5411\u91cf $$ \u5bf9\u4e8en\u4e2a\u6837\u672c\u6765\u8bf4\uff1aQ\u5c31\u53d8\u4e3a $n \\times d_k$ \u7684\uff1bK, V\u5206\u522b\u4e3a\uff1a$m \\times d_k$\uff0c$m \\times d_v$ \u591a\u5934\u6ce8\u610f\u529b V \u662f\u4e00\u4e2a\u5411\u91cf\u8fdb\u6765\uff0c\u7528$W^v$\u505a\u4e00\u4e2a\u7ebf\u6027\u53d8\u6362\uff0c\u5f97\u5230 $d_v$\u7ef4\u5ea6\u7684\u5411\u91cf K \u8fdb\u6765\uff0c\u7528$W^k$\u505a\u4e00\u4e2a\u7ebf\u6027\u53d8\u6362\uff0c\u5f97\u5230$d_k$\u7ef4\u5ea6\u7684\u5411\u91cf Q \u8fdb\u6765\uff0c\u7528$W^Q$\u505a\u4e00\u4e2a\u7ebf\u6027\u53d8\u6362\uff0c\u540c\u6837\u4e00\u4e2a\u5f97\u5230$d_k$\u7ef4\u5ea6\u7684\u5411\u91cf \u8fd9\u6837\u7684\u8bdd\u5c31\u662f\u5f97\u5230\u4e86\u4e00\u4e2ahead\uff0c\u8ba1\u7b97\u51fa8\u4e2a\u5934\uff08\u591a\u5934\u6ce8\u610f\u529b\uff0c\u53ef\u4ee5\u5e76\u884c\uff09 \u56e0\u4e3a scaled \u70b9\u4e58 attention \u51fa\u6765\u662f\u4e00\u4e2a $d_k$\u7ef4\u5ea6\u7684\u5411\u91cf\uff0c\u6240\u4ee5\u5c31\u5f97\u5230\u4e86 8 \u4e2a $d_k$ \u7ef4\u5ea6\u7684\u5411\u91cf\u3002\u6bcf\u4e00\u4e2a$d_k$ \u662f64 \u7ef4\u5ea6\uff0c\u6240\u4ee5\u8fd9\u6837\u5c31\u80fd\u5f97\u5230 512 \u7ef4\u7684\u5411\u91cf\u3002 \u603b\u7ed3 \u4e00\u4e2a\u53e5\u5b50\u8fdb\u6765\uff0c\u901a\u8fc7\u5206\u8bcd\u548cembedding\u5f97\u5230, \u5047\u8bbe\u662fn\u4e2a\u8bcd\uff0c\u6bcf\u4e2aembedding\u5411\u91cf\u4e3a512\u7ef4\u5ea6\uff1a[n, 512] \u3002 \u4f4d\u7f6e\u7f16\u7801\uff0c\u6839\u636e\u6587\u4e2d\u7684\u516c\u5f0f\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\uff081,2,...,n) \u90fd\u6709\u5bf9\u5e94\u7684\u4f4d\u7f6e\u7f16\u7801\uff0c\u4f4d\u7f6e\u7f16\u7801\u4e3a [1\uff0c512] \u7684\u5411\u91cf\u3002\u5bf9\u5e94\u4f4d\u7f6e\u76f8\u52a0\uff0c\u5f97\u5230 [n,512]\u3002 \u8fdb\u5165\u5230\u591a\u5934\u6ce8\u610f\u529b\u6a21\u5757\u3002\u6b64\u65f6Q,K,V \u90fd\u76f8\u540c\uff0c\u90fd\u662f [n,512]\u3002 \u5bf9V [n,512]\uff0c\u505a\u4e00\u4e2a\u7ebf\u6027\u6620\u5c04\uff0c\u5f97\u5230 [n,64]; \u540c\u6837 \u5bf9K\uff0c\u548cQ\u505a\u4e00\u6837\u7684\u64cd\u4f5c\uff0c\u4f46\u662f\u7ebf\u6027\u6620\u5c04\u7684\u6743\u91cd\u4e0d\u540c\u3002\u90fd\u662f [n,64]\u3002\u8fd9\u6837\u7684\u64cd\u4f5c\u5c31\u5f97\u5230\u4e86\u4e00\u4e2ahead: Q,K,V \u3002 \u56e0\u4e3a\u4e00\u4e2ahead\u91cc\u9762\u7684QKV\u90fd\u662f[n,64]\uff0c\u6267\u884c8\u6b21\u7b2c\u56db\u6b65\uff08\u8fd98\u6b21\u7684\u53c2\u6570\u90fd\u662f\u72ec\u7acb\u7684\uff09\uff0c\u5f97\u5230\u4e868\u4e2aQKV\uff0c\u5176\u4e2d\u6bcf\u4e2aQKV\u90fd\u662f [n,64] \u5bf9\u4e8e\u4e00\u4e2ahead\u6765\u8bf4\uff0c\u8fdb\u5165\u5230 scaled\u70b9\u4e58\u6ce8\u610f\u529b\u7ed3\u6784 \u4e2d\uff0c\u5f97\u5230\u4e86 [n,64] \u7684\u8f93\u51fa\u3002 \u73b0\u5728\u67098\u4e2a\u5934\uff0c\u5f97\u5230\u4e868 \u4e2a[n,64]\u7684\u8f93\u51fa\uff0c\u5c06\u5b83\u4eecconcat\u5230\u4e00\u8d77\uff0c\u5f97\u5230[n,512] \u53c8\u7ecf\u8fc7\u4e00\u4e2a\u7ebf\u6027\u53d8\u6362\uff0c\u4ed6\u8fd8\u662f\u8f93\u51fa [n,512]\u3002 \u8fdb\u5165\u5230 add&norm\u5c42\uff0c\u7ef4\u5ea6\u4e0d\u53d8 \u8fdb\u5165\u5230\u591a\u5c42\u611f\u77e5\u673a\uff0c\u9690\u85cf\u5c42\u4e2a\u6570\u4e3a2048\uff0c\u7528ReLU\u6fc0\u6d3b\uff0c\u8f93\u51fa\u5c42512.\u6240\u4ee5\u7ed3\u679c\u8fd8\u662f[n,512] \u7b2c\u4e00\u6b65\u5230\u7b2c\u5341\u6b65\u91cd\u590d\u6267\u884c6\u6b21\uff0c\u5f97\u5230\u6700\u7ec8\u7f16\u7801\u5668\u8f93\u51fa\u7684[n,512] \u590d\u5236\u4e09\u4efd[n,512]\uff0c\u4e24\u4e2a\u8fdb\u5165\u5230\u89e3\u7801\u5668\u7684\u5bf9\u5e94\u4f4d\u7f6e\u3002","title":"\u300aattention is all your need\u300b\u9605\u8bfb\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8Aattention%20is%20all%20your%20need%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#attention-is-all-your-need","text":"\u8fd9\u662f\u4e00\u7bc7\u6df1\u5ea6\u5b66\u4e60\u9886\u57df\u7684\u91cd\u8981\u6587\u7ae0\uff0c\u6765\u81ea\u8c37\u6b4c\u3002","title":"\u300aattention is all your need\u300b\u9605\u8bfb\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8Aattention%20is%20all%20your%20need%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#abstract","text":"\u4e3b\u8981\u7684\u53e5\u5b50\u7ffb\u8bd1\u6a21\u578b\u4e3b\u8981\u662f\u57fa\u4e8e\u590d\u6742\u7684\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u6216\u8005\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u5305\u542b\u4e86\u7f16\u7801\u5668\u89e3\u7801\u5668\u7ed3\u6784\u3002\u76ee\u524d\u6700\u597d\u6027\u80fd\u7684\u6a21\u578b\u4f7f\u7528attention\u673a\u5236\u6765\u8fde\u63a5\u7f16\u7801\u5668\u89e3\u7801\u5668\u3002\u672c\u6587\u63d0\u51fa\u4e86Transformer\uff0c\u7b80\u5355\u7684\u7f51\u7edc\u7ed3\u6784\uff0c\u53ea\u4f9d\u636eattention\u673a\u5236\uff0c\u5f7b\u5e95\u6452\u5f03\u4e86\u5faa\u73af\u548c\u5377\u79ef\u7684\u7f51\u7edc\u7ed3\u6784\u3002 \u8868\u73b0\uff1a1. \u66f4\u52a0\u5229\u4e8e\u5e76\u884c\u30022. \u6bd4\u5f53\u524d\u6700\u597d\u7684\u7ffb\u8bd1\u6a21\u578b\u597d2BLEU\u3002","title":"abstract"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8Aattention%20is%20all%20your%20need%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#intro","text":"RNN\u3002 LSTM\u3002 gated recurrent neural networks\u3002 attention\u3002","title":"intro"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8Aattention%20is%20all%20your%20need%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#background","text":"\u7565","title":"background"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8Aattention%20is%20all%20your%20need%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#model-architecture","text":"\u8f93\u5165\u662f\u4e00\u4e2a\u5e8f\u5217\uff1a $$ x_1,x_2,...,x_n $$ encoder\u8f93\u51fa\u4e3a\uff1a $$ z_1,z_2,...,z_n $$ \u7ed9\u5b9a\u4e86$[z_1,..,z_n]$, \u89e3\u7801\u5668\u5f97\u5230\uff1a $$ y_1,y_2,...,y_m $$ transformer \u4e5f\u670d\u4ece\u8fd9\u6837\u7684\u6574\u4f53\u6784\u9020\uff0c\u4e0b\u9762\u67e5\u770b\u7ec6\u8282\uff1a","title":"model architecture"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8Aattention%20is%20all%20your%20need%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#encoder-and-decoder-stacks","text":"encoder\uff1a \u7f16\u7801\u5668\u7531N\uff08N=6\uff09\u4e2a\u8fd9\u6837\u7684\u7ed3\u6784\u7ec4\u6210\uff0c\u7b2c\u4e00\u4e2a\u662f\u591a\u5934\u6ce8\u610f\u529b\uff0c\u7b2c\u4e8c\u4e2a\u662f\u524d\u9988\u7f51\u7edc\uff08\u591a\u5c42\u611f\u77e5\u673a\uff09\u3002 decoder\uff1a \u89e3\u7801\u5668\u662fN\uff08N=6)\u4e2a\u8fd9\u6837\u7684\u7ed3\u6784\u7ec4\u6210\uff0cencoder\u7684\u8f93\u51fa\u5148\u8fdb\u5165\u5230masked \u591a\u5934\u6ce8\u610f\u529b\uff0c\u7136\u540e\u5728\u8fdb\u5165\u5230\u548c\u7f16\u7801\u5668\u76f8\u540c\u7684\u4e24\u4e2a\u7ed3\u6784\u4e2d\u53bb\u3002","title":"encoder and decoder stacks"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8Aattention%20is%20all%20your%20need%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#attention","text":"attention\u51fd\u6570\uff1a\u5c06\u4e00\u4e2aquery\u548c\u4e00\u7cfb\u5217\u7684key-value pairs\u6620\u5c04\u5230\u8f93\u51fa\u3002","title":"attention"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8Aattention%20is%20all%20your%20need%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#scaled-attention","text":"Q\uff1a\u662f\u4e00\u4e2a\u56fa\u5b9a\u7ef4\u5ea6\uff08$d_k$\uff09\u7684\u5411\u91cf\uff0c\u5728\u8fd9\u91cc\u4e00\u822c\u5411\u91cf\u662f $1 \\times d_k$\u7684\u77e9\u9635 K\uff1a\u4e5f\u662f\u56fa\u5b9a\u7ef4\uff08$d_k$\uff09\u5ea6\u7684\u5411\u91cf V\uff1a\u56fa\u5b9a\u7ef4\u5ea6\uff08$d_v$\uff09\u7684\u5411\u91cf \u5982\u679c\u628a\u5411\u91cf\u5168\u90e8\u6253\u5305\u5230\u4e00\u8d77\uff0c\u90a3\u4e48\u8ba1\u7b97\u516c\u5f0f\u5199\u4e3a\uff1a \u5728\u6b64\uff0c\u53ea\u9700\u8981\u4e86\u89e3\u8fd9\u6837\u7684attention\u6a21\u5757\u9700\u8981QKV\u4e09\u4e2a\u8f93\u5165\uff0c\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u8f93\u51fa\u3002 \u5bf9\u4e8e\u4e00\u4e2a\u6837\u672c\u6765\u8bf4, attention \u51fd\u6570\u7684\u5199\u6cd5\u4e3a\uff1a $$ QK^T=\u4e00\u4e2a\u6807\u91cf\\ (QK^T)V= 1 \\times d_v \u7684\u5411\u91cf $$ \u5bf9\u4e8en\u4e2a\u6837\u672c\u6765\u8bf4\uff1aQ\u5c31\u53d8\u4e3a $n \\times d_k$ \u7684\uff1bK, V\u5206\u522b\u4e3a\uff1a$m \\times d_k$\uff0c$m \\times d_v$","title":"scaled \u70b9\u4e58 attention"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8Aattention%20is%20all%20your%20need%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_1","text":"V \u662f\u4e00\u4e2a\u5411\u91cf\u8fdb\u6765\uff0c\u7528$W^v$\u505a\u4e00\u4e2a\u7ebf\u6027\u53d8\u6362\uff0c\u5f97\u5230 $d_v$\u7ef4\u5ea6\u7684\u5411\u91cf K \u8fdb\u6765\uff0c\u7528$W^k$\u505a\u4e00\u4e2a\u7ebf\u6027\u53d8\u6362\uff0c\u5f97\u5230$d_k$\u7ef4\u5ea6\u7684\u5411\u91cf Q \u8fdb\u6765\uff0c\u7528$W^Q$\u505a\u4e00\u4e2a\u7ebf\u6027\u53d8\u6362\uff0c\u540c\u6837\u4e00\u4e2a\u5f97\u5230$d_k$\u7ef4\u5ea6\u7684\u5411\u91cf \u8fd9\u6837\u7684\u8bdd\u5c31\u662f\u5f97\u5230\u4e86\u4e00\u4e2ahead\uff0c\u8ba1\u7b97\u51fa8\u4e2a\u5934\uff08\u591a\u5934\u6ce8\u610f\u529b\uff0c\u53ef\u4ee5\u5e76\u884c\uff09 \u56e0\u4e3a scaled \u70b9\u4e58 attention \u51fa\u6765\u662f\u4e00\u4e2a $d_k$\u7ef4\u5ea6\u7684\u5411\u91cf\uff0c\u6240\u4ee5\u5c31\u5f97\u5230\u4e86 8 \u4e2a $d_k$ \u7ef4\u5ea6\u7684\u5411\u91cf\u3002\u6bcf\u4e00\u4e2a$d_k$ \u662f64 \u7ef4\u5ea6\uff0c\u6240\u4ee5\u8fd9\u6837\u5c31\u80fd\u5f97\u5230 512 \u7ef4\u7684\u5411\u91cf\u3002","title":"\u591a\u5934\u6ce8\u610f\u529b"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8Aattention%20is%20all%20your%20need%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_2","text":"\u4e00\u4e2a\u53e5\u5b50\u8fdb\u6765\uff0c\u901a\u8fc7\u5206\u8bcd\u548cembedding\u5f97\u5230, \u5047\u8bbe\u662fn\u4e2a\u8bcd\uff0c\u6bcf\u4e2aembedding\u5411\u91cf\u4e3a512\u7ef4\u5ea6\uff1a[n, 512] \u3002 \u4f4d\u7f6e\u7f16\u7801\uff0c\u6839\u636e\u6587\u4e2d\u7684\u516c\u5f0f\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\uff081,2,...,n) \u90fd\u6709\u5bf9\u5e94\u7684\u4f4d\u7f6e\u7f16\u7801\uff0c\u4f4d\u7f6e\u7f16\u7801\u4e3a [1\uff0c512] \u7684\u5411\u91cf\u3002\u5bf9\u5e94\u4f4d\u7f6e\u76f8\u52a0\uff0c\u5f97\u5230 [n,512]\u3002 \u8fdb\u5165\u5230\u591a\u5934\u6ce8\u610f\u529b\u6a21\u5757\u3002\u6b64\u65f6Q,K,V \u90fd\u76f8\u540c\uff0c\u90fd\u662f [n,512]\u3002 \u5bf9V [n,512]\uff0c\u505a\u4e00\u4e2a\u7ebf\u6027\u6620\u5c04\uff0c\u5f97\u5230 [n,64]; \u540c\u6837 \u5bf9K\uff0c\u548cQ\u505a\u4e00\u6837\u7684\u64cd\u4f5c\uff0c\u4f46\u662f\u7ebf\u6027\u6620\u5c04\u7684\u6743\u91cd\u4e0d\u540c\u3002\u90fd\u662f [n,64]\u3002\u8fd9\u6837\u7684\u64cd\u4f5c\u5c31\u5f97\u5230\u4e86\u4e00\u4e2ahead: Q,K,V \u3002 \u56e0\u4e3a\u4e00\u4e2ahead\u91cc\u9762\u7684QKV\u90fd\u662f[n,64]\uff0c\u6267\u884c8\u6b21\u7b2c\u56db\u6b65\uff08\u8fd98\u6b21\u7684\u53c2\u6570\u90fd\u662f\u72ec\u7acb\u7684\uff09\uff0c\u5f97\u5230\u4e868\u4e2aQKV\uff0c\u5176\u4e2d\u6bcf\u4e2aQKV\u90fd\u662f [n,64] \u5bf9\u4e8e\u4e00\u4e2ahead\u6765\u8bf4\uff0c\u8fdb\u5165\u5230 scaled\u70b9\u4e58\u6ce8\u610f\u529b\u7ed3\u6784 \u4e2d\uff0c\u5f97\u5230\u4e86 [n,64] \u7684\u8f93\u51fa\u3002 \u73b0\u5728\u67098\u4e2a\u5934\uff0c\u5f97\u5230\u4e868 \u4e2a[n,64]\u7684\u8f93\u51fa\uff0c\u5c06\u5b83\u4eecconcat\u5230\u4e00\u8d77\uff0c\u5f97\u5230[n,512] \u53c8\u7ecf\u8fc7\u4e00\u4e2a\u7ebf\u6027\u53d8\u6362\uff0c\u4ed6\u8fd8\u662f\u8f93\u51fa [n,512]\u3002 \u8fdb\u5165\u5230 add&norm\u5c42\uff0c\u7ef4\u5ea6\u4e0d\u53d8 \u8fdb\u5165\u5230\u591a\u5c42\u611f\u77e5\u673a\uff0c\u9690\u85cf\u5c42\u4e2a\u6570\u4e3a2048\uff0c\u7528ReLU\u6fc0\u6d3b\uff0c\u8f93\u51fa\u5c42512.\u6240\u4ee5\u7ed3\u679c\u8fd8\u662f[n,512] \u7b2c\u4e00\u6b65\u5230\u7b2c\u5341\u6b65\u91cd\u590d\u6267\u884c6\u6b21\uff0c\u5f97\u5230\u6700\u7ec8\u7f16\u7801\u5668\u8f93\u51fa\u7684[n,512] \u590d\u5236\u4e09\u4efd[n,512]\uff0c\u4e24\u4e2a\u8fdb\u5165\u5230\u89e3\u7801\u5668\u7684\u5bf9\u5e94\u4f4d\u7f6e\u3002","title":"\u603b\u7ed3"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8Adetermining%20the%20direction%20of%20the%20local%20search%20in%20topological%20ordering%20space%20for%20Bayesian%20network%20structure%20learning%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94/","text":"\u300adetermining the direction of the local search in topological ordering space for Bayesian network structure learning\u300b\u9605\u8bfb\u7b14\u8bb0 abstract \u5728\u62d3\u6251\u987a\u5e8f\u4e0a\u8fdb\u884c\u5c40\u90e8\u641c\u7d22\u662fBN\u7ed3\u6784\u5b66\u4e60\u7684\u6709\u6548\u65b9\u6cd5\u3002\u7136\u800c\uff0c\u73b0\u6709\u7684\u7b97\u6cd5\u4e3b\u8981\u5173\u6ce8\u4e8e\uff0c\u968f\u673a\u9009\u53d6\u4e00\u4e2aodering\u7684\u8fd1\u90bb\uff0c\u8fd9\u6ca1\u6709\u660e\u786e\u7684\u65b9\u5411\uff0c\u5bb9\u6613\u5728\u5c40\u90e8\u6700\u4f18\u505c\u4e0b\u6765\u3002\u672c\u6587\u63d0\u51fa\u4e00\u4e2a\u65b0\u7684\u65b9\u6cd5\uff0c\u63d0\u5347\u5c40\u90e8\u641c\u7d22\u7684\u80fd\u529b\uff0c\u901a\u8fc7\u51b3\u5b9a\u641c\u7d22\u65b9\u5411\u3002\u8bbe\u5b9a\u9c81\u68d2\u7684\u7ec8\u6b62\u6761\u4ef6\u548c\u63d2\u5165\u65b9\u6cd5\u3002 intro \u672c\u6587\u7684\u8d21\u732e \u5c40\u90e8\u641c\u7d22\u7684\u6709\u6548\u65b9\u5411\u3002 \u5c06DAG\u8f6c\u5316\u4e3a\u7b49\u4ef7\u7ed3\u6784\uff0c\u4ee5\u91cd\u65b0\u641c\u7d22\uff0c\u8df3\u51fa\u5c40\u90e8\u6700\u4f18 \u5b9e\u9a8c\u9a8c\u8bc1 preliminaries \u8bc4\u5206\u7684\u53ef\u5206\u89e3\u6027\uff1a $$ score(G:D)=\\sum {i=1,...,n}=score(X_i|Pa {X_i}^{G}:D) $$ score cache\uff1a ordering \u62d3\u6251\u987a\u5e8f \u57fa\u4e8e\u62d3\u6251\u987a\u5e8f\u7684\u5c40\u90e8\u641c\u7d22\u4e3b\u8981\u662f\u4e0b\u9762\u51e0\u6b65\uff1a \u521d\u59cb\u5316 \u6539\u53d8ordering\u91cc\u9762\u53d8\u91cf\u7684\u4f4d\u7f6e restart conversion\u5c06\u987a\u5e8f\u8f6c\u5316\u4e3aDAG\uff0c\u53ef\u4ee5\u4f7f\u7528K2\u7b97\u6cd5","title":"\u300adetermining the direction of the local search in topological ordering space for Bayesian network structure learning\u300b\u9605\u8bfb\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8Adetermining%20the%20direction%20of%20the%20local%20search%20in%20topological%20ordering%20space%20for%20Bayesian%20network%20structure%20learning%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94/#determining-the-direction-of-the-local-search-in-topological-ordering-space-for-bayesian-network-structure-learning","text":"","title":"\u300adetermining the direction of the local search in topological ordering space for Bayesian network structure learning\u300b\u9605\u8bfb\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8Adetermining%20the%20direction%20of%20the%20local%20search%20in%20topological%20ordering%20space%20for%20Bayesian%20network%20structure%20learning%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94/#abstract","text":"\u5728\u62d3\u6251\u987a\u5e8f\u4e0a\u8fdb\u884c\u5c40\u90e8\u641c\u7d22\u662fBN\u7ed3\u6784\u5b66\u4e60\u7684\u6709\u6548\u65b9\u6cd5\u3002\u7136\u800c\uff0c\u73b0\u6709\u7684\u7b97\u6cd5\u4e3b\u8981\u5173\u6ce8\u4e8e\uff0c\u968f\u673a\u9009\u53d6\u4e00\u4e2aodering\u7684\u8fd1\u90bb\uff0c\u8fd9\u6ca1\u6709\u660e\u786e\u7684\u65b9\u5411\uff0c\u5bb9\u6613\u5728\u5c40\u90e8\u6700\u4f18\u505c\u4e0b\u6765\u3002\u672c\u6587\u63d0\u51fa\u4e00\u4e2a\u65b0\u7684\u65b9\u6cd5\uff0c\u63d0\u5347\u5c40\u90e8\u641c\u7d22\u7684\u80fd\u529b\uff0c\u901a\u8fc7\u51b3\u5b9a\u641c\u7d22\u65b9\u5411\u3002\u8bbe\u5b9a\u9c81\u68d2\u7684\u7ec8\u6b62\u6761\u4ef6\u548c\u63d2\u5165\u65b9\u6cd5\u3002","title":"abstract"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8Adetermining%20the%20direction%20of%20the%20local%20search%20in%20topological%20ordering%20space%20for%20Bayesian%20network%20structure%20learning%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94/#intro","text":"\u672c\u6587\u7684\u8d21\u732e \u5c40\u90e8\u641c\u7d22\u7684\u6709\u6548\u65b9\u5411\u3002 \u5c06DAG\u8f6c\u5316\u4e3a\u7b49\u4ef7\u7ed3\u6784\uff0c\u4ee5\u91cd\u65b0\u641c\u7d22\uff0c\u8df3\u51fa\u5c40\u90e8\u6700\u4f18 \u5b9e\u9a8c\u9a8c\u8bc1","title":"intro"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8Adetermining%20the%20direction%20of%20the%20local%20search%20in%20topological%20ordering%20space%20for%20Bayesian%20network%20structure%20learning%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94/#preliminaries","text":"\u8bc4\u5206\u7684\u53ef\u5206\u89e3\u6027\uff1a $$ score(G:D)=\\sum {i=1,...,n}=score(X_i|Pa {X_i}^{G}:D) $$ score cache\uff1a ordering \u62d3\u6251\u987a\u5e8f \u57fa\u4e8e\u62d3\u6251\u987a\u5e8f\u7684\u5c40\u90e8\u641c\u7d22\u4e3b\u8981\u662f\u4e0b\u9762\u51e0\u6b65\uff1a \u521d\u59cb\u5316 \u6539\u53d8ordering\u91cc\u9762\u53d8\u91cf\u7684\u4f4d\u7f6e restart conversion\u5c06\u987a\u5e8f\u8f6c\u5316\u4e3aDAG\uff0c\u53ef\u4ee5\u4f7f\u7528K2\u7b97\u6cd5","title":"preliminaries"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AdirectLiGAM%E3%80%8B%E7%BB%93%E6%9E%84%E6%96%B9%E7%A8%8B%E6%A8%A1%E5%9E%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/","text":"\u300aA Linear Non-Gaussian Acyclic Model for Causal Discovery\u300b\u8bfb\u4e66\u7b14\u8bb0 \u524d\u8a00 \u300aA Survey of Learning Causality with Data: Problems and Methods\u300b \u5bf9\u56e0\u679c\u63a8\u65ad\u6709\u4e00\u4e2a\u5168\u9762\u7684\u6982\u62ec \u7528 \u975e\u5b9e\u9a8c\u6570\u636e \u753b\u56e0\u679c\u7f51\u7edc\u56fe\u7684\u65b9\u6cd5\u53ef\u4ee5\u5206\u4e3a\u4e09\u7c7b\uff1a Constraint-based Algorithms\uff0c\u4f8b\u5982PC\u7b97\u6cd5 Score-based Algorithms based on functional causal models\uff0c\u4f8b\u5982 LiNGAM\u548cno tears abstract non-experimental data \u975e\u5b9e\u9a8c\u6570\u636e\u6307\u7684\u662f\u4e0d\u662f\u4eba\u4e3a\u8fdb\u884c\u63a7\u5236\u53d8\u91cf\u7684\u6570\u636e\u3002\u4e00\u822c\u662f\u89c2\u6d4b\u6570\u636e\uff0cobservational data\u3002\u5df2\u6709\u5f88\u591a\u65b9\u6cd5\u7528\u4e8e\u4ece\u975e\u5b9e\u9a8c\u6570\u636e\u53d1\u6398\u56e0\u679c\u5173\u7cfb\uff0c\u4e00\u822c\u90fd\u4f1a\u8fdb\u884c\u4e00\u4e9b\u5047\u8bbe\u3002\u6cbf\u7740\u8fd9\u4e9b\u91cf\u7814\u7a76\uff0c\u672c\u6587\u63d0\u51fa\u4e00\u4e0b\u5047\u8bbe\uff1a \u6570\u636e\u7684\u751f\u6210\u8fc7\u7a0b\u662f\u7ebf\u6027\u7684\u3002 \u6ca1\u6709\u672a\u89c2\u6d4b\u5230\u7684\u53d8\u91cf\u3002\uff08\u6bd4\u5982\u8bf4a->b->c\uff0c\u5982\u679c\u8bf4b\u672a\u88ab\u89c2\u6d4b\u5230\uff0c\u90a3\u4e48\u5c31\u4f1a\u51fa\u73b0 a->c \u7684\u9519\u8bef\u7ed3\u8bba\uff09 distrubance variable \u662f\u975e\u9ad8\u65af\u5206\u5e03\u4e14\u65b9\u5dee\u4e0d\u4e3a0\u3002 introducation Pearl formualized concepts related to causality using probability distribution defined on DAG. it is impossible or too expensive to perform controlled experiments, hence causal discover with uncontrolled data would be very valuable. Existing discovery algorithms work in one of two settings. In the case of discrete data, no functional form for the dependencies is usually assumed. In the case of continuous variables, a linear-Gaussian approach is almost taken. \u672c\u6587\u63d0\u51fa\u7684\u65b9\u6cd5\u9002\u7528\u4e8e\u8fde\u7eed\u53d8\u91cf\uff0c\u4e0d\u9700\u8981\u4f7f\u7528\u9ad8\u65af\u5047\u8bbe\u3002 Linear Casual Network assume: \u8fd9\u4e09\u4e2a\u7279\u5f81\u5206\u522b\u4e3a Linear\uff0cNon-Gaussian, Acyclic Model \u79f0\u4e4b\u4e3a LiNGAM\u3002 https://zhuanlan.zhihu.com/p/369720949 assumption: \u89c2\u5bdf\u53d8\u91cf\u6309\u7167\u4e00\u5b9a\u7684\u56e0\u679c\u987a\u5e8f\u4ea7\u751f\uff0c\u5bf9\u4e8e$x_i$\uff0c\u5b83\u7684\u6392\u5e8f\u4e3a$k(i)$\u3002 \u6570\u636e\u7684\u751f\u6210\u8fc7\u7a0b\u662f\u7ebf\u6027\u7684\u3002 \u6570\u636e\u662f\u4eceDAG\u4e2d\u751f\u6210\u51fa\u6765\u7684\uff0cDAG\u7531$m \\times m$\u7684\u90bb\u63a5\u77e9\u9635\u8868\u793a\uff1a $$ B={b_{ij}} $$ \u8bb0\uff1a$k(i)$\u662f\u4e00\u4e2acausal order for $x_i$ $$ x_{i}=\\sum_{k(j)<k(i)} b_{i j} x_{j}+e_{i} $$ $e$\u662f\u5916\u90e8\u5f71\u54cd\uff0c\u662f\u4e00\u4e2a\u975e\u9ad8\u65af\u7684\u5206\u5e03\uff0c\u5747\u503c\u4e3a0\uff0c\u65b9\u5dee\u4e0d\u4e3a0\uff0c$e_i$\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u6240\u4ee5\u8fd9\u91cc\u6ca1\u6709\u4efb\u4f55\u9690\u53d8\u91cf\uff08added another assumption\uff09 model identification using independent component analysis \u6a21\u578b\u53ef\u4ee5\u5199\u4e3a\uff1a $$ \\mathbf{x}=\\mathbf{B} \\mathbf{x}+\\mathbf{e} $$ \u6b64\u5904\u7684$\\mathbf{B}$ \u53ef\u4ee5\u6309\u7167causal order \u8fdb\u884c\u884c\u53d8\u6362\uff0c\u5f97\u5230\u4e00\u4e2a\u4e0b\u4e09\u89d2\u77e9\u9635\u3002 \u7ee7\u7eed\u6539\u5199\uff1a $$ \\mathbf{A}=(\\mathbf{I}-\\mathbf{B})^{-1} \\ \\mathbf{x}=\\mathbf{A} \\mathbf{e} $$ ICA\u65b9\u6cd5\u5c31\u662f\u4e13\u95e8\u7528\u4e8e\u8fdb\u884c\u6c42\u89e3\u8fd9\u6837\u7684\u4e0d\u7b49\u5f0f\uff0c\u5b83\u5047\u8bbe\uff1a x\u662f\u6211\u4eec\u5f97\u5230\u7684\u4fe1\u53f7 A\u662f\u4e00\u4e2a\u6df7\u6dc6\u77e9\u9635\uff0c\u7ebf\u6027\u6620\u5c04 \u6211\u4eec\u7528x\u53bb\u4f30\u8ba1A\u548ce\u3002 \u6240\u4ee5\u901a\u8fc7ICA\u65b9\u6cd5\u53ef\u4ee5\u5f97\u5230A\uff0c\u4f46\u662f\u56e0\u679c\u987a\u5e8f\u6ca1\u6709\u5f97\u5230\u6ee1\u8db3\u3002 \u8ba1\u7b97\u51fa$A^{-1} = \\mathbf{I}-\\mathbf{B}$ \u8fdb\u884c\u884c\u5217\u53d8\u6362\uff0c\u4ee5\u5f97\u5230\u4e00\u4e2a\u4e0b\u4e09\u89d2\u4e3e\u8bc1\u7528\u4e8e\u63a8\u65ad causal order\u3002 LiNGAM Discovery algorithm \u5bf9\u4e8e X = AS \u6267\u884c ICA\u7b97\u6cd5\uff0c\u7136\u540e\u5bf9\u4e8e A \u6c42\u9006\u77e9\u9635\uff0c\u8bb0\u4e3a W \u8fdb\u884c\u884c\u53d8\u6362\uff0c\u4f7f\u5f97\u5bf9\u89d2\u5143\u7d20\u4e0d\u4e3a0\uff0cminimize $\\sum_{i} 1 /\\left|\\mathbb{\\mathbf { W }}_{i i}\\right|$ \u5bf9\u6bcf\u884c\u5143\u7d20\u90fd\u9664\u4ee5\u5176\u5bf9\u89d2\u5143\u7d20\uff0c\u4f7f\u5f97\u5bf9\u89d2\u5143\u7d20\u5747\u4e3a1 B = I - W \u5c06B\u8fdb\u884c\u884c\u53d8\u6362\uff0c\u4f7f\u5f97\u5176\u53d8\u4e3a\u4e25\u683c\u7684\u4e0b\u4e09\u89d2\u77e9\u9635 ICA\u7b97\u6cd5\u8be6\u89e3 \u7ecf\u5178\u7684\u9e21\u5c3e\u9152\u5bb4\u4f1a\u95ee\u9898\uff1a \u623f\u95f4\u5404\u4e2a\u4f4d\u7f6e\u653e\u7f6e\u4e86 n \u4e2a\u9ea6\u514b\u98ce${x_1,x_2,x_3,...,x_n}$ \u6bcf\u4e2a\u9ea6\u514b\u98ce\u91c7\u96c6\u4e86m\u6b21\uff0c\u90a3\u4e48 $X_{m*n}$ \u7531\u4e8e\u4f4d\u7f6e\u7684\u539f\u56e0\uff0c\u58f0\u6e90\u662f\u7ebf\u6027\u53e0\u52a0\u7684\uff1a $$ X = AS $$ \u5982\u4f55\u6839\u636e\u5df2\u77e5\u7684X\uff0c\u5206\u79bb\u51fa\u5404\u4e2aS\u5462\uff1f (m,n)=(m,m)(m,n) \u76ee\u524d\u6bd4\u8f83\u5e38\u89c1\u7684\u6709 FastICA\u7b97\u6cd5\uff1a simulation","title":"\u300aA Linear Non-Gaussian Acyclic Model for Causal Discovery\u300b\u8bfb\u4e66\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AdirectLiGAM%E3%80%8B%E7%BB%93%E6%9E%84%E6%96%B9%E7%A8%8B%E6%A8%A1%E5%9E%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#a-linear-non-gaussian-acyclic-model-for-causal-discovery","text":"","title":"\u300aA Linear Non-Gaussian Acyclic Model for Causal Discovery\u300b\u8bfb\u4e66\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AdirectLiGAM%E3%80%8B%E7%BB%93%E6%9E%84%E6%96%B9%E7%A8%8B%E6%A8%A1%E5%9E%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_1","text":"\u300aA Survey of Learning Causality with Data: Problems and Methods\u300b \u5bf9\u56e0\u679c\u63a8\u65ad\u6709\u4e00\u4e2a\u5168\u9762\u7684\u6982\u62ec \u7528 \u975e\u5b9e\u9a8c\u6570\u636e \u753b\u56e0\u679c\u7f51\u7edc\u56fe\u7684\u65b9\u6cd5\u53ef\u4ee5\u5206\u4e3a\u4e09\u7c7b\uff1a Constraint-based Algorithms\uff0c\u4f8b\u5982PC\u7b97\u6cd5 Score-based Algorithms based on functional causal models\uff0c\u4f8b\u5982 LiNGAM\u548cno tears","title":"\u524d\u8a00"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AdirectLiGAM%E3%80%8B%E7%BB%93%E6%9E%84%E6%96%B9%E7%A8%8B%E6%A8%A1%E5%9E%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#abstract","text":"non-experimental data \u975e\u5b9e\u9a8c\u6570\u636e\u6307\u7684\u662f\u4e0d\u662f\u4eba\u4e3a\u8fdb\u884c\u63a7\u5236\u53d8\u91cf\u7684\u6570\u636e\u3002\u4e00\u822c\u662f\u89c2\u6d4b\u6570\u636e\uff0cobservational data\u3002\u5df2\u6709\u5f88\u591a\u65b9\u6cd5\u7528\u4e8e\u4ece\u975e\u5b9e\u9a8c\u6570\u636e\u53d1\u6398\u56e0\u679c\u5173\u7cfb\uff0c\u4e00\u822c\u90fd\u4f1a\u8fdb\u884c\u4e00\u4e9b\u5047\u8bbe\u3002\u6cbf\u7740\u8fd9\u4e9b\u91cf\u7814\u7a76\uff0c\u672c\u6587\u63d0\u51fa\u4e00\u4e0b\u5047\u8bbe\uff1a \u6570\u636e\u7684\u751f\u6210\u8fc7\u7a0b\u662f\u7ebf\u6027\u7684\u3002 \u6ca1\u6709\u672a\u89c2\u6d4b\u5230\u7684\u53d8\u91cf\u3002\uff08\u6bd4\u5982\u8bf4a->b->c\uff0c\u5982\u679c\u8bf4b\u672a\u88ab\u89c2\u6d4b\u5230\uff0c\u90a3\u4e48\u5c31\u4f1a\u51fa\u73b0 a->c \u7684\u9519\u8bef\u7ed3\u8bba\uff09 distrubance variable \u662f\u975e\u9ad8\u65af\u5206\u5e03\u4e14\u65b9\u5dee\u4e0d\u4e3a0\u3002","title":"abstract"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AdirectLiGAM%E3%80%8B%E7%BB%93%E6%9E%84%E6%96%B9%E7%A8%8B%E6%A8%A1%E5%9E%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#introducation","text":"Pearl formualized concepts related to causality using probability distribution defined on DAG. it is impossible or too expensive to perform controlled experiments, hence causal discover with uncontrolled data would be very valuable. Existing discovery algorithms work in one of two settings. In the case of discrete data, no functional form for the dependencies is usually assumed. In the case of continuous variables, a linear-Gaussian approach is almost taken. \u672c\u6587\u63d0\u51fa\u7684\u65b9\u6cd5\u9002\u7528\u4e8e\u8fde\u7eed\u53d8\u91cf\uff0c\u4e0d\u9700\u8981\u4f7f\u7528\u9ad8\u65af\u5047\u8bbe\u3002","title":"introducation"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AdirectLiGAM%E3%80%8B%E7%BB%93%E6%9E%84%E6%96%B9%E7%A8%8B%E6%A8%A1%E5%9E%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#linear-casual-network","text":"assume: \u8fd9\u4e09\u4e2a\u7279\u5f81\u5206\u522b\u4e3a Linear\uff0cNon-Gaussian, Acyclic Model \u79f0\u4e4b\u4e3a LiNGAM\u3002 https://zhuanlan.zhihu.com/p/369720949 assumption: \u89c2\u5bdf\u53d8\u91cf\u6309\u7167\u4e00\u5b9a\u7684\u56e0\u679c\u987a\u5e8f\u4ea7\u751f\uff0c\u5bf9\u4e8e$x_i$\uff0c\u5b83\u7684\u6392\u5e8f\u4e3a$k(i)$\u3002 \u6570\u636e\u7684\u751f\u6210\u8fc7\u7a0b\u662f\u7ebf\u6027\u7684\u3002 \u6570\u636e\u662f\u4eceDAG\u4e2d\u751f\u6210\u51fa\u6765\u7684\uff0cDAG\u7531$m \\times m$\u7684\u90bb\u63a5\u77e9\u9635\u8868\u793a\uff1a $$ B={b_{ij}} $$ \u8bb0\uff1a$k(i)$\u662f\u4e00\u4e2acausal order for $x_i$ $$ x_{i}=\\sum_{k(j)<k(i)} b_{i j} x_{j}+e_{i} $$ $e$\u662f\u5916\u90e8\u5f71\u54cd\uff0c\u662f\u4e00\u4e2a\u975e\u9ad8\u65af\u7684\u5206\u5e03\uff0c\u5747\u503c\u4e3a0\uff0c\u65b9\u5dee\u4e0d\u4e3a0\uff0c$e_i$\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u6240\u4ee5\u8fd9\u91cc\u6ca1\u6709\u4efb\u4f55\u9690\u53d8\u91cf\uff08added another assumption\uff09","title":"Linear Casual Network"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AdirectLiGAM%E3%80%8B%E7%BB%93%E6%9E%84%E6%96%B9%E7%A8%8B%E6%A8%A1%E5%9E%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#model-identification-using-independent-component-analysis","text":"\u6a21\u578b\u53ef\u4ee5\u5199\u4e3a\uff1a $$ \\mathbf{x}=\\mathbf{B} \\mathbf{x}+\\mathbf{e} $$ \u6b64\u5904\u7684$\\mathbf{B}$ \u53ef\u4ee5\u6309\u7167causal order \u8fdb\u884c\u884c\u53d8\u6362\uff0c\u5f97\u5230\u4e00\u4e2a\u4e0b\u4e09\u89d2\u77e9\u9635\u3002 \u7ee7\u7eed\u6539\u5199\uff1a $$ \\mathbf{A}=(\\mathbf{I}-\\mathbf{B})^{-1} \\ \\mathbf{x}=\\mathbf{A} \\mathbf{e} $$ ICA\u65b9\u6cd5\u5c31\u662f\u4e13\u95e8\u7528\u4e8e\u8fdb\u884c\u6c42\u89e3\u8fd9\u6837\u7684\u4e0d\u7b49\u5f0f\uff0c\u5b83\u5047\u8bbe\uff1a x\u662f\u6211\u4eec\u5f97\u5230\u7684\u4fe1\u53f7 A\u662f\u4e00\u4e2a\u6df7\u6dc6\u77e9\u9635\uff0c\u7ebf\u6027\u6620\u5c04 \u6211\u4eec\u7528x\u53bb\u4f30\u8ba1A\u548ce\u3002 \u6240\u4ee5\u901a\u8fc7ICA\u65b9\u6cd5\u53ef\u4ee5\u5f97\u5230A\uff0c\u4f46\u662f\u56e0\u679c\u987a\u5e8f\u6ca1\u6709\u5f97\u5230\u6ee1\u8db3\u3002 \u8ba1\u7b97\u51fa$A^{-1} = \\mathbf{I}-\\mathbf{B}$ \u8fdb\u884c\u884c\u5217\u53d8\u6362\uff0c\u4ee5\u5f97\u5230\u4e00\u4e2a\u4e0b\u4e09\u89d2\u4e3e\u8bc1\u7528\u4e8e\u63a8\u65ad causal order\u3002","title":"model identification using independent component analysis"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AdirectLiGAM%E3%80%8B%E7%BB%93%E6%9E%84%E6%96%B9%E7%A8%8B%E6%A8%A1%E5%9E%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#lingam-discovery-algorithm","text":"\u5bf9\u4e8e X = AS \u6267\u884c ICA\u7b97\u6cd5\uff0c\u7136\u540e\u5bf9\u4e8e A \u6c42\u9006\u77e9\u9635\uff0c\u8bb0\u4e3a W \u8fdb\u884c\u884c\u53d8\u6362\uff0c\u4f7f\u5f97\u5bf9\u89d2\u5143\u7d20\u4e0d\u4e3a0\uff0cminimize $\\sum_{i} 1 /\\left|\\mathbb{\\mathbf { W }}_{i i}\\right|$ \u5bf9\u6bcf\u884c\u5143\u7d20\u90fd\u9664\u4ee5\u5176\u5bf9\u89d2\u5143\u7d20\uff0c\u4f7f\u5f97\u5bf9\u89d2\u5143\u7d20\u5747\u4e3a1 B = I - W \u5c06B\u8fdb\u884c\u884c\u53d8\u6362\uff0c\u4f7f\u5f97\u5176\u53d8\u4e3a\u4e25\u683c\u7684\u4e0b\u4e09\u89d2\u77e9\u9635","title":"LiNGAM Discovery algorithm"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AdirectLiGAM%E3%80%8B%E7%BB%93%E6%9E%84%E6%96%B9%E7%A8%8B%E6%A8%A1%E5%9E%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#ica","text":"\u7ecf\u5178\u7684\u9e21\u5c3e\u9152\u5bb4\u4f1a\u95ee\u9898\uff1a \u623f\u95f4\u5404\u4e2a\u4f4d\u7f6e\u653e\u7f6e\u4e86 n \u4e2a\u9ea6\u514b\u98ce${x_1,x_2,x_3,...,x_n}$ \u6bcf\u4e2a\u9ea6\u514b\u98ce\u91c7\u96c6\u4e86m\u6b21\uff0c\u90a3\u4e48 $X_{m*n}$ \u7531\u4e8e\u4f4d\u7f6e\u7684\u539f\u56e0\uff0c\u58f0\u6e90\u662f\u7ebf\u6027\u53e0\u52a0\u7684\uff1a $$ X = AS $$ \u5982\u4f55\u6839\u636e\u5df2\u77e5\u7684X\uff0c\u5206\u79bb\u51fa\u5404\u4e2aS\u5462\uff1f (m,n)=(m,m)(m,n) \u76ee\u524d\u6bd4\u8f83\u5e38\u89c1\u7684\u6709 FastICA\u7b97\u6cd5\uff1a","title":"ICA\u7b97\u6cd5\u8be6\u89e3"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8AdirectLiGAM%E3%80%8B%E7%BB%93%E6%9E%84%E6%96%B9%E7%A8%8B%E6%A8%A1%E5%9E%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#simulation","text":"","title":"simulation"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8Apointer%20networks%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/","text":"\u300apointer networks\u300b\u9605\u8bfb\u7b14\u8bb0 \u5e94\u7528\u573a\u666f\uff1a \u6587\u672c\u6458\u8981\uff0c\u51f8\u5305\u95ee\u9898\uff0cRoundelay \u4e09\u89d2\u5256\u5206\uff0c\u65c5\u884c\u5546\u95ee\u9898 abstract \u672c\u6587\u63d0\u51fa\u4e00\u79cd\u65b0\u7684\u7f51\u7edc\u7ed3\u6784\uff1a\u8f93\u51fa\u5e8f\u5217\u7684\u5143\u7d20\u662f\u4e0e\u8f93\u5165\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e\u76f8\u5bf9\u5e94\u7684\u79bb\u6563\u6807\u8bb0\u3002 an output sequence with elements that are discrete tokens corresponding to positions in an input sequence. \u8fd9\u79cd\u95ee\u9898\u76ee\u524d\u53ef\u4ee5\u88ab\u4e00\u4e9b\u73b0\u6709\u7684\u65b9\u6cd5\u89e3\u51b3\uff1asequence-to-sequence\uff0c neural turing machines\u3002\u4f46\u662f\u8fd9\u4e9b\u65b9\u6cd5\u4e0d\u662f\u7279\u522b\u9002\u7528\u3002 \u672c\u6587\u89e3\u51b3\u7684\u95ee\u9898\u662fsorting variable sized sequences\uff0c\u4ee5\u53ca\u5404\u79cd\u7ec4\u5408\u4f18\u5316\u95ee\u9898\u3002\u672c\u6a21\u578b\u4f7f\u7528attention\u673a\u5236\u6765\u89e3\u51b3\u53d8\u5316\u5c3a\u5bf8\u7684\u8f93\u51fa\u3002 intro RNN\u6a21\u578b\u7684\u8f93\u51fa\u7ef4\u5ea6\u662f\u56fa\u5b9a\u7684\uff0csequence-to-sequence\u6a21\u578b\u79fb\u9664\u4e86\u8fd9\u4e00\u4e2a\u9650\u5236\uff0c\u901a\u8fc7\u7528\u4e00\u4e2aRNN\u628a\u8f93\u5165\u6620\u5c04\u4e3a\u4e00\u4e2aembedding\uff0c\u53c8\u7528\u4e00\u4e2aRNN\u628aembedding\u6620\u5c04\u5230\u8f93\u51fa\u5e8f\u5217\u3002 \u4f46\u662f\u8fd9\u4e9bsequence-to-sequence \u65b9\u6cd5\u90fd\u662f\u56fa\u5b9a\u5927\u5c0f\u7684\u8bcd\u6c47\u8868\u3002 \u4f8b\u5982\u8bcd\u6c47\u8868\u4e2d\u53ea\u5b58\u5728A,B,C\u3002\u90a3\u4e48\u8f93\u5165 1,2,3 ----> A,B,C 1,2,3,4 ----> A,B,C,A \u672c\u6587\u63d0\u51fa\u7684\u6846\u67b6\u9002\u7528\u4e8e \u8f93\u51fa\u7684\u8bcd\u6c47\u8868\u5927\u5c0f \u53d6\u51b3\u4e8e \u8f93\u5165\u95ee\u9898\u7684\u5927\u5c0f \u3002 \u5de6\u56fe\uff1aseq-2-seq \u84dd\u8272RNN\uff0c\u8f93\u51fa\u4e00\u4e2a\u5411\u91cf\u3002 \u7d2b\u8272RNN\uff0c\u5229\u7528\u6982\u7387\u7684\u94fe\u5f0f\u6cd5\u5219\uff0c\u8f93\u51fa\u4e00\u4e2a\u56fa\u5b9a\u7ef4\u5ea6\u3002 \u672c\u6587\u7684\u8d21\u732e\u5982\u4e0b\uff1a \u63d0\u51fa\u4e00\u79cd\u65b0\u7684\u7ed3\u6784\uff0c\u79f0\u4e3a\u6307\u9488\u7f51\u8def\u3002\u7b80\u5355\u4e14\u9ad8\u6548 \u826f\u597d\u7684\u6cdb\u5316\u6027\u80fd \u4e00\u4e2aTSP\u8fd1\u4f3c\u6c42\u89e3\u5668 Models sequence-to-sequence \u6a21\u578b \u8bad\u7ec3\u6570\u636e\u4e3a\uff1a $$ (P,C^P) $$ \u5176\u4e2d\uff0c$\\mathcal{P}=\\left{P_{1}, \\ldots, P_{n}\\right}$\uff0c\u662fn\u4e2a\u5411\u91cf\u3002$\\mathcal{C}^{\\mathcal{P}}=\\left{C_{1}, \\ldots, C_{m(\\mathcal{P})}\\right}$ \uff0cn\u4e2a\u5bf9\u5e94\u7684\u7ed3\u679c\uff0c$m(\\mathcal{P})\\in [1,n]$ \u3002\u4f20\u7edf\u7684sequence-to-sequence\u7684$\\mathcal{C}^{\\mathcal{P}}$\u662f\u56fa\u5b9a\u5927\u5c0f\u7684\uff0c\u4f46\u662f\u8981\u63d0\u524d\u7ed9\u5b9a\u3002\u672c\u6587\u7684$\\mathcal{C}^{\\mathcal{P}}$\u4e3an\uff0c\u6839\u636e\u8f93\u5165\u6539\u53d8\u3002 \u5982\u679c\u6a21\u578b\u7684\u53c2\u6570\u8bb0\u4e3a$\\theta$\uff0c\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u8868\u8fbe\u4e3a\uff1a $$ p(C^P|P,\\theta) $$ \u4f7f\u7528\u94fe\u5f0f\u6cd5\u5219\uff0c\u5199\u4e3a\uff1a $$ p\\left(\\mathcal{C}^{\\mathcal{P}} \\mid \\mathcal{P} ; \\theta\\right)=\\prod_{i=1}^{m(\\mathcal{P})} p_{\\theta}\\left(C_{i} \\mid C_{1}, \\ldots, C_{i-1}, \\mathcal{P} ; \\theta\\right) $$ \u8bad\u7ec3\u9636\u6bb5\uff0c\u6700\u5927\u4f3c\u7136\u6982\u7387\uff1a $$ \\theta^{*}=\\underset{\\theta}{\\arg \\max } \\sum_{\\mathcal{P}, \\mathcal{C}^{\\mathcal{P}}} \\log p\\left(\\mathcal{C}^{\\mathcal{P}} \\mid \\mathcal{P} ; \\theta\\right) $$ input sequence\u7684\u672b\u7aef\u52a0\u4e00\u4e2a$\\Rightarrow$\uff0c\u4ee3\u8868\u8fdb\u5165\u751f\u6210\u9636\u6bb5\uff0c$\\Leftarrow$\u4ee3\u8868\u7ed3\u675f\u751f\u6210\u9636\u6bb5\u3002 \u63a8\u65ad\uff1a $$ \\hat{\\mathcal{C}}^{\\mathcal{P}}=\\underset{\\mathcal{C}^{\\mathcal{P}}}{\\arg \\max } p\\left(\\mathcal{C}^{\\mathcal{P}} \\mid \\mathcal{P} ; \\theta^{*}\\right) $$ content based input attention \u5bf9\u4e8eattention\u673a\u5236\uff0c\u8bf7\u67e5\u770b\u300aNeural Machine Translation By Jointly Learning To Align And Translate\u300b\u9605\u8bfb\u7b14\u8bb0\u3002 \u5bf9\u4e8eLSTM RNN $$ \\begin{aligned} u_{j}^{i} &=v^{T} \\tanh \\left(W_{1} e_{j}+W_{2} d_{i}\\right) & j \\in(1, \\ldots, n) \\ a_{j}^{i} &=\\operatorname{softmax}\\left(u_{j}^{i}\\right) & j \\in(1, \\ldots, n) \\ d_{i}^{\\prime} &=\\sum_{j=1}^{n} a_{j}^{i} e_{j} & \\end{aligned} $$ \u5bf9\u4e8e\u8fd9\u4e2a\u4f20\u7edf\u7684attention\u673a\u5236\uff0c\u53ef\u4ee5\u770b\u5230$u^{i}$, \u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a$n$\u7684\u5411\u91cf\u3002 \u8fd9\u6837\u7684\u8bdd\uff0c\u5728\u89e3\u7801\u5668\u7684\u6bcf\u4e00\u4e2a\u65f6\u95f4\u6b65\u8fed\u4ee3\u90fd\u4f1a\u5f97\u5230\u4e00\u4e2a n \u957f\u5ea6\u7684\u5411\u91cf\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u6307\u9488\uff0c\u7528\u4e8e\u6307\u5411\u4e4b\u524d\u7684 n \u957f\u5ea6\u7684\u5e8f\u5217\u3002 Ptr-Net \u6240\u4ee5Ptr-Net\u8ba1\u7b97\u516c\u5f0f\u5199\u4e3a\uff1a $$ \\begin{aligned} u_{j}^{i} &=v^{T} \\tanh \\left(W_{1} e_{j}+W_{2} d_{i}\\right) \\quad j \\in(1, \\ldots, n) \\ p\\left(C_{i} \\mid C_{1}, \\ldots, C_{i-1}, \\mathcal{P}\\right) &=\\operatorname{softmax}\\left(u^{i}\\right) \\end{aligned} $$ \u6570\u636e\u4ee5 [Batch, time_steps, feature] \u7684\u5f62\u5f0f\u8fdb\u5165\u7f16\u7801\u5668LSTM\uff08\u7eff\u8272\u90e8\u5206\uff09\uff0c\u5728\u65f6\u95f4\u6b65\u4e0a\u8fed\u4ee3$n$\u6b21\u4ee5\u540e\uff0c\u5f97\u5230\uff1a n \u4e2a e [batch, units], \u53ef\u4ee5\u5408\u5e76\u5199\u4e3a [batch, n, units] \u6700\u540e\u4e00\u4e2a\u65f6\u95f4\u6b65\u8f93\u51fa\u7684 c [batch, units] \u8fdb\u5165\u5230\u89e3\u7801\u5668LSTM\uff08\u84dd\u8272\u90e8\u5206\uff09\uff0c\u8f93\u5165\u4e3a\uff1a \u4e0a\u6b21\u5f97\u5230\u89e3\u7801\u5f97\u5230\u7684\u7684pointer\uff0c\u5982\u679c\u662f\u7b2c\u4e00\u6b21\u5219\u4e3ainitial pointer \u4e0a\u6b21\u7684\u72b6\u6001d,c pointer \u5982\u4f55\u5f97\u5230\uff1f\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\uff1a $$ \\begin{aligned} u_{j}^{i} &=v^{T} \\tanh \\left(W_{1} e_{j}+W_{2} d_{i}\\right) \\quad j \\in(1, \\ldots, n) \\ p\\left(C_{i} \\mid C_{1}, \\ldots, C_{i-1}, \\mathcal{P}\\right) &=\\operatorname{softmax}\\left(u^{i}\\right) \\end{aligned} $$ motivation and datasets structure \u6587\u7ae0\u662f\u4e3a\u4e86\u89e3\u51b3\u4e09\u79cd\u95ee\u9898\uff0c\u51f8\u5305\uff0cDelaunay Triangulation\uff0c\u65c5\u884c\u5546\u95ee\u9898\u3002\u5728\u6b64\u53ea\u5bf9\u65c5\u884c\u5546\u95ee\u9898\u8fdb\u884c\u63a2\u8ba8\u3002 travelling salesman problem \u7ed9\u5b9a\u4e00\u4e2a\u57ce\u5e02\u5217\u8868\uff0c\u6211\u4eec\u5e0c\u671b\u627e\u5230\u4e00\u6761\u6700\u77ed\u7684\u8def\u7ebf\uff0c\u6bcf\u4e2a\u57ce\u5e02\u53ea\u8bbf\u95ee\u4e00\u6b21\uff0c\u7136\u540e\u8fd4\u56de\u8d77\u70b9\u3002\u6b64\u5916\uff0c\u5047\u8bbe\u4e24\u4e2a\u57ce\u5e02\u4e4b\u95f4\u7684\u8ddd\u79bb\u5728\u6b63\u53cd\u65b9\u5411\u4e0a\u662f\u76f8\u540c\u7684\u3002\u8fd9\u662f\u4e00\u4e2aNP\u96be\u95ee\u9898\uff0c\u6d4b\u8bd5\u6a21\u578b\u7684\u80fd\u529b\u548c\u5c40\u9650\u6027\u3002 \u6570\u636e\u751f\u6210\uff1a \u5361\u8fea\u5c14\u5750\u6807\u7cfb\uff08\u4e8c\u7ef4\uff09\uff0c$[0,1] \\times[0,1]$ \u4f7f\u7528 Held-Karp algorithm \u5f97\u5230\u51c6\u786e\u89e3\uff0cn\u6700\u591a\u4e3a20\u3002 A1,A2,A3\u4e3a\u4e09\u79cd\u5176\u4ed6\u7b97\u6cd5\u3002A1\uff0cA2\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O\\left(n^{2}\\right)$\uff0cA3\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O\\left(n^{3}\\right)$\u3002A3\uff0cChristofides algorithm \u7b97\u6cd5\u4fdd\u8bc1\u5728\u8ddd\u79bb\u6700\u4f73\u957f\u5ea61.5\u500d\u7684\u8303\u56f4\u5185\u627e\u5230\u89e3\uff0c\u8be6\u7ec6\u4fe1\u606f\u67e5\u770b\u539f\u6587\u53c2\u8003\u6587\u732e\u3002\u751f\u62101M\u4e2a\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\u3002 \u5206\u6790\u8868\u683c\uff1a n=5\u7684\u65f6\u5019\uff0c\u6027\u80fd\u90fd\u5f88\u597d n=10\uff0cptr-net\u7684\u6027\u80fd\u6bd4A1\u597d n=50\u7684\u65f6\u5019\uff0c\u65e0\u6cd5\u8d85\u8fc7\u6570\u636e\u96c6\u6027\u80fd\uff08\u56e0\u4e3aptr-net\u4f7f\u7528\u4e0d\u51c6\u786e\u7684\u7b54\u6848\u8fdb\u884c\u8bad\u7ec3\u7684\uff09 \u53ea\u7528n\u5c11\u7684\u8bad\u7ec3\uff0c\u63a8\u5e7f\u5230\u5927n\u60c5\u51b5\uff0c\u6027\u80fd\u4e0d\u592a\u597d\u3002 \u5bf9\u4e8en=30\u7684\u60c5\u51b5\uff0cPtr-net\u7b97\u6cd5\u590d\u6742\u5ea6\u4e3a$O(n \\log n)$\uff0c\u8fdc\u4f4e\u4e8eA1,A2,A3\u3002\u5374\u6709\u76f8\u4f3c\u7684\u6027\u80fd\uff0c\u8bf4\u660e\u53ef\u53d1\u5c55\u7a7a\u95f4\u8fd8\u662f\u5f88\u5927\u7684\u3002","title":"\u300apointer networks\u300b\u9605\u8bfb\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8Apointer%20networks%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#pointer-networks","text":"\u5e94\u7528\u573a\u666f\uff1a \u6587\u672c\u6458\u8981\uff0c\u51f8\u5305\u95ee\u9898\uff0cRoundelay \u4e09\u89d2\u5256\u5206\uff0c\u65c5\u884c\u5546\u95ee\u9898","title":"\u300apointer networks\u300b\u9605\u8bfb\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8Apointer%20networks%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#abstract","text":"\u672c\u6587\u63d0\u51fa\u4e00\u79cd\u65b0\u7684\u7f51\u7edc\u7ed3\u6784\uff1a\u8f93\u51fa\u5e8f\u5217\u7684\u5143\u7d20\u662f\u4e0e\u8f93\u5165\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e\u76f8\u5bf9\u5e94\u7684\u79bb\u6563\u6807\u8bb0\u3002 an output sequence with elements that are discrete tokens corresponding to positions in an input sequence. \u8fd9\u79cd\u95ee\u9898\u76ee\u524d\u53ef\u4ee5\u88ab\u4e00\u4e9b\u73b0\u6709\u7684\u65b9\u6cd5\u89e3\u51b3\uff1asequence-to-sequence\uff0c neural turing machines\u3002\u4f46\u662f\u8fd9\u4e9b\u65b9\u6cd5\u4e0d\u662f\u7279\u522b\u9002\u7528\u3002 \u672c\u6587\u89e3\u51b3\u7684\u95ee\u9898\u662fsorting variable sized sequences\uff0c\u4ee5\u53ca\u5404\u79cd\u7ec4\u5408\u4f18\u5316\u95ee\u9898\u3002\u672c\u6a21\u578b\u4f7f\u7528attention\u673a\u5236\u6765\u89e3\u51b3\u53d8\u5316\u5c3a\u5bf8\u7684\u8f93\u51fa\u3002","title":"abstract"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8Apointer%20networks%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#intro","text":"RNN\u6a21\u578b\u7684\u8f93\u51fa\u7ef4\u5ea6\u662f\u56fa\u5b9a\u7684\uff0csequence-to-sequence\u6a21\u578b\u79fb\u9664\u4e86\u8fd9\u4e00\u4e2a\u9650\u5236\uff0c\u901a\u8fc7\u7528\u4e00\u4e2aRNN\u628a\u8f93\u5165\u6620\u5c04\u4e3a\u4e00\u4e2aembedding\uff0c\u53c8\u7528\u4e00\u4e2aRNN\u628aembedding\u6620\u5c04\u5230\u8f93\u51fa\u5e8f\u5217\u3002 \u4f46\u662f\u8fd9\u4e9bsequence-to-sequence \u65b9\u6cd5\u90fd\u662f\u56fa\u5b9a\u5927\u5c0f\u7684\u8bcd\u6c47\u8868\u3002 \u4f8b\u5982\u8bcd\u6c47\u8868\u4e2d\u53ea\u5b58\u5728A,B,C\u3002\u90a3\u4e48\u8f93\u5165 1,2,3 ----> A,B,C 1,2,3,4 ----> A,B,C,A \u672c\u6587\u63d0\u51fa\u7684\u6846\u67b6\u9002\u7528\u4e8e \u8f93\u51fa\u7684\u8bcd\u6c47\u8868\u5927\u5c0f \u53d6\u51b3\u4e8e \u8f93\u5165\u95ee\u9898\u7684\u5927\u5c0f \u3002 \u5de6\u56fe\uff1aseq-2-seq \u84dd\u8272RNN\uff0c\u8f93\u51fa\u4e00\u4e2a\u5411\u91cf\u3002 \u7d2b\u8272RNN\uff0c\u5229\u7528\u6982\u7387\u7684\u94fe\u5f0f\u6cd5\u5219\uff0c\u8f93\u51fa\u4e00\u4e2a\u56fa\u5b9a\u7ef4\u5ea6\u3002 \u672c\u6587\u7684\u8d21\u732e\u5982\u4e0b\uff1a \u63d0\u51fa\u4e00\u79cd\u65b0\u7684\u7ed3\u6784\uff0c\u79f0\u4e3a\u6307\u9488\u7f51\u8def\u3002\u7b80\u5355\u4e14\u9ad8\u6548 \u826f\u597d\u7684\u6cdb\u5316\u6027\u80fd \u4e00\u4e2aTSP\u8fd1\u4f3c\u6c42\u89e3\u5668","title":"intro"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8Apointer%20networks%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#models","text":"","title":"Models"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8Apointer%20networks%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#sequence-to-sequence","text":"\u8bad\u7ec3\u6570\u636e\u4e3a\uff1a $$ (P,C^P) $$ \u5176\u4e2d\uff0c$\\mathcal{P}=\\left{P_{1}, \\ldots, P_{n}\\right}$\uff0c\u662fn\u4e2a\u5411\u91cf\u3002$\\mathcal{C}^{\\mathcal{P}}=\\left{C_{1}, \\ldots, C_{m(\\mathcal{P})}\\right}$ \uff0cn\u4e2a\u5bf9\u5e94\u7684\u7ed3\u679c\uff0c$m(\\mathcal{P})\\in [1,n]$ \u3002\u4f20\u7edf\u7684sequence-to-sequence\u7684$\\mathcal{C}^{\\mathcal{P}}$\u662f\u56fa\u5b9a\u5927\u5c0f\u7684\uff0c\u4f46\u662f\u8981\u63d0\u524d\u7ed9\u5b9a\u3002\u672c\u6587\u7684$\\mathcal{C}^{\\mathcal{P}}$\u4e3an\uff0c\u6839\u636e\u8f93\u5165\u6539\u53d8\u3002 \u5982\u679c\u6a21\u578b\u7684\u53c2\u6570\u8bb0\u4e3a$\\theta$\uff0c\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u8868\u8fbe\u4e3a\uff1a $$ p(C^P|P,\\theta) $$ \u4f7f\u7528\u94fe\u5f0f\u6cd5\u5219\uff0c\u5199\u4e3a\uff1a $$ p\\left(\\mathcal{C}^{\\mathcal{P}} \\mid \\mathcal{P} ; \\theta\\right)=\\prod_{i=1}^{m(\\mathcal{P})} p_{\\theta}\\left(C_{i} \\mid C_{1}, \\ldots, C_{i-1}, \\mathcal{P} ; \\theta\\right) $$ \u8bad\u7ec3\u9636\u6bb5\uff0c\u6700\u5927\u4f3c\u7136\u6982\u7387\uff1a $$ \\theta^{*}=\\underset{\\theta}{\\arg \\max } \\sum_{\\mathcal{P}, \\mathcal{C}^{\\mathcal{P}}} \\log p\\left(\\mathcal{C}^{\\mathcal{P}} \\mid \\mathcal{P} ; \\theta\\right) $$ input sequence\u7684\u672b\u7aef\u52a0\u4e00\u4e2a$\\Rightarrow$\uff0c\u4ee3\u8868\u8fdb\u5165\u751f\u6210\u9636\u6bb5\uff0c$\\Leftarrow$\u4ee3\u8868\u7ed3\u675f\u751f\u6210\u9636\u6bb5\u3002 \u63a8\u65ad\uff1a $$ \\hat{\\mathcal{C}}^{\\mathcal{P}}=\\underset{\\mathcal{C}^{\\mathcal{P}}}{\\arg \\max } p\\left(\\mathcal{C}^{\\mathcal{P}} \\mid \\mathcal{P} ; \\theta^{*}\\right) $$","title":"sequence-to-sequence \u6a21\u578b"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8Apointer%20networks%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#content-based-input-attention","text":"\u5bf9\u4e8eattention\u673a\u5236\uff0c\u8bf7\u67e5\u770b\u300aNeural Machine Translation By Jointly Learning To Align And Translate\u300b\u9605\u8bfb\u7b14\u8bb0\u3002 \u5bf9\u4e8eLSTM RNN $$ \\begin{aligned} u_{j}^{i} &=v^{T} \\tanh \\left(W_{1} e_{j}+W_{2} d_{i}\\right) & j \\in(1, \\ldots, n) \\ a_{j}^{i} &=\\operatorname{softmax}\\left(u_{j}^{i}\\right) & j \\in(1, \\ldots, n) \\ d_{i}^{\\prime} &=\\sum_{j=1}^{n} a_{j}^{i} e_{j} & \\end{aligned} $$ \u5bf9\u4e8e\u8fd9\u4e2a\u4f20\u7edf\u7684attention\u673a\u5236\uff0c\u53ef\u4ee5\u770b\u5230$u^{i}$, \u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a$n$\u7684\u5411\u91cf\u3002 \u8fd9\u6837\u7684\u8bdd\uff0c\u5728\u89e3\u7801\u5668\u7684\u6bcf\u4e00\u4e2a\u65f6\u95f4\u6b65\u8fed\u4ee3\u90fd\u4f1a\u5f97\u5230\u4e00\u4e2a n \u957f\u5ea6\u7684\u5411\u91cf\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u6307\u9488\uff0c\u7528\u4e8e\u6307\u5411\u4e4b\u524d\u7684 n \u957f\u5ea6\u7684\u5e8f\u5217\u3002","title":"content based input attention"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8Apointer%20networks%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#ptr-net","text":"\u6240\u4ee5Ptr-Net\u8ba1\u7b97\u516c\u5f0f\u5199\u4e3a\uff1a $$ \\begin{aligned} u_{j}^{i} &=v^{T} \\tanh \\left(W_{1} e_{j}+W_{2} d_{i}\\right) \\quad j \\in(1, \\ldots, n) \\ p\\left(C_{i} \\mid C_{1}, \\ldots, C_{i-1}, \\mathcal{P}\\right) &=\\operatorname{softmax}\\left(u^{i}\\right) \\end{aligned} $$ \u6570\u636e\u4ee5 [Batch, time_steps, feature] \u7684\u5f62\u5f0f\u8fdb\u5165\u7f16\u7801\u5668LSTM\uff08\u7eff\u8272\u90e8\u5206\uff09\uff0c\u5728\u65f6\u95f4\u6b65\u4e0a\u8fed\u4ee3$n$\u6b21\u4ee5\u540e\uff0c\u5f97\u5230\uff1a n \u4e2a e [batch, units], \u53ef\u4ee5\u5408\u5e76\u5199\u4e3a [batch, n, units] \u6700\u540e\u4e00\u4e2a\u65f6\u95f4\u6b65\u8f93\u51fa\u7684 c [batch, units] \u8fdb\u5165\u5230\u89e3\u7801\u5668LSTM\uff08\u84dd\u8272\u90e8\u5206\uff09\uff0c\u8f93\u5165\u4e3a\uff1a \u4e0a\u6b21\u5f97\u5230\u89e3\u7801\u5f97\u5230\u7684\u7684pointer\uff0c\u5982\u679c\u662f\u7b2c\u4e00\u6b21\u5219\u4e3ainitial pointer \u4e0a\u6b21\u7684\u72b6\u6001d,c pointer \u5982\u4f55\u5f97\u5230\uff1f\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\uff1a $$ \\begin{aligned} u_{j}^{i} &=v^{T} \\tanh \\left(W_{1} e_{j}+W_{2} d_{i}\\right) \\quad j \\in(1, \\ldots, n) \\ p\\left(C_{i} \\mid C_{1}, \\ldots, C_{i-1}, \\mathcal{P}\\right) &=\\operatorname{softmax}\\left(u^{i}\\right) \\end{aligned} $$","title":"Ptr-Net"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8Apointer%20networks%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#motivation-and-datasets-structure","text":"\u6587\u7ae0\u662f\u4e3a\u4e86\u89e3\u51b3\u4e09\u79cd\u95ee\u9898\uff0c\u51f8\u5305\uff0cDelaunay Triangulation\uff0c\u65c5\u884c\u5546\u95ee\u9898\u3002\u5728\u6b64\u53ea\u5bf9\u65c5\u884c\u5546\u95ee\u9898\u8fdb\u884c\u63a2\u8ba8\u3002","title":"motivation and datasets structure"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8Apointer%20networks%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#travelling-salesman-problem","text":"\u7ed9\u5b9a\u4e00\u4e2a\u57ce\u5e02\u5217\u8868\uff0c\u6211\u4eec\u5e0c\u671b\u627e\u5230\u4e00\u6761\u6700\u77ed\u7684\u8def\u7ebf\uff0c\u6bcf\u4e2a\u57ce\u5e02\u53ea\u8bbf\u95ee\u4e00\u6b21\uff0c\u7136\u540e\u8fd4\u56de\u8d77\u70b9\u3002\u6b64\u5916\uff0c\u5047\u8bbe\u4e24\u4e2a\u57ce\u5e02\u4e4b\u95f4\u7684\u8ddd\u79bb\u5728\u6b63\u53cd\u65b9\u5411\u4e0a\u662f\u76f8\u540c\u7684\u3002\u8fd9\u662f\u4e00\u4e2aNP\u96be\u95ee\u9898\uff0c\u6d4b\u8bd5\u6a21\u578b\u7684\u80fd\u529b\u548c\u5c40\u9650\u6027\u3002 \u6570\u636e\u751f\u6210\uff1a \u5361\u8fea\u5c14\u5750\u6807\u7cfb\uff08\u4e8c\u7ef4\uff09\uff0c$[0,1] \\times[0,1]$ \u4f7f\u7528 Held-Karp algorithm \u5f97\u5230\u51c6\u786e\u89e3\uff0cn\u6700\u591a\u4e3a20\u3002 A1,A2,A3\u4e3a\u4e09\u79cd\u5176\u4ed6\u7b97\u6cd5\u3002A1\uff0cA2\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O\\left(n^{2}\\right)$\uff0cA3\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O\\left(n^{3}\\right)$\u3002A3\uff0cChristofides algorithm \u7b97\u6cd5\u4fdd\u8bc1\u5728\u8ddd\u79bb\u6700\u4f73\u957f\u5ea61.5\u500d\u7684\u8303\u56f4\u5185\u627e\u5230\u89e3\uff0c\u8be6\u7ec6\u4fe1\u606f\u67e5\u770b\u539f\u6587\u53c2\u8003\u6587\u732e\u3002\u751f\u62101M\u4e2a\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\u3002 \u5206\u6790\u8868\u683c\uff1a n=5\u7684\u65f6\u5019\uff0c\u6027\u80fd\u90fd\u5f88\u597d n=10\uff0cptr-net\u7684\u6027\u80fd\u6bd4A1\u597d n=50\u7684\u65f6\u5019\uff0c\u65e0\u6cd5\u8d85\u8fc7\u6570\u636e\u96c6\u6027\u80fd\uff08\u56e0\u4e3aptr-net\u4f7f\u7528\u4e0d\u51c6\u786e\u7684\u7b54\u6848\u8fdb\u884c\u8bad\u7ec3\u7684\uff09 \u53ea\u7528n\u5c11\u7684\u8bad\u7ec3\uff0c\u63a8\u5e7f\u5230\u5927n\u60c5\u51b5\uff0c\u6027\u80fd\u4e0d\u592a\u597d\u3002 \u5bf9\u4e8en=30\u7684\u60c5\u51b5\uff0cPtr-net\u7b97\u6cd5\u590d\u6742\u5ea6\u4e3a$O(n \\log n)$\uff0c\u8fdc\u4f4e\u4e8eA1,A2,A3\u3002\u5374\u6709\u76f8\u4f3c\u7684\u6027\u80fd\uff0c\u8bf4\u660e\u53ef\u53d1\u5c55\u7a7a\u95f4\u8fd8\u662f\u5f88\u5927\u7684\u3002","title":"travelling salesman problem"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90%EF%BC%9A%E4%B8%89%E6%AC%A1%E6%A0%B7%E6%9D%A1%E6%8F%92%E5%80%BC/","text":"\u6570\u503c\u5206\u6790\uff1a\u4e09\u6b21\u6837\u6761\u63d2\u503c \u4f4e\u6b21\u7684\u63d2\u503c\u51fd\u6570\u5177\u6709\u4e00\u81f4\u7684\u6536\u655b\u6027\uff0c\u4f46\u662f\u5149\u6ed1\u6027\u8f83\u5dee\uff0c\u4e0d\u9002\u7528\u4e8e\u98de\u673a\u673a\u7ffc\u7b49\u5de5\u7a0b\u5e94\u7528\u3002 \u73b0\u5728\u6784\u5efa\u4e00\u79cd\u63d2\u503c\u65b9\u5f0f\uff0c\u5177\u6709\u4e8c\u9636\u8fde\u7eed\u5bfc\u6570\u3002 \u5177\u4f53\u7684\u6982\u5ff5\u5728\u7814\u4e00\u8bfe\u4e0a\u5df2\u7ecf\u5b66\u8fc7\u4e86\uff0c\u4f46\u662f\u5bf9\u4e8e\u4f7f\u7528\u77e9\u9635\u65b9\u5f0f\u8fdb\u884c\u8ba1\u7b97\uff0c\u4ea6\u6216\u8bf4\u4f7f\u7528\u8ffd\u8d76\u6cd5\u6c42\u7cfb\u6570\u5c1a\u4e0d\u719f\u6089\uff0c\u6240\u4ee5\u5728\u6b64\u590d\u4e60\u91cd\u6e29\u3002 \u4e09\u6b21\u6837\u6761\u51fd\u6570 \u5b9a\u4e49\uff1a $$ S(x)=C^2[a,b]\\ $$ \u5176\u4e2d: $$ S(x)\u5728\u6bcf\u4e2a\u5c0f\u533a\u95f4\u4e0a\u90fd\u662f\u4e09\u6b21\u591a\u9879\u5f0f\\ a=x_0,x_1,...x_n=b $$ \u73b0\u5728\u8003\u8651\u4e00\u4e2a\u533a\u95f4$[x_j,x_{j+1}]$\uff0c\u56e0\u4e3a\u662f3\u6b21\u591a\u9879\u5f0f\uff0c\u6240\u4ee5\u8981\u56fa\u5b9a4\u4e2a\u7cfb\u6570\uff08$ax^3+bx^2+cx+d$\uff09\uff0c\u90a3\u4e48\u5c31\u9700\u89814\u4e2a\u6761\u4ef6 \uff08\u7b49\u5f0f\uff09\uff0c\u5bf9\u4e8en\u4e2a\u533a\u95f4\uff0c\u5c31\u9700\u89814n\u4e2a\u6761\u4ef6\u3002 \u5bf9\u4e8e\u6574\u4e2a\u5927\u533a\u95f4$[a,b]$\uff0c\u6761\u4ef6\u6709\uff1a $$ S(x_j-0)=S(x_j+0)\\ S'(x_j-0)=S'(x_j+0)\\ S''(x_j-0)=S''(x_j+0) $$ \u4e00\u5171\u67093n-3\u4e2a\u6761\u4ef6\u3002 $$ S(x_j)=y_j $$ \u6b64\u5904\u662fn+1\u4e2a\u6761\u4ef6\uff0c\u6240\u4ee5\u603b\u5171\u662f4n-2\u4e2a\u6761\u4ef6\u3002\u90a3\u4e48\u5c31\u9700\u8981\u8865\u5145\u4e24\u4e2a\u8fb9\u754c\u6761\u4ef6\uff1a \u4e09\u79cd\u60c5\u51b5\u53ef\u4ee5\u9009\u62e9\uff1a \u4e24\u7aef\u7684\u4e00\u9636\u5bfc\u6570 \u4e24\u7aef\u7684\u4e8c\u9636\u5bfc\u6570\uff0c\u5982\u679c\u8bbe\u7f6e\u4e24\u7aef\u7684\u4e8c\u9636\u5bfc\u6570\u4e3a0\uff0c\u90a3\u4e48\u79f0\u4e3a \u81ea\u7136\u8fb9\u754c \u3002","title":"\u6570\u503c\u5206\u6790\uff1a\u4e09\u6b21\u6837\u6761\u63d2\u503c"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90%EF%BC%9A%E4%B8%89%E6%AC%A1%E6%A0%B7%E6%9D%A1%E6%8F%92%E5%80%BC/#_1","text":"\u4f4e\u6b21\u7684\u63d2\u503c\u51fd\u6570\u5177\u6709\u4e00\u81f4\u7684\u6536\u655b\u6027\uff0c\u4f46\u662f\u5149\u6ed1\u6027\u8f83\u5dee\uff0c\u4e0d\u9002\u7528\u4e8e\u98de\u673a\u673a\u7ffc\u7b49\u5de5\u7a0b\u5e94\u7528\u3002 \u73b0\u5728\u6784\u5efa\u4e00\u79cd\u63d2\u503c\u65b9\u5f0f\uff0c\u5177\u6709\u4e8c\u9636\u8fde\u7eed\u5bfc\u6570\u3002 \u5177\u4f53\u7684\u6982\u5ff5\u5728\u7814\u4e00\u8bfe\u4e0a\u5df2\u7ecf\u5b66\u8fc7\u4e86\uff0c\u4f46\u662f\u5bf9\u4e8e\u4f7f\u7528\u77e9\u9635\u65b9\u5f0f\u8fdb\u884c\u8ba1\u7b97\uff0c\u4ea6\u6216\u8bf4\u4f7f\u7528\u8ffd\u8d76\u6cd5\u6c42\u7cfb\u6570\u5c1a\u4e0d\u719f\u6089\uff0c\u6240\u4ee5\u5728\u6b64\u590d\u4e60\u91cd\u6e29\u3002","title":"\u6570\u503c\u5206\u6790\uff1a\u4e09\u6b21\u6837\u6761\u63d2\u503c"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90%EF%BC%9A%E4%B8%89%E6%AC%A1%E6%A0%B7%E6%9D%A1%E6%8F%92%E5%80%BC/#_2","text":"\u5b9a\u4e49\uff1a $$ S(x)=C^2[a,b]\\ $$ \u5176\u4e2d: $$ S(x)\u5728\u6bcf\u4e2a\u5c0f\u533a\u95f4\u4e0a\u90fd\u662f\u4e09\u6b21\u591a\u9879\u5f0f\\ a=x_0,x_1,...x_n=b $$ \u73b0\u5728\u8003\u8651\u4e00\u4e2a\u533a\u95f4$[x_j,x_{j+1}]$\uff0c\u56e0\u4e3a\u662f3\u6b21\u591a\u9879\u5f0f\uff0c\u6240\u4ee5\u8981\u56fa\u5b9a4\u4e2a\u7cfb\u6570\uff08$ax^3+bx^2+cx+d$\uff09\uff0c\u90a3\u4e48\u5c31\u9700\u89814\u4e2a\u6761\u4ef6 \uff08\u7b49\u5f0f\uff09\uff0c\u5bf9\u4e8en\u4e2a\u533a\u95f4\uff0c\u5c31\u9700\u89814n\u4e2a\u6761\u4ef6\u3002 \u5bf9\u4e8e\u6574\u4e2a\u5927\u533a\u95f4$[a,b]$\uff0c\u6761\u4ef6\u6709\uff1a $$ S(x_j-0)=S(x_j+0)\\ S'(x_j-0)=S'(x_j+0)\\ S''(x_j-0)=S''(x_j+0) $$ \u4e00\u5171\u67093n-3\u4e2a\u6761\u4ef6\u3002 $$ S(x_j)=y_j $$ \u6b64\u5904\u662fn+1\u4e2a\u6761\u4ef6\uff0c\u6240\u4ee5\u603b\u5171\u662f4n-2\u4e2a\u6761\u4ef6\u3002\u90a3\u4e48\u5c31\u9700\u8981\u8865\u5145\u4e24\u4e2a\u8fb9\u754c\u6761\u4ef6\uff1a \u4e09\u79cd\u60c5\u51b5\u53ef\u4ee5\u9009\u62e9\uff1a \u4e24\u7aef\u7684\u4e00\u9636\u5bfc\u6570 \u4e24\u7aef\u7684\u4e8c\u9636\u5bfc\u6570\uff0c\u5982\u679c\u8bbe\u7f6e\u4e24\u7aef\u7684\u4e8c\u9636\u5bfc\u6570\u4e3a0\uff0c\u90a3\u4e48\u79f0\u4e3a \u81ea\u7136\u8fb9\u754c \u3002","title":"\u4e09\u6b21\u6837\u6761\u51fd\u6570"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E9%A2%91%E7%8E%87%E7%BB%9F%E8%AE%A1%E5%AD%A6VS%E8%B4%9D%E5%8F%B6%E6%96%AF%E7%BB%9F%E8%AE%A1%E5%AD%A6/","text":"\u9891\u7387\u7edf\u8ba1\u5b66VS\u8d1d\u53f6\u65af\u7edf\u8ba1\u5b66 \u5047\u8bbe\uff1a $$ X: data\\ \\theta: parameter $$ \u9891\u7387\u7edf\u8ba1\u5b66\u8ba4\u4e3a\uff1a $\\theta$ \u662f\u4e00\u4e2a\u672a\u77e5\u7684\u5e38\u91cf\uff0c\u9700\u8981\u6211\u4eec\u4ece\u6570\u636e$X$\u4e2d\u4f30\u8ba1\u5b83\u3002 \u901a\u5e38\u4f1a\u4f7f\u7528\u6700\u5927\u4f3c\u7136\u4f30\u8ba1MLE\uff1a $$ \\hat \\theta = \\arg \\max _\\theta p(x;\\theta) $$ \u8d1d\u53f6\u65af\u7edf\u8ba1\u5b66\u8ba4\u4e3a\uff1a $ \\theta $\u662f\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u800c$X$\u662f\u5df2\u77e5\u7684\uff0c\u56fa\u5b9a\u7684\u77e5\u8bc6\u3002\u4f7f\u7528\u8d1d\u53f6\u65af\u5b9a\u7406\u5c06\u4e24\u8005\u8fde\u63a5\u8d77\u6765\uff1a $$ p(\\theta|X) = \\frac{p(X|\\theta)p(\\theta)}{p(X)} $$ \u901a\u5e38\u4f7f\u7528\u6700\u5927\u540e\u9a8c\u4f30\u8ba1MAP\u6765\u4f30\u8ba1 $\\theta $\uff0c\u5728\u8d1d\u53f6\u65af\u7edf\u8ba1\u5b66\u5bb6\u773c\u4e2d\uff0c $\\theta $ \u670d\u4ece\u4e00\u4e2a\u6982\u7387\u5206\u5e03\uff0c\u627e\u5230\u4f17\u6570\u6700\u5927\u7684\u90a3\u4e2a\u70b9\u4f5c\u4e3a $\\theta $ \u7684\u4f30\u8ba1\u3002 $$ \\theta_{MAP} =\\arg \\max \\theta p(\\theta|X)\\propto p(X|\\theta)p(\\theta) $$ \u8981\u6ce8\u610f\u7684\u662f$\\theta {MAP}$ \u5e76\u4e0d\u662f\u4e00\u4e2a\u7279\u522b\u7eaf\u6b63\u8840\u7edf\u7684\u8d1d\u53f6\u65af\u7edf\u8ba1\u4f30\u8ba1\u65b9\u6cd5\uff0c\u771f\u6b63\u7684\u8d1d\u53f6\u65af\u7edf\u8ba1\u5b66\u5bb6\u5c31\u662f\u8981\u6c42 \u540e\u9a8c\u6982\u7387 \uff01 \u603b\u7ed3 \u9891\u7387\u5b66\u6d3e\u4e0e\u8d1d\u53f6\u65af\u5b66\u6d3e\u662f\u6574\u4e2a\u4e16\u754c\u89c2\u7684\u4e0d\u540c\uff0c\u5bf9\u6a21\u578b\u7684\u5efa\u7acb\u5b8c\u5168\u51fa\u81ea\u4e0d\u540c\u7684\u89d2\u5ea6\u3002\u4f46\u662f\u5728\u5b9e\u9645\u8fd0\u7528\u4e2d\uff0c\u4f1a\u53d1\u73b0\u4e24\u8005\u76f8\u4e92\u4ea4\u878d\u3002 \u9891\u7387\u89d2\u5ea6\u51fa\u53d1\uff0c\u6a21\u578b\u6700\u540e\u4e00\u822c\u90fd\u8f6c\u5316\u4e3a \u6700\u4f18\u5316\u95ee\u9898 \u3002 \u8d1d\u53f6\u65af\u89d2\u5ea6\u51fa\u53d1\uff0c\u6a21\u578b\u6700\u540e\u4e00\u822c\u90fd\u4f1a\u88ab\u8f6c\u5316\u4e3a \u79ef\u5206\u95ee\u9898 \u3002 \u4f8b\u5b50 \u9891\u7387\u5b66\u6d3e\u7684\u6848\u4f8b\u8f83\u4e3a\u5e38\u89c1\uff0c\u6bd4\u5982\u5e38\u89c1\u7684\u7ebf\u6027\u56de\u5f52\uff0c\u6211\u4eec\u8981\u53bb\u4f18\u5316\uff1a $$ \\hat \\theta =\\arg \\min \\theta Loss(y-y {predict}) $$ \u8d1d\u53f6\u65af\u6d3e\u7684\u6848\u4f8b\uff1a \u300aAuto-Encoding Variational Bayes\u300b\u6a21\u578b\u4e2d\u7684\u4e00\u6bb5\u8bdd\uff1a \u8be5\u6a21\u578b\u9047\u5230\u4e86\u6240\u6709\u8d1d\u53f6\u65af\u7edf\u8ba1\u5b66\u8005\u4eec\u90fd\u4f1a\u9047\u5230\u7684\u95ee\u9898\uff0c\u79ef\u5206\u96be\u6c42\uff01","title":"\u9891\u7387\u7edf\u8ba1\u5b66VS\u8d1d\u53f6\u65af\u7edf\u8ba1\u5b66"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E9%A2%91%E7%8E%87%E7%BB%9F%E8%AE%A1%E5%AD%A6VS%E8%B4%9D%E5%8F%B6%E6%96%AF%E7%BB%9F%E8%AE%A1%E5%AD%A6/#vs","text":"\u5047\u8bbe\uff1a $$ X: data\\ \\theta: parameter $$","title":"\u9891\u7387\u7edf\u8ba1\u5b66VS\u8d1d\u53f6\u65af\u7edf\u8ba1\u5b66"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E9%A2%91%E7%8E%87%E7%BB%9F%E8%AE%A1%E5%AD%A6VS%E8%B4%9D%E5%8F%B6%E6%96%AF%E7%BB%9F%E8%AE%A1%E5%AD%A6/#_1","text":"$\\theta$ \u662f\u4e00\u4e2a\u672a\u77e5\u7684\u5e38\u91cf\uff0c\u9700\u8981\u6211\u4eec\u4ece\u6570\u636e$X$\u4e2d\u4f30\u8ba1\u5b83\u3002 \u901a\u5e38\u4f1a\u4f7f\u7528\u6700\u5927\u4f3c\u7136\u4f30\u8ba1MLE\uff1a $$ \\hat \\theta = \\arg \\max _\\theta p(x;\\theta) $$","title":"\u9891\u7387\u7edf\u8ba1\u5b66\u8ba4\u4e3a\uff1a"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E9%A2%91%E7%8E%87%E7%BB%9F%E8%AE%A1%E5%AD%A6VS%E8%B4%9D%E5%8F%B6%E6%96%AF%E7%BB%9F%E8%AE%A1%E5%AD%A6/#_2","text":"$ \\theta $\u662f\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u800c$X$\u662f\u5df2\u77e5\u7684\uff0c\u56fa\u5b9a\u7684\u77e5\u8bc6\u3002\u4f7f\u7528\u8d1d\u53f6\u65af\u5b9a\u7406\u5c06\u4e24\u8005\u8fde\u63a5\u8d77\u6765\uff1a $$ p(\\theta|X) = \\frac{p(X|\\theta)p(\\theta)}{p(X)} $$ \u901a\u5e38\u4f7f\u7528\u6700\u5927\u540e\u9a8c\u4f30\u8ba1MAP\u6765\u4f30\u8ba1 $\\theta $\uff0c\u5728\u8d1d\u53f6\u65af\u7edf\u8ba1\u5b66\u5bb6\u773c\u4e2d\uff0c $\\theta $ \u670d\u4ece\u4e00\u4e2a\u6982\u7387\u5206\u5e03\uff0c\u627e\u5230\u4f17\u6570\u6700\u5927\u7684\u90a3\u4e2a\u70b9\u4f5c\u4e3a $\\theta $ \u7684\u4f30\u8ba1\u3002 $$ \\theta_{MAP} =\\arg \\max \\theta p(\\theta|X)\\propto p(X|\\theta)p(\\theta) $$ \u8981\u6ce8\u610f\u7684\u662f$\\theta {MAP}$ \u5e76\u4e0d\u662f\u4e00\u4e2a\u7279\u522b\u7eaf\u6b63\u8840\u7edf\u7684\u8d1d\u53f6\u65af\u7edf\u8ba1\u4f30\u8ba1\u65b9\u6cd5\uff0c\u771f\u6b63\u7684\u8d1d\u53f6\u65af\u7edf\u8ba1\u5b66\u5bb6\u5c31\u662f\u8981\u6c42 \u540e\u9a8c\u6982\u7387 \uff01","title":"\u8d1d\u53f6\u65af\u7edf\u8ba1\u5b66\u8ba4\u4e3a\uff1a"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E9%A2%91%E7%8E%87%E7%BB%9F%E8%AE%A1%E5%AD%A6VS%E8%B4%9D%E5%8F%B6%E6%96%AF%E7%BB%9F%E8%AE%A1%E5%AD%A6/#_3","text":"\u9891\u7387\u5b66\u6d3e\u4e0e\u8d1d\u53f6\u65af\u5b66\u6d3e\u662f\u6574\u4e2a\u4e16\u754c\u89c2\u7684\u4e0d\u540c\uff0c\u5bf9\u6a21\u578b\u7684\u5efa\u7acb\u5b8c\u5168\u51fa\u81ea\u4e0d\u540c\u7684\u89d2\u5ea6\u3002\u4f46\u662f\u5728\u5b9e\u9645\u8fd0\u7528\u4e2d\uff0c\u4f1a\u53d1\u73b0\u4e24\u8005\u76f8\u4e92\u4ea4\u878d\u3002 \u9891\u7387\u89d2\u5ea6\u51fa\u53d1\uff0c\u6a21\u578b\u6700\u540e\u4e00\u822c\u90fd\u8f6c\u5316\u4e3a \u6700\u4f18\u5316\u95ee\u9898 \u3002 \u8d1d\u53f6\u65af\u89d2\u5ea6\u51fa\u53d1\uff0c\u6a21\u578b\u6700\u540e\u4e00\u822c\u90fd\u4f1a\u88ab\u8f6c\u5316\u4e3a \u79ef\u5206\u95ee\u9898 \u3002","title":"\u603b\u7ed3"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E9%A2%91%E7%8E%87%E7%BB%9F%E8%AE%A1%E5%AD%A6VS%E8%B4%9D%E5%8F%B6%E6%96%AF%E7%BB%9F%E8%AE%A1%E5%AD%A6/#_4","text":"\u9891\u7387\u5b66\u6d3e\u7684\u6848\u4f8b\u8f83\u4e3a\u5e38\u89c1\uff0c\u6bd4\u5982\u5e38\u89c1\u7684\u7ebf\u6027\u56de\u5f52\uff0c\u6211\u4eec\u8981\u53bb\u4f18\u5316\uff1a $$ \\hat \\theta =\\arg \\min \\theta Loss(y-y {predict}) $$ \u8d1d\u53f6\u65af\u6d3e\u7684\u6848\u4f8b\uff1a \u300aAuto-Encoding Variational Bayes\u300b\u6a21\u578b\u4e2d\u7684\u4e00\u6bb5\u8bdd\uff1a \u8be5\u6a21\u578b\u9047\u5230\u4e86\u6240\u6709\u8d1d\u53f6\u65af\u7edf\u8ba1\u5b66\u8005\u4eec\u90fd\u4f1a\u9047\u5230\u7684\u95ee\u9898\uff0c\u79ef\u5206\u96be\u6c42\uff01","title":"\u4f8b\u5b50"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ANeural%20Machine%20Translation%20By%20Jointly%20Learning%20To%20Align%20And%20Translate%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0.assets/BIC%20%E8%AF%84%E5%88%86/","text":"BIC \u8bc4\u5206 \u8bc4\u5206\u51fd\u6570\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\uff1a Bayesian scores information-theoretic scores \u8bc4\u5206\u6700\u597d\u662f \u53ef\u5206\u89e3 \uff0c\u8fd9\u6837\u53ef\u4ee5\u63d0\u9ad8\u8ba1\u7b97\u6548\u7387\u3002 \u8bc4\u5206\u9700\u8981\u7b26\u5408score equivalence\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u7b49\u4ef7\u56fe\uff0c\u8bc4\u5206\u51fd\u6570\u8981\u7ed9\u5b9a\u76f8\u540c\u7684\u8bc4\u5206 Bayesian scores \u8d1d\u53f6\u65af\u8bc4\u5206\u51fd\u6570\uff1a\u7ed9\u5b9a\u6570\u636e\u65f6\uff0c\u56fe\u7684\u540e\u9a8c\u6982\u7387\u3002 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5047\u8bbe\u6240\u6709\u7684\u56fe\u7ed3\u6784\u90fd\u662f\u540c\u6837\u7684\u6982\u7387 information-theoretic scores \u603b\u4f53\u8868\u8fbe\u5f0f\u4e3a\uff1a $$ S(G, D)=\\log [\\hat{p}(D \\mid G)]-\\Delta(D, G) $$ \u5176\u4e2d\u524d\u534a\u90e8\u5206\u7528log\u4f3c\u7136\u6765\u63cf\u8ff0data\u6709\u591a\u7b26\u5408\u8fd9\u4e2a\u56fe\u3002\u540e\u534a\u90e8\u5206\u6765\u60e9\u7f5a\u56fe\u7684\u590d\u6742\u5ea6\u3002 \u7b2c\u4e00\u90e8\u5206\u5199\u4e3a\uff1a $$ \\log {p}(D \\mid G)=\\sum_{i=1}^{n} \\sum_{j=1}^{q_{i}} \\sum_{k=1}^{r_{i}} N_{i j k} \\log \\frac{N_{i j k}}{N_{i j}}=S_{L L}(G, D) $$ \u5f0f\u4e2d$r_i$ \u662f $X_i$ \u7684\u72b6\u6001\u6570 $q_i$ \u662f\u7236\u8282\u70b9\u7684\u72b6\u6001\u6570 \uff1a\u6bd4\u5982\u8bf4 $X_i$ \u6709 $l,j,k$ \u4e09\u4e2a\u7236\u8282\u70b9\uff0c\u90a3\u4e48$q_i = r_l \\times r_j \\times r_k$ \u8ba1\u7b97\u65b9\u6cd5\uff1a\u5148\u505a\u4e00\u4e2a\u8868\u8bb0\u5f55 \u8fd9\u91cc\u5df2\u7ecf\u56fa\u5b9a\u4e86i\uff0c\u6240\u4ee5\u5bf9\u5e94\u7684\u662f\u540e\u9762\u4e24\u4e2a\u6c42\u548c\u7b26\u53f7\uff0c\u5206\u522b\u662f$r_i$ \uff0c$q_i$ \uff0c\u4e00\u5171\u662f $3 \\times 2 = 6$ , \u6240\u4ee5\u8981\u67096\u4e2a\u6570\u5b57\u76f8\u52a0 \u7236\u8282\u70b9\u72b6\u60011 \u7236\u8282\u70b9\u72b6\u60012 \u7236\u8282\u70b9\u72b6\u60013 $X_i$\u72b6\u60011 10 15 20 $X_i$\u72b6\u60012 10 5 30 $N_{i1}$ = 10 + 10 =20 $N_{i11}$ = 10 \u6839\u636e\u4e0a\u8868\uff0c\u5efa\u7acb${N_{i j}}$ \u8868\uff1a $N_{i1}$ $N_{i2}$ $N_{i3}$ 20 20 50 \u5bf9\u5e94\u5217\u76f8\u9664\uff1a 0.5 0.75 0.4 0.5 0.25 0.6 \u6c42log\uff0c\u518d\u4e58\u4e0a\u7b2c\u4e00\u4e2a\u8868\uff0c\u5f97\u52306\u4e2a\u6570\uff0c\u5168\u90e8\u76f8\u52a0\u3002\u8fd9\u5c31\u662f\u5bf9\u4e8e$X_i$\u7684\u8bc4\u5206\u3002 \u5bf9\u4e8eAIC\u8bc4\u5206\uff0c\u540e\u534a\u90e8\u5206\u5199\u4e3a\uff1a $$ F=\\sum_{i=1}^{n}\\left(r_{i}-1\\right) q_{i}\\ S_{A I C}(G, D)=S_{L L}(G, D)-F $$ \u5bf9\u4e8eBIC\u8bc4\u5206\uff1a $$ S_{B I C}(G, D)=S_{L L}(G, D)-\\frac{\\log N}{2} \\cdot F $$ BDeu\u8bc4\u5206 $$ S_{\\text {BDeu }}(G, D)=\\log P(G)+\\sum_{i=1}^{n} \\sum_{j=1}^{q_{i}}\\left[\\log\\frac{\\Gamma\\left(\\frac{N^{\\prime}}{q_{i}}\\right)}{\\Gamma\\left(N_{i j}+\\frac{N^{\\prime}}{q_{i}}\\right)}+\\sum_{k=1}^{r_{i}} \\log \\frac{\\Gamma\\left(N_{i j k}+\\frac{N^{\\prime}}{r_{i q_{i}}}\\right)}{\\Gamma\\left(\\frac{N^{\\prime}}{r_{i q_{i}}}\\right)}\\right] $$ \u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\u6765\u8bf4\uff1a $$ \\sum_{j=1}^{q_{i}}\\left[\\log\\frac{\\Gamma\\left(\\frac{N^{\\prime}}{q_{i}}\\right)}{\\Gamma\\left(N_{i j}+\\frac{N^{\\prime}}{q_{i}}\\right)}+\\sum_{k=1}^{r_{i}} \\log \\frac{\\Gamma\\left(N_{i j k}+\\frac{N^{\\prime}}{r_{i q_{i}}}\\right)}{\\Gamma\\left(\\frac{N^{\\prime}}{r_{i q_{i}}}\\right)}\\right] $$ \u5c55\u5f00\u5199\uff0c\u5206\u4e3a\u4e24\u90e8\u5206\uff1a $$ \\sum_{j=1}^{q_{i}}\\log\\frac{\\Gamma\\left(\\frac{N^{\\prime}}{q_{i}}\\right)}{\\Gamma\\left(N_{i j}+\\frac{N^{\\prime}}{q_{i}}\\right)}+\\sum_{j=1}^{q_{i}}\\sum_{k=1}^{r_{i}} \\log \\frac{\\Gamma\\left(N_{i j k}+\\frac{N^{\\prime}}{r_{i q_{i}}}\\right)}{\\Gamma\\left(\\frac{N^{\\prime}}{r_{i q_{i}}}\\right)} $$ \u8fd8\u662f\u5148\u8ba1\u7b97\u4e2a\u8868\u51fa\u6765 \u7236\u8282\u70b9\u72b6\u60011 \u7236\u8282\u70b9\u72b6\u60012 \u7236\u8282\u70b9\u72b6\u60013 $X_i$\u72b6\u60011 10 15 20 $X_i$\u72b6\u60012 10 5 30","title":"BIC \u8bc4\u5206"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ANeural%20Machine%20Translation%20By%20Jointly%20Learning%20To%20Align%20And%20Translate%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0.assets/BIC%20%E8%AF%84%E5%88%86/#bic","text":"\u8bc4\u5206\u51fd\u6570\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\uff1a Bayesian scores information-theoretic scores \u8bc4\u5206\u6700\u597d\u662f \u53ef\u5206\u89e3 \uff0c\u8fd9\u6837\u53ef\u4ee5\u63d0\u9ad8\u8ba1\u7b97\u6548\u7387\u3002 \u8bc4\u5206\u9700\u8981\u7b26\u5408score equivalence\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u7b49\u4ef7\u56fe\uff0c\u8bc4\u5206\u51fd\u6570\u8981\u7ed9\u5b9a\u76f8\u540c\u7684\u8bc4\u5206","title":"BIC \u8bc4\u5206"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ANeural%20Machine%20Translation%20By%20Jointly%20Learning%20To%20Align%20And%20Translate%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0.assets/BIC%20%E8%AF%84%E5%88%86/#bayesian-scores","text":"\u8d1d\u53f6\u65af\u8bc4\u5206\u51fd\u6570\uff1a\u7ed9\u5b9a\u6570\u636e\u65f6\uff0c\u56fe\u7684\u540e\u9a8c\u6982\u7387\u3002 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5047\u8bbe\u6240\u6709\u7684\u56fe\u7ed3\u6784\u90fd\u662f\u540c\u6837\u7684\u6982\u7387","title":"Bayesian scores"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ANeural%20Machine%20Translation%20By%20Jointly%20Learning%20To%20Align%20And%20Translate%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0.assets/BIC%20%E8%AF%84%E5%88%86/#information-theoretic-scores","text":"\u603b\u4f53\u8868\u8fbe\u5f0f\u4e3a\uff1a $$ S(G, D)=\\log [\\hat{p}(D \\mid G)]-\\Delta(D, G) $$ \u5176\u4e2d\u524d\u534a\u90e8\u5206\u7528log\u4f3c\u7136\u6765\u63cf\u8ff0data\u6709\u591a\u7b26\u5408\u8fd9\u4e2a\u56fe\u3002\u540e\u534a\u90e8\u5206\u6765\u60e9\u7f5a\u56fe\u7684\u590d\u6742\u5ea6\u3002 \u7b2c\u4e00\u90e8\u5206\u5199\u4e3a\uff1a $$ \\log {p}(D \\mid G)=\\sum_{i=1}^{n} \\sum_{j=1}^{q_{i}} \\sum_{k=1}^{r_{i}} N_{i j k} \\log \\frac{N_{i j k}}{N_{i j}}=S_{L L}(G, D) $$ \u5f0f\u4e2d$r_i$ \u662f $X_i$ \u7684\u72b6\u6001\u6570 $q_i$ \u662f\u7236\u8282\u70b9\u7684\u72b6\u6001\u6570 \uff1a\u6bd4\u5982\u8bf4 $X_i$ \u6709 $l,j,k$ \u4e09\u4e2a\u7236\u8282\u70b9\uff0c\u90a3\u4e48$q_i = r_l \\times r_j \\times r_k$ \u8ba1\u7b97\u65b9\u6cd5\uff1a\u5148\u505a\u4e00\u4e2a\u8868\u8bb0\u5f55 \u8fd9\u91cc\u5df2\u7ecf\u56fa\u5b9a\u4e86i\uff0c\u6240\u4ee5\u5bf9\u5e94\u7684\u662f\u540e\u9762\u4e24\u4e2a\u6c42\u548c\u7b26\u53f7\uff0c\u5206\u522b\u662f$r_i$ \uff0c$q_i$ \uff0c\u4e00\u5171\u662f $3 \\times 2 = 6$ , \u6240\u4ee5\u8981\u67096\u4e2a\u6570\u5b57\u76f8\u52a0 \u7236\u8282\u70b9\u72b6\u60011 \u7236\u8282\u70b9\u72b6\u60012 \u7236\u8282\u70b9\u72b6\u60013 $X_i$\u72b6\u60011 10 15 20 $X_i$\u72b6\u60012 10 5 30 $N_{i1}$ = 10 + 10 =20 $N_{i11}$ = 10 \u6839\u636e\u4e0a\u8868\uff0c\u5efa\u7acb${N_{i j}}$ \u8868\uff1a $N_{i1}$ $N_{i2}$ $N_{i3}$ 20 20 50 \u5bf9\u5e94\u5217\u76f8\u9664\uff1a 0.5 0.75 0.4 0.5 0.25 0.6 \u6c42log\uff0c\u518d\u4e58\u4e0a\u7b2c\u4e00\u4e2a\u8868\uff0c\u5f97\u52306\u4e2a\u6570\uff0c\u5168\u90e8\u76f8\u52a0\u3002\u8fd9\u5c31\u662f\u5bf9\u4e8e$X_i$\u7684\u8bc4\u5206\u3002 \u5bf9\u4e8eAIC\u8bc4\u5206\uff0c\u540e\u534a\u90e8\u5206\u5199\u4e3a\uff1a $$ F=\\sum_{i=1}^{n}\\left(r_{i}-1\\right) q_{i}\\ S_{A I C}(G, D)=S_{L L}(G, D)-F $$ \u5bf9\u4e8eBIC\u8bc4\u5206\uff1a $$ S_{B I C}(G, D)=S_{L L}(G, D)-\\frac{\\log N}{2} \\cdot F $$","title":"information-theoretic scores"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8ANeural%20Machine%20Translation%20By%20Jointly%20Learning%20To%20Align%20And%20Translate%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0.assets/BIC%20%E8%AF%84%E5%88%86/#bdeu","text":"$$ S_{\\text {BDeu }}(G, D)=\\log P(G)+\\sum_{i=1}^{n} \\sum_{j=1}^{q_{i}}\\left[\\log\\frac{\\Gamma\\left(\\frac{N^{\\prime}}{q_{i}}\\right)}{\\Gamma\\left(N_{i j}+\\frac{N^{\\prime}}{q_{i}}\\right)}+\\sum_{k=1}^{r_{i}} \\log \\frac{\\Gamma\\left(N_{i j k}+\\frac{N^{\\prime}}{r_{i q_{i}}}\\right)}{\\Gamma\\left(\\frac{N^{\\prime}}{r_{i q_{i}}}\\right)}\\right] $$ \u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\u6765\u8bf4\uff1a $$ \\sum_{j=1}^{q_{i}}\\left[\\log\\frac{\\Gamma\\left(\\frac{N^{\\prime}}{q_{i}}\\right)}{\\Gamma\\left(N_{i j}+\\frac{N^{\\prime}}{q_{i}}\\right)}+\\sum_{k=1}^{r_{i}} \\log \\frac{\\Gamma\\left(N_{i j k}+\\frac{N^{\\prime}}{r_{i q_{i}}}\\right)}{\\Gamma\\left(\\frac{N^{\\prime}}{r_{i q_{i}}}\\right)}\\right] $$ \u5c55\u5f00\u5199\uff0c\u5206\u4e3a\u4e24\u90e8\u5206\uff1a $$ \\sum_{j=1}^{q_{i}}\\log\\frac{\\Gamma\\left(\\frac{N^{\\prime}}{q_{i}}\\right)}{\\Gamma\\left(N_{i j}+\\frac{N^{\\prime}}{q_{i}}\\right)}+\\sum_{j=1}^{q_{i}}\\sum_{k=1}^{r_{i}} \\log \\frac{\\Gamma\\left(N_{i j k}+\\frac{N^{\\prime}}{r_{i q_{i}}}\\right)}{\\Gamma\\left(\\frac{N^{\\prime}}{r_{i q_{i}}}\\right)} $$ \u8fd8\u662f\u5148\u8ba1\u7b97\u4e2a\u8868\u51fa\u6765 \u7236\u8282\u70b9\u72b6\u60011 \u7236\u8282\u70b9\u72b6\u60012 \u7236\u8282\u70b9\u72b6\u60013 $X_i$\u72b6\u60011 10 15 20 $X_i$\u72b6\u60012 10 5 30","title":"BDeu\u8bc4\u5206"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8APC%20algorithm%E3%80%8B%E5%AD%A6%E4%B9%A0.assets/%E3%80%8AStructure%20Learning%20of%20Bayesian%20Networks%20by%20Genetic%20Algorithms%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/","text":"\u300aStructure Learning of Bayesian Networks by Genetic Algorithms\u300b\u9605\u8bfb\u7b14\u8bb0 Abstract \u5047\u8bbe an order between the nodes of the BN, \u8fd9\u4e2a\u5047\u8bbe\u53ef\u4ee5\u4fdd\u8bc1\u9057\u4f20\u7b97\u6cd5\u751f\u6210\u7684\u7f51\u7edc\u662f\u4e00\u4e2a\u5408\u6cd5\u7684BN\u3002\u6b64\u5916\uff0c\u63d0\u51fa\u4e00\u4e2arepair operator\u6765\u8bb2\u975e\u6cd5\u7ed3\u6784\u8f6c\u5316\u4e3a\u5408\u6cd5\u7ed3\u6784\u3002 introduction Joint probability: $$ P\\left(x_{1}, \\ldots, x_{n}\\right)=\\prod_{i=1}^{n} P\\left(x_{i} \\mid \\pi_{i}\\right) $$ K2 algorithm: Genetic algorithm \u4f46\u662fcrossover\u4e4b\u540e\uff0c\u4e0d\u80fd\u4fdd\u8bc1\u540e\u4ee3\u662f\u4e00\u4e2a\u5408\u6cd5\u7684BN\u3002 assume a order between the nodes \u5047\u8bbe\u4e00\u4e2a\u4e00\u4e2aorder\uff0c\u53ef\u4ee5\u4f7f\u5f97n*n\u7684\u77e9\u9635\u7f29\u5c0f\u4e3a\u4e00\u4e2a\u4e09\u89d2\u77e9\u9635\u3002 $n^2$ \u53d8\u4e3a$\\left(\\begin{array}{l}n \\ 2\\end{array}\\right)$ \u8bbe\u7f6e\u6700\u5927parents\u6570\u76eeq\uff1a\u8bbe\u7f6e\u4e00\u4e2a\u5c40\u90e8\u4f18\u5316\u5668\uff0c\u5728parents\u8fc7\u591a\u7684\u65f6\u5019\uff0c\u627e\u5230\u6700\u4f73\u7684q\u4e2aparents. With ordering between the nodes \u751f\u6210 $\\lambda$ \u4e2a gene \u8ba1\u7b97\u6bcf\u4e2a gene \u7684\u9002\u5e94\u5ea6 \u5728t\u65f6\u523b\uff0c\u7b2cj\u4e2a\u4e2a\u4f53\u7684\u6392\u540d\u4e3a$I_t^j$ \u7b2cj\u4e2a\u4e2a\u4f53\uff0c\u9009\u4e3a\u7236\u6bcd\u7684\u6982\u7387\u4e3a$p_{j, t}=\\frac{\\operatorname{rank}\\left(g\\left(I_{t}^{j}\\right)\\right)}{\\lambda(\\lambda+1) / 2}$","title":"\u300aStructure Learning of Bayesian Networks by Genetic Algorithms\u300b\u9605\u8bfb\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8APC%20algorithm%E3%80%8B%E5%AD%A6%E4%B9%A0.assets/%E3%80%8AStructure%20Learning%20of%20Bayesian%20Networks%20by%20Genetic%20Algorithms%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#structure-learning-of-bayesian-networks-by-genetic-algorithms","text":"","title":"\u300aStructure Learning of Bayesian Networks by Genetic Algorithms\u300b\u9605\u8bfb\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8APC%20algorithm%E3%80%8B%E5%AD%A6%E4%B9%A0.assets/%E3%80%8AStructure%20Learning%20of%20Bayesian%20Networks%20by%20Genetic%20Algorithms%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#abstract","text":"\u5047\u8bbe an order between the nodes of the BN, \u8fd9\u4e2a\u5047\u8bbe\u53ef\u4ee5\u4fdd\u8bc1\u9057\u4f20\u7b97\u6cd5\u751f\u6210\u7684\u7f51\u7edc\u662f\u4e00\u4e2a\u5408\u6cd5\u7684BN\u3002\u6b64\u5916\uff0c\u63d0\u51fa\u4e00\u4e2arepair operator\u6765\u8bb2\u975e\u6cd5\u7ed3\u6784\u8f6c\u5316\u4e3a\u5408\u6cd5\u7ed3\u6784\u3002","title":"Abstract"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8APC%20algorithm%E3%80%8B%E5%AD%A6%E4%B9%A0.assets/%E3%80%8AStructure%20Learning%20of%20Bayesian%20Networks%20by%20Genetic%20Algorithms%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#introduction","text":"Joint probability: $$ P\\left(x_{1}, \\ldots, x_{n}\\right)=\\prod_{i=1}^{n} P\\left(x_{i} \\mid \\pi_{i}\\right) $$ K2 algorithm:","title":"introduction"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8APC%20algorithm%E3%80%8B%E5%AD%A6%E4%B9%A0.assets/%E3%80%8AStructure%20Learning%20of%20Bayesian%20Networks%20by%20Genetic%20Algorithms%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#genetic-algorithm","text":"\u4f46\u662fcrossover\u4e4b\u540e\uff0c\u4e0d\u80fd\u4fdd\u8bc1\u540e\u4ee3\u662f\u4e00\u4e2a\u5408\u6cd5\u7684BN\u3002","title":"Genetic algorithm"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8APC%20algorithm%E3%80%8B%E5%AD%A6%E4%B9%A0.assets/%E3%80%8AStructure%20Learning%20of%20Bayesian%20Networks%20by%20Genetic%20Algorithms%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#assume-a-order-between-the-nodes","text":"\u5047\u8bbe\u4e00\u4e2a\u4e00\u4e2aorder\uff0c\u53ef\u4ee5\u4f7f\u5f97n*n\u7684\u77e9\u9635\u7f29\u5c0f\u4e3a\u4e00\u4e2a\u4e09\u89d2\u77e9\u9635\u3002 $n^2$ \u53d8\u4e3a$\\left(\\begin{array}{l}n \\ 2\\end{array}\\right)$ \u8bbe\u7f6e\u6700\u5927parents\u6570\u76eeq\uff1a\u8bbe\u7f6e\u4e00\u4e2a\u5c40\u90e8\u4f18\u5316\u5668\uff0c\u5728parents\u8fc7\u591a\u7684\u65f6\u5019\uff0c\u627e\u5230\u6700\u4f73\u7684q\u4e2aparents.","title":"assume a order between the nodes"},{"location":"%E5%86%85%E5%AE%B9/paper%E9%98%85%E8%AF%BB/%E3%80%8APC%20algorithm%E3%80%8B%E5%AD%A6%E4%B9%A0.assets/%E3%80%8AStructure%20Learning%20of%20Bayesian%20Networks%20by%20Genetic%20Algorithms%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#with-ordering-between-the-nodes","text":"\u751f\u6210 $\\lambda$ \u4e2a gene \u8ba1\u7b97\u6bcf\u4e2a gene \u7684\u9002\u5e94\u5ea6 \u5728t\u65f6\u523b\uff0c\u7b2cj\u4e2a\u4e2a\u4f53\u7684\u6392\u540d\u4e3a$I_t^j$ \u7b2cj\u4e2a\u4e2a\u4f53\uff0c\u9009\u4e3a\u7236\u6bcd\u7684\u6982\u7387\u4e3a$p_{j, t}=\\frac{\\operatorname{rank}\\left(g\\left(I_{t}^{j}\\right)\\right)}{\\lambda(\\lambda+1) / 2}$","title":"With ordering between the nodes"},{"location":"%E5%86%85%E5%AE%B9/python/SPHINX%20%E4%BD%BF%E7%94%A8/","text":"SPHINX \u4f7f\u7528 \u6587\u6863\u7ed3\u6784 docs \u251c\u2500\u2500 build \u251c\u2500\u2500 make.bat \u251c\u2500\u2500 Makefile \u2514\u2500\u2500 source \u251c\u2500\u2500 conf.py \u251c\u2500\u2500 index.rst \u251c\u2500\u2500 _static \u2514\u2500\u2500 _templates build \u6e32\u67d3\u540e\u7684\u7ed3\u679c\u9875\u9762 makefile source/conf.py source/index.rst \u4e3b\u9875\uff0c\u5fc5\u987b\u5305\u542b table of contents tree\uff0c toctree \uff0c\u5305\u542b\u6240\u6709\u9875\u9762 build \u5199\u597d\u4e86\u4ee5\u4e0a\u5c31\u53ef\u4ee5build\uff0c\u5b83\u4f1a\u5c06\u751f\u6210\u597d\u7684html\u6587\u4ef6\u653e\u5165\u5230/build\u6587\u4ef6\u76ee\u5f55\u4e0b extensions \u6269\u5c55 \u6269\u5c55\u5199\u5728conf.py\u5185\uff0c\u53ef\u4ee5\u6dfb\u52a0\u3002 extensions = [ 'sphinx.ext.duration', 'sphinx.ext.doctest', 'sphinx.ext.autodoc', 'sphinx.ext.autosummary', 'sphinx.ext.intersphinx', ] \u4e3b\u9898 \u8981\u5728\u73af\u5883\u4e2d\u5b89\u88c5\"pip\" \u4e3b\u9898 \u518d\u4fee\u6539conf\u6587\u4ef6 \u63cf\u8ff0\u7b26 \u4ee3\u7801\u5757 .. code-block:: console","title":"SPHINX \u4f7f\u7528"},{"location":"%E5%86%85%E5%AE%B9/python/SPHINX%20%E4%BD%BF%E7%94%A8/#sphinx","text":"\u6587\u6863\u7ed3\u6784 docs \u251c\u2500\u2500 build \u251c\u2500\u2500 make.bat \u251c\u2500\u2500 Makefile \u2514\u2500\u2500 source \u251c\u2500\u2500 conf.py \u251c\u2500\u2500 index.rst \u251c\u2500\u2500 _static \u2514\u2500\u2500 _templates build \u6e32\u67d3\u540e\u7684\u7ed3\u679c\u9875\u9762 makefile source/conf.py source/index.rst \u4e3b\u9875\uff0c\u5fc5\u987b\u5305\u542b table of contents tree\uff0c toctree \uff0c\u5305\u542b\u6240\u6709\u9875\u9762","title":"SPHINX \u4f7f\u7528"},{"location":"%E5%86%85%E5%AE%B9/python/SPHINX%20%E4%BD%BF%E7%94%A8/#build","text":"\u5199\u597d\u4e86\u4ee5\u4e0a\u5c31\u53ef\u4ee5build\uff0c\u5b83\u4f1a\u5c06\u751f\u6210\u597d\u7684html\u6587\u4ef6\u653e\u5165\u5230/build\u6587\u4ef6\u76ee\u5f55\u4e0b","title":"build"},{"location":"%E5%86%85%E5%AE%B9/python/SPHINX%20%E4%BD%BF%E7%94%A8/#extensions","text":"\u6269\u5c55\u5199\u5728conf.py\u5185\uff0c\u53ef\u4ee5\u6dfb\u52a0\u3002 extensions = [ 'sphinx.ext.duration', 'sphinx.ext.doctest', 'sphinx.ext.autodoc', 'sphinx.ext.autosummary', 'sphinx.ext.intersphinx', ]","title":"extensions \u6269\u5c55"},{"location":"%E5%86%85%E5%AE%B9/python/SPHINX%20%E4%BD%BF%E7%94%A8/#_1","text":"\u8981\u5728\u73af\u5883\u4e2d\u5b89\u88c5\"pip\" \u4e3b\u9898 \u518d\u4fee\u6539conf\u6587\u4ef6","title":"\u4e3b\u9898"},{"location":"%E5%86%85%E5%AE%B9/python/SPHINX%20%E4%BD%BF%E7%94%A8/#_2","text":"\u4ee3\u7801\u5757 .. code-block:: console","title":"\u63cf\u8ff0\u7b26"},{"location":"%E5%86%85%E5%AE%B9/python/argmax%EF%BC%8Cargsort%E7%9A%84%E4%BD%BF%E7%94%A8/","text":"argmax\uff0cargsort\u7684\u4f7f\u7528 \u5728\u4f7f\u7528tensorflow\u4ee5\u53canumpy\u7684\u65f6\u5019\uff0c\u64cd\u4f5c\u6570\u7ec4\u65f6\uff0c\u5e38\u5e38\u9762\u4e34\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff1a \u5728\u6570\u7ec4\u4e2d\u627e\u67d0\u4e00\u7ef4\u5ea6\u4e0b\u6700\u5927\u7684\u503c\uff0c\u6216\u8005\u5728\u6570\u7ec4\u7684\u67d0\u4e00\u7ef4\u5ea6\u4e0b\u7b2c\u4e8c\u5927\u7684\u503c\u3002 \u53ef\u4ee5\u4f7f\u7528argmax\u6216\u8005argsort\u8fdb\u884c\u5bfb\u627e\uff1a argmax \u8981\u9996\u5148\u7406\u89e3\uff0cargmax\u8fd4\u56de\u7684\u662f \u7d22\u5f15 \u3002 \u7528argmax\u627e\u5230\u6700\u5927\u503c\u7684\u7d22\u5f15 \u7528\u8be5\u7d22\u5f15\u627e\u5230\u6700\u5927\u503c \u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u5e38\u5e38\u662f\u5728\u5f20\u91cfA\u4e2d\u5bfb\u627e\u7d22\u5f15\uff0c\u7136\u540e\u7528\u8be5\u7d22\u5f15\u5728\u5f20\u91cfB\u4e2d\u627e\u503c\u3001\u6216\u4fee\u6539\u503c\u3002 argsort argsort\u8fd4\u56de\u7684\u7d22\u5f15\u5305\u542b\u7684\u4fe1\u606f\u66f4\u52a0\u5168\u9762\u3002 idx[0]\u4e3a\u6700\u5927\u503c\u7684\u7d22\u5f15\u3002 idx[-1]\u4e3a\u6700\u5c0f\u503c\u7684\u7d22\u5f15\u3002 \u7b2c\u4e00\u6b21\u7406\u89e3\u65f6\uff0c\u628a idx \u7406\u89e3\u4e3a\u4e86\u6bcf\u4e2a\u4f4d\u7f6e\u5bf9\u5e94\u7684\u540d\u6b21\uff0c\u8fd9\u6837\u7684\u7406\u89e3\u4e0d\u5229\u4e8e\u4e4b\u540e\u7684\u53d6\u503c\u64cd\u4f5c\u3002 \u5b9e\u9645\u7a0b\u5e8f\u4f7f\u7528 \u5728Pointer network\u5b9e\u9645\u7f16\u7a0b\u4e2d\uff0c\u9700\u8981\u627e\u5230\u7b2c\u4e8c\u5927\u5c0f\u7684\u6307\u9488\uff0c\u5728\u57ce\u5e02\u5750\u6807\u4e2d\u8fdb\u884c\u7d22\u5f15\uff1a x = [batch, \u57ce\u5e02\u6570\u76ee, 2\u7ef4\u5750\u6807] probs = [batch, \u57ce\u5e02\u6570\u76ee, \u57ce\u5e02\u6570\u76ee]\uff0c\u7b2c\u4e09\u7ef4\u662f\u6bcf\u4e2a\u57ce\u5e02\u5bf9\u5e94\u7684\u6982\u7387 total rank \u5728 probs \u7684\u7b2c\u4e09\u7ef4\u4e0a\u5efa\u7acb\u7d22\u5f15\u3002\u6240\u4ee5\u5b83\u7684\u7ef4\u5ea6\u548cprobs\u4fdd\u6301\u4e00\u81f4 \u5728\u7b2c\u4e09\u7ef4\u7684\u7b2c1\u4e2a\u5c31\u662f\u7b2c\u4e8c\u540d\u7684\u7d22\u5f15\uff0c\u6240\u4ee5idx \u7528tf.gather\u6765\u4f9d\u636e\u7d22\u5f15\u53d6\u503c\u3002","title":"argmax\uff0cargsort\u7684\u4f7f\u7528"},{"location":"%E5%86%85%E5%AE%B9/python/argmax%EF%BC%8Cargsort%E7%9A%84%E4%BD%BF%E7%94%A8/#argmaxargsort","text":"\u5728\u4f7f\u7528tensorflow\u4ee5\u53canumpy\u7684\u65f6\u5019\uff0c\u64cd\u4f5c\u6570\u7ec4\u65f6\uff0c\u5e38\u5e38\u9762\u4e34\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff1a \u5728\u6570\u7ec4\u4e2d\u627e\u67d0\u4e00\u7ef4\u5ea6\u4e0b\u6700\u5927\u7684\u503c\uff0c\u6216\u8005\u5728\u6570\u7ec4\u7684\u67d0\u4e00\u7ef4\u5ea6\u4e0b\u7b2c\u4e8c\u5927\u7684\u503c\u3002 \u53ef\u4ee5\u4f7f\u7528argmax\u6216\u8005argsort\u8fdb\u884c\u5bfb\u627e\uff1a","title":"argmax\uff0cargsort\u7684\u4f7f\u7528"},{"location":"%E5%86%85%E5%AE%B9/python/argmax%EF%BC%8Cargsort%E7%9A%84%E4%BD%BF%E7%94%A8/#argmax","text":"\u8981\u9996\u5148\u7406\u89e3\uff0cargmax\u8fd4\u56de\u7684\u662f \u7d22\u5f15 \u3002 \u7528argmax\u627e\u5230\u6700\u5927\u503c\u7684\u7d22\u5f15 \u7528\u8be5\u7d22\u5f15\u627e\u5230\u6700\u5927\u503c \u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u5e38\u5e38\u662f\u5728\u5f20\u91cfA\u4e2d\u5bfb\u627e\u7d22\u5f15\uff0c\u7136\u540e\u7528\u8be5\u7d22\u5f15\u5728\u5f20\u91cfB\u4e2d\u627e\u503c\u3001\u6216\u4fee\u6539\u503c\u3002","title":"argmax"},{"location":"%E5%86%85%E5%AE%B9/python/argmax%EF%BC%8Cargsort%E7%9A%84%E4%BD%BF%E7%94%A8/#argsort","text":"argsort\u8fd4\u56de\u7684\u7d22\u5f15\u5305\u542b\u7684\u4fe1\u606f\u66f4\u52a0\u5168\u9762\u3002 idx[0]\u4e3a\u6700\u5927\u503c\u7684\u7d22\u5f15\u3002 idx[-1]\u4e3a\u6700\u5c0f\u503c\u7684\u7d22\u5f15\u3002 \u7b2c\u4e00\u6b21\u7406\u89e3\u65f6\uff0c\u628a idx \u7406\u89e3\u4e3a\u4e86\u6bcf\u4e2a\u4f4d\u7f6e\u5bf9\u5e94\u7684\u540d\u6b21\uff0c\u8fd9\u6837\u7684\u7406\u89e3\u4e0d\u5229\u4e8e\u4e4b\u540e\u7684\u53d6\u503c\u64cd\u4f5c\u3002","title":"argsort"},{"location":"%E5%86%85%E5%AE%B9/python/argmax%EF%BC%8Cargsort%E7%9A%84%E4%BD%BF%E7%94%A8/#_1","text":"\u5728Pointer network\u5b9e\u9645\u7f16\u7a0b\u4e2d\uff0c\u9700\u8981\u627e\u5230\u7b2c\u4e8c\u5927\u5c0f\u7684\u6307\u9488\uff0c\u5728\u57ce\u5e02\u5750\u6807\u4e2d\u8fdb\u884c\u7d22\u5f15\uff1a x = [batch, \u57ce\u5e02\u6570\u76ee, 2\u7ef4\u5750\u6807] probs = [batch, \u57ce\u5e02\u6570\u76ee, \u57ce\u5e02\u6570\u76ee]\uff0c\u7b2c\u4e09\u7ef4\u662f\u6bcf\u4e2a\u57ce\u5e02\u5bf9\u5e94\u7684\u6982\u7387 total rank \u5728 probs \u7684\u7b2c\u4e09\u7ef4\u4e0a\u5efa\u7acb\u7d22\u5f15\u3002\u6240\u4ee5\u5b83\u7684\u7ef4\u5ea6\u548cprobs\u4fdd\u6301\u4e00\u81f4 \u5728\u7b2c\u4e09\u7ef4\u7684\u7b2c1\u4e2a\u5c31\u662f\u7b2c\u4e8c\u540d\u7684\u7d22\u5f15\uff0c\u6240\u4ee5idx \u7528tf.gather\u6765\u4f9d\u636e\u7d22\u5f15\u53d6\u503c\u3002","title":"\u5b9e\u9645\u7a0b\u5e8f\u4f7f\u7528"},{"location":"%E5%86%85%E5%AE%B9/python/conda%20%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/","text":"conda \u865a\u62df\u73af\u5883 conda\u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u5305\u7ba1\u7406\u5668\uff0c\u865a\u62df\u73af\u5883\u7ba1\u7406\u5668\u3002 \u67e5\u770b\u6240\u6709\u865a\u62df\u73af\u5883 conda env list \u6fc0\u6d3b\u865a\u62df\u73af\u5883 activate env_name \u9000\u51fa\u865a\u62df\u73af\u5883 deactivate env_name \u5220\u9664\u865a\u62df\u73af\u5883 conda env remove -n env_name --all \u865a\u62df\u73af\u5883\u4fdd\u5b58\u4f4d\u7f6e\uff1a .\\user\\Anaconda3\\envs\\","title":"conda \u865a\u62df\u73af\u5883"},{"location":"%E5%86%85%E5%AE%B9/python/conda%20%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/#conda","text":"conda\u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u5305\u7ba1\u7406\u5668\uff0c\u865a\u62df\u73af\u5883\u7ba1\u7406\u5668\u3002 \u67e5\u770b\u6240\u6709\u865a\u62df\u73af\u5883 conda env list \u6fc0\u6d3b\u865a\u62df\u73af\u5883 activate env_name \u9000\u51fa\u865a\u62df\u73af\u5883 deactivate env_name \u5220\u9664\u865a\u62df\u73af\u5883 conda env remove -n env_name --all \u865a\u62df\u73af\u5883\u4fdd\u5b58\u4f4d\u7f6e\uff1a .\\user\\Anaconda3\\envs\\","title":"conda \u865a\u62df\u73af\u5883"},{"location":"%E5%86%85%E5%AE%B9/python/datatime%20%E6%A8%A1%E5%9D%97/","text":"datetime \u6a21\u5757 \u611f\u77e5\u578b \u4e00\u4e2a \u611f\u77e5\u578b \u5bf9\u8c61\u5c31\u80fd\u76f8\u5bf9\u4e8e\u5176\u4ed6\u611f\u77e5\u578b\u5bf9\u8c61\u6765\u7cbe\u786e\u5b9a\u4f4d\u81ea\u8eab\u65f6\u95f4\u70b9\u3002 \u7b80\u5355\u578b \u5bf9\u8c61\u6ca1\u6709\u5305\u542b\u8db3\u591f\u591a\u7684\u4fe1\u606f\u6765\u65e0\u6b67\u4e49\u5730\u76f8\u5bf9\u4e8e\u5176\u4ed6 date/time \u5bf9\u8c61\u6765\u5b9a\u4f4d\u81ea\u8eab\u65f6\u95f4\u70b9\u3002 \u4e0d\u8bba\u4e00\u4e2a\u7b80\u5355\u578b\u5bf9\u8c61\u6240\u4ee3\u8868\u7684\u662f\u4e16\u754c\u6807\u51c6\u65f6\u95f4\uff08UTC\uff09\u3001\u5f53\u5730\u65f6\u95f4\u8fd8\u662f\u67d0\u4e2a\u5176\u4ed6\u65f6\u533a\u7684\u65f6\u95f4\u5b8c\u5168\u53d6\u51b3\u4e8e\u5177\u4f53\u7a0b\u5e8f\uff0c\u5c31\u50cf\u4e00\u4e2a\u7279\u5b9a\u6570\u5b57\u6240\u4ee3\u8868\u7684\u662f\u7c73\u3001\u82f1\u91cc\u8fd8\u662f\u8d28\u91cf\u5b8c\u5168\u53d6\u51b3\u4e8e\u5177\u4f53\u7a0b\u5e8f\u4e00\u6837\u3002 \u7b80\u5355\u578b\u5bf9\u8c61\u66f4\u6613\u4e8e\u7406\u89e3\u548c\u4f7f\u7528\uff0c\u4ee3\u4ef7\u5219\u662f\u5ffd\u7565\u4e86\u67d0\u4e9b\u73b0\u5b9e\u6027\u8003\u91cf\u3002 \u5e38\u91cf datetime.MINYEAR datetime.MAXYEAR \u6709\u6548\u7c7b\u578b class datetime.``date class datetime.``time class datetime.``datetime class datetime.``timedelta class datetime.``tzinfo class datetime.``timezone \u6a21\u5757\u9605\u8bfb time \u7c7b\uff1a\u7528\u4e8e\u50a8\u5b58\u65f6\u95f4 \u65f6\u95f4\u6709\u4e24\u79cd\u8868\u8fbe\u65b9\u5f0f\uff1a \u4eceepoch\u5f00\u59cb\u7b97\u8d77\uff0c\u7b2c\u591a\u5c11\u79d2\u6570\u3002unix\u4e0a1970\u5e74\u76841\u67081\u53f7\u4e3aepoch\u3002 tuple (\u4e5d\u4e2aint\u5206\u522b\u8868\u793a\u5e74\u6708\u65e5\u65f6\u5206\u79d2\uff0cweekday\uff0cjulian day, DST) time\u7c7b\u7684\u5b9e\u4f8b\u5316a\uff0c\u67e5\u770b\u4e0b\u4ed6\u7684\u5c5e\u6027\u3002 \u67e5\u770bdatetime\u6a21\u5757\u4e2d\u7684time\u7c7b \u67e5\u770b\u4ee3\u7801\u6ce8\u91ca\u4e5f\u53ef\u4ee5\u5f97\u5230\u76f8\u5e94\u7684\u7b54\u6848\uff1a \"\"\"Time with time zone. Constructors: __new__() Operators: __repr__, __str__ __eq__, __le__, __lt__, __ge__, __gt__, __hash__ Methods: strftime() isoformat() utcoffset() tzname() dst() Properties (readonly): hour, minute, second, microsecond, tzinfo, fold \u7ee7\u7eed\u5f80\u4e0b\u770b~ \u4f7f\u7528\u4e86\u63d2\u69fd\u9650\u5236__slots__ \u4e5f\u5c31\u662f\u8bf4\uff0ctime\u7c7b\u4e0d\u5141\u8bb8\u6dfb\u52a0\u5176\u4ed6\u5c5e\u6027\uff0c\u53ea\u80fd\u7531\u8fd9\u4e9b\u5c5e\u6027 \u4f7f\u7528\u4e86new\u65b9\u6cd5\u8fdb\u884c\u6784\u9020 \u4e2a\u4eba\u7406\u89e3\uff08\u4e0d\u4e00\u5b9a\u51c6\u786e\uff09\uff1a new\u51fd\u6570\u662f\u4e00\u4e2a\u7c7b\u65b9\u6cd5\uff0c\u7528\u4e8e\u751f\u6210\u6211\u4eec\u6240\u9700\u7684\u5b9e\u4f8b\u5bf9\u8c61\uff0c\u5c06\u5176\u8d4b\u503c\u7ed9\u5bf9\u8c61\u540d\u3002 a = datetime.time() \u9996\u5148\u8fdb\u5165new\u51fd\u6570 \u505a\u4e2a\u68c0\u67e5 \u751f\u6210\u4e00\u4e2aobject\uff0c\u4e5f\u5c31\u662f\u5bf9\u8c61 \u5b9a\u4e49\u4e00\u7cfb\u5217\u5c5e\u6027\uff0c\u7136\u540e\u8fd4\u56de\u8be5\u5bf9\u8c61 \u7136\u540e\u5b9a\u4e49\u4e86\u5b83\u7684\u5c5e\u6027 \u90fd\u4f7f\u7528\u4e86property\u4fee\u9970\u5668 \u7ed9\u65f6\u95f4\u589e\u6dfb\u4e86\u6bd4\u8f83\u7684\u529f\u80fd\uff1a equal to less than or equal to less than greater than or equal to greater than \u4e94\u79cd\u6bd4\u8f83\u7b26\u53f7\uff0c\u5e26\u4e86\u4e2a\u9501\uff1a\u4e00\u822c\u60c5\u51b5\u4e0b\u5916\u90e8\u4e0d\u8bbf\u95ee comparison\u6bd4\u8f83 \u7528\u4e8e\u8fd4\u56de\u65f6\u95f4\u7684\u5173\u7cfb\uff0c\u524d\u9762\u7684\u6bd4\u8f83\u7b26\u53f7\u90fd\u8c03\u7528\u4e86_cmp\u51fd\u6570 __hash__\u51fd\u6570 \u4f7f\u5f97\u8be5\u7c7b\u7684\u5bf9\u8c61\u53ef\u54c8\u5e0c\uff0c\u901a\u4fd7\u7684\u8bf4\uff0c\u53ef\u54c8\u5e0c\u5bf9\u8c61\u53ef\u4ee5\u4f5c\u4e3a\u5b57\u5178\u7684\u952e\uff0c\u4e0d\u53ef\u54c8\u5e0c\u5bf9\u8c61\u65e0\u6cd5\u4f5c\u4e3a\u5b57\u5178\u7684\u952e\u3002\u6709\u65f6\u5019\uff0c\u6211\u4eec\u4f7f\u7528\u5217\u8868\u6216\u8005\u81ea\u5b9a\u4e49\u5bf9\u8c61\u4f5c\u4e3a\u5b57\u5178\u7684\u952e\uff0c\u6216\u8005\u4f7f\u7528 set \u8fdb\u884c\u5143\u7d20\u53bb\u91cd\u7684\u65f6\u5019\uff0c\u4f1a\u9047\u5230 unhashable type: xxx \u4e4b\u7c7b\u7684\u95ee\u9898\uff0c\u8fd9\u7c7b\u95ee\u9898\u51fa\u73b0\u7684\u539f\u56e0\u5c31\u662f\u5b57\u5178\u7684\u952e\u6216\u8005\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u7c7b\u578b\u4e3a\u4e0d\u53ef\u54c8\u5e0c\u7c7b\u578b\u3002 An object is hashable if it has a hash value which never changes during its lifetime (it needs a hash() method), and can be compared to other objects (it needs an eq() method). Hashable objects which compare equal must have the same hash value. \u7b2c\u4e00\uff0chash\u9700\u8981eq\u65b9\u6cd5 \u7b2c\u4e8c\uff0c\u53ef\u54c8\u5e0c\u7684\u5bf9\u8c61\u5728\u4ed6\u7684\u751f\u547d\u5468\u671f\u91cc\uff0c\u5b83\u7684\u54c8\u5e0c\u7801\u4e0d\u53d8 \u7b2c\u4e09\uff0c\u54c8\u5e0c\u7801\u53ef\u4ee5\u4e0e\u5176\u4ed6\u5bf9\u8c61\u7684\u54c8\u5e0c\u7801\u5bf9\u6bd4 \u7b2c\u56db\uff0cequal\u7684\u5bf9\u8c61\u8981\u6709\u76f8\u540c\u7684\u54c8\u5e0c\u7801\u3002 \u51fd\u6570\u540d\u5b57\u524d\u53ea\u6709\u4e00\u4e2a_ \u8bf4\u660e\u8be5\u51fd\u6570\u4f9b\u5185\u90e8\u4f7f\u7528\uff0c\u8fd9\u4e2a\u7528\u4e8e\u5c06\u65f6\u533a\u8f6c\u5316\u4e3astring","title":"datetime \u6a21\u5757"},{"location":"%E5%86%85%E5%AE%B9/python/datatime%20%E6%A8%A1%E5%9D%97/#datetime","text":"\u611f\u77e5\u578b \u4e00\u4e2a \u611f\u77e5\u578b \u5bf9\u8c61\u5c31\u80fd\u76f8\u5bf9\u4e8e\u5176\u4ed6\u611f\u77e5\u578b\u5bf9\u8c61\u6765\u7cbe\u786e\u5b9a\u4f4d\u81ea\u8eab\u65f6\u95f4\u70b9\u3002 \u7b80\u5355\u578b \u5bf9\u8c61\u6ca1\u6709\u5305\u542b\u8db3\u591f\u591a\u7684\u4fe1\u606f\u6765\u65e0\u6b67\u4e49\u5730\u76f8\u5bf9\u4e8e\u5176\u4ed6 date/time \u5bf9\u8c61\u6765\u5b9a\u4f4d\u81ea\u8eab\u65f6\u95f4\u70b9\u3002 \u4e0d\u8bba\u4e00\u4e2a\u7b80\u5355\u578b\u5bf9\u8c61\u6240\u4ee3\u8868\u7684\u662f\u4e16\u754c\u6807\u51c6\u65f6\u95f4\uff08UTC\uff09\u3001\u5f53\u5730\u65f6\u95f4\u8fd8\u662f\u67d0\u4e2a\u5176\u4ed6\u65f6\u533a\u7684\u65f6\u95f4\u5b8c\u5168\u53d6\u51b3\u4e8e\u5177\u4f53\u7a0b\u5e8f\uff0c\u5c31\u50cf\u4e00\u4e2a\u7279\u5b9a\u6570\u5b57\u6240\u4ee3\u8868\u7684\u662f\u7c73\u3001\u82f1\u91cc\u8fd8\u662f\u8d28\u91cf\u5b8c\u5168\u53d6\u51b3\u4e8e\u5177\u4f53\u7a0b\u5e8f\u4e00\u6837\u3002 \u7b80\u5355\u578b\u5bf9\u8c61\u66f4\u6613\u4e8e\u7406\u89e3\u548c\u4f7f\u7528\uff0c\u4ee3\u4ef7\u5219\u662f\u5ffd\u7565\u4e86\u67d0\u4e9b\u73b0\u5b9e\u6027\u8003\u91cf\u3002 \u5e38\u91cf datetime.MINYEAR datetime.MAXYEAR \u6709\u6548\u7c7b\u578b class datetime.``date class datetime.``time class datetime.``datetime class datetime.``timedelta class datetime.``tzinfo class datetime.``timezone","title":"datetime \u6a21\u5757"},{"location":"%E5%86%85%E5%AE%B9/python/datatime%20%E6%A8%A1%E5%9D%97/#_1","text":"time \u7c7b\uff1a\u7528\u4e8e\u50a8\u5b58\u65f6\u95f4 \u65f6\u95f4\u6709\u4e24\u79cd\u8868\u8fbe\u65b9\u5f0f\uff1a \u4eceepoch\u5f00\u59cb\u7b97\u8d77\uff0c\u7b2c\u591a\u5c11\u79d2\u6570\u3002unix\u4e0a1970\u5e74\u76841\u67081\u53f7\u4e3aepoch\u3002 tuple (\u4e5d\u4e2aint\u5206\u522b\u8868\u793a\u5e74\u6708\u65e5\u65f6\u5206\u79d2\uff0cweekday\uff0cjulian day, DST) time\u7c7b\u7684\u5b9e\u4f8b\u5316a\uff0c\u67e5\u770b\u4e0b\u4ed6\u7684\u5c5e\u6027\u3002 \u67e5\u770bdatetime\u6a21\u5757\u4e2d\u7684time\u7c7b \u67e5\u770b\u4ee3\u7801\u6ce8\u91ca\u4e5f\u53ef\u4ee5\u5f97\u5230\u76f8\u5e94\u7684\u7b54\u6848\uff1a \"\"\"Time with time zone. Constructors: __new__() Operators: __repr__, __str__ __eq__, __le__, __lt__, __ge__, __gt__, __hash__ Methods: strftime() isoformat() utcoffset() tzname() dst() Properties (readonly): hour, minute, second, microsecond, tzinfo, fold \u7ee7\u7eed\u5f80\u4e0b\u770b~ \u4f7f\u7528\u4e86\u63d2\u69fd\u9650\u5236__slots__ \u4e5f\u5c31\u662f\u8bf4\uff0ctime\u7c7b\u4e0d\u5141\u8bb8\u6dfb\u52a0\u5176\u4ed6\u5c5e\u6027\uff0c\u53ea\u80fd\u7531\u8fd9\u4e9b\u5c5e\u6027 \u4f7f\u7528\u4e86new\u65b9\u6cd5\u8fdb\u884c\u6784\u9020 \u4e2a\u4eba\u7406\u89e3\uff08\u4e0d\u4e00\u5b9a\u51c6\u786e\uff09\uff1a new\u51fd\u6570\u662f\u4e00\u4e2a\u7c7b\u65b9\u6cd5\uff0c\u7528\u4e8e\u751f\u6210\u6211\u4eec\u6240\u9700\u7684\u5b9e\u4f8b\u5bf9\u8c61\uff0c\u5c06\u5176\u8d4b\u503c\u7ed9\u5bf9\u8c61\u540d\u3002 a = datetime.time() \u9996\u5148\u8fdb\u5165new\u51fd\u6570 \u505a\u4e2a\u68c0\u67e5 \u751f\u6210\u4e00\u4e2aobject\uff0c\u4e5f\u5c31\u662f\u5bf9\u8c61 \u5b9a\u4e49\u4e00\u7cfb\u5217\u5c5e\u6027\uff0c\u7136\u540e\u8fd4\u56de\u8be5\u5bf9\u8c61 \u7136\u540e\u5b9a\u4e49\u4e86\u5b83\u7684\u5c5e\u6027 \u90fd\u4f7f\u7528\u4e86property\u4fee\u9970\u5668 \u7ed9\u65f6\u95f4\u589e\u6dfb\u4e86\u6bd4\u8f83\u7684\u529f\u80fd\uff1a equal to less than or equal to less than greater than or equal to greater than \u4e94\u79cd\u6bd4\u8f83\u7b26\u53f7\uff0c\u5e26\u4e86\u4e2a\u9501\uff1a\u4e00\u822c\u60c5\u51b5\u4e0b\u5916\u90e8\u4e0d\u8bbf\u95ee comparison\u6bd4\u8f83 \u7528\u4e8e\u8fd4\u56de\u65f6\u95f4\u7684\u5173\u7cfb\uff0c\u524d\u9762\u7684\u6bd4\u8f83\u7b26\u53f7\u90fd\u8c03\u7528\u4e86_cmp\u51fd\u6570 __hash__\u51fd\u6570 \u4f7f\u5f97\u8be5\u7c7b\u7684\u5bf9\u8c61\u53ef\u54c8\u5e0c\uff0c\u901a\u4fd7\u7684\u8bf4\uff0c\u53ef\u54c8\u5e0c\u5bf9\u8c61\u53ef\u4ee5\u4f5c\u4e3a\u5b57\u5178\u7684\u952e\uff0c\u4e0d\u53ef\u54c8\u5e0c\u5bf9\u8c61\u65e0\u6cd5\u4f5c\u4e3a\u5b57\u5178\u7684\u952e\u3002\u6709\u65f6\u5019\uff0c\u6211\u4eec\u4f7f\u7528\u5217\u8868\u6216\u8005\u81ea\u5b9a\u4e49\u5bf9\u8c61\u4f5c\u4e3a\u5b57\u5178\u7684\u952e\uff0c\u6216\u8005\u4f7f\u7528 set \u8fdb\u884c\u5143\u7d20\u53bb\u91cd\u7684\u65f6\u5019\uff0c\u4f1a\u9047\u5230 unhashable type: xxx \u4e4b\u7c7b\u7684\u95ee\u9898\uff0c\u8fd9\u7c7b\u95ee\u9898\u51fa\u73b0\u7684\u539f\u56e0\u5c31\u662f\u5b57\u5178\u7684\u952e\u6216\u8005\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u7c7b\u578b\u4e3a\u4e0d\u53ef\u54c8\u5e0c\u7c7b\u578b\u3002 An object is hashable if it has a hash value which never changes during its lifetime (it needs a hash() method), and can be compared to other objects (it needs an eq() method). Hashable objects which compare equal must have the same hash value. \u7b2c\u4e00\uff0chash\u9700\u8981eq\u65b9\u6cd5 \u7b2c\u4e8c\uff0c\u53ef\u54c8\u5e0c\u7684\u5bf9\u8c61\u5728\u4ed6\u7684\u751f\u547d\u5468\u671f\u91cc\uff0c\u5b83\u7684\u54c8\u5e0c\u7801\u4e0d\u53d8 \u7b2c\u4e09\uff0c\u54c8\u5e0c\u7801\u53ef\u4ee5\u4e0e\u5176\u4ed6\u5bf9\u8c61\u7684\u54c8\u5e0c\u7801\u5bf9\u6bd4 \u7b2c\u56db\uff0cequal\u7684\u5bf9\u8c61\u8981\u6709\u76f8\u540c\u7684\u54c8\u5e0c\u7801\u3002 \u51fd\u6570\u540d\u5b57\u524d\u53ea\u6709\u4e00\u4e2a_ \u8bf4\u660e\u8be5\u51fd\u6570\u4f9b\u5185\u90e8\u4f7f\u7528\uff0c\u8fd9\u4e2a\u7528\u4e8e\u5c06\u65f6\u533a\u8f6c\u5316\u4e3astring","title":"\u6a21\u5757\u9605\u8bfb"},{"location":"%E5%86%85%E5%AE%B9/python/django/","text":"django ## \u8bbe\u8ba1\u7406\u5ff5 M V C \u964d\u4f4e\u6a21\u578b\u95f4\u7684\u8026\u5408\u5ea6 \u521b\u5efa\u9879\u76ee django-admin startproject mysite \u5f00\u59cb\u5de5\u4f5c\uff1a\u5b83\u53ef\u4ee5\u81ea\u52a8\u521b\u5efa\u597d\u9879\u76ee\u9aa8\u67b6 \u9879\u76ee\u57fa\u672c\u6784\u67b6 mysite/ manage.py mysite/ __init__.py settings.py urls.py asgi.py wsgi.py \u8fd9\u4e9b\u76ee\u5f55\u548c\u6587\u4ef6\u7684\u7528\u5904\u662f\uff1a \u6700\u5916\u5c42\u7684 mysite/ \u6839\u76ee\u5f55\u53ea\u662f\u4f60\u9879\u76ee\u7684\u5bb9\u5668\uff0c \u6839\u76ee\u5f55\u540d\u79f0\u5bf9 Django \u6ca1\u6709\u5f71\u54cd\uff0c\u4f60\u53ef\u4ee5\u5c06\u5b83\u91cd\u547d\u540d\u4e3a\u4efb\u4f55\u4f60\u559c\u6b22\u7684\u540d\u79f0\u3002 manage.py : \u4e00\u4e2a\u8ba9\u4f60\u7528\u5404\u79cd\u65b9\u5f0f\u7ba1\u7406 Django \u9879\u76ee\u7684\u547d\u4ee4\u884c\u5de5\u5177\u3002\u4f60\u53ef\u4ee5\u9605\u8bfb django-admin \u548c manage.py \u83b7\u53d6\u6240\u6709 manage.py \u7684\u7ec6\u8282\u3002 \u91cc\u9762\u4e00\u5c42\u7684 mysite/ \u76ee\u5f55\u5305\u542b\u4f60\u7684\u9879\u76ee\uff0c\u5b83\u662f\u4e00\u4e2a\u7eaf Python \u5305\u3002\u5b83\u7684\u540d\u5b57\u5c31\u662f\u5f53\u4f60\u5f15\u7528\u5b83\u5185\u90e8\u4efb\u4f55\u4e1c\u897f\u65f6\u9700\u8981\u7528\u5230\u7684 Python \u5305\u540d\u3002 (\u6bd4\u5982 mysite.urls ). mysite/__init__.py \uff1a\u4e00\u4e2a\u7a7a\u6587\u4ef6\uff0c\u544a\u8bc9 Python \u8fd9\u4e2a\u76ee\u5f55\u5e94\u8be5\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a Python \u5305\u3002\u5982\u679c\u4f60\u662f Python \u521d\u5b66\u8005\uff0c\u9605\u8bfb\u5b98\u65b9\u6587\u6863\u4e2d\u7684 \u66f4\u591a\u5173\u4e8e\u5305\u7684\u77e5\u8bc6 \u3002 mysite/settings.py \uff1aDjango \u9879\u76ee\u7684\u914d\u7f6e\u6587\u4ef6\u3002\u5982\u679c\u4f60\u60f3\u77e5\u9053\u8fd9\u4e2a\u6587\u4ef6\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u8bf7\u67e5\u770b Django \u914d\u7f6e \u4e86\u89e3\u7ec6\u8282\u3002 mysite/urls.py \uff1aDjango \u9879\u76ee\u7684 URL \u58f0\u660e\uff0c\u5c31\u50cf\u4f60\u7f51\u7ad9\u7684\u201c\u76ee\u5f55\u201d\u3002\u9605\u8bfb URL\u8c03\u5ea6\u5668 \u6587\u6863\u6765\u83b7\u53d6\u66f4\u591a\u5173\u4e8e URL \u7684\u5185\u5bb9\u3002 mysite/asgi.py \uff1a\u4f5c\u4e3a\u4f60\u7684\u9879\u76ee\u7684\u8fd0\u884c\u5728 ASGI \u517c\u5bb9\u7684 Web \u670d\u52a1\u5668\u4e0a\u7684\u5165\u53e3\u3002\u9605\u8bfb \u5982\u4f55\u4f7f\u7528 ASGI \u6765\u90e8\u7f72 \u4e86\u89e3\u66f4\u591a\u7ec6\u8282\u3002 mysite/wsgi.py \uff1a\u4f5c\u4e3a\u4f60\u7684\u9879\u76ee\u7684\u8fd0\u884c\u5728 WSGI \u517c\u5bb9\u7684Web\u670d\u52a1\u5668\u4e0a\u7684\u5165\u53e3\u3002\u9605\u8bfb \u5982\u4f55\u4f7f\u7528 WSGI \u8fdb\u884c\u90e8\u7f72 \u4e86\u89e3\u66f4\u591a\u7ec6\u8282\u3002 \u9879\u76ee\u9aa8\u67b6\u5305\u62ec\u4e86\u4e00\u4e2a\u9879\u76ee\u540d\u7684\u6839\u76ee\u5f55\u4ee5\u53ca\u4e00\u4e2a\u4e0e\u9879\u76ee\u540c\u540d\u7684\u76ee\u5f55\uff0c\u8fd9\u4e2a\u76ee\u5f55\u5305\u542b\u4e86\u9879\u76ee\u7684\u57fa\u7840\u8bbe\u7f6e \u521b\u5efaAPP\uff08\u5e94\u7528\uff09 \u9879\u76ee VS \u5e94\u7528 \u9879\u76ee\u548c\u5e94\u7528\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u5e94\u7528\u662f\u4e00\u4e2a\u4e13\u95e8\u505a\u67d0\u4ef6\u4e8b\u7684\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f\u2014\u2014\u6bd4\u5982\u535a\u5ba2\u7cfb\u7edf\uff0c\u6216\u8005\u516c\u5171\u8bb0\u5f55\u7684\u6570\u636e\u5e93\uff0c\u6216\u8005\u5c0f\u578b\u7684\u6295\u7968\u7a0b\u5e8f\u3002\u9879\u76ee\u5219\u662f\u4e00\u4e2a\u7f51\u7ad9\u4f7f\u7528\u7684\u914d\u7f6e\u548c\u5e94\u7528\u7684\u96c6\u5408\u3002\u9879\u76ee\u53ef\u4ee5\u5305\u542b\u5f88\u591a\u4e2a\u5e94\u7528\u3002\u5e94\u7528\u53ef\u4ee5\u88ab\u5f88\u591a\u4e2a\u9879\u76ee\u4f7f\u7528\u3002 mysite/ manage.py # \u9879\u76ee\u7ba1\u7406 mysite/ __init__.py settings.py # \u9879\u76ee\u8bbe\u7f6e urls.py asgi.py wsgi.py # \u4e0emanage.py\u540c\u7ea7 app1/ app2/ polls/ __init__.py admin.py apps.py migrations/ __init__.py models.py 0. \u5b9a\u4e49\u6a21\u578b tests.py urls.py # 1. \u6307\u5b9aurl\u7684\u6620\u5c04 views.py # 2. \u8fd4\u56de\u89c6\u56fe\u51fd\u6570 templates/ index.html # 3. \u54cd\u5e94\u6a21\u677f static/ style.css pic.jpeg setting.py # 0. \u9879\u76ee\u8bbe\u7f6e \u5b98\u65b9\u6807\u51c6\u7ed3\u6784:\u4e00\u4e2a\u6295\u7968\u7f51\u9875polls mysite/ manage.py mysite/ __init__.py settings.py urls.py asgi.py wsgi.py polls/ __init__.py admin.py apps.py migrations/ __init__.py 0001_initial.py models.py static/ polls/ images/ background.gif style.css templates/ polls/ detail.html index.html results.html tests.py urls.py views.py templates/ admin/ base_site.html \u89c6\u56fe \u89c6\u56fe\u662f\u5e94\u7528\u7684\u4e00\u90e8\u5206 views.py \u89c6\u56fe\u51fd\u6570\u9700\u8981\u5230url\u91cc\u8fdb\u884c\u6ce8\u518c\u3002 \u9879\u76ee\u7ba1\u7406 manage.py \u5305\u542b\u9879\u76ee\u7ba1\u7406\u7684\u5b50\u547d\u4ee4 runserver \u542f\u52a8\u670d\u52a1 startapp migrate \u6570\u636e\u5e93\u8fc1\u79fb Available subcommands: [auth] changepassword createsuperuser [contenttypes] remove_stale_contenttypes [django] check compilemessages createcachetable dbshell diffsettings dumpdata flush inspectdb loaddata makemessages makemigrations migrate sendtestemail shell showmigrations sqlflush sqlmigrate sqlsequencereset squashmigrations startapp startproject test testserver [sessions] clearsessions [staticfiles] collectstatic findstatic runserver setting.py \u5305\u62ecdjango\u6240\u6709\u7684\u914d\u7f6e\u9879 \u5206\u4e3a\u516c\u6709\u914d\u7f6e\uff0c\u81ea\u5b9a\u4e49\u914d\u7f6e https://docs.djangoproject.com/zh-hans/3.2/ref/settings/ \u914d\u7f6e\u5305\u62ec\uff1a \u6570\u636e\u5e93\u914d\u7f6e \u65f6\u533a \u5b89\u88c5\u7684\u81ea\u5e26app\uff0c\u4f8b\u5982 django.contrib.admin\u7b49 urls.py uniform resource locator \u534f\u8bae://hostname[:port]/path[?query][#fragment] APP\u8be6\u89e3\uff1adjango.contrib.admin \u53ea\u9700\u8981\u5b89\u88c5\u8fd9\u4e2aapp\uff0cdjango\u5c31\u80fd\u76f4\u63a5\u7ed9\u4f60\u63d0\u4f9b\u4e00\u4e2a\u7ba1\u7406\u9875\u9762 \u521b\u5efa\u7ba1\u7406\u5458\u8d26\u53f7 python manage.py createsuperuser \u5c06\u6a21\u578b\u52a0\u5165\u5230\u7ba1\u7406\u9875\u9762\u4e2d\u53bb #polls/admin.py from django.contrib import admin from .models import Question admin.site.register(Question) \u8868\u5355\u7684\u5904\u7406 <form action=\"{% url 'polls:vote' question.id %}\" method=\"post\"> {% csrf_token %} <input type=\"submit\" value=\"Vote\"> </form> urls\u662f\u8fd9\u6837\u5206\u914d\u7684 path('<int:question_id>/vote/', views.vote, name='vote') \u81ea\u52a8\u5316\u6d4b\u8bd5 \uff08\u7565\uff09 \u9759\u6001\u6587\u4ef6\u7684\u7ba1\u7406 django.contrib.staticfiles \u5982\u679c\u6bcf\u4e2aapp\u90fd\u5e26\u6709\u81ea\u5df1\u7684static\uff0c\u90a3\u4e48\u653e\u5230\u4e00\u4e2a\u9879\u76ee\u4e2d\u5c31\u4e0d\u65b9\u4fbf\u7ba1\u7406\u4e86\uff0c\u8fd9\u5c31\u662f\u8fd9\u4e2aapp\u7684\u529f\u80fd\uff0c\u5b83\u5c06\u5404\u4e2a\u5e94\u7528\u7684\u9759\u6001\u6587\u4ef6\uff08\u548c\u4e00\u4e9b\u4f60\u6307\u660e\u7684\u76ee\u5f55\u91cc\u7684\u6587\u4ef6\uff09\u7edf\u4e00\u6536\u96c6\u8d77\u6765\uff0c\u8fd9\u6837\u4e00\u6765\uff0c\u5728\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u8fd9\u4e9b\u6587\u4ef6\u5c31\u4f1a\u96c6\u4e2d\u5728\u4e00\u4e2a\u4fbf\u4e8e\u5206\u53d1\u7684\u5730\u65b9\u3002 \u914d\u7f6e # \u6307\u5b9a \u8bf7\u6c42static \u7684 url STATIC_URL = '/static/' # \u6307\u5b9a\u4e0eapp\u65e0\u5173\u8054\u7684static\u6587\u4ef6\u4f4d\u7f6e STATICFILES_DIRS = [ BASE_DIR / \"static\", '/var/www/static/', ] # \u9759\u6001\u6587\u4ef6\u7684\u90e8\u7f72\u4f4d\u7f6e STATIC_ROOT = /home/static # bash django-admin collectstatic # \u5c06\u6240\u6709\u7684static \u6587\u4ef6\u6536\u96c6\u5230static\u2014 root\u76ee\u5f55 # \u914d\u7f6enginx\u670d\u52a1\u5668 /static \u6307\u5411 static root \u76ee\u5f55 # \uff08\u8fd9\u6837\u505a\u7684\u76ee\u7684\u5c31\u662f\u4e3a\u4e86\u65b9\u4fbf\u90e8\u7f72\uff0c\u4ee5\u514d\u6bcf\u4e2aapp\u7684\u9759\u6001\u6587\u4ef6\u90fd\u5206\u6563\u5f00\u4e86\uff09 \u5bc6\u7801\u52a0\u5bc6 \u54c8\u5e0c\u7b97\u6cd5 \u7ed9\u51fa\u660e\u6587---\u300b\u8ba1\u7b97\u51fa\u5b9a\u957f\u7684\uff0c\u4e0d\u53ef\u9006\u7684\u503c md5-32\u4f4d16\u8fdb\u5236\uff0csha-256 django\u7684\u8ba4\u8bc1\u7cfb\u7edf django\u5df2\u7ecf\u63d0\u4f9b\u4e86\u5f88\u597d\u5730User \u6a21\u578b\uff0c\u53ef\u4ee5\u89e3\u51b3\u7edd\u5927\u591a\u6570\u65f6\u5019\u7684\u7528\u6237\u8ba4\u8bc1\u60c5\u51b5 from django.contrib.auth.models import User \u540c\u65f6\uff0c\u4f60\u4e5f\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u5bf9User\u8fdb\u884c\u5b9a\u5236\u5316\uff1a from django.contrib.auth.models import User class Employee(models.Model): user = models.OneToOneField(User, on_delete=models.CASCADE) department = models.CharField(max_length=100) \u4f7f\u7528OneToOneField https://docs.djangoproject.com/en/3.2/topics/auth/customizing/ \u81ea\u5e26\u7684User\u6240\u62e5\u6709\u7684\u5b57\u6bb5\u3002 \u5bf9\u4e8eUser\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4f7f\u7528\u73b0\u6709\u7684\u51fd\u6570\u8fdb\u884c \u589e\u5220\u6539\u67e5 \u4ee5\u53ca \u767b\u9646\u9a8c\u8bc1 \uff1a https://docs.djangoproject.com/en/3.2/topics/auth/default/ \u7ba1\u7406\u9759\u6001\u6587\u4ef6 https://docs.djangoproject.com/zh-hans/3.2/howto/static-files/ \u786e\u4fdd INSTALLED_APPS \u5305\u542b\u4e86 django.contrib.staticfiles \u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u5b9a\u4e49 STATIC_URL \uff0c\u4f8b\u5b50: STATIC_URL = '/static/' \u8868\u5355 Form HTML \u8868\u5355 \u5728HTML\u4e2d\uff0c\u8868\u5355\u662f\u5728 <form>...</form> \u4e2d\u7684\u4e00\u4e9b\u5143\u7d20\uff0c\u5b83\u5141\u8bb8\u8bbf\u5ba2\u505a\u4e00\u4e9b\u7c7b\u4f3c\u8f93\u5165\u6587\u672c\u3001\u9009\u62e9\u9009\u9879\u3001\u64cd\u4f5c\u5bf9\u8c61\u6216\u7a7a\u95f4\u7b49\u52a8\u4f5c\uff0c\u7136\u540e\u53d1\u9001\u8fd9\u4e9b\u4fe1\u606f\u5230\u670d\u52a1\u7aef\u3002 django \u5904\u7406\u8868\u5355 \u51c6\u5907\u5e76\u91cd\u7ec4\u6570\u636e\uff0c\u4ee5\u4fbf\u4e0b\u4e00\u6b21\u7684\u6e32\u67d3 \u4e3a\u6570\u636e\u521b\u5efaHTML\u8868\u5355 \u63a5\u6536\u5e76\u5904\u7406\u5ba2\u6237\u7aef\u63d0\u4ea4\u7684\u8868\u5355 django\u8868\u5355 \u6838\u5fc3\uff1aForm \u7c7b \u4f8b\u5b50 \u524d\u7aef\u4ee3\u7801\uff0c\u63d0\u4ea4yourname\u5b57\u6bb5 <form action=\"/your-name/\" method=\"post\"> <label for=\"your_name\">Your name: </label> <input id=\"your_name\" type=\"text\" name=\"your_name\" value=\"{{ current_name }}\"> <input type=\"submit\" value=\"OK\"> </form> django\u7684\u5904\u7406\u65b9\u6cd5 \u8003\u8651\u5230\u4e00\u6b21\u63d0\u4ea4\u7684\u8868\u5355\u53ef\u80fd\u975e\u5e38\u5e9e\u5927\uff0c\u6240\u4ee5django\u4f7f\u7528\u53e6\u4e00\u79cd\u65b9\u5f0f\uff1a #forms.py from django import forms class NameForm(forms.Form): your_name = forms.CharField(label='Your name', max_length=100) \u8fd9\u662f\u4e00\u4e2a\u8868\u5355\u6a21\u578b\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f20\u5230\u6a21\u677f\u4e2d\u8fdb\u884c\u6e32\u67d3\uff0c\u5b83\u5bf9\u5e94\u7684html\u662f\uff1a <label for=\"your_name\">Your name: </label> <input id=\"your_name\" type=\"text\" name=\"your_name\" maxlength=\"100\" required> \u8868\u5355\u53ef\u4ee5\u76f4\u63a5\u6e32\u67d3\u6210html\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u524d\u7aef\u5c31\u53ef\u4ee5\u7701\u7565input\u90e8\u5206 <form action=\"/your-name/\" method=\"post\"> {% csrf_token %} {{ form }} <input type=\"submit\" value=\"Submit\"> </form> \u89c6\u56fe\u51fd\u6570\u7684\u5199\u6cd5\uff1a from django.http import HttpResponseRedirect from django.shortcuts import render from .forms import NameForm def get_name(request): # if this is a POST request we need to process the form data if request.method == 'POST': # create a form instance and populate it with data from the request: form = NameForm(request.POST) # check whether it's valid: if form.is_valid(): # process the data in form.cleaned_data as required # ... # redirect to a new URL: return HttpResponseRedirect('/thanks/') # if a GET (or any other method) we'll create a blank form else: form = NameForm() return render(request, 'name.html', {'form': form}) form--\u751f\u6210input\u6807\u7b7e\u7b49--->----\u6e32\u67d3--->template post----\u5b9e\u4f8b\u5316--->form \u4e2a\u6027\u5316\u8868\u5355\u6a21\u677f form\u6e32\u67d3\u662f\u4e0d\u5e26 \u548c \u6807\u7b7e \uff0c\u5b83\u53ea\u5305\u62ec\u4e86 \u548c \u6807\u7b7e\u3002 \u4f7f\u7528 {{form.name_of_field}} \u8fdb\u884c\u5206\u522b\u6e32\u67d3\u4e5f\u53ef\u4ee5 \u4f7f\u7528widget Form.Field.widget\u7528\u4e8e\u6307\u5b9a\u4e00\u4e2aWidget\u7c7b\uff0c\u4f7f\u5f97\u5728\u6e32\u67d3\u8be5Field\u7684\u65f6\u5019\uff0c\u4f7f\u7528\u8be5\u90e8\u4ef6\u3002 from django import forms class CommentForm(forms.Form): name = forms.CharField() url = forms.URLField() comment = forms.CharField(widget=forms.Textarea) \u4f8b\u5b50\uff1a\u4f7f\u7528markdownx\u90e8\u4ef6\u65f6, from django.forms import forms from markdownx.fields import MarkdownxFormField class mdForm(forms.Form): md = MarkdownxFormField() \u5bf9\u4e8e\u8fd9\u4e2a\u5b57\u6bb5\uff0c\u5728markdownx\u4e2d\u5df2\u7ecf\u5b9a\u4e49\u597d\u4e86\u5b83\u7684widget class MarkdownxFormField(forms.CharField): \"\"\" Used in FormFields as a Markdown enabled replacement for ``CharField``. \"\"\" def __init__(self, *args, **kwargs): \"\"\" Arguments are similar to Django's default ``CharField``. See Django's `documentations on CharField`_ for additional information. .. _docs on Charfield: https://docs.djangoproject.com/en/dev/ref/models/fields/#django.db.models.CharField \"\"\" super(MarkdownxFormField, self).__init__(*args, **kwargs) if issubclass(self.widget.__class__, forms.widgets.MultiWidget): is_markdownx_widget = any( issubclass(item.__class__, MarkdownxWidget) for item in getattr(self.widget, 'widgets', list()) ) if not is_markdownx_widget: self.widget = MarkdownxWidget() elif not issubclass(self.widget.__class__, MarkdownxWidget): self.widget = MarkdownxWidget()","title":"django"},{"location":"%E5%86%85%E5%AE%B9/python/django/#django","text":"## \u8bbe\u8ba1\u7406\u5ff5 M V C \u964d\u4f4e\u6a21\u578b\u95f4\u7684\u8026\u5408\u5ea6","title":"django"},{"location":"%E5%86%85%E5%AE%B9/python/django/#_1","text":"django-admin startproject mysite \u5f00\u59cb\u5de5\u4f5c\uff1a\u5b83\u53ef\u4ee5\u81ea\u52a8\u521b\u5efa\u597d\u9879\u76ee\u9aa8\u67b6","title":"\u521b\u5efa\u9879\u76ee"},{"location":"%E5%86%85%E5%AE%B9/python/django/#_2","text":"mysite/ manage.py mysite/ __init__.py settings.py urls.py asgi.py wsgi.py \u8fd9\u4e9b\u76ee\u5f55\u548c\u6587\u4ef6\u7684\u7528\u5904\u662f\uff1a \u6700\u5916\u5c42\u7684 mysite/ \u6839\u76ee\u5f55\u53ea\u662f\u4f60\u9879\u76ee\u7684\u5bb9\u5668\uff0c \u6839\u76ee\u5f55\u540d\u79f0\u5bf9 Django \u6ca1\u6709\u5f71\u54cd\uff0c\u4f60\u53ef\u4ee5\u5c06\u5b83\u91cd\u547d\u540d\u4e3a\u4efb\u4f55\u4f60\u559c\u6b22\u7684\u540d\u79f0\u3002 manage.py : \u4e00\u4e2a\u8ba9\u4f60\u7528\u5404\u79cd\u65b9\u5f0f\u7ba1\u7406 Django \u9879\u76ee\u7684\u547d\u4ee4\u884c\u5de5\u5177\u3002\u4f60\u53ef\u4ee5\u9605\u8bfb django-admin \u548c manage.py \u83b7\u53d6\u6240\u6709 manage.py \u7684\u7ec6\u8282\u3002 \u91cc\u9762\u4e00\u5c42\u7684 mysite/ \u76ee\u5f55\u5305\u542b\u4f60\u7684\u9879\u76ee\uff0c\u5b83\u662f\u4e00\u4e2a\u7eaf Python \u5305\u3002\u5b83\u7684\u540d\u5b57\u5c31\u662f\u5f53\u4f60\u5f15\u7528\u5b83\u5185\u90e8\u4efb\u4f55\u4e1c\u897f\u65f6\u9700\u8981\u7528\u5230\u7684 Python \u5305\u540d\u3002 (\u6bd4\u5982 mysite.urls ). mysite/__init__.py \uff1a\u4e00\u4e2a\u7a7a\u6587\u4ef6\uff0c\u544a\u8bc9 Python \u8fd9\u4e2a\u76ee\u5f55\u5e94\u8be5\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a Python \u5305\u3002\u5982\u679c\u4f60\u662f Python \u521d\u5b66\u8005\uff0c\u9605\u8bfb\u5b98\u65b9\u6587\u6863\u4e2d\u7684 \u66f4\u591a\u5173\u4e8e\u5305\u7684\u77e5\u8bc6 \u3002 mysite/settings.py \uff1aDjango \u9879\u76ee\u7684\u914d\u7f6e\u6587\u4ef6\u3002\u5982\u679c\u4f60\u60f3\u77e5\u9053\u8fd9\u4e2a\u6587\u4ef6\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u8bf7\u67e5\u770b Django \u914d\u7f6e \u4e86\u89e3\u7ec6\u8282\u3002 mysite/urls.py \uff1aDjango \u9879\u76ee\u7684 URL \u58f0\u660e\uff0c\u5c31\u50cf\u4f60\u7f51\u7ad9\u7684\u201c\u76ee\u5f55\u201d\u3002\u9605\u8bfb URL\u8c03\u5ea6\u5668 \u6587\u6863\u6765\u83b7\u53d6\u66f4\u591a\u5173\u4e8e URL \u7684\u5185\u5bb9\u3002 mysite/asgi.py \uff1a\u4f5c\u4e3a\u4f60\u7684\u9879\u76ee\u7684\u8fd0\u884c\u5728 ASGI \u517c\u5bb9\u7684 Web \u670d\u52a1\u5668\u4e0a\u7684\u5165\u53e3\u3002\u9605\u8bfb \u5982\u4f55\u4f7f\u7528 ASGI \u6765\u90e8\u7f72 \u4e86\u89e3\u66f4\u591a\u7ec6\u8282\u3002 mysite/wsgi.py \uff1a\u4f5c\u4e3a\u4f60\u7684\u9879\u76ee\u7684\u8fd0\u884c\u5728 WSGI \u517c\u5bb9\u7684Web\u670d\u52a1\u5668\u4e0a\u7684\u5165\u53e3\u3002\u9605\u8bfb \u5982\u4f55\u4f7f\u7528 WSGI \u8fdb\u884c\u90e8\u7f72 \u4e86\u89e3\u66f4\u591a\u7ec6\u8282\u3002 \u9879\u76ee\u9aa8\u67b6\u5305\u62ec\u4e86\u4e00\u4e2a\u9879\u76ee\u540d\u7684\u6839\u76ee\u5f55\u4ee5\u53ca\u4e00\u4e2a\u4e0e\u9879\u76ee\u540c\u540d\u7684\u76ee\u5f55\uff0c\u8fd9\u4e2a\u76ee\u5f55\u5305\u542b\u4e86\u9879\u76ee\u7684\u57fa\u7840\u8bbe\u7f6e","title":"\u9879\u76ee\u57fa\u672c\u6784\u67b6"},{"location":"%E5%86%85%E5%AE%B9/python/django/#app","text":"\u9879\u76ee VS \u5e94\u7528 \u9879\u76ee\u548c\u5e94\u7528\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u5e94\u7528\u662f\u4e00\u4e2a\u4e13\u95e8\u505a\u67d0\u4ef6\u4e8b\u7684\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f\u2014\u2014\u6bd4\u5982\u535a\u5ba2\u7cfb\u7edf\uff0c\u6216\u8005\u516c\u5171\u8bb0\u5f55\u7684\u6570\u636e\u5e93\uff0c\u6216\u8005\u5c0f\u578b\u7684\u6295\u7968\u7a0b\u5e8f\u3002\u9879\u76ee\u5219\u662f\u4e00\u4e2a\u7f51\u7ad9\u4f7f\u7528\u7684\u914d\u7f6e\u548c\u5e94\u7528\u7684\u96c6\u5408\u3002\u9879\u76ee\u53ef\u4ee5\u5305\u542b\u5f88\u591a\u4e2a\u5e94\u7528\u3002\u5e94\u7528\u53ef\u4ee5\u88ab\u5f88\u591a\u4e2a\u9879\u76ee\u4f7f\u7528\u3002 mysite/ manage.py # \u9879\u76ee\u7ba1\u7406 mysite/ __init__.py settings.py # \u9879\u76ee\u8bbe\u7f6e urls.py asgi.py wsgi.py # \u4e0emanage.py\u540c\u7ea7 app1/ app2/ polls/ __init__.py admin.py apps.py migrations/ __init__.py models.py 0. \u5b9a\u4e49\u6a21\u578b tests.py urls.py # 1. \u6307\u5b9aurl\u7684\u6620\u5c04 views.py # 2. \u8fd4\u56de\u89c6\u56fe\u51fd\u6570 templates/ index.html # 3. \u54cd\u5e94\u6a21\u677f static/ style.css pic.jpeg setting.py # 0. \u9879\u76ee\u8bbe\u7f6e \u5b98\u65b9\u6807\u51c6\u7ed3\u6784:\u4e00\u4e2a\u6295\u7968\u7f51\u9875polls mysite/ manage.py mysite/ __init__.py settings.py urls.py asgi.py wsgi.py polls/ __init__.py admin.py apps.py migrations/ __init__.py 0001_initial.py models.py static/ polls/ images/ background.gif style.css templates/ polls/ detail.html index.html results.html tests.py urls.py views.py templates/ admin/ base_site.html","title":"\u521b\u5efaAPP\uff08\u5e94\u7528\uff09"},{"location":"%E5%86%85%E5%AE%B9/python/django/#_3","text":"\u89c6\u56fe\u662f\u5e94\u7528\u7684\u4e00\u90e8\u5206 views.py \u89c6\u56fe\u51fd\u6570\u9700\u8981\u5230url\u91cc\u8fdb\u884c\u6ce8\u518c\u3002","title":"\u89c6\u56fe"},{"location":"%E5%86%85%E5%AE%B9/python/django/#_4","text":"","title":"\u9879\u76ee\u7ba1\u7406"},{"location":"%E5%86%85%E5%AE%B9/python/django/#managepy","text":"\u5305\u542b\u9879\u76ee\u7ba1\u7406\u7684\u5b50\u547d\u4ee4 runserver \u542f\u52a8\u670d\u52a1 startapp migrate \u6570\u636e\u5e93\u8fc1\u79fb Available subcommands: [auth] changepassword createsuperuser [contenttypes] remove_stale_contenttypes [django] check compilemessages createcachetable dbshell diffsettings dumpdata flush inspectdb loaddata makemessages makemigrations migrate sendtestemail shell showmigrations sqlflush sqlmigrate sqlsequencereset squashmigrations startapp startproject test testserver [sessions] clearsessions [staticfiles] collectstatic findstatic runserver","title":"manage.py"},{"location":"%E5%86%85%E5%AE%B9/python/django/#settingpy","text":"\u5305\u62ecdjango\u6240\u6709\u7684\u914d\u7f6e\u9879 \u5206\u4e3a\u516c\u6709\u914d\u7f6e\uff0c\u81ea\u5b9a\u4e49\u914d\u7f6e https://docs.djangoproject.com/zh-hans/3.2/ref/settings/ \u914d\u7f6e\u5305\u62ec\uff1a \u6570\u636e\u5e93\u914d\u7f6e \u65f6\u533a \u5b89\u88c5\u7684\u81ea\u5e26app\uff0c\u4f8b\u5982 django.contrib.admin\u7b49","title":"setting.py"},{"location":"%E5%86%85%E5%AE%B9/python/django/#urlspy","text":"uniform resource locator \u534f\u8bae://hostname[:port]/path[?query][#fragment]","title":"urls.py"},{"location":"%E5%86%85%E5%AE%B9/python/django/#appdjangocontribadmin","text":"\u53ea\u9700\u8981\u5b89\u88c5\u8fd9\u4e2aapp\uff0cdjango\u5c31\u80fd\u76f4\u63a5\u7ed9\u4f60\u63d0\u4f9b\u4e00\u4e2a\u7ba1\u7406\u9875\u9762 \u521b\u5efa\u7ba1\u7406\u5458\u8d26\u53f7 python manage.py createsuperuser \u5c06\u6a21\u578b\u52a0\u5165\u5230\u7ba1\u7406\u9875\u9762\u4e2d\u53bb #polls/admin.py from django.contrib import admin from .models import Question admin.site.register(Question)","title":"APP\u8be6\u89e3\uff1adjango.contrib.admin"},{"location":"%E5%86%85%E5%AE%B9/python/django/#_5","text":"<form action=\"{% url 'polls:vote' question.id %}\" method=\"post\"> {% csrf_token %} <input type=\"submit\" value=\"Vote\"> </form> urls\u662f\u8fd9\u6837\u5206\u914d\u7684 path('<int:question_id>/vote/', views.vote, name='vote')","title":"\u8868\u5355\u7684\u5904\u7406"},{"location":"%E5%86%85%E5%AE%B9/python/django/#_6","text":"\uff08\u7565\uff09","title":"\u81ea\u52a8\u5316\u6d4b\u8bd5"},{"location":"%E5%86%85%E5%AE%B9/python/django/#djangocontribstaticfiles","text":"\u5982\u679c\u6bcf\u4e2aapp\u90fd\u5e26\u6709\u81ea\u5df1\u7684static\uff0c\u90a3\u4e48\u653e\u5230\u4e00\u4e2a\u9879\u76ee\u4e2d\u5c31\u4e0d\u65b9\u4fbf\u7ba1\u7406\u4e86\uff0c\u8fd9\u5c31\u662f\u8fd9\u4e2aapp\u7684\u529f\u80fd\uff0c\u5b83\u5c06\u5404\u4e2a\u5e94\u7528\u7684\u9759\u6001\u6587\u4ef6\uff08\u548c\u4e00\u4e9b\u4f60\u6307\u660e\u7684\u76ee\u5f55\u91cc\u7684\u6587\u4ef6\uff09\u7edf\u4e00\u6536\u96c6\u8d77\u6765\uff0c\u8fd9\u6837\u4e00\u6765\uff0c\u5728\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u8fd9\u4e9b\u6587\u4ef6\u5c31\u4f1a\u96c6\u4e2d\u5728\u4e00\u4e2a\u4fbf\u4e8e\u5206\u53d1\u7684\u5730\u65b9\u3002 \u914d\u7f6e # \u6307\u5b9a \u8bf7\u6c42static \u7684 url STATIC_URL = '/static/' # \u6307\u5b9a\u4e0eapp\u65e0\u5173\u8054\u7684static\u6587\u4ef6\u4f4d\u7f6e STATICFILES_DIRS = [ BASE_DIR / \"static\", '/var/www/static/', ] # \u9759\u6001\u6587\u4ef6\u7684\u90e8\u7f72\u4f4d\u7f6e STATIC_ROOT = /home/static # bash django-admin collectstatic # \u5c06\u6240\u6709\u7684static \u6587\u4ef6\u6536\u96c6\u5230static\u2014 root\u76ee\u5f55 # \u914d\u7f6enginx\u670d\u52a1\u5668 /static \u6307\u5411 static root \u76ee\u5f55 # \uff08\u8fd9\u6837\u505a\u7684\u76ee\u7684\u5c31\u662f\u4e3a\u4e86\u65b9\u4fbf\u90e8\u7f72\uff0c\u4ee5\u514d\u6bcf\u4e2aapp\u7684\u9759\u6001\u6587\u4ef6\u90fd\u5206\u6563\u5f00\u4e86\uff09","title":"\u9759\u6001\u6587\u4ef6\u7684\u7ba1\u7406 django.contrib.staticfiles"},{"location":"%E5%86%85%E5%AE%B9/python/django/#_7","text":"\u54c8\u5e0c\u7b97\u6cd5 \u7ed9\u51fa\u660e\u6587---\u300b\u8ba1\u7b97\u51fa\u5b9a\u957f\u7684\uff0c\u4e0d\u53ef\u9006\u7684\u503c md5-32\u4f4d16\u8fdb\u5236\uff0csha-256","title":"\u5bc6\u7801\u52a0\u5bc6"},{"location":"%E5%86%85%E5%AE%B9/python/django/#django_1","text":"django\u5df2\u7ecf\u63d0\u4f9b\u4e86\u5f88\u597d\u5730User \u6a21\u578b\uff0c\u53ef\u4ee5\u89e3\u51b3\u7edd\u5927\u591a\u6570\u65f6\u5019\u7684\u7528\u6237\u8ba4\u8bc1\u60c5\u51b5 from django.contrib.auth.models import User \u540c\u65f6\uff0c\u4f60\u4e5f\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u5bf9User\u8fdb\u884c\u5b9a\u5236\u5316\uff1a from django.contrib.auth.models import User class Employee(models.Model): user = models.OneToOneField(User, on_delete=models.CASCADE) department = models.CharField(max_length=100) \u4f7f\u7528OneToOneField https://docs.djangoproject.com/en/3.2/topics/auth/customizing/ \u81ea\u5e26\u7684User\u6240\u62e5\u6709\u7684\u5b57\u6bb5\u3002 \u5bf9\u4e8eUser\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4f7f\u7528\u73b0\u6709\u7684\u51fd\u6570\u8fdb\u884c \u589e\u5220\u6539\u67e5 \u4ee5\u53ca \u767b\u9646\u9a8c\u8bc1 \uff1a https://docs.djangoproject.com/en/3.2/topics/auth/default/","title":"django\u7684\u8ba4\u8bc1\u7cfb\u7edf"},{"location":"%E5%86%85%E5%AE%B9/python/django/#_8","text":"https://docs.djangoproject.com/zh-hans/3.2/howto/static-files/ \u786e\u4fdd INSTALLED_APPS \u5305\u542b\u4e86 django.contrib.staticfiles \u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u5b9a\u4e49 STATIC_URL \uff0c\u4f8b\u5b50: STATIC_URL = '/static/'","title":"\u7ba1\u7406\u9759\u6001\u6587\u4ef6"},{"location":"%E5%86%85%E5%AE%B9/python/django/#form","text":"","title":"\u8868\u5355 Form"},{"location":"%E5%86%85%E5%AE%B9/python/django/#html","text":"\u5728HTML\u4e2d\uff0c\u8868\u5355\u662f\u5728 <form>...</form> \u4e2d\u7684\u4e00\u4e9b\u5143\u7d20\uff0c\u5b83\u5141\u8bb8\u8bbf\u5ba2\u505a\u4e00\u4e9b\u7c7b\u4f3c\u8f93\u5165\u6587\u672c\u3001\u9009\u62e9\u9009\u9879\u3001\u64cd\u4f5c\u5bf9\u8c61\u6216\u7a7a\u95f4\u7b49\u52a8\u4f5c\uff0c\u7136\u540e\u53d1\u9001\u8fd9\u4e9b\u4fe1\u606f\u5230\u670d\u52a1\u7aef\u3002","title":"HTML \u8868\u5355"},{"location":"%E5%86%85%E5%AE%B9/python/django/#django_2","text":"\u51c6\u5907\u5e76\u91cd\u7ec4\u6570\u636e\uff0c\u4ee5\u4fbf\u4e0b\u4e00\u6b21\u7684\u6e32\u67d3 \u4e3a\u6570\u636e\u521b\u5efaHTML\u8868\u5355 \u63a5\u6536\u5e76\u5904\u7406\u5ba2\u6237\u7aef\u63d0\u4ea4\u7684\u8868\u5355","title":"django \u5904\u7406\u8868\u5355"},{"location":"%E5%86%85%E5%AE%B9/python/django/#django_3","text":"\u6838\u5fc3\uff1aForm \u7c7b","title":"django\u8868\u5355"},{"location":"%E5%86%85%E5%AE%B9/python/django/#_9","text":"\u524d\u7aef\u4ee3\u7801\uff0c\u63d0\u4ea4yourname\u5b57\u6bb5 <form action=\"/your-name/\" method=\"post\"> <label for=\"your_name\">Your name: </label> <input id=\"your_name\" type=\"text\" name=\"your_name\" value=\"{{ current_name }}\"> <input type=\"submit\" value=\"OK\"> </form> django\u7684\u5904\u7406\u65b9\u6cd5 \u8003\u8651\u5230\u4e00\u6b21\u63d0\u4ea4\u7684\u8868\u5355\u53ef\u80fd\u975e\u5e38\u5e9e\u5927\uff0c\u6240\u4ee5django\u4f7f\u7528\u53e6\u4e00\u79cd\u65b9\u5f0f\uff1a #forms.py from django import forms class NameForm(forms.Form): your_name = forms.CharField(label='Your name', max_length=100) \u8fd9\u662f\u4e00\u4e2a\u8868\u5355\u6a21\u578b\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f20\u5230\u6a21\u677f\u4e2d\u8fdb\u884c\u6e32\u67d3\uff0c\u5b83\u5bf9\u5e94\u7684html\u662f\uff1a <label for=\"your_name\">Your name: </label> <input id=\"your_name\" type=\"text\" name=\"your_name\" maxlength=\"100\" required> \u8868\u5355\u53ef\u4ee5\u76f4\u63a5\u6e32\u67d3\u6210html\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u524d\u7aef\u5c31\u53ef\u4ee5\u7701\u7565input\u90e8\u5206 <form action=\"/your-name/\" method=\"post\"> {% csrf_token %} {{ form }} <input type=\"submit\" value=\"Submit\"> </form> \u89c6\u56fe\u51fd\u6570\u7684\u5199\u6cd5\uff1a from django.http import HttpResponseRedirect from django.shortcuts import render from .forms import NameForm def get_name(request): # if this is a POST request we need to process the form data if request.method == 'POST': # create a form instance and populate it with data from the request: form = NameForm(request.POST) # check whether it's valid: if form.is_valid(): # process the data in form.cleaned_data as required # ... # redirect to a new URL: return HttpResponseRedirect('/thanks/') # if a GET (or any other method) we'll create a blank form else: form = NameForm() return render(request, 'name.html', {'form': form}) form--\u751f\u6210input\u6807\u7b7e\u7b49--->----\u6e32\u67d3--->template post----\u5b9e\u4f8b\u5316--->form","title":"\u4f8b\u5b50"},{"location":"%E5%86%85%E5%AE%B9/python/django/#_10","text":"form\u6e32\u67d3\u662f\u4e0d\u5e26 \u548c \u6807\u7b7e \uff0c\u5b83\u53ea\u5305\u62ec\u4e86 \u548c \u6807\u7b7e\u3002 \u4f7f\u7528 {{form.name_of_field}} \u8fdb\u884c\u5206\u522b\u6e32\u67d3\u4e5f\u53ef\u4ee5","title":"\u4e2a\u6027\u5316\u8868\u5355\u6a21\u677f"},{"location":"%E5%86%85%E5%AE%B9/python/django/#widget","text":"Form.Field.widget\u7528\u4e8e\u6307\u5b9a\u4e00\u4e2aWidget\u7c7b\uff0c\u4f7f\u5f97\u5728\u6e32\u67d3\u8be5Field\u7684\u65f6\u5019\uff0c\u4f7f\u7528\u8be5\u90e8\u4ef6\u3002 from django import forms class CommentForm(forms.Form): name = forms.CharField() url = forms.URLField() comment = forms.CharField(widget=forms.Textarea) \u4f8b\u5b50\uff1a\u4f7f\u7528markdownx\u90e8\u4ef6\u65f6, from django.forms import forms from markdownx.fields import MarkdownxFormField class mdForm(forms.Form): md = MarkdownxFormField() \u5bf9\u4e8e\u8fd9\u4e2a\u5b57\u6bb5\uff0c\u5728markdownx\u4e2d\u5df2\u7ecf\u5b9a\u4e49\u597d\u4e86\u5b83\u7684widget class MarkdownxFormField(forms.CharField): \"\"\" Used in FormFields as a Markdown enabled replacement for ``CharField``. \"\"\" def __init__(self, *args, **kwargs): \"\"\" Arguments are similar to Django's default ``CharField``. See Django's `documentations on CharField`_ for additional information. .. _docs on Charfield: https://docs.djangoproject.com/en/dev/ref/models/fields/#django.db.models.CharField \"\"\" super(MarkdownxFormField, self).__init__(*args, **kwargs) if issubclass(self.widget.__class__, forms.widgets.MultiWidget): is_markdownx_widget = any( issubclass(item.__class__, MarkdownxWidget) for item in getattr(self.widget, 'widgets', list()) ) if not is_markdownx_widget: self.widget = MarkdownxWidget() elif not issubclass(self.widget.__class__, MarkdownxWidget): self.widget = MarkdownxWidget()","title":"\u4f7f\u7528widget"},{"location":"%E5%86%85%E5%AE%B9/python/flask%20%E5%B0%8F%E5%9E%8B%E5%8D%9A%E5%AE%A2/","text":"flask \u5c0f\u578b\u535a\u5ba2 \u9879\u76ee\u6784\u67b6 nginx \u4f5c\u4e3aweb\u670d\u52a1\u5668 gunicorn \u63d0\u4f9b WSGI HTTP \u670d\u52a1 flask \u4f5c\u4e3a\u540e\u7aef mariadb \u4f5c\u4e3a\u6570\u636e\u5e93 \u73af\u5883 debian 9 python 3.7 \uff08\u4eb2\u6d4b\u4f9d\u8d56\u6a21\u5757\u4e0d\u9002\u7528\u4e8e2.7\u4e0e3.8\uff09 \u90e8\u7f72 \u4e0b\u8f7d\u6240\u9700\u8981\u7684\u7ec4\u4ef6 apt install nginx apt install mariadb-server #apt install mariadb-client apt install python3 apt install python3-pip pip3 install gunicorn pip3 install supervisor apt install git cd \u5230\u4f60\u60f3\u5b58\u653e\u7f51\u7ad9\u6570\u636e\u7684\u5730\u65b9 git clone \u672c\u9879\u76ee \u4fee\u6539nginx\u914d\u7f6e\u6587\u4ef6 \u5728 http{ } \u4e2d\u589e\u52a0\u8be5server\u5757\uff0c\u7528\u4e8e\u5c0680\u4ee3\u7406\u5230gunicorn\u76848000\u7aef\u53e3 server { listen 80; server_name example.org; access_log /var/log/nginx/example.log; location / { proxy_pass http://127.0.0.1:8000; proxy_set_header Host $host; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; } } \u5982\u679cnginx\u5df2\u7ecf\u542f\u52a8\uff0c\u5219\u91cd\u8f7d\u914d\u7f6e\u6587\u4ef6 nginx -s reload \u4f7f\u7528supervisor\u76d1\u63a7gunicorn\u7684\u8fd0\u884c \u5982\u679c\u662f\u7b2c\u4e00\u6b21\u4f7f\u7528supervisor\uff0c\u8bf7\u53c2\u8003http://supervisord.org/ 3.1 \u751f\u6210supervisor\u7684\u914d\u7f6e\u6587\u4ef6 sudo echo_supervisord_conf > /etc/supervisord.conf 3.2 \u4fee\u6539\u914d\u7f6e\u6587\u4ef6\uff0c\u5728\u5176\u4e2d\u52a0\u5165 [program:gunicorn] command=gunicorn app:app directory=/path/to/project # \u6b64\u5904\u6539\u4e3a\u9879\u76ee\u5730\u5740\uff0c\u4e5f\u5c31\u662fflask_web\u76ee\u5f55 user=nobody autostart=true autorestart=true redirect_stderr=true \u8fd9\u662f\u5728\u76d1\u63a7\u76ee\u5f55\u4e2d\u52a0\u5165\u7a0b\u5e8f\uff1agunicorn 3.3 \u542f\u52a8supervisor supervisord -c /etc/supervisord.conf 3.4 supervisor\u7406\u89e3 supervisor\u5206\u4e3a\u4e24\u90e8\u5206 supervisord\u662f\u4e00\u4e2a\u670d\u52a1\u7aef\uff0c\u76d1\u542c\u4e8e9001\u7aef\u53e3 supervisorctl\u662f\u4e00\u4e2a\u5ba2\u6237\u7aef\uff0c\u7528\u4e8e\u63a7\u5236\u4e0e\u67e5\u770bserver\u7684\u72b6\u6001 \u6570\u636e\u5e93\u7684\u90e8\u7f72\u4e0e\u542f\u52a8 mysql\u7684rpm\u5b89\u88c5\u6bd4\u8f83\u5bb9\u6613\u51fa\u9519\uff0c\u6240\u4ee5\u5efa\u8bae\u91c7\u7528apt install mariadb\u7684\u65b9\u5f0f\u5b89\u88c5 \u5b83\u7684\u539f\u7406\u4e5f\u548csupervisor\u7c7b\u4f3c\uff0c\u4e00\u4e2aserver\uff0c\u4e00\u4e2aclient\u3002 mysqld \u542f\u52a8\u670d\u52a1\u7aef\uff0c\u914d\u7f6e\u597d\u8d26\u53f7\u5bc6\u7801\uff0c\u5982\u679c\u8981\u8fdc\u7a0b\u63a7\u5236\u6570\u636e\u5e93\u7684\u8bdd\u8981\uff0c \u5f00\u542f\u8fdc\u7a0b\u8bbf\u95ee \uff0c\u4e0d\u7136\u53ea\u80fd\u672c\u5730\u4f7f\u7528\u6570\u636e\u5e93\u3002 4.1 \u521b\u5efa\u6570\u636e\u5e93flask 4.2 \u4fee\u6539config.py\u6587\u4ef6\u4e2d\u7684 SQLALCHEMY_DATABASE_URI = 'mysql://user:password@ip:3306/flask' \u6570\u636e\u5e93\u8fc1\u79fb\u540c\u6b65 \u7528\u4e8e\u5b8c\u6210ORM\u6620\u5c04 cd \u9879\u76ee\u76ee\u5f55 python3 manage db init python3 manage db upgrade python3 manage db migrate \u9879\u76ee\u90e8\u7f72\u5b8c\u6bd5\uff01","title":"flask \u5c0f\u578b\u535a\u5ba2"},{"location":"%E5%86%85%E5%AE%B9/python/flask%20%E5%B0%8F%E5%9E%8B%E5%8D%9A%E5%AE%A2/#flask","text":"","title":"flask \u5c0f\u578b\u535a\u5ba2"},{"location":"%E5%86%85%E5%AE%B9/python/flask%20%E5%B0%8F%E5%9E%8B%E5%8D%9A%E5%AE%A2/#_1","text":"nginx \u4f5c\u4e3aweb\u670d\u52a1\u5668 gunicorn \u63d0\u4f9b WSGI HTTP \u670d\u52a1 flask \u4f5c\u4e3a\u540e\u7aef mariadb \u4f5c\u4e3a\u6570\u636e\u5e93","title":"\u9879\u76ee\u6784\u67b6"},{"location":"%E5%86%85%E5%AE%B9/python/flask%20%E5%B0%8F%E5%9E%8B%E5%8D%9A%E5%AE%A2/#_2","text":"debian 9 python 3.7 \uff08\u4eb2\u6d4b\u4f9d\u8d56\u6a21\u5757\u4e0d\u9002\u7528\u4e8e2.7\u4e0e3.8\uff09","title":"\u73af\u5883"},{"location":"%E5%86%85%E5%AE%B9/python/flask%20%E5%B0%8F%E5%9E%8B%E5%8D%9A%E5%AE%A2/#_3","text":"\u4e0b\u8f7d\u6240\u9700\u8981\u7684\u7ec4\u4ef6 apt install nginx apt install mariadb-server #apt install mariadb-client apt install python3 apt install python3-pip pip3 install gunicorn pip3 install supervisor apt install git cd \u5230\u4f60\u60f3\u5b58\u653e\u7f51\u7ad9\u6570\u636e\u7684\u5730\u65b9 git clone \u672c\u9879\u76ee \u4fee\u6539nginx\u914d\u7f6e\u6587\u4ef6 \u5728 http{ } \u4e2d\u589e\u52a0\u8be5server\u5757\uff0c\u7528\u4e8e\u5c0680\u4ee3\u7406\u5230gunicorn\u76848000\u7aef\u53e3 server { listen 80; server_name example.org; access_log /var/log/nginx/example.log; location / { proxy_pass http://127.0.0.1:8000; proxy_set_header Host $host; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; } } \u5982\u679cnginx\u5df2\u7ecf\u542f\u52a8\uff0c\u5219\u91cd\u8f7d\u914d\u7f6e\u6587\u4ef6 nginx -s reload \u4f7f\u7528supervisor\u76d1\u63a7gunicorn\u7684\u8fd0\u884c \u5982\u679c\u662f\u7b2c\u4e00\u6b21\u4f7f\u7528supervisor\uff0c\u8bf7\u53c2\u8003http://supervisord.org/ 3.1 \u751f\u6210supervisor\u7684\u914d\u7f6e\u6587\u4ef6 sudo echo_supervisord_conf > /etc/supervisord.conf 3.2 \u4fee\u6539\u914d\u7f6e\u6587\u4ef6\uff0c\u5728\u5176\u4e2d\u52a0\u5165 [program:gunicorn] command=gunicorn app:app directory=/path/to/project # \u6b64\u5904\u6539\u4e3a\u9879\u76ee\u5730\u5740\uff0c\u4e5f\u5c31\u662fflask_web\u76ee\u5f55 user=nobody autostart=true autorestart=true redirect_stderr=true \u8fd9\u662f\u5728\u76d1\u63a7\u76ee\u5f55\u4e2d\u52a0\u5165\u7a0b\u5e8f\uff1agunicorn 3.3 \u542f\u52a8supervisor supervisord -c /etc/supervisord.conf 3.4 supervisor\u7406\u89e3 supervisor\u5206\u4e3a\u4e24\u90e8\u5206 supervisord\u662f\u4e00\u4e2a\u670d\u52a1\u7aef\uff0c\u76d1\u542c\u4e8e9001\u7aef\u53e3 supervisorctl\u662f\u4e00\u4e2a\u5ba2\u6237\u7aef\uff0c\u7528\u4e8e\u63a7\u5236\u4e0e\u67e5\u770bserver\u7684\u72b6\u6001 \u6570\u636e\u5e93\u7684\u90e8\u7f72\u4e0e\u542f\u52a8 mysql\u7684rpm\u5b89\u88c5\u6bd4\u8f83\u5bb9\u6613\u51fa\u9519\uff0c\u6240\u4ee5\u5efa\u8bae\u91c7\u7528apt install mariadb\u7684\u65b9\u5f0f\u5b89\u88c5 \u5b83\u7684\u539f\u7406\u4e5f\u548csupervisor\u7c7b\u4f3c\uff0c\u4e00\u4e2aserver\uff0c\u4e00\u4e2aclient\u3002 mysqld \u542f\u52a8\u670d\u52a1\u7aef\uff0c\u914d\u7f6e\u597d\u8d26\u53f7\u5bc6\u7801\uff0c\u5982\u679c\u8981\u8fdc\u7a0b\u63a7\u5236\u6570\u636e\u5e93\u7684\u8bdd\u8981\uff0c \u5f00\u542f\u8fdc\u7a0b\u8bbf\u95ee \uff0c\u4e0d\u7136\u53ea\u80fd\u672c\u5730\u4f7f\u7528\u6570\u636e\u5e93\u3002 4.1 \u521b\u5efa\u6570\u636e\u5e93flask 4.2 \u4fee\u6539config.py\u6587\u4ef6\u4e2d\u7684 SQLALCHEMY_DATABASE_URI = 'mysql://user:password@ip:3306/flask' \u6570\u636e\u5e93\u8fc1\u79fb\u540c\u6b65 \u7528\u4e8e\u5b8c\u6210ORM\u6620\u5c04 cd \u9879\u76ee\u76ee\u5f55 python3 manage db init python3 manage db upgrade python3 manage db migrate \u9879\u76ee\u90e8\u7f72\u5b8c\u6bd5\uff01","title":"\u90e8\u7f72"},{"location":"%E5%86%85%E5%AE%B9/python/google%20%E6%96%87%E6%A1%A3%E6%A0%87%E5%87%86/","text":"Google \u6587\u6863\u6807\u51c6 Python \u4f7f\u7528 \u6587\u6863\u5b57\u7b26\u4e32 \u6765\u8bb0\u5f55\u4ee3\u7801\u3002\u6587\u6863\u5b57\u7b26\u4e32\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5b83\u662f\u5305\u3001\u6a21\u5757\u3001\u7c7b\u6216\u51fd\u6570\u4e2d\u7684\u7b2c\u4e00\u6761\u8bed\u53e5\u3002\u8fd9\u4e9b\u5b57\u7b26\u4e32\u53ef\u4ee5\u901a\u8fc7 __doc__ \u5bf9\u8c61\u7684\u6210\u5458\u81ea\u52a8\u63d0\u53d6\u51fa\u6765\u3002 \u6a21\u5757 \u6bcf\u4e2a\u6587\u4ef6\u90fd\u5e94\u5305\u542b\u8bb8\u53ef\u8bc1\u6837\u677f\u3002\u4e3a\u9879\u76ee\u4f7f\u7528\u7684\u8bb8\u53ef\u8bc1\u9009\u62e9\u9002\u5f53\u7684\u6837\u677f\uff08\u4f8b\u5982\uff0cApache 2.0\u3001BSD\u3001LGPL\u3001GPL\uff09 \u6587\u4ef6\u5e94\u4ee5\u63cf\u8ff0\u6a21\u5757\u5185\u5bb9\u548c\u7528\u6cd5\u7684\u6587\u6863\u5b57\u7b26\u4e32\u5f00\u5934\u3002 \"\"\"A one line summary of the module or program, terminated by a period. Leave one blank line. The rest of this docstring should contain an overall description of the module or program. Optionally, it may also contain a brief description of exported classes and functions and/or usage examples. Typical usage example: foo = ClassFoo() bar = foo.FunctionBar() \"\"\" \u51fd\u6570\u548c\u65b9\u6cd5 def fetch_smalltable_rows(table_handle: smalltable.Table, keys: Sequence[Union[bytes, str]], require_all_keys: bool = False, ) -> Mapping[bytes, Tuple[str, ...]]: \"\"\"Fetches rows from a Smalltable.Retrieves rows pertaining to the given keys from the Table instance represented by table_handle. String keys will be UTF-8 encoded. Args: table_handle: An open smalltable.Table instance. keys: A sequence of strings representing the key of each table row to fetch. String keys will be UTF-8 encoded. require_all_keys: If True only rows with values set for all keys will be returned. Returns: A dict mapping keys to the corresponding table row data fetched. Each row is represented as a tuple of strings. For example: {b'Serak': ('Rigel VII', 'Preparer'), b'Zim': ('Irk', 'Invader'), b'Lrrr': ('Omicron Persei 8', 'Emperor')} Returned keys are always bytes. If a key from the keys argument is missing from the dictionary, then that row was not found in the table (and require_all_keys must have been False). Raises: IOError: An error occurred accessing the smalltable. \"\"\" \u7c7b class SampleClass: \"\"\"Summary of class here. Longer class information.... Longer class information.... Attributes: likes_spam: A boolean indicating if we like SPAM or not. eggs: An integer count of the eggs we have laid. \"\"\" def __init__(self, likes_spam: bool = False): \"\"\"Inits SampleClass with blah.\"\"\" self.likes_spam = likes_spam self.eggs = 0 def public_method(self): \"\"\"Performs operation blah.\"\"\"","title":"Google \u6587\u6863\u6807\u51c6"},{"location":"%E5%86%85%E5%AE%B9/python/google%20%E6%96%87%E6%A1%A3%E6%A0%87%E5%87%86/#google","text":"Python \u4f7f\u7528 \u6587\u6863\u5b57\u7b26\u4e32 \u6765\u8bb0\u5f55\u4ee3\u7801\u3002\u6587\u6863\u5b57\u7b26\u4e32\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5b83\u662f\u5305\u3001\u6a21\u5757\u3001\u7c7b\u6216\u51fd\u6570\u4e2d\u7684\u7b2c\u4e00\u6761\u8bed\u53e5\u3002\u8fd9\u4e9b\u5b57\u7b26\u4e32\u53ef\u4ee5\u901a\u8fc7 __doc__ \u5bf9\u8c61\u7684\u6210\u5458\u81ea\u52a8\u63d0\u53d6\u51fa\u6765\u3002","title":"Google \u6587\u6863\u6807\u51c6"},{"location":"%E5%86%85%E5%AE%B9/python/google%20%E6%96%87%E6%A1%A3%E6%A0%87%E5%87%86/#_1","text":"\u6bcf\u4e2a\u6587\u4ef6\u90fd\u5e94\u5305\u542b\u8bb8\u53ef\u8bc1\u6837\u677f\u3002\u4e3a\u9879\u76ee\u4f7f\u7528\u7684\u8bb8\u53ef\u8bc1\u9009\u62e9\u9002\u5f53\u7684\u6837\u677f\uff08\u4f8b\u5982\uff0cApache 2.0\u3001BSD\u3001LGPL\u3001GPL\uff09 \u6587\u4ef6\u5e94\u4ee5\u63cf\u8ff0\u6a21\u5757\u5185\u5bb9\u548c\u7528\u6cd5\u7684\u6587\u6863\u5b57\u7b26\u4e32\u5f00\u5934\u3002 \"\"\"A one line summary of the module or program, terminated by a period. Leave one blank line. The rest of this docstring should contain an overall description of the module or program. Optionally, it may also contain a brief description of exported classes and functions and/or usage examples. Typical usage example: foo = ClassFoo() bar = foo.FunctionBar() \"\"\"","title":"\u6a21\u5757"},{"location":"%E5%86%85%E5%AE%B9/python/google%20%E6%96%87%E6%A1%A3%E6%A0%87%E5%87%86/#_2","text":"def fetch_smalltable_rows(table_handle: smalltable.Table, keys: Sequence[Union[bytes, str]], require_all_keys: bool = False, ) -> Mapping[bytes, Tuple[str, ...]]: \"\"\"Fetches rows from a Smalltable.Retrieves rows pertaining to the given keys from the Table instance represented by table_handle. String keys will be UTF-8 encoded. Args: table_handle: An open smalltable.Table instance. keys: A sequence of strings representing the key of each table row to fetch. String keys will be UTF-8 encoded. require_all_keys: If True only rows with values set for all keys will be returned. Returns: A dict mapping keys to the corresponding table row data fetched. Each row is represented as a tuple of strings. For example: {b'Serak': ('Rigel VII', 'Preparer'), b'Zim': ('Irk', 'Invader'), b'Lrrr': ('Omicron Persei 8', 'Emperor')} Returned keys are always bytes. If a key from the keys argument is missing from the dictionary, then that row was not found in the table (and require_all_keys must have been False). Raises: IOError: An error occurred accessing the smalltable. \"\"\"","title":"\u51fd\u6570\u548c\u65b9\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/python/google%20%E6%96%87%E6%A1%A3%E6%A0%87%E5%87%86/#_3","text":"class SampleClass: \"\"\"Summary of class here. Longer class information.... Longer class information.... Attributes: likes_spam: A boolean indicating if we like SPAM or not. eggs: An integer count of the eggs we have laid. \"\"\" def __init__(self, likes_spam: bool = False): \"\"\"Inits SampleClass with blah.\"\"\" self.likes_spam = likes_spam self.eggs = 0 def public_method(self): \"\"\"Performs operation blah.\"\"\"","title":"\u7c7b"},{"location":"%E5%86%85%E5%AE%B9/python/keras.backend.rnn%E5%AD%A6%E4%B9%A0/","text":"keras.backend.rnn\u5b66\u4e60 step \u9700\u8981\u5b9a\u4e49\u7684\u6b65\u51fd\u6570 step(input,states): \"\"\" \u5185\u5bb9 \"\"\" return output new_states inputs [samples, time, features] \u8f6c\u5316\u4e3ainput\u662f[samples,features] initial_states Tensor with shape (samples, state_size) \u540e\u9762\u7684\u53c2\u6570\u5305\u62ec\uff1a\u53cd\u5411\u904d\u5386\uff0cmask\uff0c\u5e38\u91cf\uff0c\u5c55\u5f00\u7b49 \u6e90\u7801\u5206\u6790 \u5b9a\u4e49\u4e86\u4e00\u4e2aswap\u51fd\u6570\uff0c\u7528\u4e8e\u4ea4\u6362batch\u7ef4\u548ctime_step\u7ef4 (\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0ctime_major = False), \u5bf9inputs\u6267\u884c\u4ea4\u6362\u7ef4\u5ea6 \u5f97\u5230\u7684\u662f inputs [time steps, batch, features] \u83b7\u53d6\u4e00\u4e9b\u5c5e\u6027 \u68c0\u67e5\u7ef4\u5ea6\u6700\u5c11\u4e3a3 \u68c0\u67e5mask\uff0c\u521d\u59cb\u5316\u5e38\u91cf \u5982\u679c\u4e0d\u6309\u65f6\u95f4\u6b65\u5c55\u5f00\uff08\u9ed8\u8ba4Unroll == False\uff09\uff0c\u8fdb\u5165\u5230\u4e00\u4e2aelse\u4e2d states\u662f\u4e00\u4e2aList input_ta\u662f\u4e00\u4e2aTensorArray\uff0c TensorArray\u53ef\u4ee5\u770b\u505a\u662f\u5177\u6709\u52a8\u6001size\u529f\u80fd\u7684Tensor\u6570\u7ec4\u3002\u901a\u5e38\u90fd\u662f\u8ddfwhile_loop\u6216map_fn\u7ed3\u5408\u4f7f\u7528\u3002 \u5b9e\u9a8c\u6027\u5730\u9001\u5165input[0]\u5230step_function\u4e2d\uff0c\u5f97\u5230out_put\u7684\u5f62\u72b6\u4ee5\u53ca\u5c5e\u6027\u7b49\u53c2\u6570 \u6240\u4ee5\u73b0\u5728\u5f97\u5230\u4e86 input_ta\uff0coutput_ta \u7ecf\u8fc7\u4e00\u7cfb\u5217\u68c0\u67e5\u540e\uff0c\u5b9a\u4e49_step\u51fd\u6570\uff08\u8fd9\u91cc\u9762\u5305\u542b\u4e86\u81ea\u5b9a\u4e49\u7684step_function\uff09 \u8fd9\u4e2a\u5927\u7684_step\u51fd\u6570\u8fd4\u56de(time + 1, output_ta_t) + tuple(new_states) \u8fdb\u5165 while loop \u5faa\u73af\u4f53: \u7ecf\u8fc7\u4e00\u7cfb\u5217\u5904\u7406\u540e\u8f93\u51fa\u5230\u7ed3\u679c \u96be\u70b9 TensorArray\u4ee5\u53cawhile loop","title":"keras.backend.rnn\u5b66\u4e60"},{"location":"%E5%86%85%E5%AE%B9/python/keras.backend.rnn%E5%AD%A6%E4%B9%A0/#kerasbackendrnn","text":"step \u9700\u8981\u5b9a\u4e49\u7684\u6b65\u51fd\u6570 step(input,states): \"\"\" \u5185\u5bb9 \"\"\" return output new_states inputs [samples, time, features] \u8f6c\u5316\u4e3ainput\u662f[samples,features] initial_states Tensor with shape (samples, state_size) \u540e\u9762\u7684\u53c2\u6570\u5305\u62ec\uff1a\u53cd\u5411\u904d\u5386\uff0cmask\uff0c\u5e38\u91cf\uff0c\u5c55\u5f00\u7b49","title":"keras.backend.rnn\u5b66\u4e60"},{"location":"%E5%86%85%E5%AE%B9/python/keras.backend.rnn%E5%AD%A6%E4%B9%A0/#_1","text":"\u5b9a\u4e49\u4e86\u4e00\u4e2aswap\u51fd\u6570\uff0c\u7528\u4e8e\u4ea4\u6362batch\u7ef4\u548ctime_step\u7ef4 (\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0ctime_major = False), \u5bf9inputs\u6267\u884c\u4ea4\u6362\u7ef4\u5ea6 \u5f97\u5230\u7684\u662f inputs [time steps, batch, features] \u83b7\u53d6\u4e00\u4e9b\u5c5e\u6027 \u68c0\u67e5\u7ef4\u5ea6\u6700\u5c11\u4e3a3 \u68c0\u67e5mask\uff0c\u521d\u59cb\u5316\u5e38\u91cf \u5982\u679c\u4e0d\u6309\u65f6\u95f4\u6b65\u5c55\u5f00\uff08\u9ed8\u8ba4Unroll == False\uff09\uff0c\u8fdb\u5165\u5230\u4e00\u4e2aelse\u4e2d states\u662f\u4e00\u4e2aList input_ta\u662f\u4e00\u4e2aTensorArray\uff0c TensorArray\u53ef\u4ee5\u770b\u505a\u662f\u5177\u6709\u52a8\u6001size\u529f\u80fd\u7684Tensor\u6570\u7ec4\u3002\u901a\u5e38\u90fd\u662f\u8ddfwhile_loop\u6216map_fn\u7ed3\u5408\u4f7f\u7528\u3002 \u5b9e\u9a8c\u6027\u5730\u9001\u5165input[0]\u5230step_function\u4e2d\uff0c\u5f97\u5230out_put\u7684\u5f62\u72b6\u4ee5\u53ca\u5c5e\u6027\u7b49\u53c2\u6570 \u6240\u4ee5\u73b0\u5728\u5f97\u5230\u4e86 input_ta\uff0coutput_ta \u7ecf\u8fc7\u4e00\u7cfb\u5217\u68c0\u67e5\u540e\uff0c\u5b9a\u4e49_step\u51fd\u6570\uff08\u8fd9\u91cc\u9762\u5305\u542b\u4e86\u81ea\u5b9a\u4e49\u7684step_function\uff09 \u8fd9\u4e2a\u5927\u7684_step\u51fd\u6570\u8fd4\u56de(time + 1, output_ta_t) + tuple(new_states) \u8fdb\u5165 while loop \u5faa\u73af\u4f53: \u7ecf\u8fc7\u4e00\u7cfb\u5217\u5904\u7406\u540e\u8f93\u51fa\u5230\u7ed3\u679c","title":"\u6e90\u7801\u5206\u6790"},{"location":"%E5%86%85%E5%AE%B9/python/keras.backend.rnn%E5%AD%A6%E4%B9%A0/#_2","text":"TensorArray\u4ee5\u53cawhile loop","title":"\u96be\u70b9"},{"location":"%E5%86%85%E5%AE%B9/python/lru_cache%20%E8%A3%85%E9%A5%B0%E5%99%A8/","text":"lru_cache \u88c5\u9970\u5668 least recently used cache \u201c\u6700\u5c11\u6700\u8fd1\u4f7f\u7528\u201d\u9ad8\u901f\u7f13\u51b2\u50a8\u5b58\u5668 \u521d\u8bc6cache \u9996\u5148\u521b\u5efacache \u7f13\u5b58\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u63d0\u5347\u8ba1\u7b97\u673a\u6027\u80fd\u7684\uff0c\u5176\u6838\u5fc3\u64cd\u4f5c\u662f\uff1akeep recent or often-used data items in memory locations that are faster or compuationally cheaper to access than normal memory stores. When the cache is full, the algorithm must choose wich items to discard to make room for the new ones. \u5c31\u662f\u628a\u5e38\u7528\u7684\u6570\u636e\u653e\u5728\u9ad8\u901f\u5185\u5b58\u7a7a\u95f4\u4e0a\uff0c\u4e00\u65e6\u653e\u6ee1\u4e86\u4ee5\u540e\u5c31\u8981\u7528\u4e00\u79cd\u7b56\u7565\u9009\u62e9\u6570\u636e\u8fdb\u884c\u4e22\u5f03\u3002\u6240\u4ee5\u5404\u79cdcache\u7b97\u6cd5\u5c31\u662f\u5404\u79cddiscard policies\u3002 LRU cache \u987e\u540d\u601d\u4e49\u5c31\u662f\u627e\u5230\u6700\u5c11\uff0c\u6700\u8fd1\u4f7f\u7528\u7684\u90a3\u4e2a\u6570\u636e\uff0c\u628a\u5b83\u4e22\u6389\u4ee5\u632a\u51fa\u7a7a\u95f4\u4f9b\u65b0\u6570\u636e\u4f7f\u7528\u3002 \u7b97\u6cd5\u63cf\u8ff0 \u5982\u679c\u8bbf\u95ee\u987a\u5e8f\u4e3aABCDEDF \u53ef\u4ee5\u53d1\u73b0\uff0c\u5148\u7531ABCD\u586b\u6ee1\u4e86cache\uff1b \u63a5\u7740\u8bbf\u95eeE\uff0ccache\u6ca1\u50a8\u5b58\u7a7a\u95f4\u4e86\uff0c\u51b3\u5b9a\u628aA\u4e22\u4e86 \u8bbf\u95eeD\uff0c\u5b83\u672c\u6765\u5c31\u5b58\u5728\u4e8ecache\u4e2d\uff0c\u4e0d\u9700\u8981\u4e22\u4efb\u4f55\u6570\u636e \u8bbf\u95eeF\uff0c\u6b64\u65f6\u4e22\u6389\u4e86B\u3002 python\u5185\u7f6e\u51fd\u6570\u4e2d\u7684LRU cache \u88c5\u9970\u5668\uff1a def lru_cache(maxsize=128, typed=False): \"\"\"Least-recently-used cache decorator. If *maxsize* is set to None, the LRU features are disabled and the cache can grow without bound. If *typed* is True, arguments of different types will be cached separately. For example, f(3.0) and f(3) will be treated as distinct calls with distinct results. Arguments to the cached function must be hashable. View the cache statistics named tuple (hits, misses, maxsize, currsize) with f.cache_info(). Clear the cache and statistics with f.cache_clear(). Access the underlying function with f.__wrapped__. See: http://en.wikipedia.org/wiki/Cache_algorithms#Least_Recently_Used \"\"\" # Users should only access the lru_cache through its public API: # cache_info, cache_clear, and f.__wrapped__ # The internals of the lru_cache are encapsulated for thread safety and # to allow the implementation to change (including a possible C version). # Early detection of an erroneous call to @lru_cache without any arguments # resulting in the inner function being passed to maxsize instead of an # integer or None. if maxsize is not None and not isinstance(maxsize, int): raise TypeError('Expected maxsize to be an integer or None') def decorating_function(user_function): wrapper = _lru_cache_wrapper(user_function, maxsize, typed, _CacheInfo) return update_wrapper(wrapper, user_function) return decorating_function def _lru_cache_wrapper(user_function, maxsize, typed, _CacheInfo): # Constants shared by all lru cache instances: sentinel = object() # unique object used to signal cache misses make_key = _make_key # build a key from the function arguments PREV, NEXT, KEY, RESULT = 0, 1, 2, 3 # names for the link fields cache = {} hits = misses = 0 full = False cache_get = cache.get # bound method to lookup a key or return None cache_len = cache.__len__ # get cache size without calling len() lock = RLock() # because linkedlist updates aren't threadsafe root = [] # root of the circular doubly linked list root[:] = [root, root, None, None] # initialize by pointing to self if maxsize == 0: def wrapper(*args, **kwds): # No caching -- just a statistics update after a successful call nonlocal misses result = user_function(*args, **kwds) misses += 1 return result elif maxsize is None: def wrapper(*args, **kwds): # Simple caching without ordering or size limit nonlocal hits, misses key = make_key(args, kwds, typed) result = cache_get(key, sentinel) if result is not sentinel: hits += 1 return result result = user_function(*args, **kwds) cache[key] = result misses += 1 return result else: def wrapper(*args, **kwds): # Size limited caching that tracks accesses by recency nonlocal root, hits, misses, full key = make_key(args, kwds, typed) with lock: link = cache_get(key) if link is not None: # Move the link to the front of the circular queue link_prev, link_next, _key, result = link link_prev[NEXT] = link_next link_next[PREV] = link_prev last = root[PREV] last[NEXT] = root[PREV] = link link[PREV] = last link[NEXT] = root hits += 1 return result result = user_function(*args, **kwds) with lock: if key in cache: # Getting here means that this same key was added to the # cache while the lock was released. Since the link # update is already done, we need only return the # computed result and update the count of misses. pass elif full: # Use the old root to store the new key and result. oldroot = root oldroot[KEY] = key oldroot[RESULT] = result # Empty the oldest link and make it the new root. # Keep a reference to the old key and old result to # prevent their ref counts from going to zero during the # update. That will prevent potentially arbitrary object # clean-up code (i.e. __del__) from running while we're # still adjusting the links. root = oldroot[NEXT] oldkey = root[KEY] oldresult = root[RESULT] root[KEY] = root[RESULT] = None # Now update the cache dictionary. del cache[oldkey] # Save the potentially reentrant cache[key] assignment # for last, after the root and links have been put in # a consistent state. cache[key] = oldroot else: # Put result in a new link at the front of the queue. last = root[PREV] link = [last, root, key, result] last[NEXT] = root[PREV] = cache[key] = link # Use the cache_len bound method instead of the len() function # which could potentially be wrapped in an lru_cache itself. full = (cache_len() >= maxsize) misses += 1 return result def cache_info(): \"\"\"Report cache statistics\"\"\" with lock: return _CacheInfo(hits, misses, maxsize, cache_len()) def cache_clear(): \"\"\"Clear the cache and cache statistics\"\"\" nonlocal hits, misses, full with lock: cache.clear() root[:] = [root, root, None, None] hits = misses = 0 full = False wrapper.cache_info = cache_info wrapper.cache_clear = cache_clear return wrapper try: from _functools import _lru_cache_wrapper except ImportError: pass ################################################################################ ### singledispatch() - single-dispatch generic function decorator ################################################################################ def _c3_merge(sequences): \"\"\"Merges MROs in *sequences* to a single MRO using the C3 algorithm. Adapted from http://www.python.org/download/releases/2.3/mro/. \"\"\" result = [] while True: sequences = [s for s in sequences if s] # purge empty sequences if not sequences: return result for s1 in sequences: # find merge candidates among seq heads candidate = s1[0] for s2 in sequences: if candidate in s2[1:]: candidate = None break # reject the current head, it appears later else: break if candidate is None: raise RuntimeError(\"Inconsistent hierarchy\") result.append(candidate) # remove the chosen candidate for seq in sequences: if seq[0] == candidate: del seq[0] \u7b97\u6cd5\u8bbe\u8ba1 lru\u7684\u7f13\u5b58\u673a\u5236\u53ef\u4ee5\u901a\u8fc7\u54c8\u5e0c\u8868+\u53cc\u5411\u94fe\u8868\u6765\u5b9e\u73b0\u3002 LRU\u4e3a\u4e86\u8ba9put\u548cget\u65b9\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a1\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u8981\u67e5\u627e\u5feb\uff0c\u63d2\u5165\u5feb\uff0c\u5220\u9664\u5feb\uff0c\u6709\u987a\u5e8f\u3002","title":"lru_cache \u88c5\u9970\u5668"},{"location":"%E5%86%85%E5%AE%B9/python/lru_cache%20%E8%A3%85%E9%A5%B0%E5%99%A8/#lru_cache","text":"least recently used cache \u201c\u6700\u5c11\u6700\u8fd1\u4f7f\u7528\u201d\u9ad8\u901f\u7f13\u51b2\u50a8\u5b58\u5668","title":"lru_cache \u88c5\u9970\u5668"},{"location":"%E5%86%85%E5%AE%B9/python/lru_cache%20%E8%A3%85%E9%A5%B0%E5%99%A8/#cache","text":"\u9996\u5148\u521b\u5efacache \u7f13\u5b58\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u63d0\u5347\u8ba1\u7b97\u673a\u6027\u80fd\u7684\uff0c\u5176\u6838\u5fc3\u64cd\u4f5c\u662f\uff1akeep recent or often-used data items in memory locations that are faster or compuationally cheaper to access than normal memory stores. When the cache is full, the algorithm must choose wich items to discard to make room for the new ones. \u5c31\u662f\u628a\u5e38\u7528\u7684\u6570\u636e\u653e\u5728\u9ad8\u901f\u5185\u5b58\u7a7a\u95f4\u4e0a\uff0c\u4e00\u65e6\u653e\u6ee1\u4e86\u4ee5\u540e\u5c31\u8981\u7528\u4e00\u79cd\u7b56\u7565\u9009\u62e9\u6570\u636e\u8fdb\u884c\u4e22\u5f03\u3002\u6240\u4ee5\u5404\u79cdcache\u7b97\u6cd5\u5c31\u662f\u5404\u79cddiscard policies\u3002","title":"\u521d\u8bc6cache"},{"location":"%E5%86%85%E5%AE%B9/python/lru_cache%20%E8%A3%85%E9%A5%B0%E5%99%A8/#lru-cache","text":"\u987e\u540d\u601d\u4e49\u5c31\u662f\u627e\u5230\u6700\u5c11\uff0c\u6700\u8fd1\u4f7f\u7528\u7684\u90a3\u4e2a\u6570\u636e\uff0c\u628a\u5b83\u4e22\u6389\u4ee5\u632a\u51fa\u7a7a\u95f4\u4f9b\u65b0\u6570\u636e\u4f7f\u7528\u3002","title":"LRU cache"},{"location":"%E5%86%85%E5%AE%B9/python/lru_cache%20%E8%A3%85%E9%A5%B0%E5%99%A8/#_1","text":"\u5982\u679c\u8bbf\u95ee\u987a\u5e8f\u4e3aABCDEDF \u53ef\u4ee5\u53d1\u73b0\uff0c\u5148\u7531ABCD\u586b\u6ee1\u4e86cache\uff1b \u63a5\u7740\u8bbf\u95eeE\uff0ccache\u6ca1\u50a8\u5b58\u7a7a\u95f4\u4e86\uff0c\u51b3\u5b9a\u628aA\u4e22\u4e86 \u8bbf\u95eeD\uff0c\u5b83\u672c\u6765\u5c31\u5b58\u5728\u4e8ecache\u4e2d\uff0c\u4e0d\u9700\u8981\u4e22\u4efb\u4f55\u6570\u636e \u8bbf\u95eeF\uff0c\u6b64\u65f6\u4e22\u6389\u4e86B\u3002","title":"\u7b97\u6cd5\u63cf\u8ff0"},{"location":"%E5%86%85%E5%AE%B9/python/lru_cache%20%E8%A3%85%E9%A5%B0%E5%99%A8/#pythonlru-cache","text":"def lru_cache(maxsize=128, typed=False): \"\"\"Least-recently-used cache decorator. If *maxsize* is set to None, the LRU features are disabled and the cache can grow without bound. If *typed* is True, arguments of different types will be cached separately. For example, f(3.0) and f(3) will be treated as distinct calls with distinct results. Arguments to the cached function must be hashable. View the cache statistics named tuple (hits, misses, maxsize, currsize) with f.cache_info(). Clear the cache and statistics with f.cache_clear(). Access the underlying function with f.__wrapped__. See: http://en.wikipedia.org/wiki/Cache_algorithms#Least_Recently_Used \"\"\" # Users should only access the lru_cache through its public API: # cache_info, cache_clear, and f.__wrapped__ # The internals of the lru_cache are encapsulated for thread safety and # to allow the implementation to change (including a possible C version). # Early detection of an erroneous call to @lru_cache without any arguments # resulting in the inner function being passed to maxsize instead of an # integer or None. if maxsize is not None and not isinstance(maxsize, int): raise TypeError('Expected maxsize to be an integer or None') def decorating_function(user_function): wrapper = _lru_cache_wrapper(user_function, maxsize, typed, _CacheInfo) return update_wrapper(wrapper, user_function) return decorating_function def _lru_cache_wrapper(user_function, maxsize, typed, _CacheInfo): # Constants shared by all lru cache instances: sentinel = object() # unique object used to signal cache misses make_key = _make_key # build a key from the function arguments PREV, NEXT, KEY, RESULT = 0, 1, 2, 3 # names for the link fields cache = {} hits = misses = 0 full = False cache_get = cache.get # bound method to lookup a key or return None cache_len = cache.__len__ # get cache size without calling len() lock = RLock() # because linkedlist updates aren't threadsafe root = [] # root of the circular doubly linked list root[:] = [root, root, None, None] # initialize by pointing to self if maxsize == 0: def wrapper(*args, **kwds): # No caching -- just a statistics update after a successful call nonlocal misses result = user_function(*args, **kwds) misses += 1 return result elif maxsize is None: def wrapper(*args, **kwds): # Simple caching without ordering or size limit nonlocal hits, misses key = make_key(args, kwds, typed) result = cache_get(key, sentinel) if result is not sentinel: hits += 1 return result result = user_function(*args, **kwds) cache[key] = result misses += 1 return result else: def wrapper(*args, **kwds): # Size limited caching that tracks accesses by recency nonlocal root, hits, misses, full key = make_key(args, kwds, typed) with lock: link = cache_get(key) if link is not None: # Move the link to the front of the circular queue link_prev, link_next, _key, result = link link_prev[NEXT] = link_next link_next[PREV] = link_prev last = root[PREV] last[NEXT] = root[PREV] = link link[PREV] = last link[NEXT] = root hits += 1 return result result = user_function(*args, **kwds) with lock: if key in cache: # Getting here means that this same key was added to the # cache while the lock was released. Since the link # update is already done, we need only return the # computed result and update the count of misses. pass elif full: # Use the old root to store the new key and result. oldroot = root oldroot[KEY] = key oldroot[RESULT] = result # Empty the oldest link and make it the new root. # Keep a reference to the old key and old result to # prevent their ref counts from going to zero during the # update. That will prevent potentially arbitrary object # clean-up code (i.e. __del__) from running while we're # still adjusting the links. root = oldroot[NEXT] oldkey = root[KEY] oldresult = root[RESULT] root[KEY] = root[RESULT] = None # Now update the cache dictionary. del cache[oldkey] # Save the potentially reentrant cache[key] assignment # for last, after the root and links have been put in # a consistent state. cache[key] = oldroot else: # Put result in a new link at the front of the queue. last = root[PREV] link = [last, root, key, result] last[NEXT] = root[PREV] = cache[key] = link # Use the cache_len bound method instead of the len() function # which could potentially be wrapped in an lru_cache itself. full = (cache_len() >= maxsize) misses += 1 return result def cache_info(): \"\"\"Report cache statistics\"\"\" with lock: return _CacheInfo(hits, misses, maxsize, cache_len()) def cache_clear(): \"\"\"Clear the cache and cache statistics\"\"\" nonlocal hits, misses, full with lock: cache.clear() root[:] = [root, root, None, None] hits = misses = 0 full = False wrapper.cache_info = cache_info wrapper.cache_clear = cache_clear return wrapper try: from _functools import _lru_cache_wrapper except ImportError: pass ################################################################################ ### singledispatch() - single-dispatch generic function decorator ################################################################################ def _c3_merge(sequences): \"\"\"Merges MROs in *sequences* to a single MRO using the C3 algorithm. Adapted from http://www.python.org/download/releases/2.3/mro/. \"\"\" result = [] while True: sequences = [s for s in sequences if s] # purge empty sequences if not sequences: return result for s1 in sequences: # find merge candidates among seq heads candidate = s1[0] for s2 in sequences: if candidate in s2[1:]: candidate = None break # reject the current head, it appears later else: break if candidate is None: raise RuntimeError(\"Inconsistent hierarchy\") result.append(candidate) # remove the chosen candidate for seq in sequences: if seq[0] == candidate: del seq[0]","title":"python\u5185\u7f6e\u51fd\u6570\u4e2d\u7684LRU cache \u88c5\u9970\u5668\uff1a"},{"location":"%E5%86%85%E5%AE%B9/python/lru_cache%20%E8%A3%85%E9%A5%B0%E5%99%A8/#_2","text":"lru\u7684\u7f13\u5b58\u673a\u5236\u53ef\u4ee5\u901a\u8fc7\u54c8\u5e0c\u8868+\u53cc\u5411\u94fe\u8868\u6765\u5b9e\u73b0\u3002 LRU\u4e3a\u4e86\u8ba9put\u548cget\u65b9\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a1\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u8981\u67e5\u627e\u5feb\uff0c\u63d2\u5165\u5feb\uff0c\u5220\u9664\u5feb\uff0c\u6709\u987a\u5e8f\u3002","title":"\u7b97\u6cd5\u8bbe\u8ba1"},{"location":"%E5%86%85%E5%AE%B9/python/np.cov%20%E5%8D%8F%E6%96%B9%E5%B7%AE%E7%9F%A9%E9%98%B5%E7%9A%84%E8%AE%A1%E7%AE%97/","text":"np.cov \u534f\u65b9\u5dee\u77e9\u9635\u7684\u8ba1\u7b97 \u8fd9\u662fX,Y\u4e2a\u968f\u673a\u53d8\u91cf\u4e4b\u95f4\u7684\u534f\u65b9\u5dee\u8ba1\u7b97\u516c\u5f0f\uff0c\u53ef\u4ee5\u63a8\u5e7f\u5230n\u7ef4\u77e9\u9635\u4e0a\u3002 def cov(m, y=None, rowvar=True, bias=False, ddof=None, fweights=None,aweights=None): m : array_like \u200b A 1-D or 2-D array containing multiple variables and observations. \u200b Each row of `m` represents a variable, and each column a single \u200b observation of all those variables. Also see `rowvar` below. \u6ce8\u610f\u6b64\u5904\uff0c\u4e00\u5217column\u662f\u4e00\u7ec4observation\uff0c\u4e5f\u5c31\u662f\u4e00\u7ec4\u6570\u636e\u3002\u653e\u5728\u5e38\u89c4\u6570\u636e\u4e2d\uff0c\u6211\u4eec\u8981\u8f6c\u7f6e\u4e00\u4e0b\u3002 y : array_like, optional An additional set of variables and observations. `y` has the same form as that of `m`. rowvar : bool, optional If `rowvar` is True (default), then each row represents a variable, with observations in the columns. Otherwise, the relationship is transposed: each column represents a variable, while the rows contain observations. \u6b64\u53c2\u6570\u662frowvar = True\uff0c\u610f\u601d\u662f\u6bcf\u884c\u662f\u53d8\u91cf\u3002 bias : bool, optional Default normalization (False) is by ``(N - 1)``, where ``N`` is the number of observations given (unbiased estimate). If `bias` is True, then normalization is by ``N``. These values can be overridden by using the keyword ``ddof`` in numpy versions >= 1.5. \u65e0\u504f\u4f30\u8ba1or\u6709\u504f\u4f30\u8ba1 ddof : int, optional If not ``None`` the default value implied by `bias` is overridden. Note that ``ddof=1`` will return the unbiased estimate, even if both `fweights` and `aweights` are specified, and ``ddof=0`` will return the simple average. See the notes for the details. The default value is ``None``. fweights : array_like, int, optional 1-D array of integer frequency weights; the number of times each observation vector should be repeated. .. versionadded:: 1.10 aweights : array_like, optional 1-D array of observation vector weights. These relative weights are typically large for observations considered \"important\" and smaller for observations considered less \"important\". If ``ddof=0`` the array of weights can be used to assign probabilities to observation vectors. .. versionadded:: 1.10 \u8fd4\u56de\u4e00\u4e2andarry\uff0c\u534f\u65b9\u5dee\u77e9\u9635 \u51fd\u6570\u5206\u6790\uff1a","title":"np.cov \u534f\u65b9\u5dee\u77e9\u9635\u7684\u8ba1\u7b97"},{"location":"%E5%86%85%E5%AE%B9/python/np.cov%20%E5%8D%8F%E6%96%B9%E5%B7%AE%E7%9F%A9%E9%98%B5%E7%9A%84%E8%AE%A1%E7%AE%97/#npcov","text":"\u8fd9\u662fX,Y\u4e2a\u968f\u673a\u53d8\u91cf\u4e4b\u95f4\u7684\u534f\u65b9\u5dee\u8ba1\u7b97\u516c\u5f0f\uff0c\u53ef\u4ee5\u63a8\u5e7f\u5230n\u7ef4\u77e9\u9635\u4e0a\u3002 def cov(m, y=None, rowvar=True, bias=False, ddof=None, fweights=None,aweights=None): m : array_like \u200b A 1-D or 2-D array containing multiple variables and observations. \u200b Each row of `m` represents a variable, and each column a single \u200b observation of all those variables. Also see `rowvar` below. \u6ce8\u610f\u6b64\u5904\uff0c\u4e00\u5217column\u662f\u4e00\u7ec4observation\uff0c\u4e5f\u5c31\u662f\u4e00\u7ec4\u6570\u636e\u3002\u653e\u5728\u5e38\u89c4\u6570\u636e\u4e2d\uff0c\u6211\u4eec\u8981\u8f6c\u7f6e\u4e00\u4e0b\u3002 y : array_like, optional An additional set of variables and observations. `y` has the same form as that of `m`. rowvar : bool, optional If `rowvar` is True (default), then each row represents a variable, with observations in the columns. Otherwise, the relationship is transposed: each column represents a variable, while the rows contain observations. \u6b64\u53c2\u6570\u662frowvar = True\uff0c\u610f\u601d\u662f\u6bcf\u884c\u662f\u53d8\u91cf\u3002 bias : bool, optional Default normalization (False) is by ``(N - 1)``, where ``N`` is the number of observations given (unbiased estimate). If `bias` is True, then normalization is by ``N``. These values can be overridden by using the keyword ``ddof`` in numpy versions >= 1.5. \u65e0\u504f\u4f30\u8ba1or\u6709\u504f\u4f30\u8ba1 ddof : int, optional If not ``None`` the default value implied by `bias` is overridden. Note that ``ddof=1`` will return the unbiased estimate, even if both `fweights` and `aweights` are specified, and ``ddof=0`` will return the simple average. See the notes for the details. The default value is ``None``. fweights : array_like, int, optional 1-D array of integer frequency weights; the number of times each observation vector should be repeated. .. versionadded:: 1.10 aweights : array_like, optional 1-D array of observation vector weights. These relative weights are typically large for observations considered \"important\" and smaller for observations considered less \"important\". If ``ddof=0`` the array of weights can be used to assign probabilities to observation vectors. .. versionadded:: 1.10 \u8fd4\u56de\u4e00\u4e2andarry\uff0c\u534f\u65b9\u5dee\u77e9\u9635","title":"np.cov \u534f\u65b9\u5dee\u77e9\u9635\u7684\u8ba1\u7b97"},{"location":"%E5%86%85%E5%AE%B9/python/np.cov%20%E5%8D%8F%E6%96%B9%E5%B7%AE%E7%9F%A9%E9%98%B5%E7%9A%84%E8%AE%A1%E7%AE%97/#_1","text":"","title":"\u51fd\u6570\u5206\u6790\uff1a"},{"location":"%E5%86%85%E5%AE%B9/python/python%20logging%20%E6%A0%87%E5%87%86%E5%BA%93/","text":"python logging \u6807\u51c6\u5e93 \u4ec0\u4e48\u65f6\u5019\u4f7f\u7528\u65e5\u5fd7\uff1f \u65e5\u5fd7\u7684\u7ea7\u522b\uff1a DEBUG INFO WARNING ERROR CRITICAL \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u5c06logging\u8f93\u51fa\u5230\u547d\u4ee4\u884c\uff08console\uff09\uff0c\u9ed8\u8ba4\u7684\u8f93\u51fa\u7ea7\u522b\u4e3awarning\u3002 import logging logging.warning('Watch out!') # will print a message to the console logging.info('I told you so') # will not print anything \u8f93\u51fa\u65e5\u5fd7\u5230\u6587\u4ef6 logging.basicConfig(filename='example.log', encoding='utf-8', level=logging.DEBUG) \u4ece\u591a\u4e2a\u6a21\u5757\u8bb0\u5f55\u65e5\u5fd7 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cmylib.py\u4e2d\u7684\u4ea7\u751f\u7684\u65e5\u5fd7\u4fe1\u606f\u4e5f\u88ab\u8bb0\u5f55\u4e0b\u6765\u653e\u5728\u4e86\u4e00\u4e2alog\u6587\u4ef6\u4e2d\u3002 \u4e0d\u540c\u6a21\u5757\u7684\u65e5\u5fd7\u88ab\u7edf\u4e00\u8bb0\u5f55\uff0c\u65e0\u6cd5\u533a\u5206\u65e5\u5fd7\u7684\u6765\u6e90 \u3002 \u65e5\u5fd7\u5e93\u7684\u7ec4\u4ef6\uff1a \u8bb0\u5f55\u5668 \u5904\u7406\u5668 \u8fc7\u6ee4\u5668 \u683c\u5f0f\u5668 Logger \u8bb0\u5f55\u5668\uff0c\u5b83\u4e3b\u8981\u8d1f\u8d23\u4e24\u4e2a\u529f\u80fd\uff1a \u914d\u7f6e \u6d88\u606f \u914d\u7f6e \u5e38\u7528 Logger.setLevel() \u6765\u6307\u5b9a\u5904\u7406\u7684\u6700\u4f4e\u4e25\u91cd\u6027\u65e5\u5fd7\u6d88\u606f\u3002 Logger.addHandler() Logger.addFilter() \u6d88\u606f\u5e38\u7528 Logger.debug() , Logger.info() Handler \u4e24\u4e2a\u5e38\u7528\u7684\u5904\u7406\u5668\u4e3a StreamHandler , FileHandler \u5b9e\u8df5 \u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u5982\u679c\u662f\u5c0f\u578b\u9879\u76ee\uff0c\u53ef\u4ee5\u663e\u5f0f\u5730\u521b\u5efa\u8bb0\u5f55\u5668\uff0c\u5904\u7406\u5668\u7b49\u3002 import logging # create logger logger = logging.getLogger('simple_example') logger.setLevel(logging.DEBUG) # create console handler and set level to debug ch = logging.StreamHandler() ch.setLevel(logging.DEBUG) # create formatter formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s') # add formatter to ch ch.setFormatter(formatter) # add ch to logger logger.addHandler(ch) # 'application' code logger.debug('debug message') logger.info('info message') logger.warning('warn message') logger.error('error message') logger.critical('critical message') \u5927\u578b\u9879\u76ee\u53ef\u80fd\u6d89\u53ca\u5230\u591a\u4e2a\u8bb0\u5f55\u5668\u5904\u7406\u5668\uff0c\u6240\u4ee5\u5728config\u6587\u4ef6\u4e2d\u7edf\u4e00\u914d\u7f6e\uff1a logging.conf [loggers] keys=root,simpleExample [handlers] keys=consoleHandler [formatters] keys=simpleFormatter [logger_root] level=DEBUG handlers=consoleHandler [logger_simpleExample] level=DEBUG handlers=consoleHandler qualname=simpleExample propagate=0 [handler_consoleHandler] class=StreamHandler level=DEBUG formatter=simpleFormatter args=(sys.stdout,) [formatter_simpleFormatter] format=%(asctime)s - %(name)s - %(levelname)s - %(message)s datefmt= \u6a21\u5757\u4e2d\u4f7f\u7528 import logging import logging.config logging.config.fileConfig('logging.conf') # create logger logger = logging.getLogger('simpleExample') # 'application' code logger.debug('debug message') logger.info('info message') logger.warning('warn message') logger.error('error message') logger.critical('critical message')","title":"python logging \u6807\u51c6\u5e93"},{"location":"%E5%86%85%E5%AE%B9/python/python%20logging%20%E6%A0%87%E5%87%86%E5%BA%93/#python-logging","text":"\u4ec0\u4e48\u65f6\u5019\u4f7f\u7528\u65e5\u5fd7\uff1f \u65e5\u5fd7\u7684\u7ea7\u522b\uff1a DEBUG INFO WARNING ERROR CRITICAL \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u5c06logging\u8f93\u51fa\u5230\u547d\u4ee4\u884c\uff08console\uff09\uff0c\u9ed8\u8ba4\u7684\u8f93\u51fa\u7ea7\u522b\u4e3awarning\u3002 import logging logging.warning('Watch out!') # will print a message to the console logging.info('I told you so') # will not print anything","title":"python logging \u6807\u51c6\u5e93"},{"location":"%E5%86%85%E5%AE%B9/python/python%20logging%20%E6%A0%87%E5%87%86%E5%BA%93/#_1","text":"logging.basicConfig(filename='example.log', encoding='utf-8', level=logging.DEBUG)","title":"\u8f93\u51fa\u65e5\u5fd7\u5230\u6587\u4ef6"},{"location":"%E5%86%85%E5%AE%B9/python/python%20logging%20%E6%A0%87%E5%87%86%E5%BA%93/#_2","text":"\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cmylib.py\u4e2d\u7684\u4ea7\u751f\u7684\u65e5\u5fd7\u4fe1\u606f\u4e5f\u88ab\u8bb0\u5f55\u4e0b\u6765\u653e\u5728\u4e86\u4e00\u4e2alog\u6587\u4ef6\u4e2d\u3002 \u4e0d\u540c\u6a21\u5757\u7684\u65e5\u5fd7\u88ab\u7edf\u4e00\u8bb0\u5f55\uff0c\u65e0\u6cd5\u533a\u5206\u65e5\u5fd7\u7684\u6765\u6e90 \u3002","title":"\u4ece\u591a\u4e2a\u6a21\u5757\u8bb0\u5f55\u65e5\u5fd7"},{"location":"%E5%86%85%E5%AE%B9/python/python%20logging%20%E6%A0%87%E5%87%86%E5%BA%93/#_3","text":"\u8bb0\u5f55\u5668 \u5904\u7406\u5668 \u8fc7\u6ee4\u5668 \u683c\u5f0f\u5668","title":"\u65e5\u5fd7\u5e93\u7684\u7ec4\u4ef6\uff1a"},{"location":"%E5%86%85%E5%AE%B9/python/python%20logging%20%E6%A0%87%E5%87%86%E5%BA%93/#logger","text":"\u8bb0\u5f55\u5668\uff0c\u5b83\u4e3b\u8981\u8d1f\u8d23\u4e24\u4e2a\u529f\u80fd\uff1a \u914d\u7f6e \u6d88\u606f \u914d\u7f6e \u5e38\u7528 Logger.setLevel() \u6765\u6307\u5b9a\u5904\u7406\u7684\u6700\u4f4e\u4e25\u91cd\u6027\u65e5\u5fd7\u6d88\u606f\u3002 Logger.addHandler() Logger.addFilter() \u6d88\u606f\u5e38\u7528 Logger.debug() , Logger.info()","title":"Logger"},{"location":"%E5%86%85%E5%AE%B9/python/python%20logging%20%E6%A0%87%E5%87%86%E5%BA%93/#handler","text":"\u4e24\u4e2a\u5e38\u7528\u7684\u5904\u7406\u5668\u4e3a StreamHandler , FileHandler","title":"Handler"},{"location":"%E5%86%85%E5%AE%B9/python/python%20logging%20%E6%A0%87%E5%87%86%E5%BA%93/#_4","text":"\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u5982\u679c\u662f\u5c0f\u578b\u9879\u76ee\uff0c\u53ef\u4ee5\u663e\u5f0f\u5730\u521b\u5efa\u8bb0\u5f55\u5668\uff0c\u5904\u7406\u5668\u7b49\u3002 import logging # create logger logger = logging.getLogger('simple_example') logger.setLevel(logging.DEBUG) # create console handler and set level to debug ch = logging.StreamHandler() ch.setLevel(logging.DEBUG) # create formatter formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s') # add formatter to ch ch.setFormatter(formatter) # add ch to logger logger.addHandler(ch) # 'application' code logger.debug('debug message') logger.info('info message') logger.warning('warn message') logger.error('error message') logger.critical('critical message') \u5927\u578b\u9879\u76ee\u53ef\u80fd\u6d89\u53ca\u5230\u591a\u4e2a\u8bb0\u5f55\u5668\u5904\u7406\u5668\uff0c\u6240\u4ee5\u5728config\u6587\u4ef6\u4e2d\u7edf\u4e00\u914d\u7f6e\uff1a logging.conf [loggers] keys=root,simpleExample [handlers] keys=consoleHandler [formatters] keys=simpleFormatter [logger_root] level=DEBUG handlers=consoleHandler [logger_simpleExample] level=DEBUG handlers=consoleHandler qualname=simpleExample propagate=0 [handler_consoleHandler] class=StreamHandler level=DEBUG formatter=simpleFormatter args=(sys.stdout,) [formatter_simpleFormatter] format=%(asctime)s - %(name)s - %(levelname)s - %(message)s datefmt= \u6a21\u5757\u4e2d\u4f7f\u7528 import logging import logging.config logging.config.fileConfig('logging.conf') # create logger logger = logging.getLogger('simpleExample') # 'application' code logger.debug('debug message') logger.info('info message') logger.warning('warn message') logger.error('error message') logger.critical('critical message')","title":"\u5b9e\u8df5"},{"location":"%E5%86%85%E5%AE%B9/python/python%20%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1/","text":"python\u5b66\u4e60\u7b14\u8bb0 \u5bf9\u8c61\u65b9\u6cd5\uff0c\u7c7b\u65b9\u6cd5\uff0c\u9759\u6001\u65b9\u6cd5 class person: age = 18 def __init__(self): self.name = 'jack' def say(self): print('***\u5bf9\u8c61\u65b9\u6cd5***') print('\u6211\u4eca\u5e74',self.age) @classmethod #\u5199\u4e00\u4e2a\u7c7b\u65b9\u6cd5\u7528\u4e8e\u5728\u6ca1\u6709\u5bf9\u8c61\u7684\u65f6\u5019\u66f4\u65b0age def update_age(cls): print('***\u7c7b\u65b9\u6cd5***') cls.age = 20 @staticmethod #\u5199\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\u6765\u4fee\u6539\u5e74\u9f84 def reduce_age(): print('***\u9759\u6001\u65b9\u6cd5***') person.age = 15 \"\"\" \u603b\u7ed3\uff1a \u5bf9\u8c61\u65b9\u6cd5\uff1a\u5fc5\u987b\u7531\u5bf9\u8c61\u8c03\u7528\uff0c\u5fc5\u987b\u6709\u4e00\u4e2aself\u53c2\u6570 \u7c7b\u65b9\u6cd5\uff1a\u53ef\u4ee5\u76f4\u63a5\u7531\u7c7b\u8c03\u52a8 \u7c7b\u65b9\u6cd5\u4e0e\u9759\u6001\u65b9\u6cd5\uff1a\u6ce8\u610f\u88c5\u9970\u5668\u3002\u5728\u5b9a\u4e49\u65f6\uff0c\u7c7b\u65b9\u6cd5\u662f\u6709cls\u53c2\u6570\u7684\uff0c\u9759\u6001\u65b9\u6cd5\u6ca1\u6709\u53c2\u6570\uff1b\u5bf9\u8c61\u662f\u65e0\u6cd5\u8bbf\u95ee\u7684\u3002\u4e24\u8005\u90fd\u53ef\u4ee5\u5728\u5bf9\u8c61\u751f\u6210\u4e4b\u524d\u521b\u5efa\uff0c\u56e0\u4e3a\u7c7b\u65b9\u6cd5\u548c\u9759\u6001\u65b9\u6cd5\u90fd\u4e0d\u4f9d\u8d56\u4e8e\u5bf9\u8c61\u3002 \"\"\" p = person() p.say() ***\u5bf9\u8c61\u65b9\u6cd5*** \u6211\u4eca\u5e74 18 person.update_age() p = person() p.say() ***\u7c7b\u65b9\u6cd5*** ***\u5bf9\u8c61\u65b9\u6cd5*** \u6211\u4eca\u5e74 20 person.reduce_age() p = person() p.say() ***\u9759\u6001\u65b9\u6cd5*** ***\u5bf9\u8c61\u65b9\u6cd5*** \u6211\u4eca\u5e74 15 \u9b54\u672f\u65b9\u6cd5\u4e4b init \u9b54\u672f\u65b9\u6cd5\u4e4b new class person: def __init__(self,name,age): print(\"***\u521d\u59cb\u5316***\") self.name = name self.age = age \"\"\" \u7528init\u52a8\u6001\u6dfb\u52a0name\u548cage\u4e24\u4e2a\u5c5e\u6027 \"\"\" def __new__(cls,name,age): print(\"***\u7533\u8bf7\u5185\u5b58\uff0c\u5f00\u8f9f\u7a7a\u95f4***\") position = object.__new__(cls) print(position) return position \"\"\" new\u529f\u80fd\u5c31\u662f\u5728\u5b9e\u4f8b\u5316\u65f6\u5411\u5185\u5b58\u7533\u8bf7\u5730\u5740 \"\"\" p = person('jack',18) ***\u7533\u8bf7\u5185\u5b58\uff0c\u5f00\u8f9f\u7a7a\u95f4*** <__main__.person object at 0x000001CE441AC0B8> ***\u521d\u59cb\u5316*** \u5b9e\u4f8b\u5316\u65f6\u5c06\u8c03\u7528\u8fd9\u4e9b\u65b9\u6cd5\uff08\u4ece\u7c7b\u521b\u5efa\u5b9e\u4f8b\u7684\u8fc7\u7a0b\u79f0\u4e3a\u5b9e\u4f8b\u5316\uff09\u3002\u90a3\u5c31\u662f\u60a8\u521b\u5efa\u5b9e\u4f8b\u7684\u65f6\u5019\u3002\u521b\u5efa\u5b9e\u4f8b\u65f6\u5c06\u8c03\u7528\u9b54\u672f\u65b9\u6cd5__new__\u3002\u4f7f\u7528\u6b64\u65b9\u6cd5\uff0c\u60a8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5b9e\u4f8b\u521b\u5efa\u3002\u521b\u5efa\u5b9e\u4f8b\u65f6\uff0c\u9996\u5148\u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u7136\u540e\u5c06\u8c03\u7528__init__\u6765\u521d\u59cb\u5316\u5b9e\u4f8b\u3002 \u65b9\u6cd5__new__\u5c06\u7c7b\u5f15\u7528\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u7136\u540e\u662f\u4f20\u9012\u7ed9\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\uff08\u4f20\u9012\u7ed9\u7c7b\u7684\u8c03\u7528\u4ee5\u521b\u5efa\u5b9e\u4f8b\u7684\u53c2\u6570\uff09\u3002\u65b9\u6cd5__new__\u8d1f\u8d23\u521b\u5efa\u5b9e\u4f8b\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u4f7f\u7528\u6b64\u65b9\u6cd5\u6765\u81ea\u5b9a\u4e49\u5bf9\u8c61\u7684\u521b\u5efa\u3002\u901a\u5e38\uff0c\u65b9\u6cd5__new__\u5c06\u8fd4\u56de\u521b\u5efa\u7684\u5b9e\u4f8b\u5bf9\u8c61\u5f15\u7528\u3002\u4e00\u65e6__new__\u65b9\u6cd5\u5b8c\u6210\u6267\u884c\uff0c\u5c06\u8c03\u7528__init__\u65b9\u6cd5\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528super\u8c03\u7528\u8d85\u7c7b\u7684__new__\u65b9\u6cd5\u6765\u521b\u5efa\u8be5\u7c7b\u7684\u65b0\u5b9e\u4f8b\u3002 \u50cfsuper\uff08currentclass\uff0ccls\uff09. new \uff08cls\uff0c[\uff0c\u2026\u3002]\uff09\u4e4b\u7c7b\u7684\u4e1c\u897f \u60a8\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 super \u51fd\u6570\u6216\u76f4\u63a5\u5728 \u5bf9\u8c61\u4e0a \u8c03\u7528__new__\u65b9\u6cd5\u6765\u5728__new__\u65b9\u6cd5\u5185\u90e8\u521b\u5efa\u5b9e\u4f8b\uff0c \u5982\u679c\u7236\u7c7b\u662fobject \u3002 \u90a3\u662f\uff0c instance= super(MyClass\uff0ccls\uff09. new \uff08cls\uff0c* args\uff0c* kwargs\uff09 * \u8981\u4e48 instance=object. new \uff08cls\uff0c* args\uff0c** kwargs\uff09 python\u4e2d\u7684hashable\u5bf9\u8c61 An object is hashable if it has a hash value which never changes during its lifetime (it needs a hash () method), and can be compared to other objects (it needs an eq () or cmp () method). Hashable objects which compare equal must have the same hash value. Hashability makes an object usable as a dictionary key and a set member, because these data structures use the hash value internally. All of Python\u2019s immutable built-in objects are hashable, while no mutable containers (such as lists or dictionaries) are. Objects which are instances of user-defined classes are hashable by default; they all compare unequal, and their hash value is their id(). \u5982\u679c\u4e00\u4e2a\u5bf9\u8c61\u5728\u81ea\u5df1\u7684\u751f\u547d\u5468\u671f\u4e2d\u6709\u4e00\u54c8\u5e0c\u503c\uff08hash value\uff09\u662f\u4e0d\u53ef\u6539\u53d8\u7684\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u53ef\u54c8\u5e0c\u7684\uff08hashable\uff09\u7684\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u5185\u7f6e\u4e86\u54c8\u5e0c\u503c\uff0c\u6bcf\u4e2a\u53ef\u54c8\u5e0c\u7684\u5bf9\u8c61\u90fd\u5185\u7f6e\u4e86__hash__\u65b9\u6cd5\uff0c\u6240\u4ee5\u53ef\u54c8\u5e0c\u7684\u5bf9\u8c61\u53ef\u4ee5\u901a\u8fc7\u54c8\u5e0c\u503c\u8fdb\u884c\u5bf9\u6bd4\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u5b57\u5178\u7684\u952e\u503c\u548c\u4f5c\u4e3aset\u51fd\u6570\u7684\u53c2\u6570\u3002\u6240\u6709python\u4e2d\u6240\u6709\u4e0d\u53ef\u6539\u53d8\u7684\u7684\u5bf9\u8c61\uff08imutable objects\uff09\u90fd\u662f\u53ef\u54c8\u5e0c\u7684\uff0c\u6bd4\u5982\u5b57\u7b26\u4e32\uff0c\u5143\u7ec4\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ef\u6539\u53d8\u7684\u5bb9\u5668\u5982\u5b57\u5178\uff0c\u5217\u8868\u4e0d\u53ef\u54c8\u5e0c\uff08unhashable\uff09\u3002\u6211\u4eec\u7528\u6237\u6240\u5b9a\u4e49\u7684\u7c7b\u7684\u5b9e\u4f8b\u5bf9\u8c61\u9ed8\u8ba4\u662f\u53ef\u54c8\u5e0c\u7684\uff08hashable\uff09\uff0c\u5b83\u4eec\u90fd\u662f\u552f\u4e00\u7684\uff0c\u800chash\u503c\u4e5f\u5c31\u662f\u5b83\u4eec\u7684id()\u3002","title":"Python \u7c7b\u4e0e\u5bf9\u8c61"},{"location":"%E5%86%85%E5%AE%B9/python/python%20%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1/#python","text":"","title":"python\u5b66\u4e60\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/python/python%20%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1/#_1","text":"class person: age = 18 def __init__(self): self.name = 'jack' def say(self): print('***\u5bf9\u8c61\u65b9\u6cd5***') print('\u6211\u4eca\u5e74',self.age) @classmethod #\u5199\u4e00\u4e2a\u7c7b\u65b9\u6cd5\u7528\u4e8e\u5728\u6ca1\u6709\u5bf9\u8c61\u7684\u65f6\u5019\u66f4\u65b0age def update_age(cls): print('***\u7c7b\u65b9\u6cd5***') cls.age = 20 @staticmethod #\u5199\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\u6765\u4fee\u6539\u5e74\u9f84 def reduce_age(): print('***\u9759\u6001\u65b9\u6cd5***') person.age = 15 \"\"\" \u603b\u7ed3\uff1a \u5bf9\u8c61\u65b9\u6cd5\uff1a\u5fc5\u987b\u7531\u5bf9\u8c61\u8c03\u7528\uff0c\u5fc5\u987b\u6709\u4e00\u4e2aself\u53c2\u6570 \u7c7b\u65b9\u6cd5\uff1a\u53ef\u4ee5\u76f4\u63a5\u7531\u7c7b\u8c03\u52a8 \u7c7b\u65b9\u6cd5\u4e0e\u9759\u6001\u65b9\u6cd5\uff1a\u6ce8\u610f\u88c5\u9970\u5668\u3002\u5728\u5b9a\u4e49\u65f6\uff0c\u7c7b\u65b9\u6cd5\u662f\u6709cls\u53c2\u6570\u7684\uff0c\u9759\u6001\u65b9\u6cd5\u6ca1\u6709\u53c2\u6570\uff1b\u5bf9\u8c61\u662f\u65e0\u6cd5\u8bbf\u95ee\u7684\u3002\u4e24\u8005\u90fd\u53ef\u4ee5\u5728\u5bf9\u8c61\u751f\u6210\u4e4b\u524d\u521b\u5efa\uff0c\u56e0\u4e3a\u7c7b\u65b9\u6cd5\u548c\u9759\u6001\u65b9\u6cd5\u90fd\u4e0d\u4f9d\u8d56\u4e8e\u5bf9\u8c61\u3002 \"\"\" p = person() p.say() ***\u5bf9\u8c61\u65b9\u6cd5*** \u6211\u4eca\u5e74 18 person.update_age() p = person() p.say() ***\u7c7b\u65b9\u6cd5*** ***\u5bf9\u8c61\u65b9\u6cd5*** \u6211\u4eca\u5e74 20 person.reduce_age() p = person() p.say() ***\u9759\u6001\u65b9\u6cd5*** ***\u5bf9\u8c61\u65b9\u6cd5*** \u6211\u4eca\u5e74 15","title":"\u5bf9\u8c61\u65b9\u6cd5\uff0c\u7c7b\u65b9\u6cd5\uff0c\u9759\u6001\u65b9\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/python/python%20%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1/#init","text":"","title":"\u9b54\u672f\u65b9\u6cd5\u4e4b init"},{"location":"%E5%86%85%E5%AE%B9/python/python%20%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1/#new","text":"class person: def __init__(self,name,age): print(\"***\u521d\u59cb\u5316***\") self.name = name self.age = age \"\"\" \u7528init\u52a8\u6001\u6dfb\u52a0name\u548cage\u4e24\u4e2a\u5c5e\u6027 \"\"\" def __new__(cls,name,age): print(\"***\u7533\u8bf7\u5185\u5b58\uff0c\u5f00\u8f9f\u7a7a\u95f4***\") position = object.__new__(cls) print(position) return position \"\"\" new\u529f\u80fd\u5c31\u662f\u5728\u5b9e\u4f8b\u5316\u65f6\u5411\u5185\u5b58\u7533\u8bf7\u5730\u5740 \"\"\" p = person('jack',18) ***\u7533\u8bf7\u5185\u5b58\uff0c\u5f00\u8f9f\u7a7a\u95f4*** <__main__.person object at 0x000001CE441AC0B8> ***\u521d\u59cb\u5316*** \u5b9e\u4f8b\u5316\u65f6\u5c06\u8c03\u7528\u8fd9\u4e9b\u65b9\u6cd5\uff08\u4ece\u7c7b\u521b\u5efa\u5b9e\u4f8b\u7684\u8fc7\u7a0b\u79f0\u4e3a\u5b9e\u4f8b\u5316\uff09\u3002\u90a3\u5c31\u662f\u60a8\u521b\u5efa\u5b9e\u4f8b\u7684\u65f6\u5019\u3002\u521b\u5efa\u5b9e\u4f8b\u65f6\u5c06\u8c03\u7528\u9b54\u672f\u65b9\u6cd5__new__\u3002\u4f7f\u7528\u6b64\u65b9\u6cd5\uff0c\u60a8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5b9e\u4f8b\u521b\u5efa\u3002\u521b\u5efa\u5b9e\u4f8b\u65f6\uff0c\u9996\u5148\u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u7136\u540e\u5c06\u8c03\u7528__init__\u6765\u521d\u59cb\u5316\u5b9e\u4f8b\u3002 \u65b9\u6cd5__new__\u5c06\u7c7b\u5f15\u7528\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u7136\u540e\u662f\u4f20\u9012\u7ed9\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\uff08\u4f20\u9012\u7ed9\u7c7b\u7684\u8c03\u7528\u4ee5\u521b\u5efa\u5b9e\u4f8b\u7684\u53c2\u6570\uff09\u3002\u65b9\u6cd5__new__\u8d1f\u8d23\u521b\u5efa\u5b9e\u4f8b\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u4f7f\u7528\u6b64\u65b9\u6cd5\u6765\u81ea\u5b9a\u4e49\u5bf9\u8c61\u7684\u521b\u5efa\u3002\u901a\u5e38\uff0c\u65b9\u6cd5__new__\u5c06\u8fd4\u56de\u521b\u5efa\u7684\u5b9e\u4f8b\u5bf9\u8c61\u5f15\u7528\u3002\u4e00\u65e6__new__\u65b9\u6cd5\u5b8c\u6210\u6267\u884c\uff0c\u5c06\u8c03\u7528__init__\u65b9\u6cd5\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528super\u8c03\u7528\u8d85\u7c7b\u7684__new__\u65b9\u6cd5\u6765\u521b\u5efa\u8be5\u7c7b\u7684\u65b0\u5b9e\u4f8b\u3002 \u50cfsuper\uff08currentclass\uff0ccls\uff09. new \uff08cls\uff0c[\uff0c\u2026\u3002]\uff09\u4e4b\u7c7b\u7684\u4e1c\u897f \u60a8\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 super \u51fd\u6570\u6216\u76f4\u63a5\u5728 \u5bf9\u8c61\u4e0a \u8c03\u7528__new__\u65b9\u6cd5\u6765\u5728__new__\u65b9\u6cd5\u5185\u90e8\u521b\u5efa\u5b9e\u4f8b\uff0c \u5982\u679c\u7236\u7c7b\u662fobject \u3002 \u90a3\u662f\uff0c instance= super(MyClass\uff0ccls\uff09. new \uff08cls\uff0c* args\uff0c* kwargs\uff09 * \u8981\u4e48 instance=object. new \uff08cls\uff0c* args\uff0c** kwargs\uff09","title":"\u9b54\u672f\u65b9\u6cd5\u4e4b new"},{"location":"%E5%86%85%E5%AE%B9/python/python%20%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1/#pythonhashable","text":"An object is hashable if it has a hash value which never changes during its lifetime (it needs a hash () method), and can be compared to other objects (it needs an eq () or cmp () method). Hashable objects which compare equal must have the same hash value. Hashability makes an object usable as a dictionary key and a set member, because these data structures use the hash value internally. All of Python\u2019s immutable built-in objects are hashable, while no mutable containers (such as lists or dictionaries) are. Objects which are instances of user-defined classes are hashable by default; they all compare unequal, and their hash value is their id(). \u5982\u679c\u4e00\u4e2a\u5bf9\u8c61\u5728\u81ea\u5df1\u7684\u751f\u547d\u5468\u671f\u4e2d\u6709\u4e00\u54c8\u5e0c\u503c\uff08hash value\uff09\u662f\u4e0d\u53ef\u6539\u53d8\u7684\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u53ef\u54c8\u5e0c\u7684\uff08hashable\uff09\u7684\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u5185\u7f6e\u4e86\u54c8\u5e0c\u503c\uff0c\u6bcf\u4e2a\u53ef\u54c8\u5e0c\u7684\u5bf9\u8c61\u90fd\u5185\u7f6e\u4e86__hash__\u65b9\u6cd5\uff0c\u6240\u4ee5\u53ef\u54c8\u5e0c\u7684\u5bf9\u8c61\u53ef\u4ee5\u901a\u8fc7\u54c8\u5e0c\u503c\u8fdb\u884c\u5bf9\u6bd4\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u5b57\u5178\u7684\u952e\u503c\u548c\u4f5c\u4e3aset\u51fd\u6570\u7684\u53c2\u6570\u3002\u6240\u6709python\u4e2d\u6240\u6709\u4e0d\u53ef\u6539\u53d8\u7684\u7684\u5bf9\u8c61\uff08imutable objects\uff09\u90fd\u662f\u53ef\u54c8\u5e0c\u7684\uff0c\u6bd4\u5982\u5b57\u7b26\u4e32\uff0c\u5143\u7ec4\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ef\u6539\u53d8\u7684\u5bb9\u5668\u5982\u5b57\u5178\uff0c\u5217\u8868\u4e0d\u53ef\u54c8\u5e0c\uff08unhashable\uff09\u3002\u6211\u4eec\u7528\u6237\u6240\u5b9a\u4e49\u7684\u7c7b\u7684\u5b9e\u4f8b\u5bf9\u8c61\u9ed8\u8ba4\u662f\u53ef\u54c8\u5e0c\u7684\uff08hashable\uff09\uff0c\u5b83\u4eec\u90fd\u662f\u552f\u4e00\u7684\uff0c\u800chash\u503c\u4e5f\u5c31\u662f\u5b83\u4eec\u7684id()\u3002","title":"python\u4e2d\u7684hashable\u5bf9\u8c61"},{"location":"%E5%86%85%E5%AE%B9/python/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","text":"python\u5b66\u4e60\u7b14\u8bb0 \u5bf9\u8c61\u65b9\u6cd5\uff0c\u7c7b\u65b9\u6cd5\uff0c\u9759\u6001\u65b9\u6cd5 class person: age = 18 def __init__(self): self.name = 'jack' def say(self): print('***\u5bf9\u8c61\u65b9\u6cd5***') print('\u6211\u4eca\u5e74',self.age) @classmethod #\u5199\u4e00\u4e2a\u7c7b\u65b9\u6cd5\u7528\u4e8e\u5728\u6ca1\u6709\u5bf9\u8c61\u7684\u65f6\u5019\u66f4\u65b0age def update_age(cls): print('***\u7c7b\u65b9\u6cd5***') cls.age = 20 @staticmethod #\u5199\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\u6765\u4fee\u6539\u5e74\u9f84 def reduce_age(): print('***\u9759\u6001\u65b9\u6cd5***') person.age = 15 \"\"\" \u603b\u7ed3\uff1a \u5bf9\u8c61\u65b9\u6cd5\uff1a\u5fc5\u987b\u7531\u5bf9\u8c61\u8c03\u7528\uff0c\u5fc5\u987b\u6709\u4e00\u4e2aself\u53c2\u6570 \u7c7b\u65b9\u6cd5\uff1a\u53ef\u4ee5\u76f4\u63a5\u7531\u7c7b\u8c03\u52a8 \u7c7b\u65b9\u6cd5\u4e0e\u9759\u6001\u65b9\u6cd5\uff1a\u6ce8\u610f\u88c5\u9970\u5668\u3002\u5728\u5b9a\u4e49\u65f6\uff0c\u7c7b\u65b9\u6cd5\u662f\u6709cls\u53c2\u6570\u7684\uff0c\u9759\u6001\u65b9\u6cd5\u6ca1\u6709\u53c2\u6570\uff1b\u5bf9\u8c61\u662f\u65e0\u6cd5\u8bbf\u95ee\u7684\u3002\u4e24\u8005\u90fd\u53ef\u4ee5\u5728\u5bf9\u8c61\u751f\u6210\u4e4b\u524d\u521b\u5efa\uff0c\u56e0\u4e3a\u7c7b\u65b9\u6cd5\u548c\u9759\u6001\u65b9\u6cd5\u90fd\u4e0d\u4f9d\u8d56\u4e8e\u5bf9\u8c61\u3002 \"\"\" p = person() p.say() ***\u5bf9\u8c61\u65b9\u6cd5*** \u6211\u4eca\u5e74 18 person.update_age() p = person() p.say() ***\u7c7b\u65b9\u6cd5*** ***\u5bf9\u8c61\u65b9\u6cd5*** \u6211\u4eca\u5e74 20 person.reduce_age() p = person() p.say() ***\u9759\u6001\u65b9\u6cd5*** ***\u5bf9\u8c61\u65b9\u6cd5*** \u6211\u4eca\u5e74 15 \u9b54\u672f\u65b9\u6cd5\u4e4b init \u9b54\u672f\u65b9\u6cd5\u4e4b new class person: def __init__(self,name,age): print(\"***\u521d\u59cb\u5316***\") self.name = name self.age = age \"\"\" \u7528init\u52a8\u6001\u6dfb\u52a0name\u548cage\u4e24\u4e2a\u5c5e\u6027 \"\"\" def __new__(cls,name,age): print(\"***\u7533\u8bf7\u5185\u5b58\uff0c\u5f00\u8f9f\u7a7a\u95f4***\") position = object.__new__(cls) print(position) return position \"\"\" new\u529f\u80fd\u5c31\u662f\u5728\u5b9e\u4f8b\u5316\u65f6\u5411\u5185\u5b58\u7533\u8bf7\u5730\u5740 \"\"\" p = person('jack',18) ***\u7533\u8bf7\u5185\u5b58\uff0c\u5f00\u8f9f\u7a7a\u95f4*** <__main__.person object at 0x000001CE441AC0B8> ***\u521d\u59cb\u5316*** \u5b9e\u4f8b\u5316\u65f6\u5c06\u8c03\u7528\u8fd9\u4e9b\u65b9\u6cd5\uff08\u4ece\u7c7b\u521b\u5efa\u5b9e\u4f8b\u7684\u8fc7\u7a0b\u79f0\u4e3a\u5b9e\u4f8b\u5316\uff09\u3002\u90a3\u5c31\u662f\u60a8\u521b\u5efa\u5b9e\u4f8b\u7684\u65f6\u5019\u3002\u521b\u5efa\u5b9e\u4f8b\u65f6\u5c06\u8c03\u7528\u9b54\u672f\u65b9\u6cd5__new__\u3002\u4f7f\u7528\u6b64\u65b9\u6cd5\uff0c\u60a8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5b9e\u4f8b\u521b\u5efa\u3002\u521b\u5efa\u5b9e\u4f8b\u65f6\uff0c\u9996\u5148\u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u7136\u540e\u5c06\u8c03\u7528__init__\u6765\u521d\u59cb\u5316\u5b9e\u4f8b\u3002 \u65b9\u6cd5__new__\u5c06\u7c7b\u5f15\u7528\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u7136\u540e\u662f\u4f20\u9012\u7ed9\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\uff08\u4f20\u9012\u7ed9\u7c7b\u7684\u8c03\u7528\u4ee5\u521b\u5efa\u5b9e\u4f8b\u7684\u53c2\u6570\uff09\u3002\u65b9\u6cd5__new__\u8d1f\u8d23\u521b\u5efa\u5b9e\u4f8b\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u4f7f\u7528\u6b64\u65b9\u6cd5\u6765\u81ea\u5b9a\u4e49\u5bf9\u8c61\u7684\u521b\u5efa\u3002\u901a\u5e38\uff0c\u65b9\u6cd5__new__\u5c06\u8fd4\u56de\u521b\u5efa\u7684\u5b9e\u4f8b\u5bf9\u8c61\u5f15\u7528\u3002\u4e00\u65e6__new__\u65b9\u6cd5\u5b8c\u6210\u6267\u884c\uff0c\u5c06\u8c03\u7528__init__\u65b9\u6cd5\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528super\u8c03\u7528\u8d85\u7c7b\u7684__new__\u65b9\u6cd5\u6765\u521b\u5efa\u8be5\u7c7b\u7684\u65b0\u5b9e\u4f8b\u3002 \u50cfsuper\uff08currentclass\uff0ccls\uff09. new \uff08cls\uff0c[\uff0c\u2026\u3002]\uff09\u4e4b\u7c7b\u7684\u4e1c\u897f \u60a8\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 super \u51fd\u6570\u6216\u76f4\u63a5\u5728 \u5bf9\u8c61\u4e0a \u8c03\u7528__new__\u65b9\u6cd5\u6765\u5728__new__\u65b9\u6cd5\u5185\u90e8\u521b\u5efa\u5b9e\u4f8b\uff0c \u5982\u679c\u7236\u7c7b\u662fobject \u3002 \u90a3\u662f\uff0c instance= super(MyClass\uff0ccls\uff09. new \uff08cls\uff0c* args\uff0c* kwargs\uff09 * \u8981\u4e48 instance=object. new \uff08cls\uff0c* args\uff0c** kwargs\uff09 python\u4e2d\u7684hashable\u5bf9\u8c61 An object is hashable if it has a hash value which never changes during its lifetime (it needs a hash () method), and can be compared to other objects (it needs an eq () or cmp () method). Hashable objects which compare equal must have the same hash value. Hashability makes an object usable as a dictionary key and a set member, because these data structures use the hash value internally. All of Python\u2019s immutable built-in objects are hashable, while no mutable containers (such as lists or dictionaries) are. Objects which are instances of user-defined classes are hashable by default; they all compare unequal, and their hash value is their id(). \u5982\u679c\u4e00\u4e2a\u5bf9\u8c61\u5728\u81ea\u5df1\u7684\u751f\u547d\u5468\u671f\u4e2d\u6709\u4e00\u54c8\u5e0c\u503c\uff08hash value\uff09\u662f\u4e0d\u53ef\u6539\u53d8\u7684\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u53ef\u54c8\u5e0c\u7684\uff08hashable\uff09\u7684\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u5185\u7f6e\u4e86\u54c8\u5e0c\u503c\uff0c\u6bcf\u4e2a\u53ef\u54c8\u5e0c\u7684\u5bf9\u8c61\u90fd\u5185\u7f6e\u4e86__hash__\u65b9\u6cd5\uff0c\u6240\u4ee5\u53ef\u54c8\u5e0c\u7684\u5bf9\u8c61\u53ef\u4ee5\u901a\u8fc7\u54c8\u5e0c\u503c\u8fdb\u884c\u5bf9\u6bd4\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u5b57\u5178\u7684\u952e\u503c\u548c\u4f5c\u4e3aset\u51fd\u6570\u7684\u53c2\u6570\u3002\u6240\u6709python\u4e2d\u6240\u6709\u4e0d\u53ef\u6539\u53d8\u7684\u7684\u5bf9\u8c61\uff08imutable objects\uff09\u90fd\u662f\u53ef\u54c8\u5e0c\u7684\uff0c\u6bd4\u5982\u5b57\u7b26\u4e32\uff0c\u5143\u7ec4\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ef\u6539\u53d8\u7684\u5bb9\u5668\u5982\u5b57\u5178\uff0c\u5217\u8868\u4e0d\u53ef\u54c8\u5e0c\uff08unhashable\uff09\u3002\u6211\u4eec\u7528\u6237\u6240\u5b9a\u4e49\u7684\u7c7b\u7684\u5b9e\u4f8b\u5bf9\u8c61\u9ed8\u8ba4\u662f\u53ef\u54c8\u5e0c\u7684\uff08hashable\uff09\uff0c\u5b83\u4eec\u90fd\u662f\u552f\u4e00\u7684\uff0c\u800chash\u503c\u4e5f\u5c31\u662f\u5b83\u4eec\u7684id()\u3002","title":"Python\u5b66\u4e60\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/python/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#python","text":"","title":"python\u5b66\u4e60\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/python/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_1","text":"class person: age = 18 def __init__(self): self.name = 'jack' def say(self): print('***\u5bf9\u8c61\u65b9\u6cd5***') print('\u6211\u4eca\u5e74',self.age) @classmethod #\u5199\u4e00\u4e2a\u7c7b\u65b9\u6cd5\u7528\u4e8e\u5728\u6ca1\u6709\u5bf9\u8c61\u7684\u65f6\u5019\u66f4\u65b0age def update_age(cls): print('***\u7c7b\u65b9\u6cd5***') cls.age = 20 @staticmethod #\u5199\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\u6765\u4fee\u6539\u5e74\u9f84 def reduce_age(): print('***\u9759\u6001\u65b9\u6cd5***') person.age = 15 \"\"\" \u603b\u7ed3\uff1a \u5bf9\u8c61\u65b9\u6cd5\uff1a\u5fc5\u987b\u7531\u5bf9\u8c61\u8c03\u7528\uff0c\u5fc5\u987b\u6709\u4e00\u4e2aself\u53c2\u6570 \u7c7b\u65b9\u6cd5\uff1a\u53ef\u4ee5\u76f4\u63a5\u7531\u7c7b\u8c03\u52a8 \u7c7b\u65b9\u6cd5\u4e0e\u9759\u6001\u65b9\u6cd5\uff1a\u6ce8\u610f\u88c5\u9970\u5668\u3002\u5728\u5b9a\u4e49\u65f6\uff0c\u7c7b\u65b9\u6cd5\u662f\u6709cls\u53c2\u6570\u7684\uff0c\u9759\u6001\u65b9\u6cd5\u6ca1\u6709\u53c2\u6570\uff1b\u5bf9\u8c61\u662f\u65e0\u6cd5\u8bbf\u95ee\u7684\u3002\u4e24\u8005\u90fd\u53ef\u4ee5\u5728\u5bf9\u8c61\u751f\u6210\u4e4b\u524d\u521b\u5efa\uff0c\u56e0\u4e3a\u7c7b\u65b9\u6cd5\u548c\u9759\u6001\u65b9\u6cd5\u90fd\u4e0d\u4f9d\u8d56\u4e8e\u5bf9\u8c61\u3002 \"\"\" p = person() p.say() ***\u5bf9\u8c61\u65b9\u6cd5*** \u6211\u4eca\u5e74 18 person.update_age() p = person() p.say() ***\u7c7b\u65b9\u6cd5*** ***\u5bf9\u8c61\u65b9\u6cd5*** \u6211\u4eca\u5e74 20 person.reduce_age() p = person() p.say() ***\u9759\u6001\u65b9\u6cd5*** ***\u5bf9\u8c61\u65b9\u6cd5*** \u6211\u4eca\u5e74 15","title":"\u5bf9\u8c61\u65b9\u6cd5\uff0c\u7c7b\u65b9\u6cd5\uff0c\u9759\u6001\u65b9\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/python/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#init","text":"","title":"\u9b54\u672f\u65b9\u6cd5\u4e4b init"},{"location":"%E5%86%85%E5%AE%B9/python/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#new","text":"class person: def __init__(self,name,age): print(\"***\u521d\u59cb\u5316***\") self.name = name self.age = age \"\"\" \u7528init\u52a8\u6001\u6dfb\u52a0name\u548cage\u4e24\u4e2a\u5c5e\u6027 \"\"\" def __new__(cls,name,age): print(\"***\u7533\u8bf7\u5185\u5b58\uff0c\u5f00\u8f9f\u7a7a\u95f4***\") position = object.__new__(cls) print(position) return position \"\"\" new\u529f\u80fd\u5c31\u662f\u5728\u5b9e\u4f8b\u5316\u65f6\u5411\u5185\u5b58\u7533\u8bf7\u5730\u5740 \"\"\" p = person('jack',18) ***\u7533\u8bf7\u5185\u5b58\uff0c\u5f00\u8f9f\u7a7a\u95f4*** <__main__.person object at 0x000001CE441AC0B8> ***\u521d\u59cb\u5316*** \u5b9e\u4f8b\u5316\u65f6\u5c06\u8c03\u7528\u8fd9\u4e9b\u65b9\u6cd5\uff08\u4ece\u7c7b\u521b\u5efa\u5b9e\u4f8b\u7684\u8fc7\u7a0b\u79f0\u4e3a\u5b9e\u4f8b\u5316\uff09\u3002\u90a3\u5c31\u662f\u60a8\u521b\u5efa\u5b9e\u4f8b\u7684\u65f6\u5019\u3002\u521b\u5efa\u5b9e\u4f8b\u65f6\u5c06\u8c03\u7528\u9b54\u672f\u65b9\u6cd5__new__\u3002\u4f7f\u7528\u6b64\u65b9\u6cd5\uff0c\u60a8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5b9e\u4f8b\u521b\u5efa\u3002\u521b\u5efa\u5b9e\u4f8b\u65f6\uff0c\u9996\u5148\u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u7136\u540e\u5c06\u8c03\u7528__init__\u6765\u521d\u59cb\u5316\u5b9e\u4f8b\u3002 \u65b9\u6cd5__new__\u5c06\u7c7b\u5f15\u7528\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u7136\u540e\u662f\u4f20\u9012\u7ed9\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\uff08\u4f20\u9012\u7ed9\u7c7b\u7684\u8c03\u7528\u4ee5\u521b\u5efa\u5b9e\u4f8b\u7684\u53c2\u6570\uff09\u3002\u65b9\u6cd5__new__\u8d1f\u8d23\u521b\u5efa\u5b9e\u4f8b\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u4f7f\u7528\u6b64\u65b9\u6cd5\u6765\u81ea\u5b9a\u4e49\u5bf9\u8c61\u7684\u521b\u5efa\u3002\u901a\u5e38\uff0c\u65b9\u6cd5__new__\u5c06\u8fd4\u56de\u521b\u5efa\u7684\u5b9e\u4f8b\u5bf9\u8c61\u5f15\u7528\u3002\u4e00\u65e6__new__\u65b9\u6cd5\u5b8c\u6210\u6267\u884c\uff0c\u5c06\u8c03\u7528__init__\u65b9\u6cd5\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528super\u8c03\u7528\u8d85\u7c7b\u7684__new__\u65b9\u6cd5\u6765\u521b\u5efa\u8be5\u7c7b\u7684\u65b0\u5b9e\u4f8b\u3002 \u50cfsuper\uff08currentclass\uff0ccls\uff09. new \uff08cls\uff0c[\uff0c\u2026\u3002]\uff09\u4e4b\u7c7b\u7684\u4e1c\u897f \u60a8\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 super \u51fd\u6570\u6216\u76f4\u63a5\u5728 \u5bf9\u8c61\u4e0a \u8c03\u7528__new__\u65b9\u6cd5\u6765\u5728__new__\u65b9\u6cd5\u5185\u90e8\u521b\u5efa\u5b9e\u4f8b\uff0c \u5982\u679c\u7236\u7c7b\u662fobject \u3002 \u90a3\u662f\uff0c instance= super(MyClass\uff0ccls\uff09. new \uff08cls\uff0c* args\uff0c* kwargs\uff09 * \u8981\u4e48 instance=object. new \uff08cls\uff0c* args\uff0c** kwargs\uff09","title":"\u9b54\u672f\u65b9\u6cd5\u4e4b new"},{"location":"%E5%86%85%E5%AE%B9/python/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#pythonhashable","text":"An object is hashable if it has a hash value which never changes during its lifetime (it needs a hash () method), and can be compared to other objects (it needs an eq () or cmp () method). Hashable objects which compare equal must have the same hash value. Hashability makes an object usable as a dictionary key and a set member, because these data structures use the hash value internally. All of Python\u2019s immutable built-in objects are hashable, while no mutable containers (such as lists or dictionaries) are. Objects which are instances of user-defined classes are hashable by default; they all compare unequal, and their hash value is their id(). \u5982\u679c\u4e00\u4e2a\u5bf9\u8c61\u5728\u81ea\u5df1\u7684\u751f\u547d\u5468\u671f\u4e2d\u6709\u4e00\u54c8\u5e0c\u503c\uff08hash value\uff09\u662f\u4e0d\u53ef\u6539\u53d8\u7684\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u53ef\u54c8\u5e0c\u7684\uff08hashable\uff09\u7684\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u5185\u7f6e\u4e86\u54c8\u5e0c\u503c\uff0c\u6bcf\u4e2a\u53ef\u54c8\u5e0c\u7684\u5bf9\u8c61\u90fd\u5185\u7f6e\u4e86__hash__\u65b9\u6cd5\uff0c\u6240\u4ee5\u53ef\u54c8\u5e0c\u7684\u5bf9\u8c61\u53ef\u4ee5\u901a\u8fc7\u54c8\u5e0c\u503c\u8fdb\u884c\u5bf9\u6bd4\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u5b57\u5178\u7684\u952e\u503c\u548c\u4f5c\u4e3aset\u51fd\u6570\u7684\u53c2\u6570\u3002\u6240\u6709python\u4e2d\u6240\u6709\u4e0d\u53ef\u6539\u53d8\u7684\u7684\u5bf9\u8c61\uff08imutable objects\uff09\u90fd\u662f\u53ef\u54c8\u5e0c\u7684\uff0c\u6bd4\u5982\u5b57\u7b26\u4e32\uff0c\u5143\u7ec4\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ef\u6539\u53d8\u7684\u5bb9\u5668\u5982\u5b57\u5178\uff0c\u5217\u8868\u4e0d\u53ef\u54c8\u5e0c\uff08unhashable\uff09\u3002\u6211\u4eec\u7528\u6237\u6240\u5b9a\u4e49\u7684\u7c7b\u7684\u5b9e\u4f8b\u5bf9\u8c61\u9ed8\u8ba4\u662f\u53ef\u54c8\u5e0c\u7684\uff08hashable\uff09\uff0c\u5b83\u4eec\u90fd\u662f\u552f\u4e00\u7684\uff0c\u800chash\u503c\u4e5f\u5c31\u662f\u5b83\u4eec\u7684id()\u3002","title":"python\u4e2d\u7684hashable\u5bf9\u8c61"},{"location":"%E5%86%85%E5%AE%B9/python/pytorch%20%E5%AD%A6%E4%B9%A0/","text":"pytorch \u5b66\u4e60 data pytorch \u63d0\u4f9b\u4e24\u79cd\u539f\u59cb\u9014\u5f84\u5904\u7406\u6570\u636e\uff1a torch.utils.data.DataLoader torch.utils.data.Dataset dataset\u50a8\u5b58\u4e86\u6570\u636e\u4ee5\u53ca\u6807\u7b7e dataloader\u5c06dataset\u5305\u88c5\u6210\u4e86\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002 \u4e3a\u4e86\u83b7\u53d6dataset\u5bf9\u8c61\uff0cpytorch\u5185\u90e8\u5df2\u7ecf\u9884\u5b9a\u4e49\u597d\u4e86\u4e00\u4e9b\uff0c\u5206\u522b\u5b58\u5728 torchvision\u4ee5\u53catorchtext\u7b49\u6a21\u5757\u5185\u3002 ig. from torchvision import datasets dataset --> \u8f6c\u5316\u4e3a\u751f\u6210\u5668\uff0c\u5b9a\u4e49\u597dbatch size\uff0c dataloader models \u7ee7\u627f nn.Module # Get cpu or gpu device for training. device = \"cuda\" if torch.cuda.is_available() else \"cpu\" print(\"Using {} device\".format(device)) # Define model class NeuralNetwork(nn.Module): def __init__(self): super(NeuralNetwork, self).__init__() self.flatten = nn.Flatten() self.linear_relu_stack = nn.Sequential( nn.Linear(28*28, 512), nn.ReLU(), nn.Linear(512, 512), nn.ReLU(), nn.Linear(512, 10), nn.ReLU() ) def forward(self, x): x = self.flatten(x) logits = self.linear_relu_stack(x) return logits model = NeuralNetwork().to(device) print(model) \u5c06 __init__ \u4e2d\u5199\u5165\u5404\u4e2a\u5c42\uff0c\u7136\u540e\u5728foward\u51fd\u6570\u4e2d\u5199\u660e\u6570\u636e\u7ecf\u8fc7\u7684\u987a\u5e8f\u3002 \u5982\u679c\u9700\u8981\u7528GPU\uff0c\u5c06\u5b83\u79fb\u52a8\u5230gpu\u4e2d train \u8bad\u7ec3\u6a21\u578b\u9700\u8981\u7b97\u662f\u51fd\u6570\u4e0e\u4f18\u5316\u5668 \u635f\u5931\u51fd\u6570\u6709\u4ea4\u53c9\u71b5\uff0c\u4f18\u5316\u5668\u6709\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u3002 loss_fn = nn.CrossEntropyLoss() optimizer = torch.optim.SGD(model.parameters(), lr=1e-3) \u8bad\u7ec3\uff1a def train(dataloader, model, loss_fn, optimizer): size = len(dataloader.dataset) for batch, (X, y) in enumerate(dataloader): X, y = X.to(device), y.to(device) # Compute prediction error pred = model(X) loss = loss_fn(pred, y) # Backpropagation optimizer.zero_grad() loss.backward() optimizer.step() if batch % 100 == 0: loss, current = loss.item(), batch * len(X) print(f\"loss: {loss:>7f} [{current:>5d}/{size:>5d}]\") \u6d4b\u8bd5\uff1a def test(dataloader, model, loss_fn): size = len(dataloader.dataset) num_batches = len(dataloader) model.eval() test_loss, correct = 0, 0 with torch.no_grad(): for X, y in dataloader: X, y = X.to(device), y.to(device) pred = model(X) test_loss += loss_fn(pred, y).item() correct += (pred.argmax(1) == y).type(torch.float).sum().item() test_loss /= num_batches correct /= size print(f\"Test Error: \\n Accuracy: {(100*correct):>0.1f}%, Avg loss: {test_loss:>8f} \\n\") epochs = 5 for t in range(epochs): print(f\"Epoch {t+1}\\n-------------------------------\") train(train_dataloader, model, loss_fn, optimizer) test(test_dataloader, model, loss_fn) print(\"Done!\") save model torch.save(model.state_dict(), \"model.pth\") print(\"Saved PyTorch Model State to model.pth\") load model model = NeuralNetwork() model.load_state_dict(torch.load(\"model.pth\")) classes = [ \"T-shirt/top\", \"Trouser\", \"Pullover\", \"Dress\", \"Coat\", \"Sandal\", \"Shirt\", \"Sneaker\", \"Bag\", \"Ankle boot\", ] model.eval() x, y = test_data[0][0], test_data[0][1] with torch.no_grad(): pred = model(x) predicted, actual = classes[pred[0].argmax(0)], classes[y] print(f'Predicted: \"{predicted}\", Actual: \"{actual}\"') \u5173\u952e\u8981\u7d20 tensor \u7c7b\u4f3c\u4e8endarray\uff0c\u53ef\u4ee5\u76f4\u63a5\u7531\u5b57\u5178\u6216\u8005ndarray\u751f\u6210 dataset dataset\u5bf9\u8c61\u662fpytorch\u81ea\u5e26\u7684\u6570\u636e\u5bf9\u8c61 \u5f53\u7136pytorch\u4e5f\u63d0\u4f9b\u4e00\u4e9b\u5f00\u6e90\u7684\u6570\u636e\uff0ctorchvision.datasets\u91cc\u9762\u6709\u4e00\u4e9b \u521b\u5efa\u81ea\u5df1\u7684\u6570\u636e\u5bf9\u8c61 \u5176\u4e2d\u5fc5\u987b\u5305\u62ec\u4e09\u4e2a\u51fd\u6570\uff1ainit\uff0clen\uff0cgetitem import os import pandas as pd from torchvision.io import read_image class CustomImageDataset(Dataset): def __init__(self, annotations_file, img_dir, transform=None, target_transform=None): self.img_labels = pd.read_csv(annotations_file) self.img_dir = img_dir self.transform = transform self.target_transform = target_transform def __len__(self): return len(self.img_labels) def __getitem__(self, idx): img_path = os.path.join(self.img_dir, self.img_labels.iloc[idx, 0]) image = read_image(img_path) label = self.img_labels.iloc[idx, 1] if self.transform: image = self.transform(image) if self.target_transform: label = self.target_transform(label) return image, label transform \u5305\u62ec transform\u4e0etarget transform import torch from torchvision import datasets from torchvision.transforms import ToTensor, Lambda ds = datasets.FashionMNIST( root=\"data\", train=True, download=True, transform=ToTensor(), target_transform=Lambda(lambda y: torch.zeros(10, dtype=torch.float).scatter_(0, torch.tensor(y), value=1)) )","title":"pytorch \u5b66\u4e60"},{"location":"%E5%86%85%E5%AE%B9/python/pytorch%20%E5%AD%A6%E4%B9%A0/#pytorch","text":"","title":"pytorch \u5b66\u4e60"},{"location":"%E5%86%85%E5%AE%B9/python/pytorch%20%E5%AD%A6%E4%B9%A0/#data","text":"pytorch \u63d0\u4f9b\u4e24\u79cd\u539f\u59cb\u9014\u5f84\u5904\u7406\u6570\u636e\uff1a torch.utils.data.DataLoader torch.utils.data.Dataset dataset\u50a8\u5b58\u4e86\u6570\u636e\u4ee5\u53ca\u6807\u7b7e dataloader\u5c06dataset\u5305\u88c5\u6210\u4e86\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002 \u4e3a\u4e86\u83b7\u53d6dataset\u5bf9\u8c61\uff0cpytorch\u5185\u90e8\u5df2\u7ecf\u9884\u5b9a\u4e49\u597d\u4e86\u4e00\u4e9b\uff0c\u5206\u522b\u5b58\u5728 torchvision\u4ee5\u53catorchtext\u7b49\u6a21\u5757\u5185\u3002 ig. from torchvision import datasets dataset --> \u8f6c\u5316\u4e3a\u751f\u6210\u5668\uff0c\u5b9a\u4e49\u597dbatch size\uff0c dataloader","title":"data"},{"location":"%E5%86%85%E5%AE%B9/python/pytorch%20%E5%AD%A6%E4%B9%A0/#models","text":"\u7ee7\u627f nn.Module # Get cpu or gpu device for training. device = \"cuda\" if torch.cuda.is_available() else \"cpu\" print(\"Using {} device\".format(device)) # Define model class NeuralNetwork(nn.Module): def __init__(self): super(NeuralNetwork, self).__init__() self.flatten = nn.Flatten() self.linear_relu_stack = nn.Sequential( nn.Linear(28*28, 512), nn.ReLU(), nn.Linear(512, 512), nn.ReLU(), nn.Linear(512, 10), nn.ReLU() ) def forward(self, x): x = self.flatten(x) logits = self.linear_relu_stack(x) return logits model = NeuralNetwork().to(device) print(model) \u5c06 __init__ \u4e2d\u5199\u5165\u5404\u4e2a\u5c42\uff0c\u7136\u540e\u5728foward\u51fd\u6570\u4e2d\u5199\u660e\u6570\u636e\u7ecf\u8fc7\u7684\u987a\u5e8f\u3002 \u5982\u679c\u9700\u8981\u7528GPU\uff0c\u5c06\u5b83\u79fb\u52a8\u5230gpu\u4e2d","title":"models"},{"location":"%E5%86%85%E5%AE%B9/python/pytorch%20%E5%AD%A6%E4%B9%A0/#train","text":"\u8bad\u7ec3\u6a21\u578b\u9700\u8981\u7b97\u662f\u51fd\u6570\u4e0e\u4f18\u5316\u5668 \u635f\u5931\u51fd\u6570\u6709\u4ea4\u53c9\u71b5\uff0c\u4f18\u5316\u5668\u6709\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u3002 loss_fn = nn.CrossEntropyLoss() optimizer = torch.optim.SGD(model.parameters(), lr=1e-3) \u8bad\u7ec3\uff1a def train(dataloader, model, loss_fn, optimizer): size = len(dataloader.dataset) for batch, (X, y) in enumerate(dataloader): X, y = X.to(device), y.to(device) # Compute prediction error pred = model(X) loss = loss_fn(pred, y) # Backpropagation optimizer.zero_grad() loss.backward() optimizer.step() if batch % 100 == 0: loss, current = loss.item(), batch * len(X) print(f\"loss: {loss:>7f} [{current:>5d}/{size:>5d}]\") \u6d4b\u8bd5\uff1a def test(dataloader, model, loss_fn): size = len(dataloader.dataset) num_batches = len(dataloader) model.eval() test_loss, correct = 0, 0 with torch.no_grad(): for X, y in dataloader: X, y = X.to(device), y.to(device) pred = model(X) test_loss += loss_fn(pred, y).item() correct += (pred.argmax(1) == y).type(torch.float).sum().item() test_loss /= num_batches correct /= size print(f\"Test Error: \\n Accuracy: {(100*correct):>0.1f}%, Avg loss: {test_loss:>8f} \\n\") epochs = 5 for t in range(epochs): print(f\"Epoch {t+1}\\n-------------------------------\") train(train_dataloader, model, loss_fn, optimizer) test(test_dataloader, model, loss_fn) print(\"Done!\")","title":"train"},{"location":"%E5%86%85%E5%AE%B9/python/pytorch%20%E5%AD%A6%E4%B9%A0/#save-model","text":"torch.save(model.state_dict(), \"model.pth\") print(\"Saved PyTorch Model State to model.pth\")","title":"save model"},{"location":"%E5%86%85%E5%AE%B9/python/pytorch%20%E5%AD%A6%E4%B9%A0/#load-model","text":"model = NeuralNetwork() model.load_state_dict(torch.load(\"model.pth\")) classes = [ \"T-shirt/top\", \"Trouser\", \"Pullover\", \"Dress\", \"Coat\", \"Sandal\", \"Shirt\", \"Sneaker\", \"Bag\", \"Ankle boot\", ] model.eval() x, y = test_data[0][0], test_data[0][1] with torch.no_grad(): pred = model(x) predicted, actual = classes[pred[0].argmax(0)], classes[y] print(f'Predicted: \"{predicted}\", Actual: \"{actual}\"')","title":"load model"},{"location":"%E5%86%85%E5%AE%B9/python/pytorch%20%E5%AD%A6%E4%B9%A0/#_1","text":"tensor \u7c7b\u4f3c\u4e8endarray\uff0c\u53ef\u4ee5\u76f4\u63a5\u7531\u5b57\u5178\u6216\u8005ndarray\u751f\u6210 dataset dataset\u5bf9\u8c61\u662fpytorch\u81ea\u5e26\u7684\u6570\u636e\u5bf9\u8c61 \u5f53\u7136pytorch\u4e5f\u63d0\u4f9b\u4e00\u4e9b\u5f00\u6e90\u7684\u6570\u636e\uff0ctorchvision.datasets\u91cc\u9762\u6709\u4e00\u4e9b","title":"\u5173\u952e\u8981\u7d20"},{"location":"%E5%86%85%E5%AE%B9/python/pytorch%20%E5%AD%A6%E4%B9%A0/#_2","text":"\u5176\u4e2d\u5fc5\u987b\u5305\u62ec\u4e09\u4e2a\u51fd\u6570\uff1ainit\uff0clen\uff0cgetitem import os import pandas as pd from torchvision.io import read_image class CustomImageDataset(Dataset): def __init__(self, annotations_file, img_dir, transform=None, target_transform=None): self.img_labels = pd.read_csv(annotations_file) self.img_dir = img_dir self.transform = transform self.target_transform = target_transform def __len__(self): return len(self.img_labels) def __getitem__(self, idx): img_path = os.path.join(self.img_dir, self.img_labels.iloc[idx, 0]) image = read_image(img_path) label = self.img_labels.iloc[idx, 1] if self.transform: image = self.transform(image) if self.target_transform: label = self.target_transform(label) return image, label","title":"\u521b\u5efa\u81ea\u5df1\u7684\u6570\u636e\u5bf9\u8c61"},{"location":"%E5%86%85%E5%AE%B9/python/pytorch%20%E5%AD%A6%E4%B9%A0/#transform","text":"\u5305\u62ec transform\u4e0etarget transform import torch from torchvision import datasets from torchvision.transforms import ToTensor, Lambda ds = datasets.FashionMNIST( root=\"data\", train=True, download=True, transform=ToTensor(), target_transform=Lambda(lambda y: torch.zeros(10, dtype=torch.float).scatter_(0, torch.tensor(y), value=1)) )","title":"transform"},{"location":"%E5%86%85%E5%AE%B9/python/super%28%29/","text":"super() https://rhettinger.wordpress.com/2011/05/26/super-considered-super/ \u6848\u4f8b\u4e00\uff0c\u4e00\u4e2a\u5b50\u7c7b\u50cf\u6269\u5c55\u5185\u5efa\u7684\u7c7b\uff1a class LoggingDict(dict): def __setitem__(self, key, value): logging.info('Setting %r to %r' % (key, value)) super().__setitem__(key, value) \u8fd9\u4e2a\u7c7b\u6709\u7236\u7c7b\u7684\u6240\u6709\u529f\u80fd\uff0c\u5b83\u62d3\u5c55\u4e86__setitem__\u65b9\u6cd5\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u6267\u884c\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u7528super()\u6765\u628a\u5de5\u4f5c\u5206\u914d\u5230\u771f\u6b63\u7684\u589e\u52a0\u952e\u503c\u5bf9\u4e0a\u53bb\u3002 \u5982\u679c\u8bf4\uff0c\u6ca1\u6709super(), \u6211\u4eec\u5c06\u5199\u6210\uff1a dict.__setitem__(self, key, value) \u4f7f\u7528super()\u66f4\u597d\uff0c\u56e0\u4e3a\u4ed6\u662f\u4e00\u4e2a\u8ba1\u7b97\u597d\u7684\u95f4\u63a5\u5f15\u7528\u3002\u7b2c\u4e00\u4e2a\u597d\u5904\u5c31\u662f\uff0c\u6211\u4eec\u4e0d\u7528\u660e\u786e\u59d4\u6d3e\u7684\u7c7b\u7684\u540d\u5b57\uff0c\u5982\u679c\u8bf4\u4f60\u4fee\u6539\u6e90\u7801\u7684\u65f6\u5019\uff0c\u4fee\u6539\u4e86\u7ee7\u627f\u7c7b\uff0csuper()\u4f1a\u81ea\u52a8\u5f15\u7528\u73b0\u5728\u7684\u57fa\u7c7b\u3002 class LoggingDict(SomeOtherMapping): # new base class def __setitem__(self, key, value): logging.info('Setting %r to %r' % (key, value)) super().__setitem__(key, value) # no change needed \u6240\u4ee5\u597d\u5904\u4e00\uff1aisolating changes \u8ba1\u7b97\u6536\u5230\u4e24\u65b9\u9762\u5f71\u54cd\uff1asuper() call\u6765\u7684\u7c7b\uff0c\u5b9e\u4f8b\u7684\u7956\u5148\u6811\u3002\u524d\u90e8\u5206\uff0csuper call\u6765\u7684\u7c7b\uff0c\u662f\u6536\u5230\u6e90\u7801\u51b3\u5b9a\u7684\uff0c\u6bd4\u5982\u8bf4\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0csuper\u662f\u56fa\u5b9a\u7684\uff0c\u5728__setitem__\u65b9\u6cd5\u4e2d\u88ab\u8c03\u7528\u3002\u7b2c\u4e8c\u90e8\u5206\u662f\u66f4\u52a0\u7075\u6d3b\u7684\uff0c\u6bd4\u5982\u6211\u4eec\u73b0\u5728\u518d\u521b\u5efa\u4e00\u4e2a\u7c7b\uff1a class LoggingOD(LoggingDict, collections.OrderedDict): pass \u5bf9\u4e8e\u6211\u4eec\u7684\u65b0\u7c7b\u6765\u8bf4\uff0c\u7956\u5148\u6811\u4e3a loggingOD -> loggingDict -> OrderedDict -> dict -> object \u91cd\u8981\u7684\u7ed3\u679c\u662f\uff0cOrderedDict\u88ab\u653e\u5728\u4e86loggingDict\u4e0edict\u4e4b\u95f4\uff0c\u610f\u5473\u7740__setitem__\u4e2dsuper()\u4f1a\u8c03\u7528OrderedDict \u800c\u4e0d\u662f dict\u3002 \u6240\u4ee5\u641c\u7d22\u987a\u5e8f\uff0c\u5bf9\u4e8esuper\u6765\u8bf4\u975e\u5e38\u91cd\u8981\uff1a\u4e5f\u5c31\u662f\u65b9\u6cd5\u89e3\u6790\u987a\u5e8f method resolution order MRO\uff1a >>> pprint(LoggingOD.__mro__) (<class '__main__.LoggingOD'>, <class '__main__.LoggingDict'>, <class 'collections.OrderedDict'>, <class 'dict'>, <class 'object'>) \u5728super\u673a\u5236\u91cc\u53ef\u4ee5\u4fdd\u8bc1\u516c\u5171\u7236\u7c7b\u4ec5\u88ab\u6267\u884c\u4e00\u6b21\uff0c\u6309\u7167\u7684\u5c31\u662fMRO\u7684\u987a\u5e8f\u3002","title":"super()"},{"location":"%E5%86%85%E5%AE%B9/python/super%28%29/#super","text":"https://rhettinger.wordpress.com/2011/05/26/super-considered-super/ \u6848\u4f8b\u4e00\uff0c\u4e00\u4e2a\u5b50\u7c7b\u50cf\u6269\u5c55\u5185\u5efa\u7684\u7c7b\uff1a class LoggingDict(dict): def __setitem__(self, key, value): logging.info('Setting %r to %r' % (key, value)) super().__setitem__(key, value) \u8fd9\u4e2a\u7c7b\u6709\u7236\u7c7b\u7684\u6240\u6709\u529f\u80fd\uff0c\u5b83\u62d3\u5c55\u4e86__setitem__\u65b9\u6cd5\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u6267\u884c\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u7528super()\u6765\u628a\u5de5\u4f5c\u5206\u914d\u5230\u771f\u6b63\u7684\u589e\u52a0\u952e\u503c\u5bf9\u4e0a\u53bb\u3002 \u5982\u679c\u8bf4\uff0c\u6ca1\u6709super(), \u6211\u4eec\u5c06\u5199\u6210\uff1a dict.__setitem__(self, key, value) \u4f7f\u7528super()\u66f4\u597d\uff0c\u56e0\u4e3a\u4ed6\u662f\u4e00\u4e2a\u8ba1\u7b97\u597d\u7684\u95f4\u63a5\u5f15\u7528\u3002\u7b2c\u4e00\u4e2a\u597d\u5904\u5c31\u662f\uff0c\u6211\u4eec\u4e0d\u7528\u660e\u786e\u59d4\u6d3e\u7684\u7c7b\u7684\u540d\u5b57\uff0c\u5982\u679c\u8bf4\u4f60\u4fee\u6539\u6e90\u7801\u7684\u65f6\u5019\uff0c\u4fee\u6539\u4e86\u7ee7\u627f\u7c7b\uff0csuper()\u4f1a\u81ea\u52a8\u5f15\u7528\u73b0\u5728\u7684\u57fa\u7c7b\u3002 class LoggingDict(SomeOtherMapping): # new base class def __setitem__(self, key, value): logging.info('Setting %r to %r' % (key, value)) super().__setitem__(key, value) # no change needed \u6240\u4ee5\u597d\u5904\u4e00\uff1aisolating changes \u8ba1\u7b97\u6536\u5230\u4e24\u65b9\u9762\u5f71\u54cd\uff1asuper() call\u6765\u7684\u7c7b\uff0c\u5b9e\u4f8b\u7684\u7956\u5148\u6811\u3002\u524d\u90e8\u5206\uff0csuper call\u6765\u7684\u7c7b\uff0c\u662f\u6536\u5230\u6e90\u7801\u51b3\u5b9a\u7684\uff0c\u6bd4\u5982\u8bf4\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0csuper\u662f\u56fa\u5b9a\u7684\uff0c\u5728__setitem__\u65b9\u6cd5\u4e2d\u88ab\u8c03\u7528\u3002\u7b2c\u4e8c\u90e8\u5206\u662f\u66f4\u52a0\u7075\u6d3b\u7684\uff0c\u6bd4\u5982\u6211\u4eec\u73b0\u5728\u518d\u521b\u5efa\u4e00\u4e2a\u7c7b\uff1a class LoggingOD(LoggingDict, collections.OrderedDict): pass \u5bf9\u4e8e\u6211\u4eec\u7684\u65b0\u7c7b\u6765\u8bf4\uff0c\u7956\u5148\u6811\u4e3a loggingOD -> loggingDict -> OrderedDict -> dict -> object \u91cd\u8981\u7684\u7ed3\u679c\u662f\uff0cOrderedDict\u88ab\u653e\u5728\u4e86loggingDict\u4e0edict\u4e4b\u95f4\uff0c\u610f\u5473\u7740__setitem__\u4e2dsuper()\u4f1a\u8c03\u7528OrderedDict \u800c\u4e0d\u662f dict\u3002 \u6240\u4ee5\u641c\u7d22\u987a\u5e8f\uff0c\u5bf9\u4e8esuper\u6765\u8bf4\u975e\u5e38\u91cd\u8981\uff1a\u4e5f\u5c31\u662f\u65b9\u6cd5\u89e3\u6790\u987a\u5e8f method resolution order MRO\uff1a >>> pprint(LoggingOD.__mro__) (<class '__main__.LoggingOD'>, <class '__main__.LoggingDict'>, <class 'collections.OrderedDict'>, <class 'dict'>, <class 'object'>) \u5728super\u673a\u5236\u91cc\u53ef\u4ee5\u4fdd\u8bc1\u516c\u5171\u7236\u7c7b\u4ec5\u88ab\u6267\u884c\u4e00\u6b21\uff0c\u6309\u7167\u7684\u5c31\u662fMRO\u7684\u987a\u5e8f\u3002","title":"super()"},{"location":"%E5%86%85%E5%AE%B9/python/tkinter%20%E5%AD%A6%E4%B9%A0/","text":"tkinter \u5b66\u4e60 effbot.org/tkinterbook/ \u4e3b\u7a97\u53e3\u5bf9\u8c61 TK() root=TK() mainloop() \u4e3b\u5faa\u73af \u7ecf\u5178\u5199\u6cd5\uff1a Frame \u7ec4\u4ef6 \u7528\u4e8e\u653e\u7f6e\u5176\u4ed6\u7ec4\u4ef6\uff0c\u5b9e\u73b0\u590d\u6742\u7684\u5e03\u5c40 Widget \u6bcf\u4e2a\u7ec4\u4ef6\u90fd\u6709\u81ea\u5df1\u7684\u53c2\u6570\uff0c\u5305\u62ec\u5c3a\u5bf8\uff0c\u5185\u5bb9\u7b49 \u5bf9\u4e8elabel\u7ec4\u4ef6\uff0c\u4ed6\u7684\u53c2\u6570\uff08options\uff09 \u6709\u4e09\u79cd\u5b9a\u4e49\u65b9\u5f0f\uff1a \u5b9a\u4e49\u7ec4\u4ef6\u65f6\u4f20\u5165 label.config() \u7528\u5b57\u5178\u7d22\u5f15\uff0clabel[\"options\"]= \u5e03\u5c40\u7ba1\u7406\u5668 pack \u7b80\u5355\uff0c\u8981\u4e48\u7ad6\u76f4\u6392\u5217\uff0c\u8981\u4e48\u6c34\u5e73\u6392\u5217 grid \u7f51\u683c\u6392\u5217 place \u6839\u636e\u4f4d\u7f6e\u6392\u5217\uff0c\u50cf\u7d20\u4f4d\u7f6e \u4e8b\u4ef6 \u4e8b\u4ef6\u53d1\u751f\u540e\u4f1a\u5b58\u50a8\u5230event\u5bf9\u8c61\u4e2d\uff1a","title":"tkinter \u5b66\u4e60"},{"location":"%E5%86%85%E5%AE%B9/python/tkinter%20%E5%AD%A6%E4%B9%A0/#tkinter","text":"effbot.org/tkinterbook/ \u4e3b\u7a97\u53e3\u5bf9\u8c61 TK() root=TK() mainloop() \u4e3b\u5faa\u73af \u7ecf\u5178\u5199\u6cd5\uff1a Frame \u7ec4\u4ef6 \u7528\u4e8e\u653e\u7f6e\u5176\u4ed6\u7ec4\u4ef6\uff0c\u5b9e\u73b0\u590d\u6742\u7684\u5e03\u5c40","title":"tkinter \u5b66\u4e60"},{"location":"%E5%86%85%E5%AE%B9/python/tkinter%20%E5%AD%A6%E4%B9%A0/#widget","text":"\u6bcf\u4e2a\u7ec4\u4ef6\u90fd\u6709\u81ea\u5df1\u7684\u53c2\u6570\uff0c\u5305\u62ec\u5c3a\u5bf8\uff0c\u5185\u5bb9\u7b49 \u5bf9\u4e8elabel\u7ec4\u4ef6\uff0c\u4ed6\u7684\u53c2\u6570\uff08options\uff09 \u6709\u4e09\u79cd\u5b9a\u4e49\u65b9\u5f0f\uff1a \u5b9a\u4e49\u7ec4\u4ef6\u65f6\u4f20\u5165 label.config() \u7528\u5b57\u5178\u7d22\u5f15\uff0clabel[\"options\"]=","title":"Widget"},{"location":"%E5%86%85%E5%AE%B9/python/tkinter%20%E5%AD%A6%E4%B9%A0/#_1","text":"pack \u7b80\u5355\uff0c\u8981\u4e48\u7ad6\u76f4\u6392\u5217\uff0c\u8981\u4e48\u6c34\u5e73\u6392\u5217 grid \u7f51\u683c\u6392\u5217 place \u6839\u636e\u4f4d\u7f6e\u6392\u5217\uff0c\u50cf\u7d20\u4f4d\u7f6e","title":"\u5e03\u5c40\u7ba1\u7406\u5668"},{"location":"%E5%86%85%E5%AE%B9/python/tkinter%20%E5%AD%A6%E4%B9%A0/#_2","text":"\u4e8b\u4ef6\u53d1\u751f\u540e\u4f1a\u5b58\u50a8\u5230event\u5bf9\u8c61\u4e2d\uff1a","title":"\u4e8b\u4ef6"},{"location":"%E5%86%85%E5%AE%B9/python/try%E7%9A%84%E7%94%A8%E6%B3%95/","text":"try\u7684\u7528\u6cd5 python\u7684\u5f02\u5e38\uff1a \u7a0b\u5e8f\u5728\u8fd0\u884c\u7684\u65f6\u5019\uff0c\u5982\u679cpython\u89e3\u91ca\u5668\u9047\u5230\u4e00\u4e2a\u9519\u8bef\uff0c\u4f1a\u505c\u6b62\u7a0b\u5e8f\u7684\u6267\u884c\uff0c\u5e76\u4e14\u63d0\u793a\u4e00\u4e9b\u9519\u8bef\u7684\u4fe1\u606f\uff0c\u8fd9\u5c31\u662f\u5f02\u5e38\u3002 \u5728\u7a0b\u5e8f\u5f00\u53d1\u4e2d\uff0c\u5982\u679c\u5bf9\u67d0\u4e9b\u4ee3\u7801\u80fd\u5426\u6267\u884c\u4e0d\u786e\u5b9a\uff0c\u53ef\u4ee5\u589e\u52a0try\u6765\u6355\u83b7\u5f02\u5e38 try: \u5c1d\u8bd5\u6267\u884c\u4ee3\u7801 except: \u51fa\u73b0\u9519\u8bef\u7684\u5904\u7406 while True: try: x = int(input(\"\u8bf7\u8f93\u5165\u4e00\u4e2aint\uff1a\")) break except ValueError: print(\"\u53d1\u751f\u4e86ValueError\uff0c\u8bf7\u91cd\u8bd5\") try \u8bed\u53e5\u7684\u5de5\u4f5c\u539f\u7406\u5982\u4e0b\uff1a \u9996\u5148\uff0c\u6267\u884c try \u5b50\u53e5 \uff08 try \u548c except \u5173\u952e\u5b57\u4e4b\u95f4\u7684\uff08\u591a\u884c\uff09\u8bed\u53e5\uff09\u3002 \u5982\u679c\u6ca1\u6709\u5f02\u5e38\u53d1\u751f\uff0c\u5219\u8df3\u8fc7 except \u5b50\u53e5 \u5e76\u5b8c\u6210 try \u8bed\u53e5\u7684\u6267\u884c\u3002 \u5982\u679c\u5728\u6267\u884c try \u5b50\u53e5\u65f6\u53d1\u751f\u4e86\u5f02\u5e38\uff0c\u5219\u8df3\u8fc7\u8be5\u5b50\u53e5\u4e2d\u5269\u4e0b\u7684\u90e8\u5206\u3002 \u7136\u540e\uff0c\u5982\u679c\u5f02\u5e38\u7684\u7c7b\u578b\u548c except \u5173\u952e\u5b57\u540e\u9762\u7684\u5f02\u5e38\u5339\u914d\uff0c\u5219\u6267\u884c except \u5b50\u53e5\uff0c\u7136\u540e\u7ee7\u7eed\u6267\u884c try \u8bed\u53e5\u4e4b\u540e\u7684\u4ee3\u7801\u3002 \u5982\u679c\u53d1\u751f\u7684\u5f02\u5e38\u548c except \u5b50\u53e5\u4e2d\u6307\u5b9a\u7684\u5f02\u5e38\u4e0d\u5339\u914d\uff0c\u5219\u5c06\u5176\u4f20\u9012\u5230\u5916\u90e8\u7684 try \u8bed\u53e5\u4e2d\uff1b\u5982\u679c\u6ca1\u6709\u627e\u5230\u5904\u7406\u7a0b\u5e8f\uff0c\u5219\u5b83\u662f\u4e00\u4e2a \u672a\u5904\u7406\u5f02\u5e38 \uff0c\u6267\u884c\u5c06\u505c\u6b62\u5e76\u663e\u793a\u5982\u4e0a\u6240\u793a\u7684\u6d88\u606f\u3002 python\u7684\u8bed\u6cd5\u9519\u8bef Syntax Error: invalid syntax","title":"try\u7684\u7528\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/python/try%E7%9A%84%E7%94%A8%E6%B3%95/#try","text":"","title":"try\u7684\u7528\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/python/try%E7%9A%84%E7%94%A8%E6%B3%95/#python","text":"\u7a0b\u5e8f\u5728\u8fd0\u884c\u7684\u65f6\u5019\uff0c\u5982\u679cpython\u89e3\u91ca\u5668\u9047\u5230\u4e00\u4e2a\u9519\u8bef\uff0c\u4f1a\u505c\u6b62\u7a0b\u5e8f\u7684\u6267\u884c\uff0c\u5e76\u4e14\u63d0\u793a\u4e00\u4e9b\u9519\u8bef\u7684\u4fe1\u606f\uff0c\u8fd9\u5c31\u662f\u5f02\u5e38\u3002 \u5728\u7a0b\u5e8f\u5f00\u53d1\u4e2d\uff0c\u5982\u679c\u5bf9\u67d0\u4e9b\u4ee3\u7801\u80fd\u5426\u6267\u884c\u4e0d\u786e\u5b9a\uff0c\u53ef\u4ee5\u589e\u52a0try\u6765\u6355\u83b7\u5f02\u5e38 try: \u5c1d\u8bd5\u6267\u884c\u4ee3\u7801 except: \u51fa\u73b0\u9519\u8bef\u7684\u5904\u7406 while True: try: x = int(input(\"\u8bf7\u8f93\u5165\u4e00\u4e2aint\uff1a\")) break except ValueError: print(\"\u53d1\u751f\u4e86ValueError\uff0c\u8bf7\u91cd\u8bd5\") try \u8bed\u53e5\u7684\u5de5\u4f5c\u539f\u7406\u5982\u4e0b\uff1a \u9996\u5148\uff0c\u6267\u884c try \u5b50\u53e5 \uff08 try \u548c except \u5173\u952e\u5b57\u4e4b\u95f4\u7684\uff08\u591a\u884c\uff09\u8bed\u53e5\uff09\u3002 \u5982\u679c\u6ca1\u6709\u5f02\u5e38\u53d1\u751f\uff0c\u5219\u8df3\u8fc7 except \u5b50\u53e5 \u5e76\u5b8c\u6210 try \u8bed\u53e5\u7684\u6267\u884c\u3002 \u5982\u679c\u5728\u6267\u884c try \u5b50\u53e5\u65f6\u53d1\u751f\u4e86\u5f02\u5e38\uff0c\u5219\u8df3\u8fc7\u8be5\u5b50\u53e5\u4e2d\u5269\u4e0b\u7684\u90e8\u5206\u3002 \u7136\u540e\uff0c\u5982\u679c\u5f02\u5e38\u7684\u7c7b\u578b\u548c except \u5173\u952e\u5b57\u540e\u9762\u7684\u5f02\u5e38\u5339\u914d\uff0c\u5219\u6267\u884c except \u5b50\u53e5\uff0c\u7136\u540e\u7ee7\u7eed\u6267\u884c try \u8bed\u53e5\u4e4b\u540e\u7684\u4ee3\u7801\u3002 \u5982\u679c\u53d1\u751f\u7684\u5f02\u5e38\u548c except \u5b50\u53e5\u4e2d\u6307\u5b9a\u7684\u5f02\u5e38\u4e0d\u5339\u914d\uff0c\u5219\u5c06\u5176\u4f20\u9012\u5230\u5916\u90e8\u7684 try \u8bed\u53e5\u4e2d\uff1b\u5982\u679c\u6ca1\u6709\u627e\u5230\u5904\u7406\u7a0b\u5e8f\uff0c\u5219\u5b83\u662f\u4e00\u4e2a \u672a\u5904\u7406\u5f02\u5e38 \uff0c\u6267\u884c\u5c06\u505c\u6b62\u5e76\u663e\u793a\u5982\u4e0a\u6240\u793a\u7684\u6d88\u606f\u3002","title":"python\u7684\u5f02\u5e38\uff1a"},{"location":"%E5%86%85%E5%AE%B9/python/try%E7%9A%84%E7%94%A8%E6%B3%95/#python_1","text":"Syntax Error: invalid syntax","title":"python\u7684\u8bed\u6cd5\u9519\u8bef"},{"location":"%E5%86%85%E5%AE%B9/python/%E3%80%8Acelery%E3%80%8B/","text":"\u300acelery\u300b \u628acelery \u7406\u89e3\u6210\u4e00\u4e2a\u72ec\u7acb\u4e8edjango\u7684\u6846\u67b6\u3002 celery \u63d0\u4f9b\u4e00\u4e2aapp\uff0c\u7528\u4e8e\u63a5\u6536django\u63d0\u4ea4\u7684\u4efb\u52a1\uff0c\u5e76\u628a\u5b83\u653e\u5165\u5230broker\u91cc\u9762\uff0c\u5e76\u4e14\u5b89\u6392workers\u53bb\u5b8c\u6210\u4efb\u52a1\u3002 \u4e00\u4e2acelery \u6846\u67b6\u5fc5\u5907\u7684\uff1a \u540d\u5b57 broker \u4efb\u52a1\uff08\u751f\u4ea7\u8005\uff09 1. \u521d\u59cb\u5316 celery\uff0c\u9009\u62e9broker from celery import Celery app = Celery('hello', broker='amqp://guest@localhost//') 2. \u5199\u4efb\u52a1 @app.task def add(x, y): return x + y 3. \u8fd0\u884ccelery \u670d\u52a1 celery -A tasks worker --loglevel=INFO 4. optional \u5b58\u50a8\u7ed3\u679c","title":"\u300acelery\u300b"},{"location":"%E5%86%85%E5%AE%B9/python/%E3%80%8Acelery%E3%80%8B/#celery","text":"\u628acelery \u7406\u89e3\u6210\u4e00\u4e2a\u72ec\u7acb\u4e8edjango\u7684\u6846\u67b6\u3002 celery \u63d0\u4f9b\u4e00\u4e2aapp\uff0c\u7528\u4e8e\u63a5\u6536django\u63d0\u4ea4\u7684\u4efb\u52a1\uff0c\u5e76\u628a\u5b83\u653e\u5165\u5230broker\u91cc\u9762\uff0c\u5e76\u4e14\u5b89\u6392workers\u53bb\u5b8c\u6210\u4efb\u52a1\u3002 \u4e00\u4e2acelery \u6846\u67b6\u5fc5\u5907\u7684\uff1a \u540d\u5b57 broker \u4efb\u52a1\uff08\u751f\u4ea7\u8005\uff09","title":"\u300acelery\u300b"},{"location":"%E5%86%85%E5%AE%B9/python/%E3%80%8Acelery%E3%80%8B/#1-celerybroker","text":"from celery import Celery app = Celery('hello', broker='amqp://guest@localhost//')","title":"1. \u521d\u59cb\u5316 celery\uff0c\u9009\u62e9broker"},{"location":"%E5%86%85%E5%AE%B9/python/%E3%80%8Acelery%E3%80%8B/#2","text":"@app.task def add(x, y): return x + y","title":"2. \u5199\u4efb\u52a1"},{"location":"%E5%86%85%E5%AE%B9/python/%E3%80%8Acelery%E3%80%8B/#3-celery","text":"celery -A tasks worker --loglevel=INFO","title":"3. \u8fd0\u884ccelery \u670d\u52a1"},{"location":"%E5%86%85%E5%AE%B9/python/%E3%80%8Acelery%E3%80%8B/#4-optional","text":"","title":"4. optional \u5b58\u50a8\u7ed3\u679c"},{"location":"%E5%86%85%E5%AE%B9/python/%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/","text":"\u5185\u7f6e\u51fd\u6570 super() \u5728\u5355\u7ee7\u627f\u4e2d\uff0csuper\u662f\u7528\u6765\u8c03\u7528\u7236\u7c7b\u7684\u65b9\u6cd5\u7684 class father: \"\"\"define a father class, attribution: money, earn \"\"\" money = 100 def __init__(self): pass def earn(self): self.money = self.money + 100 class son(father): money = 5 def __init__(self): self.changes = 10 super(son,self).__init__() Bob = father() # BOB is father Jack = son() # JACK is son print(\"father begins with\",Bob.money) Bob.earn() print(\"fater earns money, then has\",Bob.money) print(\"son has\",Jack.changes) Jack.earn() Jack.earn() Jack.earn() print(\"son earns money, then has\",Jack.money) father begins with 100 fater earns money, then has 200 son has 10 son earns money, then has 305 \u4e00\u822csuper\u5c31\u662f\u5728\u7ee7\u627f\u7236\u7c7b\u4e4b\u540e\uff0c\u9700\u8981initiate\u4e00\u4e0b\u7236\u7c7b\uff0c\u6240\u4ee5\u5e38\u89c1\u7684\u8868\u8fbe\u662f\uff1a super(subclass,self).__init__() isinstance() isinstance() \u51fd\u6570\u6765\u5224\u65ad\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u662f\u4e00\u4e2a\u5df2\u77e5\u7684\u7c7b\u578b\uff0c\u7c7b\u4f3c type()\u3002 >>>a = 2 >>> isinstance (a,int) True >>> isinstance (a,str) False >>> isinstance (a,(str,int,list)) # \u662f\u5143\u7ec4\u4e2d\u7684\u4e00\u4e2a\u8fd4\u56de True True get() dict = {'a':1,'b':2,'z':24} print(dict.get('z')) Python \u5b57\u5178(Dictionary) get() \u51fd\u6570\u8fd4\u56de\u6307\u5b9a\u952e\u7684\u503c\u3002","title":"\u5185\u7f6e\u51fd\u6570"},{"location":"%E5%86%85%E5%AE%B9/python/%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#_1","text":"","title":"\u5185\u7f6e\u51fd\u6570"},{"location":"%E5%86%85%E5%AE%B9/python/%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#super","text":"\u5728\u5355\u7ee7\u627f\u4e2d\uff0csuper\u662f\u7528\u6765\u8c03\u7528\u7236\u7c7b\u7684\u65b9\u6cd5\u7684 class father: \"\"\"define a father class, attribution: money, earn \"\"\" money = 100 def __init__(self): pass def earn(self): self.money = self.money + 100 class son(father): money = 5 def __init__(self): self.changes = 10 super(son,self).__init__() Bob = father() # BOB is father Jack = son() # JACK is son print(\"father begins with\",Bob.money) Bob.earn() print(\"fater earns money, then has\",Bob.money) print(\"son has\",Jack.changes) Jack.earn() Jack.earn() Jack.earn() print(\"son earns money, then has\",Jack.money) father begins with 100 fater earns money, then has 200 son has 10 son earns money, then has 305 \u4e00\u822csuper\u5c31\u662f\u5728\u7ee7\u627f\u7236\u7c7b\u4e4b\u540e\uff0c\u9700\u8981initiate\u4e00\u4e0b\u7236\u7c7b\uff0c\u6240\u4ee5\u5e38\u89c1\u7684\u8868\u8fbe\u662f\uff1a super(subclass,self).__init__()","title":"super()"},{"location":"%E5%86%85%E5%AE%B9/python/%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#isinstance","text":"isinstance() \u51fd\u6570\u6765\u5224\u65ad\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u662f\u4e00\u4e2a\u5df2\u77e5\u7684\u7c7b\u578b\uff0c\u7c7b\u4f3c type()\u3002 >>>a = 2 >>> isinstance (a,int) True >>> isinstance (a,str) False >>> isinstance (a,(str,int,list)) # \u662f\u5143\u7ec4\u4e2d\u7684\u4e00\u4e2a\u8fd4\u56de True True","title":"isinstance()"},{"location":"%E5%86%85%E5%AE%B9/python/%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#get","text":"dict = {'a':1,'b':2,'z':24} print(dict.get('z')) Python \u5b57\u5178(Dictionary) get() \u51fd\u6570\u8fd4\u56de\u6307\u5b9a\u952e\u7684\u503c\u3002","title":"get()"},{"location":"%E5%86%85%E5%AE%B9/python/%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0/","text":"\u5b9a\u4e49\u51fd\u6570 >>> def fib(n): # write Fibonacci series up to n ... \"\"\"Print a Fibonacci series up to n.\"\"\" ... a, b = 0, 1 ... while a < n: ... print(a, end=' ') ... a, b = b, a+b ... print() ... >>> # Now call the function we just defined: ... fib(2000) 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 \u7b2c\u4e00\u4e2a\u8bed\u53e5\u662f\u5b57\u7b26\u4e32\u8bed\u53e5\uff0c\u7528\u4e8e\u63cf\u8ff0\u51fd\u6570\u7684\u7528\u9014 \u51fd\u6570\u7684\u6267\u884c\u4f1a\u5f15\u5165\u4e00\u4e2a\u7528\u4e8e\u51fd\u6570\u5c40\u90e8\u53d8\u91cf\u7684\u65b0\u7b26\u53f7\u8868\uff1a \u51fd\u6570\u4e2d\u6240\u6709\u53d8\u91cf\u90fd\u5c06\u50a8\u5b58\u5728 \u5c40\u90e8\u7b26\u53f7\u8868 \u4e2d--->\u53d8\u91cf\u7684\u5f15\u7528\u9996\u5148\u5728 \u5c40\u90e8\u7b26\u53f7\u8868 \u4e2d\u67e5\u627e---> \u5916\u90e8\u51fd\u6570\u7b26\u53f7\u8868 ---> \u5168\u5c40\u7b26\u53f7\u8868 ---> \u5185\u7f6e\u540d\u79f0\u7b26\u53f7\u8868 \u6b64\u5904\u53ef\u4ee5\u5173\u6ce8global\u4e0enonlocal\u8bed\u53e5 \u51fd\u6570\u5b9a\u4e49\u7684\u66f4\u591a\u5f62\u5f0f \u53c2\u6570\u9ed8\u8ba4\u503c \u53ef\u4ee5\u4f7f\u7528kwarg=value\u7684\u5173\u952e\u5b57\u53c2\u6570\u6765\u8c03\u7528\u51fd\u6570key work argument\uff08\u6ce8\u610f\uff1a\u5173\u952e\u5b57\u53c2\u6570\u5fc5\u987b\u8ddf\u968f\u5728\u4f4d\u7f6e\u53c2\u6570\u4e4b\u540e\uff0c\u5b83\u7684\u987a\u5e8f\u5e76\u4e0d\u91cd\u8981\uff09 \u5f53\u5b58\u5728\u4e00\u4e2a\u5f62\u5f0f\u4e3a**name\u7684\u6700\u540e\u4e00\u4e2a\u5f62\u53c2\u65f6\uff0c\u5b83\u4f1a\u63a5\u53d7\u4e00\u4e2a\u5b57\u5178\u3002 \u6240\u4ee5\u8bf4\uff0c\u4e0b\u4e00\u6b65\u4ecb\u7ecd\u7684\u662f\u7279\u6b8a\u53c2\u6570\uff1a def f(pos1, pos2, /, pos_or_kwd, *, kwd1, kwd2): ----------- ---------- ---------- | | | | Positional or keyword | | - Keyword only -- Positional only \u4f4d\u7f6e\u53c2\u6570 / \u4f4d\u7f6e\u6216\u5173\u952e\u5b57\u53c2\u6570 * \u5173\u952e\u5b57\u53c2\u6570 \u4efb\u610f\u7684\u53c2\u6570\u5217\u8868 \u53ef\u53d8\u53c2\u6570\u4e4b\u524d\u53ef\u80fd\u4f1a\u51fa\u73b0\u591a\u4e2a\u666e\u901a\u53c2\u6570 \u5982\u679c\u8bf4\u53c2\u6570\u5b58\u5728list\u91cc\uff0c\u53ef\u4ee5\u7528 \u89e3\u5305\uff0c\u5b58\u5728dict\u91cc\u53ef\u4ee5\u7528 *\u89e3\u5305 \u51fd\u6570\u6807\u6ce8 >>> def f(ham: str, eggs: str = 'eggs') -> str: ... print(\"Annotations:\", f.__annotations__) ... print(\"Arguments:\", ham, eggs) ... return ham + ' and ' + eggs ... >>> f('spam') Annotations: {'ham': <class 'str'>, 'return': <class 'str'>, 'eggs': <class 'str'>} Arguments: spam eggs 'spam and eggs' \u7f16\u7801\u98ce\u683c \u4f7f\u75284\u4e2a\u7a7a\u683c\u7f29\u8fdb\uff0c\u4e0d\u8981\u4f7f\u7528\u5236\u8868\u7b26\u3002 4\u4e2a\u7a7a\u683c\u662f\u4e00\u4e2a\u5728\u5c0f\u7f29\u8fdb\uff08\u5141\u8bb8\u66f4\u5927\u7684\u5d4c\u5957\u6df1\u5ea6\uff09\u548c\u5927\u7f29\u8fdb\uff08\u66f4\u5bb9\u6613\u9605\u8bfb\uff09\u7684\u4e00\u79cd\u5f88\u597d\u7684\u6298\u4e2d\u65b9\u6848\u3002\u5236\u8868\u7b26\u4f1a\u5f15\u5165\u6df7\u4e71\uff0c\u6700\u597d\u4e0d\u8981\u4f7f\u7528\u5b83\u3002 \u6362\u884c\uff0c\u4f7f\u4e00\u884c\u4e0d\u8d85\u8fc779\u4e2a\u5b57\u7b26\u3002 \u8fd9\u6709\u52a9\u4e8e\u4f7f\u7528\u5c0f\u578b\u663e\u793a\u5668\u7684\u7528\u6237\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u8f83\u5927\u7684\u663e\u793a\u5668\u4e0a\u5e76\u6392\u653e\u7f6e\u591a\u4e2a\u4ee3\u7801\u6587\u4ef6\u3002 \u4f7f\u7528\u7a7a\u884c\u5206\u9694\u51fd\u6570\u548c\u7c7b\uff0c\u4ee5\u53ca\u51fd\u6570\u5185\u7684\u8f83\u5927\u7684\u4ee3\u7801\u5757\u3002 \u5982\u679c\u53ef\u80fd\uff0c\u628a\u6ce8\u91ca\u653e\u5230\u5355\u72ec\u7684\u4e00\u884c\u3002 \u4f7f\u7528\u6587\u6863\u5b57\u7b26\u4e32\u3002 \u5728\u8fd0\u7b97\u7b26\u524d\u540e\u548c\u9017\u53f7\u540e\u4f7f\u7528\u7a7a\u683c\uff0c\u4f46\u4e0d\u80fd\u76f4\u63a5\u5728\u62ec\u53f7\u5185\u4f7f\u7528\uff1a a = f(1, 2) + g(3, 4) \u3002 \u4ee5\u4e00\u81f4\u7684\u89c4\u5219\u4e3a\u4f60\u7684\u7c7b\u548c\u51fd\u6570\u547d\u540d\uff1b\u6309\u7167\u60ef\u4f8b\u5e94\u4f7f\u7528 UpperCamelCase \u6765\u547d\u540d\u7c7b\uff0c\u800c\u4ee5 lowercase_with_underscores \u6765\u547d\u540d\u51fd\u6570\u548c\u65b9\u6cd5\u3002 \u59cb\u7ec8\u5e94\u4f7f\u7528 self \u6765\u547d\u540d\u7b2c\u4e00\u4e2a\u65b9\u6cd5\u53c2\u6570 (\u6709\u5173\u7c7b\u548c\u65b9\u6cd5\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u53c2\u9605 \u521d\u63a2\u7c7b )\u3002 \u5982\u679c\u4f60\u7684\u4ee3\u7801\u65e8\u5728\u7528\u4e8e\u56fd\u9645\u73af\u5883\uff0c\u8bf7\u4e0d\u8981\u4f7f\u7528\u82b1\u54e8\u7684\u7f16\u7801\u3002Python \u9ed8\u8ba4\u7684 UTF-8 \u6216\u8005\u7eaf ASCII \u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u90fd\u80fd\u6709\u6700\u597d\u7684\u8868\u73b0\u3002 \u540c\u6837\uff0c\u54ea\u6015\u53ea\u6709\u5f88\u5c0f\u7684\u53ef\u80fd\uff0c\u9047\u5230\u8bf4\u4e0d\u540c\u8bed\u8a00\u7684\u4eba\u9605\u8bfb\u6216\u7ef4\u62a4\u4ee3\u7801\uff0c\u4e5f\u4e0d\u8981\u5728\u6807\u8bc6\u7b26\u4e2d\u4f7f\u7528\u975eASCII\u5b57\u7b26\u3002","title":"\u5b9a\u4e49\u51fd\u6570"},{"location":"%E5%86%85%E5%AE%B9/python/%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0/#_1","text":">>> def fib(n): # write Fibonacci series up to n ... \"\"\"Print a Fibonacci series up to n.\"\"\" ... a, b = 0, 1 ... while a < n: ... print(a, end=' ') ... a, b = b, a+b ... print() ... >>> # Now call the function we just defined: ... fib(2000) 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 \u7b2c\u4e00\u4e2a\u8bed\u53e5\u662f\u5b57\u7b26\u4e32\u8bed\u53e5\uff0c\u7528\u4e8e\u63cf\u8ff0\u51fd\u6570\u7684\u7528\u9014 \u51fd\u6570\u7684\u6267\u884c\u4f1a\u5f15\u5165\u4e00\u4e2a\u7528\u4e8e\u51fd\u6570\u5c40\u90e8\u53d8\u91cf\u7684\u65b0\u7b26\u53f7\u8868\uff1a \u51fd\u6570\u4e2d\u6240\u6709\u53d8\u91cf\u90fd\u5c06\u50a8\u5b58\u5728 \u5c40\u90e8\u7b26\u53f7\u8868 \u4e2d--->\u53d8\u91cf\u7684\u5f15\u7528\u9996\u5148\u5728 \u5c40\u90e8\u7b26\u53f7\u8868 \u4e2d\u67e5\u627e---> \u5916\u90e8\u51fd\u6570\u7b26\u53f7\u8868 ---> \u5168\u5c40\u7b26\u53f7\u8868 ---> \u5185\u7f6e\u540d\u79f0\u7b26\u53f7\u8868 \u6b64\u5904\u53ef\u4ee5\u5173\u6ce8global\u4e0enonlocal\u8bed\u53e5","title":"\u5b9a\u4e49\u51fd\u6570"},{"location":"%E5%86%85%E5%AE%B9/python/%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0/#_2","text":"\u53c2\u6570\u9ed8\u8ba4\u503c \u53ef\u4ee5\u4f7f\u7528kwarg=value\u7684\u5173\u952e\u5b57\u53c2\u6570\u6765\u8c03\u7528\u51fd\u6570key work argument\uff08\u6ce8\u610f\uff1a\u5173\u952e\u5b57\u53c2\u6570\u5fc5\u987b\u8ddf\u968f\u5728\u4f4d\u7f6e\u53c2\u6570\u4e4b\u540e\uff0c\u5b83\u7684\u987a\u5e8f\u5e76\u4e0d\u91cd\u8981\uff09 \u5f53\u5b58\u5728\u4e00\u4e2a\u5f62\u5f0f\u4e3a**name\u7684\u6700\u540e\u4e00\u4e2a\u5f62\u53c2\u65f6\uff0c\u5b83\u4f1a\u63a5\u53d7\u4e00\u4e2a\u5b57\u5178\u3002 \u6240\u4ee5\u8bf4\uff0c\u4e0b\u4e00\u6b65\u4ecb\u7ecd\u7684\u662f\u7279\u6b8a\u53c2\u6570\uff1a def f(pos1, pos2, /, pos_or_kwd, *, kwd1, kwd2): ----------- ---------- ---------- | | | | Positional or keyword | | - Keyword only -- Positional only \u4f4d\u7f6e\u53c2\u6570 / \u4f4d\u7f6e\u6216\u5173\u952e\u5b57\u53c2\u6570 * \u5173\u952e\u5b57\u53c2\u6570 \u4efb\u610f\u7684\u53c2\u6570\u5217\u8868 \u53ef\u53d8\u53c2\u6570\u4e4b\u524d\u53ef\u80fd\u4f1a\u51fa\u73b0\u591a\u4e2a\u666e\u901a\u53c2\u6570 \u5982\u679c\u8bf4\u53c2\u6570\u5b58\u5728list\u91cc\uff0c\u53ef\u4ee5\u7528 \u89e3\u5305\uff0c\u5b58\u5728dict\u91cc\u53ef\u4ee5\u7528 *\u89e3\u5305 \u51fd\u6570\u6807\u6ce8 >>> def f(ham: str, eggs: str = 'eggs') -> str: ... print(\"Annotations:\", f.__annotations__) ... print(\"Arguments:\", ham, eggs) ... return ham + ' and ' + eggs ... >>> f('spam') Annotations: {'ham': <class 'str'>, 'return': <class 'str'>, 'eggs': <class 'str'>} Arguments: spam eggs 'spam and eggs'","title":"\u51fd\u6570\u5b9a\u4e49\u7684\u66f4\u591a\u5f62\u5f0f"},{"location":"%E5%86%85%E5%AE%B9/python/%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0/#_3","text":"\u4f7f\u75284\u4e2a\u7a7a\u683c\u7f29\u8fdb\uff0c\u4e0d\u8981\u4f7f\u7528\u5236\u8868\u7b26\u3002 4\u4e2a\u7a7a\u683c\u662f\u4e00\u4e2a\u5728\u5c0f\u7f29\u8fdb\uff08\u5141\u8bb8\u66f4\u5927\u7684\u5d4c\u5957\u6df1\u5ea6\uff09\u548c\u5927\u7f29\u8fdb\uff08\u66f4\u5bb9\u6613\u9605\u8bfb\uff09\u7684\u4e00\u79cd\u5f88\u597d\u7684\u6298\u4e2d\u65b9\u6848\u3002\u5236\u8868\u7b26\u4f1a\u5f15\u5165\u6df7\u4e71\uff0c\u6700\u597d\u4e0d\u8981\u4f7f\u7528\u5b83\u3002 \u6362\u884c\uff0c\u4f7f\u4e00\u884c\u4e0d\u8d85\u8fc779\u4e2a\u5b57\u7b26\u3002 \u8fd9\u6709\u52a9\u4e8e\u4f7f\u7528\u5c0f\u578b\u663e\u793a\u5668\u7684\u7528\u6237\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u8f83\u5927\u7684\u663e\u793a\u5668\u4e0a\u5e76\u6392\u653e\u7f6e\u591a\u4e2a\u4ee3\u7801\u6587\u4ef6\u3002 \u4f7f\u7528\u7a7a\u884c\u5206\u9694\u51fd\u6570\u548c\u7c7b\uff0c\u4ee5\u53ca\u51fd\u6570\u5185\u7684\u8f83\u5927\u7684\u4ee3\u7801\u5757\u3002 \u5982\u679c\u53ef\u80fd\uff0c\u628a\u6ce8\u91ca\u653e\u5230\u5355\u72ec\u7684\u4e00\u884c\u3002 \u4f7f\u7528\u6587\u6863\u5b57\u7b26\u4e32\u3002 \u5728\u8fd0\u7b97\u7b26\u524d\u540e\u548c\u9017\u53f7\u540e\u4f7f\u7528\u7a7a\u683c\uff0c\u4f46\u4e0d\u80fd\u76f4\u63a5\u5728\u62ec\u53f7\u5185\u4f7f\u7528\uff1a a = f(1, 2) + g(3, 4) \u3002 \u4ee5\u4e00\u81f4\u7684\u89c4\u5219\u4e3a\u4f60\u7684\u7c7b\u548c\u51fd\u6570\u547d\u540d\uff1b\u6309\u7167\u60ef\u4f8b\u5e94\u4f7f\u7528 UpperCamelCase \u6765\u547d\u540d\u7c7b\uff0c\u800c\u4ee5 lowercase_with_underscores \u6765\u547d\u540d\u51fd\u6570\u548c\u65b9\u6cd5\u3002 \u59cb\u7ec8\u5e94\u4f7f\u7528 self \u6765\u547d\u540d\u7b2c\u4e00\u4e2a\u65b9\u6cd5\u53c2\u6570 (\u6709\u5173\u7c7b\u548c\u65b9\u6cd5\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u53c2\u9605 \u521d\u63a2\u7c7b )\u3002 \u5982\u679c\u4f60\u7684\u4ee3\u7801\u65e8\u5728\u7528\u4e8e\u56fd\u9645\u73af\u5883\uff0c\u8bf7\u4e0d\u8981\u4f7f\u7528\u82b1\u54e8\u7684\u7f16\u7801\u3002Python \u9ed8\u8ba4\u7684 UTF-8 \u6216\u8005\u7eaf ASCII \u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u90fd\u80fd\u6709\u6700\u597d\u7684\u8868\u73b0\u3002 \u540c\u6837\uff0c\u54ea\u6015\u53ea\u6709\u5f88\u5c0f\u7684\u53ef\u80fd\uff0c\u9047\u5230\u8bf4\u4e0d\u540c\u8bed\u8a00\u7684\u4eba\u9605\u8bfb\u6216\u7ef4\u62a4\u4ee3\u7801\uff0c\u4e5f\u4e0d\u8981\u5728\u6807\u8bc6\u7b26\u4e2d\u4f7f\u7528\u975eASCII\u5b57\u7b26\u3002","title":"\u7f16\u7801\u98ce\u683c"},{"location":"%E5%86%85%E5%AE%B9/python/%E6%A8%A1%E5%9D%97/","text":"\u6a21\u5757 \u5b9a\u4e49 \u6a21\u5757\u5c31\u662f\u542b\u6709python\u5b9a\u4e49\u548c\u8bed\u53e5\u7684\u6587\u4ef6\u3002\u6a21\u5757\u540d.py ---->\u5c31\u662f\u4e00\u4e2a\u6a21\u5757\u3002 \u5bfc\u5165\u6a21\u5757\u7684\u641c\u7d22\u987a\u5e8f \u5f53\u6211\u4eecimport modules \u7684\u65f6\u5019\uff0c\u641c\u7d22\u987a\u5e8f\u4e3a\uff1a\u5185\u7f6e\u76ee\u5f55\uff1e\u89e3\u91ca\u5668\u542f\u52a8\u5730\u5740\uff1e\u89e3\u91ca\u5668\u5b89\u88c5\u76ee\u5f55\uff08\u6362\u800c\u8a00\u4e4b\u5c31\u662f\uff0c\u5185\u7f6e\u6a21\u5757\uff1esys.path\uff09 \u5bfc\u5165\u540e\u53d1\u73b0\u591a\u4e86\u4e2a\u6587\u4ef6\u5939 \u4e3a\u4e86\u52a0\u901f\u6a21\u5757\u7684\u8f7d\u5165\uff0cpython\u4f1a\u7f13\u5b58\u6bcf\u4e2a\u6a21\u677f\u7f16\u8bd1\u540e\u7684\u7248\u672c \u6807\u51c6\u6a21\u5757 \u4e00\u4e9b\u6a21\u5757\u5185\u7f6e\u4e8e\u89e3\u91ca\u5668\u4e2d\uff0c\u5176\u4e2d\u6700\u8457\u540d\u7684\u5c31\u662fsys\u6a21\u5757\u4e86\uff1a sys.path \u53d8\u91cf\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u5217\u8868\uff0c\u7528\u4e8e\u786e\u5b9a\u89e3\u91ca\u5668\u7684\u6a21\u5757\u641c\u7d22\u8def\u5f84\u3002 \u5305 \u6a21\u5757\u7684\u96c6\u5408\u5c31\u662f\u5305\uff0c\u53ea\u6709\u5b58\u5728__int__.py \u6587\u4ef6\u624d\u80fd\u8ba9python\u5c06\u8be5\u76ee\u5f55\u89c6\u4e3a\u5305\u3002","title":"\u6a21\u5757"},{"location":"%E5%86%85%E5%AE%B9/python/%E6%A8%A1%E5%9D%97/#_1","text":"","title":"\u6a21\u5757"},{"location":"%E5%86%85%E5%AE%B9/python/%E6%A8%A1%E5%9D%97/#_2","text":"\u6a21\u5757\u5c31\u662f\u542b\u6709python\u5b9a\u4e49\u548c\u8bed\u53e5\u7684\u6587\u4ef6\u3002\u6a21\u5757\u540d.py ---->\u5c31\u662f\u4e00\u4e2a\u6a21\u5757\u3002","title":"\u5b9a\u4e49"},{"location":"%E5%86%85%E5%AE%B9/python/%E6%A8%A1%E5%9D%97/#_3","text":"\u5f53\u6211\u4eecimport modules \u7684\u65f6\u5019\uff0c\u641c\u7d22\u987a\u5e8f\u4e3a\uff1a\u5185\u7f6e\u76ee\u5f55\uff1e\u89e3\u91ca\u5668\u542f\u52a8\u5730\u5740\uff1e\u89e3\u91ca\u5668\u5b89\u88c5\u76ee\u5f55\uff08\u6362\u800c\u8a00\u4e4b\u5c31\u662f\uff0c\u5185\u7f6e\u6a21\u5757\uff1esys.path\uff09","title":"\u5bfc\u5165\u6a21\u5757\u7684\u641c\u7d22\u987a\u5e8f"},{"location":"%E5%86%85%E5%AE%B9/python/%E6%A8%A1%E5%9D%97/#_4","text":"\u4e3a\u4e86\u52a0\u901f\u6a21\u5757\u7684\u8f7d\u5165\uff0cpython\u4f1a\u7f13\u5b58\u6bcf\u4e2a\u6a21\u677f\u7f16\u8bd1\u540e\u7684\u7248\u672c","title":"\u5bfc\u5165\u540e\u53d1\u73b0\u591a\u4e86\u4e2a\u6587\u4ef6\u5939"},{"location":"%E5%86%85%E5%AE%B9/python/%E6%A8%A1%E5%9D%97/#_5","text":"\u4e00\u4e9b\u6a21\u5757\u5185\u7f6e\u4e8e\u89e3\u91ca\u5668\u4e2d\uff0c\u5176\u4e2d\u6700\u8457\u540d\u7684\u5c31\u662fsys\u6a21\u5757\u4e86\uff1a sys.path \u53d8\u91cf\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u5217\u8868\uff0c\u7528\u4e8e\u786e\u5b9a\u89e3\u91ca\u5668\u7684\u6a21\u5757\u641c\u7d22\u8def\u5f84\u3002","title":"\u6807\u51c6\u6a21\u5757"},{"location":"%E5%86%85%E5%AE%B9/python/%E6%A8%A1%E5%9D%97/#_6","text":"\u6a21\u5757\u7684\u96c6\u5408\u5c31\u662f\u5305\uff0c\u53ea\u6709\u5b58\u5728__int__.py \u6587\u4ef6\u624d\u80fd\u8ba9python\u5c06\u8be5\u76ee\u5f55\u89c6\u4e3a\u5305\u3002","title":"\u5305"},{"location":"%E5%86%85%E5%AE%B9/python/%E6%A8%A1%E5%9D%97%E4%B8%8E%E5%8C%85/","text":"\u6a21\u5757\u4e0e\u5305 \u5305\u5c31\u662f\u628a\u529f\u80fd\u76f8\u8fd1\u7684\u7684py\u6587\u4ef6\u6574\u5408\u5728\u4e00\u8d77\u3002 package model.py model.py model.py __init__.py py\u6587\u4ef6\u662f\u6a21\u5757 \u5305import\u662f\u7528\u4e8e\u5bfc\u5165\u6a21\u5757\u7684 import \u6a21\u5757 \u6a21\u5757.\u51fd\u6570 \u6a21\u5757.\u7c7b \u6a21\u5757.\u53d8\u91cf from \u6a21\u5757\u540d import \u51fd\u6570\uff0c\u53d8\u91cf\uff0c\u7c7b \u51fd\u6570 from \u6a21\u5757 import * \u8be5\u6a21\u5757\u4e2d\u7684\u6240\u6709\u5185\u5bb9\uff0c\u6216\u8005__all__=[*\u6240\u4ee3\u8868\u7684\u5185\u5bb9] \u6a21\u5757\u5728\u5bfc\u5165\u65f6\uff0c\u4f1a\u88ab\u6267\u884c\u4e00\u904d \u5305 \u4e00\u4e2a\u5305\u4e2d\u5b58\u653e\u591a\u4e2a\u6a21\u5757 \u4f7f\u7528\u5305\u7684\u65f6\u5019\uff0c\u7ed3\u5408from \u4f7f\u7528\u3002","title":"\u6a21\u5757\u4e0e\u5305"},{"location":"%E5%86%85%E5%AE%B9/python/%E6%A8%A1%E5%9D%97%E4%B8%8E%E5%8C%85/#_1","text":"\u5305\u5c31\u662f\u628a\u529f\u80fd\u76f8\u8fd1\u7684\u7684py\u6587\u4ef6\u6574\u5408\u5728\u4e00\u8d77\u3002 package model.py model.py model.py __init__.py py\u6587\u4ef6\u662f\u6a21\u5757 \u5305import\u662f\u7528\u4e8e\u5bfc\u5165\u6a21\u5757\u7684 import \u6a21\u5757 \u6a21\u5757.\u51fd\u6570 \u6a21\u5757.\u7c7b \u6a21\u5757.\u53d8\u91cf from \u6a21\u5757\u540d import \u51fd\u6570\uff0c\u53d8\u91cf\uff0c\u7c7b \u51fd\u6570 from \u6a21\u5757 import * \u8be5\u6a21\u5757\u4e2d\u7684\u6240\u6709\u5185\u5bb9\uff0c\u6216\u8005__all__=[*\u6240\u4ee3\u8868\u7684\u5185\u5bb9] \u6a21\u5757\u5728\u5bfc\u5165\u65f6\uff0c\u4f1a\u88ab\u6267\u884c\u4e00\u904d","title":"\u6a21\u5757\u4e0e\u5305"},{"location":"%E5%86%85%E5%AE%B9/python/%E6%A8%A1%E5%9D%97%E4%B8%8E%E5%8C%85/#_2","text":"\u4e00\u4e2a\u5305\u4e2d\u5b58\u653e\u591a\u4e2a\u6a21\u5757 \u4f7f\u7528\u5305\u7684\u65f6\u5019\uff0c\u7ed3\u5408from \u4f7f\u7528\u3002","title":"\u5305"},{"location":"%E5%86%85%E5%AE%B9/python/%E7%94%9F%E6%88%90%E5%99%A8/","text":"\u751f\u6210\u5668 \u5728 Python \u4e2d\uff0c\u4f7f\u7528\u4e86 yield \u7684\u51fd\u6570\u88ab\u79f0\u4e3a\u751f\u6210\u5668\uff08generator\uff09\u3002 \u8ddf\u666e\u901a\u51fd\u6570\u4e0d\u540c\u7684\u662f\uff0c\u751f\u6210\u5668\u662f\u4e00\u4e2a\u8fd4\u56de\u8fed\u4ee3\u5668\u7684\u51fd\u6570\uff0c\u53ea\u80fd\u7528\u4e8e\u8fed\u4ee3\u64cd\u4f5c\uff0c\u66f4\u7b80\u5355\u70b9\u7406\u89e3\u751f\u6210\u5668\u5c31\u662f\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002 \u6ce8\u610f\u5dee\u522b\u3002next()\u4e2d\u8981\u653e\u7684\u662f\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\uff0c\u5fc5\u987bspecify\uff01\u5982\u679c\u7528\u7684\u662f\u7b2c\u4e00\u79cd\u65b9\u6cd5\uff0c\u90a3\u4e48\u6bcf\u6b21\u90fd\u91cd\u65b0\u58f0\u660e\u4e86\u4e00\u4e2a\u65b0\u7684\u51fd\u6570\u5bf9\u8c61\uff0c\u65e0\u6cd5\u7ee7\u7eed\u64cd\u4f5c\u3002","title":"\u751f\u6210\u5668"},{"location":"%E5%86%85%E5%AE%B9/python/%E7%94%9F%E6%88%90%E5%99%A8/#_1","text":"\u5728 Python \u4e2d\uff0c\u4f7f\u7528\u4e86 yield \u7684\u51fd\u6570\u88ab\u79f0\u4e3a\u751f\u6210\u5668\uff08generator\uff09\u3002 \u8ddf\u666e\u901a\u51fd\u6570\u4e0d\u540c\u7684\u662f\uff0c\u751f\u6210\u5668\u662f\u4e00\u4e2a\u8fd4\u56de\u8fed\u4ee3\u5668\u7684\u51fd\u6570\uff0c\u53ea\u80fd\u7528\u4e8e\u8fed\u4ee3\u64cd\u4f5c\uff0c\u66f4\u7b80\u5355\u70b9\u7406\u89e3\u751f\u6210\u5668\u5c31\u662f\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002 \u6ce8\u610f\u5dee\u522b\u3002next()\u4e2d\u8981\u653e\u7684\u662f\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\uff0c\u5fc5\u987bspecify\uff01\u5982\u679c\u7528\u7684\u662f\u7b2c\u4e00\u79cd\u65b9\u6cd5\uff0c\u90a3\u4e48\u6bcf\u6b21\u90fd\u91cd\u65b0\u58f0\u660e\u4e86\u4e00\u4e2a\u65b0\u7684\u51fd\u6570\u5bf9\u8c61\uff0c\u65e0\u6cd5\u7ee7\u7eed\u64cd\u4f5c\u3002","title":"\u751f\u6210\u5668"},{"location":"%E5%86%85%E5%AE%B9/python/%E7%B1%BB/","text":"\u7c7b \u5b9a\u4e49\uff1a class ClassName: <statement-1> . . . <statement-N> \u7c7b\u5177\u6709\u5404\u79cd\u5c5e\u6027\uff1a \u5c5e\u6027\u5f15\u7528 \u4f7f\u7528 Python \u4e2d\u6240\u6709\u5c5e\u6027\u5f15\u7528\u6240\u4f7f\u7528\u7684\u6807\u51c6\u8bed\u6cd5: obj.name \u3002 \u6709\u6548\u7684\u5c5e\u6027\u540d\u79f0\u662f\u7c7b\u5bf9\u8c61\u88ab\u521b\u5efa\u65f6\u5b58\u5728\u4e8e\u7c7b\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u6240\u6709\u540d\u79f0\u3002 \u7c7b\u53ef\u4ee5\u88ab\u5b9e\u4f8b\u5316\uff1a \u7c7b\u7684 \u5b9e\u4f8b\u5316 \u4f7f\u7528\u51fd\u6570\u8868\u793a\u6cd5\u3002 \u53ef\u4ee5\u628a\u7c7b\u5bf9\u8c61\u89c6\u4e3a\u662f\u8fd4\u56de\u8be5\u7c7b\u7684\u4e00\u4e2a\u65b0\u5b9e\u4f8b\u7684\u4e0d\u5e26\u53c2\u6570\u7684\u51fd\u6570\u3002 x = MyClass() \u521b\u5efa\u4e00\u4e2a\u65b0\u7684MyClass\u7c7b\u5b9e\u4f8b\uff0c\u5e76\u628a\u5b83\u5206\u914d\u7ed9\u5c40\u90e8\u53d8\u91cfx __init__()\u65b9\u6cd5 >>> class Complex: ... def __init__(self, realpart, imagpart): ... self.r = realpart ... self.i = imagpart ... >>> x = Complex(3.0, -4.5) >>> x.r, x.i (3.0, -4.5) \u5b9e\u4f8b\u5bf9\u8c61 \u5b9e\u4f8b\u5bf9\u8c61\u552f\u4e00\u7684\u64cd\u4f5c\u5c31\u662f\u5c5e\u6027\u5f15\u7528\uff0c\u5c5e\u6027\u5206\u4e3a\u4e24\u79cd\uff0c\u4e00\u4e2a\u662f\u6570\u636e\u5c5e\u6027\u548c\u65b9\u6cd5 \u7c7b\u548c\u5b9e\u4f8b\u53d8\u91cf \u5b9e\u4f8b\u53d8\u91cf\uff1a\u6bcf\u4e2a\u5b9e\u4f8b\u7684\u6570\u636e \u7c7b\u53d8\u91cf\uff1a\u7c7b\u6240\u6709\u5b9e\u4f8b\u5171\u4eab\u7684\u5c5e\u6027\u548c\u65b9\u6cd5 class Dog: kind = 'canine' # class variable shared by all instances def __init__(self, name): self.name = name # instance variable unique to each instance >>> d = Dog('Fido') >>> e = Dog('Buddy') >>> d.kind # shared by all dogs 'canine' >>> e.kind # shared by all dogs 'canine' >>> d.name # unique to d 'Fido' >>> e.name # unique to e 'Buddy' kind\u5c31\u662f\u7c7b\u53d8\u91cf name\u5c31\u662f\u5b9e\u4f8b\u53d8\u91cf \u5ba2\u6237\u7aef\u5e94\u8be5\u8c28\u614e\u5730\u5f15\u7528\u6570\u636e\u5c5e\u6027 \u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u5e38\u5e38\u88ab\u547d\u540d\u4e3a self \u3002 \u8fd9\u4e5f\u4e0d\u8fc7\u5c31\u662f\u4e00\u4e2a\u7ea6\u5b9a: self \u8fd9\u4e00\u540d\u79f0\u5728 Python \u4e2d\u7edd\u5bf9\u6ca1\u6709\u7279\u6b8a\u542b\u4e49\u3002 \u65b9\u6cd5\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528self \u53c2\u6570\u7684\u65b9\u6cd5\u5c5e\u6027\u8c03\u7528\u5176\u4ed6\u65b9\u6cd5 class Bag: def __init__(self): self.data = [] def add(self, x): self.data.append(x) def addtwice(self, x): self.add(x) self.add(x) \u7ee7\u627f class DerivedClassName(BaseClassName): <statement-1> . . . <statement-N> \u540d\u79f0 BaseClassName \u5fc5\u987b\u5b9a\u4e49\u4e8e\u5305\u542b\u6d3e\u751f\u7c7b\u5b9a\u4e49\u7684\u4f5c\u7528\u57df\u4e2d\u3002\u6216\u8005\u57fa\u7c7b\u5b9a\u4e49\u5728\u522b\u7684\u6a21\u5757\u4e2d\uff0c\u9700\u8981\u52a0\u4e2a . :modname.BaseClassName \u5f53\u5f15\u7528\u5c5e\u6027\u7684\u65f6\u5019\uff0c\u5982\u679c\u6d3e\u751f\u7c7b\u627e\u4e0d\u5230\u8be5\u5c5e\u6027\uff0c\u90a3\u4e48\u5c31\u4f1a\u8f6c\u5411\u57fa\u7c7b\u4e2d\u8fdb\u884c\u67e5\u627e \u4e24\u4e2a\u5e38\u7528\u51fd\u6570\uff1a \u4f7f\u7528 isinstance() \u6765\u68c0\u67e5\u4e00\u4e2a\u5b9e\u4f8b\u7684\u7c7b\u578b: isinstance(obj, int) \u4ec5\u4f1a\u5728 obj.__class__ \u4e3a int \u6216\u67d0\u4e2a\u6d3e\u751f\u81ea int \u7684\u7c7b\u65f6\u4e3a True \u3002 \u4f7f\u7528 issubclass() \u6765\u68c0\u67e5\u7c7b\u7684\u7ee7\u627f\u5173\u7cfb: issubclass(bool, int) \u4e3a True \uff0c\u56e0\u4e3a bool \u662f int \u7684\u5b50\u7c7b\u3002 \u4f46\u662f\uff0c issubclass(float, int) \u4e3a False \uff0c\u56e0\u4e3a float \u4e0d\u662f int \u7684\u5b50\u7c7b\u3002 \u8fed\u4ee3\u5668 \u5bf9\u4e00\u4e2a\u5bb9\u5668\u5bf9\u8c61 s \u5bf9\u5b83\u4f7f\u7528iter()\u65b9\u6cd5\uff0c\u8be5\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u5b9a\u4e49\u4e86 __next__() \u65b9\u6cd5\u7684\u8fed\u4ee3\u5668\u5bf9\u8c61\uff0c\u6b64\u65b9\u6cd5\u5c06\u9010\u4e00\u8bbf\u95ee\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u3002\u73b0\u5728\u8bb0\u8be5\u5bf9\u8c61\u4e3a it next(it)\u6267\u884c\u5c31\u80fd\u5f97\u5230\u7b2c\u4e00\u4e2a\u5143\u7d20 next(it)\u6267\u884c\u5c31\u80fd\u5f97\u5230\u7b2c\u4e8c\u4e2a\u5143\u7d20 \u5143\u7d20\u7528\u5c3d\u7684\u65f6\u5019\u5c31\u5f15\u53d1 StopIteration\u5f02\u5e38 ====>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u4e00\u4e2a\u7c7b\u5177\u6709\u4e86 __iter__() \u548c__next__()\u65b9\u6cd5\uff0c\u4e14\u5728\u8fed\u4ee3\u7ed3\u675f\u7684\u65f6\u5019raise StopIteration\u5f02\u5e38\u5c31\u53ef\u4ee5\u5177\u6709\u8fed\u4ee3\u884c\u4e3a\u3002 class Reverse: \"\"\"Iterator for looping over a sequence backwards.\"\"\" def __init__(self, data): self.data = data self.index = len(data) def __iter__(self): return self def __next__(self): if self.index == 0: raise StopIteration self.index = self.index - 1 return self.data[self.index] init \u9996\u5148\u63a5\u6536\u53c2\u6570\uff0cdata\u3002\u5e76\u4e14\u5b9a\u4e49\u4e86\u4e24\u4e2a\u5c5e\u6027\uff0c\u5206\u522b\u4e3adata\uff0cindex iter\u8fd4\u56deself next\u8fd4\u56de\u5012\u7f6e\u987a\u5e8f\u7684data \u6240\u4ee5\u653e\u5728for\u91cc\u5faa\u73af\u7684\u65f6\u5019\u4f1a\u5012\u7f6e\u8fd4\u56de \u751f\u6210\u5668 \u751f\u6210\u5668 \u662f\u4e00\u4e2a\u7528\u4e8e\u521b\u5efa\u8fed\u4ee3\u5668\u7684\u7b80\u5355\u800c\u5f3a\u5927\u7684\u5de5\u5177\u3002 \u5b83\u4eec\u7684\u5199\u6cd5\u7c7b\u4f3c\u4e8e\u6807\u51c6\u7684\u51fd\u6570\uff0c\u4f46\u5f53\u5b83\u4eec\u8981\u8fd4\u56de\u6570\u636e\u65f6\u4f1a\u4f7f\u7528 yield \u8bed\u53e5\u3002 \u6bcf\u6b21\u5728\u751f\u6210\u5668\u4e0a\u8c03\u7528 next() \u65f6\uff0c\u5b83\u4f1a\u4ece\u4e0a\u6b21\u79bb\u5f00\u7684\u4f4d\u7f6e\u6062\u590d\u6267\u884c\uff08\u5b83\u4f1a\u8bb0\u4f4f\u4e0a\u6b21\u6267\u884c\u8bed\u53e5\u65f6\u7684\u6240\u6709\u6570\u636e\u503c\uff09\u3002 \u4e00\u4e2a\u663e\u793a\u5982\u4f55\u975e\u5e38\u5bb9\u6613\u5730\u521b\u5efa\u751f\u6210\u5668\u7684\u793a\u4f8b\u5982\u4e0b: def reverse(data): for index in range(len(data)-1, -1, -1): yield data[index] >>> >>> for char in reverse('golf'): ... print(char) ... f l o g \u751f\u6210\u5668\u5c31\u662f\u66f4\u52a0\u7d27\u51d1\u7684\u8fed\u4ee3\u5668\uff0c\u5b83\u4f1a\u81ea\u52a8\u521b\u5efaiter()\u548cnext()\u65b9\u6cd5\u3002\u5c40\u90e8\u53d8\u91cf\u548c\u6267\u884c\u72b6\u6001\u4f1a\u5728\u6bcf\u6b21\u8c03\u7528\u4e4b\u95f4\u81ea\u52a8\u4fdd\u5b58 \u751f\u6210\u5668\u8868\u8fbe\u5f0f >>> sum(i*i for i in range(10)) # sum of squares 285 >>> xvec = [10, 20, 30] >>> yvec = [7, 5, 3] >>> sum(x*y for x,y in zip(xvec, yvec)) # dot product 260 >>> unique_words = set(word for line in page for word in line.split()) >>> valedictorian = max((student.gpa, student.name) for student in graduates) >>> data = 'golf' >>> list(data[i] for i in range(len(data)-1, -1, -1)) ['f', 'l', 'o', 'g']","title":"\u7c7b"},{"location":"%E5%86%85%E5%AE%B9/python/%E7%B1%BB/#_1","text":"\u5b9a\u4e49\uff1a class ClassName: <statement-1> . . . <statement-N> \u7c7b\u5177\u6709\u5404\u79cd\u5c5e\u6027\uff1a \u5c5e\u6027\u5f15\u7528 \u4f7f\u7528 Python \u4e2d\u6240\u6709\u5c5e\u6027\u5f15\u7528\u6240\u4f7f\u7528\u7684\u6807\u51c6\u8bed\u6cd5: obj.name \u3002 \u6709\u6548\u7684\u5c5e\u6027\u540d\u79f0\u662f\u7c7b\u5bf9\u8c61\u88ab\u521b\u5efa\u65f6\u5b58\u5728\u4e8e\u7c7b\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u6240\u6709\u540d\u79f0\u3002 \u7c7b\u53ef\u4ee5\u88ab\u5b9e\u4f8b\u5316\uff1a \u7c7b\u7684 \u5b9e\u4f8b\u5316 \u4f7f\u7528\u51fd\u6570\u8868\u793a\u6cd5\u3002 \u53ef\u4ee5\u628a\u7c7b\u5bf9\u8c61\u89c6\u4e3a\u662f\u8fd4\u56de\u8be5\u7c7b\u7684\u4e00\u4e2a\u65b0\u5b9e\u4f8b\u7684\u4e0d\u5e26\u53c2\u6570\u7684\u51fd\u6570\u3002 x = MyClass() \u521b\u5efa\u4e00\u4e2a\u65b0\u7684MyClass\u7c7b\u5b9e\u4f8b\uff0c\u5e76\u628a\u5b83\u5206\u914d\u7ed9\u5c40\u90e8\u53d8\u91cfx","title":"\u7c7b"},{"location":"%E5%86%85%E5%AE%B9/python/%E7%B1%BB/#__init__","text":">>> class Complex: ... def __init__(self, realpart, imagpart): ... self.r = realpart ... self.i = imagpart ... >>> x = Complex(3.0, -4.5) >>> x.r, x.i (3.0, -4.5)","title":"__init__()\u65b9\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/python/%E7%B1%BB/#_2","text":"\u5b9e\u4f8b\u5bf9\u8c61\u552f\u4e00\u7684\u64cd\u4f5c\u5c31\u662f\u5c5e\u6027\u5f15\u7528\uff0c\u5c5e\u6027\u5206\u4e3a\u4e24\u79cd\uff0c\u4e00\u4e2a\u662f\u6570\u636e\u5c5e\u6027\u548c\u65b9\u6cd5","title":"\u5b9e\u4f8b\u5bf9\u8c61"},{"location":"%E5%86%85%E5%AE%B9/python/%E7%B1%BB/#_3","text":"\u5b9e\u4f8b\u53d8\u91cf\uff1a\u6bcf\u4e2a\u5b9e\u4f8b\u7684\u6570\u636e \u7c7b\u53d8\u91cf\uff1a\u7c7b\u6240\u6709\u5b9e\u4f8b\u5171\u4eab\u7684\u5c5e\u6027\u548c\u65b9\u6cd5 class Dog: kind = 'canine' # class variable shared by all instances def __init__(self, name): self.name = name # instance variable unique to each instance >>> d = Dog('Fido') >>> e = Dog('Buddy') >>> d.kind # shared by all dogs 'canine' >>> e.kind # shared by all dogs 'canine' >>> d.name # unique to d 'Fido' >>> e.name # unique to e 'Buddy' kind\u5c31\u662f\u7c7b\u53d8\u91cf name\u5c31\u662f\u5b9e\u4f8b\u53d8\u91cf \u5ba2\u6237\u7aef\u5e94\u8be5\u8c28\u614e\u5730\u5f15\u7528\u6570\u636e\u5c5e\u6027 \u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u5e38\u5e38\u88ab\u547d\u540d\u4e3a self \u3002 \u8fd9\u4e5f\u4e0d\u8fc7\u5c31\u662f\u4e00\u4e2a\u7ea6\u5b9a: self \u8fd9\u4e00\u540d\u79f0\u5728 Python \u4e2d\u7edd\u5bf9\u6ca1\u6709\u7279\u6b8a\u542b\u4e49\u3002 \u65b9\u6cd5\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528self \u53c2\u6570\u7684\u65b9\u6cd5\u5c5e\u6027\u8c03\u7528\u5176\u4ed6\u65b9\u6cd5 class Bag: def __init__(self): self.data = [] def add(self, x): self.data.append(x) def addtwice(self, x): self.add(x) self.add(x)","title":"\u7c7b\u548c\u5b9e\u4f8b\u53d8\u91cf"},{"location":"%E5%86%85%E5%AE%B9/python/%E7%B1%BB/#_4","text":"class DerivedClassName(BaseClassName): <statement-1> . . . <statement-N> \u540d\u79f0 BaseClassName \u5fc5\u987b\u5b9a\u4e49\u4e8e\u5305\u542b\u6d3e\u751f\u7c7b\u5b9a\u4e49\u7684\u4f5c\u7528\u57df\u4e2d\u3002\u6216\u8005\u57fa\u7c7b\u5b9a\u4e49\u5728\u522b\u7684\u6a21\u5757\u4e2d\uff0c\u9700\u8981\u52a0\u4e2a . :modname.BaseClassName \u5f53\u5f15\u7528\u5c5e\u6027\u7684\u65f6\u5019\uff0c\u5982\u679c\u6d3e\u751f\u7c7b\u627e\u4e0d\u5230\u8be5\u5c5e\u6027\uff0c\u90a3\u4e48\u5c31\u4f1a\u8f6c\u5411\u57fa\u7c7b\u4e2d\u8fdb\u884c\u67e5\u627e \u4e24\u4e2a\u5e38\u7528\u51fd\u6570\uff1a \u4f7f\u7528 isinstance() \u6765\u68c0\u67e5\u4e00\u4e2a\u5b9e\u4f8b\u7684\u7c7b\u578b: isinstance(obj, int) \u4ec5\u4f1a\u5728 obj.__class__ \u4e3a int \u6216\u67d0\u4e2a\u6d3e\u751f\u81ea int \u7684\u7c7b\u65f6\u4e3a True \u3002 \u4f7f\u7528 issubclass() \u6765\u68c0\u67e5\u7c7b\u7684\u7ee7\u627f\u5173\u7cfb: issubclass(bool, int) \u4e3a True \uff0c\u56e0\u4e3a bool \u662f int \u7684\u5b50\u7c7b\u3002 \u4f46\u662f\uff0c issubclass(float, int) \u4e3a False \uff0c\u56e0\u4e3a float \u4e0d\u662f int \u7684\u5b50\u7c7b\u3002","title":"\u7ee7\u627f"},{"location":"%E5%86%85%E5%AE%B9/python/%E7%B1%BB/#_5","text":"\u5bf9\u4e00\u4e2a\u5bb9\u5668\u5bf9\u8c61 s \u5bf9\u5b83\u4f7f\u7528iter()\u65b9\u6cd5\uff0c\u8be5\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u5b9a\u4e49\u4e86 __next__() \u65b9\u6cd5\u7684\u8fed\u4ee3\u5668\u5bf9\u8c61\uff0c\u6b64\u65b9\u6cd5\u5c06\u9010\u4e00\u8bbf\u95ee\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u3002\u73b0\u5728\u8bb0\u8be5\u5bf9\u8c61\u4e3a it next(it)\u6267\u884c\u5c31\u80fd\u5f97\u5230\u7b2c\u4e00\u4e2a\u5143\u7d20 next(it)\u6267\u884c\u5c31\u80fd\u5f97\u5230\u7b2c\u4e8c\u4e2a\u5143\u7d20 \u5143\u7d20\u7528\u5c3d\u7684\u65f6\u5019\u5c31\u5f15\u53d1 StopIteration\u5f02\u5e38 ====>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u4e00\u4e2a\u7c7b\u5177\u6709\u4e86 __iter__() \u548c__next__()\u65b9\u6cd5\uff0c\u4e14\u5728\u8fed\u4ee3\u7ed3\u675f\u7684\u65f6\u5019raise StopIteration\u5f02\u5e38\u5c31\u53ef\u4ee5\u5177\u6709\u8fed\u4ee3\u884c\u4e3a\u3002 class Reverse: \"\"\"Iterator for looping over a sequence backwards.\"\"\" def __init__(self, data): self.data = data self.index = len(data) def __iter__(self): return self def __next__(self): if self.index == 0: raise StopIteration self.index = self.index - 1 return self.data[self.index] init \u9996\u5148\u63a5\u6536\u53c2\u6570\uff0cdata\u3002\u5e76\u4e14\u5b9a\u4e49\u4e86\u4e24\u4e2a\u5c5e\u6027\uff0c\u5206\u522b\u4e3adata\uff0cindex iter\u8fd4\u56deself next\u8fd4\u56de\u5012\u7f6e\u987a\u5e8f\u7684data \u6240\u4ee5\u653e\u5728for\u91cc\u5faa\u73af\u7684\u65f6\u5019\u4f1a\u5012\u7f6e\u8fd4\u56de","title":"\u8fed\u4ee3\u5668"},{"location":"%E5%86%85%E5%AE%B9/python/%E7%B1%BB/#_6","text":"\u751f\u6210\u5668 \u662f\u4e00\u4e2a\u7528\u4e8e\u521b\u5efa\u8fed\u4ee3\u5668\u7684\u7b80\u5355\u800c\u5f3a\u5927\u7684\u5de5\u5177\u3002 \u5b83\u4eec\u7684\u5199\u6cd5\u7c7b\u4f3c\u4e8e\u6807\u51c6\u7684\u51fd\u6570\uff0c\u4f46\u5f53\u5b83\u4eec\u8981\u8fd4\u56de\u6570\u636e\u65f6\u4f1a\u4f7f\u7528 yield \u8bed\u53e5\u3002 \u6bcf\u6b21\u5728\u751f\u6210\u5668\u4e0a\u8c03\u7528 next() \u65f6\uff0c\u5b83\u4f1a\u4ece\u4e0a\u6b21\u79bb\u5f00\u7684\u4f4d\u7f6e\u6062\u590d\u6267\u884c\uff08\u5b83\u4f1a\u8bb0\u4f4f\u4e0a\u6b21\u6267\u884c\u8bed\u53e5\u65f6\u7684\u6240\u6709\u6570\u636e\u503c\uff09\u3002 \u4e00\u4e2a\u663e\u793a\u5982\u4f55\u975e\u5e38\u5bb9\u6613\u5730\u521b\u5efa\u751f\u6210\u5668\u7684\u793a\u4f8b\u5982\u4e0b: def reverse(data): for index in range(len(data)-1, -1, -1): yield data[index] >>> >>> for char in reverse('golf'): ... print(char) ... f l o g \u751f\u6210\u5668\u5c31\u662f\u66f4\u52a0\u7d27\u51d1\u7684\u8fed\u4ee3\u5668\uff0c\u5b83\u4f1a\u81ea\u52a8\u521b\u5efaiter()\u548cnext()\u65b9\u6cd5\u3002\u5c40\u90e8\u53d8\u91cf\u548c\u6267\u884c\u72b6\u6001\u4f1a\u5728\u6bcf\u6b21\u8c03\u7528\u4e4b\u95f4\u81ea\u52a8\u4fdd\u5b58 \u751f\u6210\u5668\u8868\u8fbe\u5f0f >>> sum(i*i for i in range(10)) # sum of squares 285 >>> xvec = [10, 20, 30] >>> yvec = [7, 5, 3] >>> sum(x*y for x,y in zip(xvec, yvec)) # dot product 260 >>> unique_words = set(word for line in page for word in line.split()) >>> valedictorian = max((student.gpa, student.name) for student in graduates) >>> data = 'golf' >>> list(data[i] for i in range(len(data)-1, -1, -1)) ['f', 'l', 'o', 'g']","title":"\u751f\u6210\u5668"},{"location":"%E5%86%85%E5%AE%B9/python/%E8%A3%85%E9%A5%B0%E5%99%A8/","text":"\u88c5\u9970\u5668 \u51fd\u6570\u4f5c\u4e3a\u53c2\u6570 \u6709\u95ed\u5305\u7684\u7279\u70b9 def decorate(func): a = 100 def wrapper(): print('*'*10) func() print('*'*10) return wrapper @decorate def simple_print(): print(\"\u6211\u53ea\u80fd\u6253\u5370\u4e00\u884c\u5b57\") simple_print() \u88c5\u9970\u5668\u51fd\u6570\u662f\u4ee5\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u8fd4\u56de\u5185\u90e8\u51fd\u6570\u540d \u88c5\u9970\u5668\u53ef\u4ee5\u5bf9\u73b0\u6709\u7684\u51fd\u6570\u8fdb\u884c\u4e00\u5b9a\u7684\u63d0\u5347\u4f5c\u7528\uff0c\u4f8b\u5982\u589e\u52a0\u529f\u80fd\u3002 \u8fd0\u884c\u8fc7\u7a0b\uff1a \u52a0\u8f7ddecorate\u5230\u5185\u5b58 \u5c06\u88ab\u88c5\u9970\u51fd\u6570\u4f20\u7ed9decorate \u52a0\u8f7dwrapper\u5230\u5185\u5b58 \u5c06\u8fd4\u56de\u503c\u8d4b\u503c\u7ed9\u88ab\u88c5\u9970\u51fd\u6570\uff1a simple_print = decorate(simple_func) # \u4ed6\u6b64\u65f6\u63a5\u53d7\u7684wrapper\u5662 \u6267\u884c\u88ab\u88c5\u9970\u51fd\u6570 simple_print() #\u5b9e\u8d28\u4e0a\u662f\u6267\u884cwrapper()","title":"\u88c5\u9970\u5668"},{"location":"%E5%86%85%E5%AE%B9/python/%E8%A3%85%E9%A5%B0%E5%99%A8/#_1","text":"\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570 \u6709\u95ed\u5305\u7684\u7279\u70b9 def decorate(func): a = 100 def wrapper(): print('*'*10) func() print('*'*10) return wrapper @decorate def simple_print(): print(\"\u6211\u53ea\u80fd\u6253\u5370\u4e00\u884c\u5b57\") simple_print() \u88c5\u9970\u5668\u51fd\u6570\u662f\u4ee5\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u8fd4\u56de\u5185\u90e8\u51fd\u6570\u540d \u88c5\u9970\u5668\u53ef\u4ee5\u5bf9\u73b0\u6709\u7684\u51fd\u6570\u8fdb\u884c\u4e00\u5b9a\u7684\u63d0\u5347\u4f5c\u7528\uff0c\u4f8b\u5982\u589e\u52a0\u529f\u80fd\u3002 \u8fd0\u884c\u8fc7\u7a0b\uff1a \u52a0\u8f7ddecorate\u5230\u5185\u5b58 \u5c06\u88ab\u88c5\u9970\u51fd\u6570\u4f20\u7ed9decorate \u52a0\u8f7dwrapper\u5230\u5185\u5b58 \u5c06\u8fd4\u56de\u503c\u8d4b\u503c\u7ed9\u88ab\u88c5\u9970\u51fd\u6570\uff1a simple_print = decorate(simple_func) # \u4ed6\u6b64\u65f6\u63a5\u53d7\u7684wrapper\u5662 \u6267\u884c\u88ab\u88c5\u9970\u51fd\u6570 simple_print() #\u5b9e\u8d28\u4e0a\u662f\u6267\u884cwrapper()","title":"\u88c5\u9970\u5668"},{"location":"%E5%86%85%E5%AE%B9/python/%E9%97%AD%E5%8C%85/","text":"\u95ed\u5305 def out_func(a,b): c = 10 def inner_func(): s = a + b + c print(s) return inner_func #\u8c03\u7528out inner = out_func(1,2) inner() \u4ee5\u4e0a\u662f\u95ed\u5305\u7684\u57fa\u672c\u683c\u5f0f\uff0c\u53ef\u4ee5\u770b\u5230return\u662f\u53ef\u4ee5\u8fd4\u56de\u53d8\u91cf\uff0c\u51fd\u6570\u4efb\u4f55\u5185\u90e8\u7684\u5bf9\u8c61 \u95ed\u5305\u7684\u5e94\u7528\uff1a \u4fdd\u5b58\u53c2\u6570\u7684\u72b6\u6001 def generate_count(): container = [0] def add_one(): container[0] = container[0] + 1 print(\"\u8fd9\u662f\u7b2c{}\u6b21\u8ba1\u6570\".format(container[0])) return add_one counter = generate_count() counter() counter() counter() counter()","title":"\u95ed\u5305"},{"location":"%E5%86%85%E5%AE%B9/python/%E9%97%AD%E5%8C%85/#_1","text":"def out_func(a,b): c = 10 def inner_func(): s = a + b + c print(s) return inner_func #\u8c03\u7528out inner = out_func(1,2) inner() \u4ee5\u4e0a\u662f\u95ed\u5305\u7684\u57fa\u672c\u683c\u5f0f\uff0c\u53ef\u4ee5\u770b\u5230return\u662f\u53ef\u4ee5\u8fd4\u56de\u53d8\u91cf\uff0c\u51fd\u6570\u4efb\u4f55\u5185\u90e8\u7684\u5bf9\u8c61 \u95ed\u5305\u7684\u5e94\u7528\uff1a \u4fdd\u5b58\u53c2\u6570\u7684\u72b6\u6001 def generate_count(): container = [0] def add_one(): container[0] = container[0] + 1 print(\"\u8fd9\u662f\u7b2c{}\u6b21\u8ba1\u6570\".format(container[0])) return add_one counter = generate_count() counter() counter() counter() counter()","title":"\u95ed\u5305"},{"location":"%E5%86%85%E5%AE%B9/python/session%20%E4%B8%8E%20cookie.assets/session%20%E4%B8%8E%20cookie/","text":"session \u4e0e cookie \u4f1a\u8bdd\uff1a\u4e00\u7ec4\u8bf7\u6c42\u4e0e\u54cd\u5e94","title":"session \u4e0e cookie"},{"location":"%E5%86%85%E5%AE%B9/python/session%20%E4%B8%8E%20cookie.assets/session%20%E4%B8%8E%20cookie/#session-cookie","text":"\u4f1a\u8bdd\uff1a\u4e00\u7ec4\u8bf7\u6c42\u4e0e\u54cd\u5e94","title":"session \u4e0e cookie"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/","text":"\u51f8\u4f18\u5316\u5b66\u4e60\u7b14\u8bb0 \u62c9\u683c\u6717\u65e5\u4e58\u6570\u6cd5 \u6781\u5927\u503c \u6781\u5c0f\u503c \u6700\u5927\u503c \u6700\u5c0f\u503c \u8d39\u9a6c\u5b9a\u7406 \u5229\u7528\u8d39\u9a6c\u5b9a\u7406\u627e\u6700\u5927\u503c \u591a\u5143\u51fd\u6570\u7684\u6781\u503c\u4e0e\u6700\u503c \u62c9\u683c\u6717\u65e5\u4e58\u6570 KKT\u5b9a\u7406 \u62c9\u683c\u6717\u65e5\u5b9a\u7406\u662f\u4e3a\u4e86\u6c42\u591a\u5143\u51fd\u6570\u7684\u6700\u503c KKT\u662f\u62c9\u683c\u6717\u65e5\u5b9a\u7406\u7684\u63a8\u5e7f \u6570\u5b66\u4f18\u5316\uff1a \u4f18\u5316\u95ee\u9898 \u4f18\u5316\u53d8\u91cf \u76ee\u6807\u51fd\u6570 \u7ea6\u675f\u51fd\u6570 \u6700\u4f18\u89e3\u3001\u89e3 \u7ebf\u6027\u89c4\u5212 \u76ee\u6807\u51fd\u6570\u548c\u7ea6\u675f\u51fd\u6570\u90fd\u662f\u7ebf\u6027\u51fd\u6570\u3002 \u51f8\u51fd\u6570 \u6240\u4ee5\u8bf4\uff0c\u7ebf\u6027\u89c4\u5212\u662f\u51f8\u4f18\u5316\u95ee\u9898\u3002\u51f8\u4f18\u5316\u95ee\u9898\u662f\u7ebf\u6027\u89c4\u5212\u7684\u6269\u5c55\u3002 \u6700\u5c0f\u4e8c\u4e58\u95ee\u9898 \u89e3\u6790\u89e3\uff1a A\u7684\u8f6c\u7f6e\u7528\u4e8e\u6784\u9020\u65b9\u9635 \u7ebf\u6027\u89c4\u5212 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c$x=[x_1,x_2,...,x_n]$ \u90fd\u7ed9\u7684\u662f\u4e00\u4e2a\u884c\u5411\u91cf\u3002\u4f46\u662f\u6709\u65f6\u4e00\u4e2a\u52a0\u7c97\u7684 x \uff0c\u6307\u7684\u662f\u5217\u5411\u91cf\u3002 \u6c42\u89e3\u7ebf\u6027\u89c4\u5212\uff0c\u5355\u7eaf\u5f62\u6cd5\uff0c\u5185\u70b9\u6cd5 \u51f8\u4f18\u5316 \u975e\u7ebf\u6027\u4f18\u5316 \u975e\u7ebf\u6027\u51fd\u6570\u7684\u7ea6\u675f\u51fd\u6570\u662f\u975e\u7ebf\u6027\u7684\uff0c\u6240\u4ee5\u4e0d\u4e00\u5b9a\u662f\u51f8\u51fd\u6570\uff08\u975e\u7ebf\u6027\u4f18\u5316\u548c\u51f8\u4f18\u5316\u662f\u6709\u4ea4\u96c6\u7684\uff09 \u5c40\u90e8\u4f18\u5316 \u8d77\u59cb\u4f4d\u7f6e \u5927\u90e8\u5206\u5c40\u90e8\u65b9\u6cd5\u4ec5\u4ec5\u8981\u6c42\u76ee\u6807\u51fd\u6570\u548c\u7ea6\u675f\u51fd\u6570\u53ef\u5fae \u5168\u5c40\u4f18\u5316 \u975e\u51f8\u4f18\u5316\u4e2d\u7684\u51f8\u4f18\u5316 \u5c06\u51f8\u4f18\u5316\u548c\u5c40\u90e8\u4f18\u5316\u7ed3\u5408\u8d77\u6765\u3002 \u5c40\u90e8\u4f18\u5316\uff0c\u5229\u7528\u51f8\u4f18\u5316\u8fdb\u884c\u521d\u59cb\u503c\u7684\u9009\u62e9 \u975e\u51f8\u4f18\u5316\u4e2d\u7684\u51f8\u542f\u53d1\u5f0f\u7b97\u6cd5 \u5168\u5c40\u4f18\u5316\u7684\u754c \u51f8\u96c6 \u4ecb\u7ecd\u4e00\u4e9b\u6982\u5ff5\u4e0e\u5b9a\u4e49 \u76f4\u7ebf \u8fc7$x_1,x_2$\u7684\u76f4\u7ebf \uff1a \u4eff\u5c04\u96c6\u5408 \u4e00\u4e2a\u4eff\u5c04\u96c6\u5408\uff1aC\u4e2d\u4efb\u610f\u4e24\u70b9\u6784\u6210\u7684\u76f4\u7ebf\uff0c\u4ecd\u7136\u5728C\u4e2d \u4f8b\u5b50\uff1a \u76f4\u7ebf\uff0c\u5e73\u9762 \u4eff\u5c04\u5305 C\u662f\u4efb\u610f\u96c6\u5408\uff0cC\u4e2d\u6240\u6709\u4eff\u5c04\u7ec4\u5408\u7ec4\u6210\u7684\u96c6\u5408\u4e3aaff C\u4eff\u5c04\u5305\u3002\uff08\u4e00\u79cd\u6269\u5927\u60c5\u51b5\uff09 \u4e24\u4e2a\u70b9\u7684\u4eff\u5c04\u5305\u662f\u4e00\u6761\u76f4\u7ebf \u4e09\u4e2a\u70b9\u7684\u4eff\u5c04\u5305\u662f\u5e73\u9762 \u4eff\u5c04\u7ef4\u5ea6 C\u7684\u653e\u5c04\u7ef4\u5ea6\u4e3a\u5176\u4eff\u5c04\u5305\u7684\u7ef4\u5ea6\u3002 \u51f8\u96c6 \u51f8\u7ec4\u5408 \u5982\u679cC\u662f\u51f8\u96c6\uff0c$x_1,..x_k$\u5c5e\u4e8eC\uff0c\u90a3\u4e48\u51f8\u7ec4\u5408\u4e5f\u5c5e\u4e8eC \u51f8\u5305 \u51f8\u5305\u603b\u662f\u51f8\u7684 \u4e5f\u5c31\u662f\u4e00\u79cd\u677e\u5f1b\u6761\u4ef6\uff0c\u5c06C\u96c6\u5408\uff0c\u8f6c\u5316\u4e3a\u51f8\u96c6\u3002 convC\u662f\u5305\u542bC\u7684\u6700\u5c0f\u51f8\u96c6\u3002 \u4f8b\u5b50\uff1a \u9525 \u9525\u7ec4\u5408 \u8d85\u5e73\u9762 \u534a\u7a7a\u95f4 \u591a\u9762\u4f53 \u7d27\u51d1\u8868\u8fbe\u5f0f\uff1a \u5bf9\u9762\u4f53\u662f\u6709\u9650\u4e2a\u7684\u534a\u7a7a\u95f4\u548c\u8d85\u5e73\u9762\u7684\u96c6\u5408 \u5355\u7eaf\u5f62 \u5355\u7eaf\u5f62\u662f\u4e00\u7c7b\u91cd\u8981\u7684\u591a\u9762\u4f53\u3002 \u7ebf\u6bb5 \u4e09\u89d2\u5f62 \u56db\u9762\u4f53 \u7ebf\u6027\u89c4\u5212 \u8f6c\u5316\u4e3a\u6807\u51c6\u5f62\u5f0f max \u589e\u52a0\u53d8\u91cf\uff0c\u4f7f\u5f97\u7ea6\u675f\u6761\u4ef6\u4e3a\u7b49\u5f0f b>0 \u57fa\u672c\u6982\u5ff5 \u53ef\u884c\u89e3 \u6700\u4f18\u89e3 \u57fa \u5047\u8bbeA\u4e3a\u7ea6\u675f\u65b9\u7a0b $m\\times n$ \u7684\u4e3e\u8bc1\uff0c\u5176\u79e9\u4e3a $m$ , \u5982\u679cB\u662f\u77e9\u9635A\u4e2d\u7684\u4e00\u4e2a $m\\times m$\u7684\u6ee1\u79e9\u5b50\u77e9\u9635\uff0c\u5219B\u4e3a\u4e00\u4e2a\u57fa\u3002 M * N \u7684\u7cfb\u6570\u77e9\u9635 \u91cc\u9762\u7684\u4e00\u4e2aM*M\u7684\u6ee1\u79e9\u5b50\u77e9\u9635 \u5c31\u662f\u4e00\u4e2a\u57fa \u5982\u679c\u4eba\u4e3a\u7684\u5b9a\u4e49\u975e\u57fa\u53d8\u91cf\u4e3a0\uff0c\u4e24\u4e2a\u65b9\u7a0b\u662f\u540c\u89e3\u7684\u3002 \u57fa\u89e3 $C_n^m$ \u4e2a\u57fa\u89e3 \u96c6\u89e3\u662f\u9876\u70b9\u4f4d\u7f6e \u5f3a\u7ea6\u675f\u65b9\u7a0b\u7684\u6240\u6709\u4ea4\u70b9 \u57fa\u53ef\u884c\u89e3 \u6ee1\u8db3\u975e\u8d1f\u7ea6\u675f\u7684\u57fa\u89e3\u4e3a\u57fa\u53ef\u884c\u89e3 \u53ef\u884c\u57df\u7684\u9876\u70b9 \u89e3\u6cd5\u4e00\uff1a\u56fe\u89e3\u6cd5 \u89e3\u6cd5\u4e8c\uff1a\u5355\u7eaf\u5f62\u6cd5 \u539f\u7406\u8be6\u89e3 \u7531\u5b9a\u7406\u53ef\u77e5\uff0c\u5982\u679c\u8bf4\u7ebf\u6027\u89c4\u5212\u5b58\u5728\u6700\u4f18\u89e3\uff0c\u90a3\u4e48\u4e00\u5b9a \u6709\u4e00\u4e2a\u57fa\u53ef\u884c\u89e3\u662f\u6700\u4f18\u89e3 \uff0c\u6362\u800c\u8a00\u4e4b\uff0c\u6709\u4e00\u4e2a\u9876\u70b9\u80af\u5b9a\u662f\u6700\u4f18\u89e3\u3002\u4e00\u5171\u6709$C_n^m$ \u4e2a\u9876\u70b9 \u7cfb\u6570\u7684\u589e\u5e7f\u77e9\u9635\u53ef\u4ee5\u5199\u4e3a\uff1a \u200b \u8fd9\u4e2a\u60c5\u51b5\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u57fa\u53ef\u884c\u89e3\u4e3a\uff1a \u63a2\u7d22\u4e0b\u4e00\u4e2a\u57fa\u53ef\u884c\u89e3\u3002 \u5224\u65ad\u662f\u5426\u4e3a\u6700\u4f18\u89e3\u3002 \u5224\u522b\u6570 $\\theta_i$ : \u57fa\u53d8\u91cf\u7684\u68c0\u9a8c\u6570\u5fc5\u4e3a0 \u5b58\u5728$\\theta_i$\u5927\u4e8e0\uff0c\u5c31\u8bf4\u660e\u4e0d\u662f\u6700\u4f18\u89e3 \u5f53\u4f60\u5f15\u5165\u4e00\u4e2a\u5355\u4f4d\u7684\u53d8\u91cf\u7684\u65f6\u5019\u80fd\u7ed9\u76ee\u6807\u51fd\u6570\u5e26\u6765\u591a\u5927\u6539\u53d8\u3002 \u5355\u7eaf\u5f62 $$ \\sigma_{j}=c_{j}-\\boldsymbol{C} {\\boldsymbol{B}} \\boldsymbol{B}^{-1} \\boldsymbol{P} {j}=c_{j}-\\sum_{i=1}^{m} a_{i j} y_{i} $$ $c_j$ \u4ea7\u54c1\u5229\u6da6 $z_j$ \u751f\u4ea7\u8be5\u4ea7\u54c1\u6d88\u8017\u5404\u79cd\u8d44\u6e90\u7684\u5f71\u5b50\u4ef7\u683c \u4e00\u822c\u7ebf\u6027\u89c4\u5212\uff1a\u786e\u5b9a\u8d44\u6e90\u5206\u914d\u60c5\u51b5\uff0c\u6bcf\u4e2ax\u90fd\u662f\u4e00\u79cd\u4ea7\u54c1 \u5bf9\u5076\u95ee\u9898\uff1a\u6bcf\u4e2ay\u90fd\u662f\u5bf9\u8d44\u6e90\u7684\u4f30\u503c \u5c0f\u7ed3 \u89e3\u6cd5\u4e09\uff1a\u5355\u7eaf\u5f62\u6cd5\uff0c\u4eba\u5de5\u53d8\u91cf\u6cd5 \u89e3\u6cd5\u56db\uff1a\u5355\u7eaf\u5f62\u6cd5\uff0c \u4e8c\u9636\u6bb5\u6cd5 \u6570\u636e\u5305\u7edc\u5206\u6790\uff08DEA\u5206\u6790\uff09 \u56db\u6240\u5b66\u6821\u90fd\u57f9\u517b800\u540d\u5b66\u751f\uff0c\u4e3a\u4e86\u7f29\u51cf\u6210\u672c\uff0c\u6559\u804c\u5de5\u548c\u5efa\u7b51\u9762\u79ef\u90fd\u8981\u5c3d\u53ef\u80fd\u5c0f\uff0c\u6240\u4ee5\u5c31\u5f62\u6210\u4e86 \u751f\u4ea7\u524d\u6cbf\u9762 \u7ebf\u6027\u89c4\u5212\u7684\u5bf9\u5076\u7406\u8bba \u5bf9\u5076\u95ee\u9898\u7684\u57fa\u672c\u6027\u8d28 \u5f31\u5bf9\u5076\u6027 \u539f\u95ee\u9898\u6700\u4f18\u89e3\u7684\u53e3\u6807\u51fd\u6570\u4f2f\u662f\u827e\u5bf9\u5076\u95ee\u9898\u53e3\u6807\u51fd\u6570\u503c\u7684\u4e0b\u754c\uff1b\u53cd\u4e4b\u5bf9\u5076\u95ee\u9898\u6700\u4f18\u89e3\u7684\u53e3\u6807\u51fd\u6570\u503c\u662f\u5176\u539f\u95ee\u9898\u53e3\u6807\u51fd\u6570\u503c\u7684\u4e0a\u754c\u3002 \u6700\u4f18\u6027 \u5f3a\u5bf9\u5076\u6027 \uff1a\u82e5\u539f\u95ee\u9898\u53ca\u5176\u5bf9\u5076\u95ee\u9898\u5747\u5177\u6709\u53ef\u884c\u89e3\uff0c\u5219\u4e24\u8005\u5747\u5177\u6709 \u6700\u4f18\u89e3\uff0c\u4e14\u5b83\u4eec\u6700\u4f18\u89e3\u7684\u53e3\u6807\u51fd\u6570\u503c\u76f8\u7b49\u3002 \u4e92\u8865\u677e\u5f1b\u6027 \u5f71\u5b50\u4ef7\u683c \u751f\u4ea7\u5bb6\u7535\uff0c\u6709\u4e24\u79cd\u5bb6\u7535\uff0c\u5229\u6da6\u5206\u522b\u4e3a2\uff0c1\uff1a \u6362\u4e2a\u89d2\u5ea6\u601d\u8003\uff1a \u6536\u8d2d\u8be5\u516c\u53f8\uff0c\u5fc5\u987b\u51fa\u4ef7\u8981\u9ad8\u4e8e\u5b83\u7684\u751f\u4ea7\u5229\u6da6\uff1a \u8fd9\u6837\u5c31\u53ef\u4ee5\u7b97\u51fa\u6536\u8d2d\u516c\u53f8\u7684\u6700\u4f4e\u4ef7\u3002 \u901a\u8fc7\u8ba1\u7b97\u51fa$y_1,y_2,y_3$ \u53ef\u4ee5\u8ba1\u7b97\u51fa\u516c\u53f8\u4e09\u79cd\u8d44\u6e90\u7684\u4f30\u4ef7\uff0c\u4e5f\u79f0\u4e4b\u4e3a\u5f71\u5b50\u4ef7\u683c\u3002 \u7075\u654f\u5ea6\u5206\u6790 \u8fd0\u8f93\u95ee\u9898 \u6574\u6570\u89c4\u5212","title":"\u51f8\u4f18\u5316\u5b66\u4e60\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_1","text":"","title":"\u51f8\u4f18\u5316\u5b66\u4e60\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_2","text":"\u6781\u5927\u503c \u6781\u5c0f\u503c \u6700\u5927\u503c \u6700\u5c0f\u503c \u8d39\u9a6c\u5b9a\u7406 \u5229\u7528\u8d39\u9a6c\u5b9a\u7406\u627e\u6700\u5927\u503c","title":"\u62c9\u683c\u6717\u65e5\u4e58\u6570\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_3","text":"","title":"\u591a\u5143\u51fd\u6570\u7684\u6781\u503c\u4e0e\u6700\u503c"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_4","text":"","title":"\u62c9\u683c\u6717\u65e5\u4e58\u6570"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#kkt","text":"\u62c9\u683c\u6717\u65e5\u5b9a\u7406\u662f\u4e3a\u4e86\u6c42\u591a\u5143\u51fd\u6570\u7684\u6700\u503c KKT\u662f\u62c9\u683c\u6717\u65e5\u5b9a\u7406\u7684\u63a8\u5e7f","title":"KKT\u5b9a\u7406"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_5","text":"","title":"\u6570\u5b66\u4f18\u5316\uff1a"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_6","text":"\u4f18\u5316\u53d8\u91cf \u76ee\u6807\u51fd\u6570 \u7ea6\u675f\u51fd\u6570 \u6700\u4f18\u89e3\u3001\u89e3","title":"\u4f18\u5316\u95ee\u9898"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_7","text":"\u76ee\u6807\u51fd\u6570\u548c\u7ea6\u675f\u51fd\u6570\u90fd\u662f\u7ebf\u6027\u51fd\u6570\u3002","title":"\u7ebf\u6027\u89c4\u5212"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_8","text":"\u6240\u4ee5\u8bf4\uff0c\u7ebf\u6027\u89c4\u5212\u662f\u51f8\u4f18\u5316\u95ee\u9898\u3002\u51f8\u4f18\u5316\u95ee\u9898\u662f\u7ebf\u6027\u89c4\u5212\u7684\u6269\u5c55\u3002","title":"\u51f8\u51fd\u6570"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_9","text":"\u89e3\u6790\u89e3\uff1a A\u7684\u8f6c\u7f6e\u7528\u4e8e\u6784\u9020\u65b9\u9635","title":"\u6700\u5c0f\u4e8c\u4e58\u95ee\u9898"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_10","text":"\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c$x=[x_1,x_2,...,x_n]$ \u90fd\u7ed9\u7684\u662f\u4e00\u4e2a\u884c\u5411\u91cf\u3002\u4f46\u662f\u6709\u65f6\u4e00\u4e2a\u52a0\u7c97\u7684 x \uff0c\u6307\u7684\u662f\u5217\u5411\u91cf\u3002 \u6c42\u89e3\u7ebf\u6027\u89c4\u5212\uff0c\u5355\u7eaf\u5f62\u6cd5\uff0c\u5185\u70b9\u6cd5","title":"\u7ebf\u6027\u89c4\u5212"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_11","text":"","title":"\u51f8\u4f18\u5316"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_12","text":"\u975e\u7ebf\u6027\u51fd\u6570\u7684\u7ea6\u675f\u51fd\u6570\u662f\u975e\u7ebf\u6027\u7684\uff0c\u6240\u4ee5\u4e0d\u4e00\u5b9a\u662f\u51f8\u51fd\u6570\uff08\u975e\u7ebf\u6027\u4f18\u5316\u548c\u51f8\u4f18\u5316\u662f\u6709\u4ea4\u96c6\u7684\uff09 \u5c40\u90e8\u4f18\u5316 \u8d77\u59cb\u4f4d\u7f6e \u5927\u90e8\u5206\u5c40\u90e8\u65b9\u6cd5\u4ec5\u4ec5\u8981\u6c42\u76ee\u6807\u51fd\u6570\u548c\u7ea6\u675f\u51fd\u6570\u53ef\u5fae \u5168\u5c40\u4f18\u5316","title":"\u975e\u7ebf\u6027\u4f18\u5316"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_13","text":"\u5c06\u51f8\u4f18\u5316\u548c\u5c40\u90e8\u4f18\u5316\u7ed3\u5408\u8d77\u6765\u3002 \u5c40\u90e8\u4f18\u5316\uff0c\u5229\u7528\u51f8\u4f18\u5316\u8fdb\u884c\u521d\u59cb\u503c\u7684\u9009\u62e9 \u975e\u51f8\u4f18\u5316\u4e2d\u7684\u51f8\u542f\u53d1\u5f0f\u7b97\u6cd5 \u5168\u5c40\u4f18\u5316\u7684\u754c","title":"\u975e\u51f8\u4f18\u5316\u4e2d\u7684\u51f8\u4f18\u5316"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_14","text":"\u4ecb\u7ecd\u4e00\u4e9b\u6982\u5ff5\u4e0e\u5b9a\u4e49","title":"\u51f8\u96c6"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_15","text":"\u8fc7$x_1,x_2$\u7684\u76f4\u7ebf \uff1a","title":"\u76f4\u7ebf"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_16","text":"\u4e00\u4e2a\u4eff\u5c04\u96c6\u5408\uff1aC\u4e2d\u4efb\u610f\u4e24\u70b9\u6784\u6210\u7684\u76f4\u7ebf\uff0c\u4ecd\u7136\u5728C\u4e2d \u4f8b\u5b50\uff1a \u76f4\u7ebf\uff0c\u5e73\u9762","title":"\u4eff\u5c04\u96c6\u5408"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_17","text":"C\u662f\u4efb\u610f\u96c6\u5408\uff0cC\u4e2d\u6240\u6709\u4eff\u5c04\u7ec4\u5408\u7ec4\u6210\u7684\u96c6\u5408\u4e3aaff C\u4eff\u5c04\u5305\u3002\uff08\u4e00\u79cd\u6269\u5927\u60c5\u51b5\uff09 \u4e24\u4e2a\u70b9\u7684\u4eff\u5c04\u5305\u662f\u4e00\u6761\u76f4\u7ebf \u4e09\u4e2a\u70b9\u7684\u4eff\u5c04\u5305\u662f\u5e73\u9762","title":"\u4eff\u5c04\u5305"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_18","text":"C\u7684\u653e\u5c04\u7ef4\u5ea6\u4e3a\u5176\u4eff\u5c04\u5305\u7684\u7ef4\u5ea6\u3002","title":"\u4eff\u5c04\u7ef4\u5ea6"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_19","text":"","title":"\u51f8\u96c6"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_20","text":"\u5982\u679cC\u662f\u51f8\u96c6\uff0c$x_1,..x_k$\u5c5e\u4e8eC\uff0c\u90a3\u4e48\u51f8\u7ec4\u5408\u4e5f\u5c5e\u4e8eC","title":"\u51f8\u7ec4\u5408"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_21","text":"\u51f8\u5305\u603b\u662f\u51f8\u7684 \u4e5f\u5c31\u662f\u4e00\u79cd\u677e\u5f1b\u6761\u4ef6\uff0c\u5c06C\u96c6\u5408\uff0c\u8f6c\u5316\u4e3a\u51f8\u96c6\u3002 convC\u662f\u5305\u542bC\u7684\u6700\u5c0f\u51f8\u96c6\u3002 \u4f8b\u5b50\uff1a","title":"\u51f8\u5305"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_22","text":"","title":"\u9525"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_23","text":"","title":"\u9525\u7ec4\u5408"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_24","text":"","title":"\u8d85\u5e73\u9762"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_25","text":"","title":"\u534a\u7a7a\u95f4"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_26","text":"\u7d27\u51d1\u8868\u8fbe\u5f0f\uff1a \u5bf9\u9762\u4f53\u662f\u6709\u9650\u4e2a\u7684\u534a\u7a7a\u95f4\u548c\u8d85\u5e73\u9762\u7684\u96c6\u5408","title":"\u591a\u9762\u4f53"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_27","text":"\u5355\u7eaf\u5f62\u662f\u4e00\u7c7b\u91cd\u8981\u7684\u591a\u9762\u4f53\u3002 \u7ebf\u6bb5 \u4e09\u89d2\u5f62 \u56db\u9762\u4f53","title":"\u5355\u7eaf\u5f62"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_28","text":"","title":"\u7ebf\u6027\u89c4\u5212"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_29","text":"max \u589e\u52a0\u53d8\u91cf\uff0c\u4f7f\u5f97\u7ea6\u675f\u6761\u4ef6\u4e3a\u7b49\u5f0f b>0","title":"\u8f6c\u5316\u4e3a\u6807\u51c6\u5f62\u5f0f"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_30","text":"\u53ef\u884c\u89e3 \u6700\u4f18\u89e3 \u57fa \u5047\u8bbeA\u4e3a\u7ea6\u675f\u65b9\u7a0b $m\\times n$ \u7684\u4e3e\u8bc1\uff0c\u5176\u79e9\u4e3a $m$ , \u5982\u679cB\u662f\u77e9\u9635A\u4e2d\u7684\u4e00\u4e2a $m\\times m$\u7684\u6ee1\u79e9\u5b50\u77e9\u9635\uff0c\u5219B\u4e3a\u4e00\u4e2a\u57fa\u3002 M * N \u7684\u7cfb\u6570\u77e9\u9635 \u91cc\u9762\u7684\u4e00\u4e2aM*M\u7684\u6ee1\u79e9\u5b50\u77e9\u9635 \u5c31\u662f\u4e00\u4e2a\u57fa \u5982\u679c\u4eba\u4e3a\u7684\u5b9a\u4e49\u975e\u57fa\u53d8\u91cf\u4e3a0\uff0c\u4e24\u4e2a\u65b9\u7a0b\u662f\u540c\u89e3\u7684\u3002 \u57fa\u89e3 $C_n^m$ \u4e2a\u57fa\u89e3 \u96c6\u89e3\u662f\u9876\u70b9\u4f4d\u7f6e \u5f3a\u7ea6\u675f\u65b9\u7a0b\u7684\u6240\u6709\u4ea4\u70b9 \u57fa\u53ef\u884c\u89e3 \u6ee1\u8db3\u975e\u8d1f\u7ea6\u675f\u7684\u57fa\u89e3\u4e3a\u57fa\u53ef\u884c\u89e3 \u53ef\u884c\u57df\u7684\u9876\u70b9","title":"\u57fa\u672c\u6982\u5ff5"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_31","text":"","title":"\u89e3\u6cd5\u4e00\uff1a\u56fe\u89e3\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_32","text":"","title":"\u89e3\u6cd5\u4e8c\uff1a\u5355\u7eaf\u5f62\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_33","text":"\u7531\u5b9a\u7406\u53ef\u77e5\uff0c\u5982\u679c\u8bf4\u7ebf\u6027\u89c4\u5212\u5b58\u5728\u6700\u4f18\u89e3\uff0c\u90a3\u4e48\u4e00\u5b9a \u6709\u4e00\u4e2a\u57fa\u53ef\u884c\u89e3\u662f\u6700\u4f18\u89e3 \uff0c\u6362\u800c\u8a00\u4e4b\uff0c\u6709\u4e00\u4e2a\u9876\u70b9\u80af\u5b9a\u662f\u6700\u4f18\u89e3\u3002\u4e00\u5171\u6709$C_n^m$ \u4e2a\u9876\u70b9 \u7cfb\u6570\u7684\u589e\u5e7f\u77e9\u9635\u53ef\u4ee5\u5199\u4e3a\uff1a \u200b \u8fd9\u4e2a\u60c5\u51b5\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u57fa\u53ef\u884c\u89e3\u4e3a\uff1a \u63a2\u7d22\u4e0b\u4e00\u4e2a\u57fa\u53ef\u884c\u89e3\u3002 \u5224\u65ad\u662f\u5426\u4e3a\u6700\u4f18\u89e3\u3002","title":"\u539f\u7406\u8be6\u89e3"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_34","text":"$\\theta_i$ : \u57fa\u53d8\u91cf\u7684\u68c0\u9a8c\u6570\u5fc5\u4e3a0 \u5b58\u5728$\\theta_i$\u5927\u4e8e0\uff0c\u5c31\u8bf4\u660e\u4e0d\u662f\u6700\u4f18\u89e3 \u5f53\u4f60\u5f15\u5165\u4e00\u4e2a\u5355\u4f4d\u7684\u53d8\u91cf\u7684\u65f6\u5019\u80fd\u7ed9\u76ee\u6807\u51fd\u6570\u5e26\u6765\u591a\u5927\u6539\u53d8\u3002","title":"\u5224\u522b\u6570"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_35","text":"$$ \\sigma_{j}=c_{j}-\\boldsymbol{C} {\\boldsymbol{B}} \\boldsymbol{B}^{-1} \\boldsymbol{P} {j}=c_{j}-\\sum_{i=1}^{m} a_{i j} y_{i} $$ $c_j$ \u4ea7\u54c1\u5229\u6da6 $z_j$ \u751f\u4ea7\u8be5\u4ea7\u54c1\u6d88\u8017\u5404\u79cd\u8d44\u6e90\u7684\u5f71\u5b50\u4ef7\u683c \u4e00\u822c\u7ebf\u6027\u89c4\u5212\uff1a\u786e\u5b9a\u8d44\u6e90\u5206\u914d\u60c5\u51b5\uff0c\u6bcf\u4e2ax\u90fd\u662f\u4e00\u79cd\u4ea7\u54c1 \u5bf9\u5076\u95ee\u9898\uff1a\u6bcf\u4e2ay\u90fd\u662f\u5bf9\u8d44\u6e90\u7684\u4f30\u503c","title":"\u5355\u7eaf\u5f62"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_36","text":"","title":"\u5c0f\u7ed3"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_37","text":"","title":"\u89e3\u6cd5\u4e09\uff1a\u5355\u7eaf\u5f62\u6cd5\uff0c\u4eba\u5de5\u53d8\u91cf\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_38","text":"","title":"\u89e3\u6cd5\u56db\uff1a\u5355\u7eaf\u5f62\u6cd5\uff0c \u4e8c\u9636\u6bb5\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#dea","text":"\u56db\u6240\u5b66\u6821\u90fd\u57f9\u517b800\u540d\u5b66\u751f\uff0c\u4e3a\u4e86\u7f29\u51cf\u6210\u672c\uff0c\u6559\u804c\u5de5\u548c\u5efa\u7b51\u9762\u79ef\u90fd\u8981\u5c3d\u53ef\u80fd\u5c0f\uff0c\u6240\u4ee5\u5c31\u5f62\u6210\u4e86 \u751f\u4ea7\u524d\u6cbf\u9762","title":"\u6570\u636e\u5305\u7edc\u5206\u6790\uff08DEA\u5206\u6790\uff09"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_39","text":"","title":"\u7ebf\u6027\u89c4\u5212\u7684\u5bf9\u5076\u7406\u8bba"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_40","text":"\u5f31\u5bf9\u5076\u6027 \u539f\u95ee\u9898\u6700\u4f18\u89e3\u7684\u53e3\u6807\u51fd\u6570\u4f2f\u662f\u827e\u5bf9\u5076\u95ee\u9898\u53e3\u6807\u51fd\u6570\u503c\u7684\u4e0b\u754c\uff1b\u53cd\u4e4b\u5bf9\u5076\u95ee\u9898\u6700\u4f18\u89e3\u7684\u53e3\u6807\u51fd\u6570\u503c\u662f\u5176\u539f\u95ee\u9898\u53e3\u6807\u51fd\u6570\u503c\u7684\u4e0a\u754c\u3002 \u6700\u4f18\u6027 \u5f3a\u5bf9\u5076\u6027 \uff1a\u82e5\u539f\u95ee\u9898\u53ca\u5176\u5bf9\u5076\u95ee\u9898\u5747\u5177\u6709\u53ef\u884c\u89e3\uff0c\u5219\u4e24\u8005\u5747\u5177\u6709 \u6700\u4f18\u89e3\uff0c\u4e14\u5b83\u4eec\u6700\u4f18\u89e3\u7684\u53e3\u6807\u51fd\u6570\u503c\u76f8\u7b49\u3002 \u4e92\u8865\u677e\u5f1b\u6027","title":"\u5bf9\u5076\u95ee\u9898\u7684\u57fa\u672c\u6027\u8d28"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_41","text":"\u751f\u4ea7\u5bb6\u7535\uff0c\u6709\u4e24\u79cd\u5bb6\u7535\uff0c\u5229\u6da6\u5206\u522b\u4e3a2\uff0c1\uff1a \u6362\u4e2a\u89d2\u5ea6\u601d\u8003\uff1a \u6536\u8d2d\u8be5\u516c\u53f8\uff0c\u5fc5\u987b\u51fa\u4ef7\u8981\u9ad8\u4e8e\u5b83\u7684\u751f\u4ea7\u5229\u6da6\uff1a \u8fd9\u6837\u5c31\u53ef\u4ee5\u7b97\u51fa\u6536\u8d2d\u516c\u53f8\u7684\u6700\u4f4e\u4ef7\u3002 \u901a\u8fc7\u8ba1\u7b97\u51fa$y_1,y_2,y_3$ \u53ef\u4ee5\u8ba1\u7b97\u51fa\u516c\u53f8\u4e09\u79cd\u8d44\u6e90\u7684\u4f30\u4ef7\uff0c\u4e5f\u79f0\u4e4b\u4e3a\u5f71\u5b50\u4ef7\u683c\u3002","title":"\u5f71\u5b50\u4ef7\u683c"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_42","text":"","title":"\u7075\u654f\u5ea6\u5206\u6790"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_43","text":"","title":"\u8fd0\u8f93\u95ee\u9898"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E5%87%B8%E4%BC%98%E5%8C%96%E3%80%8B/#_44","text":"","title":"\u6574\u6570\u89c4\u5212"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/","text":"\u300a\u64cd\u4f5c\u7cfb\u7edf\u300b \u5b9a\u4e49 \u64cd\u4f5c\u7cfb\u7edf\u662f\u4e00\u4e2a\u63a7\u5236\u7a0b\u5e8f\uff1b \u7ba1\u7406\u5e94\u7528\u7a0b\u5e8f\uff1b \u4e3a\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u670d\u52a1\uff1b \u6740\u6b7b\u5e94\u7528\u7a0b\u5e8f\uff1b \u8d44\u6e90\u7ba1\u7406\uff1b \u7ba1\u7406\u5916\u8bbe\uff0c\u5206\u914d\u8d44\u6e90\uff1b \u5c42\u6b21 \u786c\u4ef6\u4e4b\u4e0a \u5e94\u7528\u7a0b\u5e8f\u4e4b\u4e0b \u5185\u90e8\u7ec4\u4ef6 CPU\u8c03\u5ea6\u5668 \u7269\u7406\u5185\u5b58 \u865a\u62df\u5185\u5b58 \u6587\u4ef6\u7cfb\u7edf\u7ba1\u7406 \u4e2d\u65ad\u5904\u7406\u4e0e\u8bbe\u5907\u9a71\u52a8 \u6982\u5ff5 \u5e76\u53d1\uff1a\u4e00\u6bb5\u65f6\u95f4\u5185\uff0c\u591a\u4e2a\u7a0b\u5e8f\u8fd0\u884c \u5e76\u884c\uff1a\u4e00\u4e2a\u65f6\u95f4\u70b9\uff0c\u591a\u4e2a\u7a0b\u5e8f\u8fd0\u884c \u865a\u62df\u5316\uff1a\u4e00\u53f0\u7269\u7406\u673a\u5668\u865a\u62df\u4e3a\u591a\u53f0\u673a\u5668 \u7c7b\u522b UNIX BSD\u5bb6\u65cf unix \u4f2f\u514b\u5229\u5bb6\u65cf Linux\u5bb6\u65cf windows\u5bb6\u65cf \u53d1\u5c55 60\u5e74\u4ee3 \u6279\u5904\u7406 \u5185\u5b58\u5bb9\u91cf\u8d8a\u6765\u8d8a\u5927\uff0cCPU\u6267\u884c\u591a\u4e2a\u7a0b\u5e8f --\u5e76\u53d1 IO\u6267\u884c\u6162\uff0c\u4f7f\u5f97\u7b49\u5f85\u65f6\u95f4\u8ba9\u5176\u4ed6\u7a0b\u5e8f\u6765\u6267\u884c \uff08\u8c03\u5ea6\uff0c\u4e2d\u65ad\uff09 \u5206\u65f6\u7cfb\u7edf\uff0c\u5206\u65f6\u8c03\u52a8\u3002 \u5343\u5206\u4e4b\u4e00\u79d2----\u65f6\u95f4\u7247\uff0c\u8f6e\u6d41\u5207\u6362\u8fd0\u884c\u3002\u201c\u65f6\u949f\u201d\u5b9a\u671f\u4ea7\u751f\u4e2d\u65ad \u5206\u5e03\u5f0f\u64cd\u4f5c\u7cfb\u7edf \u67b6\u6784 \u677e\u8026\u5408 \u7d27\u8026\u5408 \u865a\u62df\u673a \u542f\u52a8 disk \u5b58\u653eOS\uff0cbootloader BIOS \u57fa\u672cIO\u7cfb\u7edf \u52a0\u7535\u81ea\u68c0 \u5bfb\u627e\u663e\u5361\u548c\u6267\u884cBIOS \u5148\u52a0\u8f7dbootloader\uff0cbootloader\u52a0\u8f7dos \u4e2d\u65ad\uff0c\u5f02\u5e38\uff0c\u7cfb\u7edf\u8c03\u7528 \u7cfb\u7edf\u8c03\u7528\uff1a \u5e94\u7528\u7a0b\u5e8f\u5411OS\u53d1\u51fa\u670d\u52a1\u8bf7\u6c42 \u5f02\u5e38\uff1a \u975e\u6cd5\u7a0b\u5e8f\uff0c\u975e\u6cd5\u6307\u4ee4 \u4e2d\u65ad\uff1a \u6765\u6e90\u4e8e\u5916\u8bbe \u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u5185\u6838\u662f\u88ab\u4fe1\u4efb\u7684\u7b2c\u4e09\u65b9 \u53ea\u6709\u5185\u6838\u53ef\u4ee5\u6267\u884c\u7279\u6743\u6307\u4ee4 \u4e3a\u4e86\u65b9\u4fbf\u5e94\u7528\u7a0b\u5e8f \u5904\u7406\u65f6\u95f4\uff1a \u4e2d\u65ad\uff1a\u5f02\u6b65 \u5f02\u5e38\uff1a\u540c\u6b65 \u7cfb\u7edf\u8c03\u7528\uff1a\u5f02\u6b65\u4e0e\u540c\u6b65 \u54cd\u5e94\uff1a \u4e2d\u65ad\uff1a\u5e94\u7528\u7a0b\u5e8f\u65e0\u6cd5\u611f\u77e5 \u5f02\u5e38\uff1a\u6740\u6b7b\u6216\u91cd\u65b0\u6267\u884c \u7cfb\u7edf\u8c03\u7528\uff1a\u7b49\u5f85\u548c\u6301\u7eed \u4e2d\u65ad \u786c\u4ef6\uff1a\u8bbe\u7f6e\u4e2d\u65ad\u6807\u8bb0\uff08cpu\u521d\u59cb\u5316\uff09\u3002 \u64cd\u4f5c\u7cfb\u7edf\uff1a\u4fdd\u5b58\u7a0b\u5e8f\u6267\u884c\u7684\u73b0\u573a\u3002 \u8f6f\u4ef6\uff1a\u4fdd\u5b58\u5f53\u524d\u5904\u7406\u72b6\u6001\uff0c\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\uff0c\u6e05\u9664\u4e2d\u65ad\u6807\u8bb0\uff0c\u56de\u590d \u5f02\u5e38 \u5f02\u5e38\u73b0\u573a \u5f02\u5e38\u5904\u7406 \u6062\u590d\u73b0\u573a \u7cfb\u7edf\u8c03\u7528 \u7cfb\u7edf\u8c03\u7528\u63a5\u53e3 print \u8c03\u7528\u7cfb\u7edf\u63a5\u53e3 write Win32 API \u7528\u4e8e windows https://docs.microsoft.com/en-us/windows/win32/apiindex/windows-api-list POSIX API Java API \u7528\u4e8e java \u865a\u62df\u673a \u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u4ee5\u53ca\u5185\u5b58\u5206\u5c42\u4f53\u7cfb \u4e3b\u5b58\u5c31\u662f\u7269\u7406\u5185\u5b58\uff0c\u6bd4\u5bc4\u5b58\u5668\u4e0ecache\u5927\u5f88\u591a\uff0c\u4f46\u901f\u5ea6\u4e0d\u5982\u5bc4\u5b58\u5668\u4e0ecache\u3002 \u8d8a\u9760\u8fd1CPU\u8d8a\u5feb\uff0c\u4f46\u662f\u5bb9\u91cf\u8d8a\u5c0f -- \u5c42\u6b21\u7ed3\u6784 \u5730\u5740\u7a7a\u95f4\u4e0e\u5730\u5740\u751f\u6210 \u7269\u7406\u5730\u5740\u7a7a\u95f4\uff0c\u786c\u4ef6\u652f\u6301\u7684\u5730\u5740\u7a7a\u95f4\uff1b \u903b\u8f91\u5730\u5740\u7a7a\u95f4\uff0c\u5e94\u7528\u7a0b\u5e8f\u6240\u62e5\u6709\u7684\u5185\u5b58\u8303\u56f4\u3002 \u903b\u8f91\u5730\u5740\u7a7a\u95f4\u90fd\u662f\u843d\u5b9e\u5728\u7269\u7406\u5730\u5740\u7a7a\u95f4\u5185\u7684 \u6848\u4f8b\uff1ac\u7a0b\u5e8f c\u7f16\u8bd1\u4e3a\u6c47\u7f16\uff0c\u6c47\u7f16\u7528\u6c47\u7f16\u5668\u8f6c\u5316\u4e3a\u673a\u5668\u8bed\u8a00 \u903b\u8f91\u5730\u5740---\u6620\u5c04--->\u7269\u7406\u5730\u5740 CPU \u7684MMU\u67e5\u627e\u6620\u5c04\u8868 \u5185\u5b58\u788e\u7247\u95ee\u9898 \u7a7a\u95f2\u5185\u5b58\u4e0d\u80fd\u88ab\u5229\u7528 \u5916\u90e8\u788e\u7247 \u5185\u90e8\u788e\u7247 \u5206\u533a\u7684\u52a8\u6001\u5206\u914d \u7528\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u8fdb\u884c\u7ba1\u7406 \u9996\u6b21\u9002\u914d\u7b97\u6cd5 \u7b80\u5355\uff0c\u5bb9\u6613\u4ea7\u751f\u5916\u788e\u7247\uff0c\u4e0d\u786e\u5b9a\u6027 \u6700\u4f18\u9002\u914d\u7b97\u6cd5 \u627e\u5230\u6700\u9002\u5408\u7684\u7a7a\u95f2\u5757 \u907f\u514d\u5207\u5272\u5927\u7a7a\u95f2\u5757\uff0c\u6700\u5c0f\u5316\u5916\u90e8\u788e\u7247\u3002\u9700\u8981\u6309size\u6392\u5e8f\uff0c\u5bb9\u6613\u4ea7\u751f\u5fae\u5c0f\u5916\u788e\u7247 \u6700\u574f\u9002\u914d\u7b97\u6cd5 \u5bb9\u6613\u7834\u788e\u5927\u7684\u7a7a\u95f2\u5757\u3002 \u538b\u7f29\u5f0f\u4e0e\u4ea4\u6362\u5f0f\u788e\u7247\u6574\u7406 SWAP \u6362\u5165\u6362\u51fa https://www.bilibili.com/video/BV1wq4y1M7qf?p=15&spm_id_from=pageDriver \u975e\u8fde\u7eed\u5185\u5b58\u5206\u914d \u8fde\u7eed\u5185\u5b58\u5206\u914d\uff1a\u7ed9\u5e94\u7528\u7a0b\u5e8f\u5206\u914d\u7684\u5730\u5740\u7a7a\u95f4\u662f\u8fde\u7eed\u7684 \u5efa\u7acb\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u4e4b\u95f4\u7684\u8f6c\u6362 \u8f6f\u4ef6\u65b9\u6848 \u786c\u4ef6\u65b9\u6848 \u4e24\u79cd\u786c\u4ef6\u65b9\u6848\uff1a\u5206\u6bb5\uff0c\u5206\u9875 \u5206\u6bb5 \u6bb5\u8868\u4e2d\u5b58\u50a8\uff1a \u8d77\u59cb\uff0c\u957f\u5ea6 \u6bb5\u8868\u662fOS\u65e9\u5c31\u5efa\u7acb\u597d\u7684\uff0c\u4f9d\u636e\u5177\u4f53\u786c\u4ef6 \u5206\u9875 \u5206\u9875\u7684\u5730\u5740\u7a7a\u95f4 \u5206\u9875\u5bfb\u5740 \u9875\u53f7\uff0c\u9875\u504f\u79fb \u9875\u7684\u5927\u5c0f\u4e0d\u53d8\uff0c\u9875---\u300b\u7269\u7406\u9875\uff1a\u8d1e\u7684\u6620\u5c04\u5173\u7cfb \u9875\u8868\u7531\u64cd\u4f5c\u7cfb\u7edf\u5efa\u7acb \u591a\u7ea7\u9875\u8868 \u8282\u7701\u7a7a\u95f4 \u53cd\u5411\u9875\u8868\uff0c\u6839\u636e\u7269\u7406\u5730\u5740\u627e\u5230\u9875\u8d1e\u53f7 \u5173\u8054\u5185\u5b58\u65b9\u6848\u3002 \u57fa\u4e8e\u54c8\u5e0c\u67e5\u627e \u865a\u62df\u5185\u5b58 \u624b\u52a8\u8986\u76d6 \u81ea\u52a8\u4ea4\u6362 \u81ea\u52a8\u7684\u865a\u62df\u5185\u5b58 https://www.bilibili.com/video/BV1wq4y1M7qf?p=21 \u8986\u76d6\u6280\u672f \u4ea4\u6362\u6280\u672f \u865a\u62df\u5185\u5b58\u7ba1\u7406\u6280\u672f \u5185\u5b58\u4e0d\u591f\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u91c7\u7528\u8986\u76d6\u6280\u672f\u548c\u4ea4\u6362\u6280\u672f \u865a\u5b58\u6280\u672f\uff1a \u4e0d\u662f\u628a\u7a0b\u5e8f\u7684\u6240\u6709\u5185\u5bb9\u90fd\u653e\u5728\u5185\u5b58\u4e2d\uff1b \u52a8\u6001\u5b9e\u73b0\u5185\u5b58\u4e0e\u5916\u5b58\u4e4b\u95f4\u7684\u4ea4\u6362\u3002 \u7a0b\u5e8f\u7684\u5c40\u90e8\u6027\u539f\u7406\uff1a\u7a0b\u5e8f\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u7684\u4e00\u4e2a\u8f83\u77ed\u7684\u65f6\u671f\uff0c\u6240\u6267\u884c\u7684\u6307\u4ee4\u5730\u5740\u548c\u6307\u4ee4\u7684\u64cd\u4f5c\u5730\u5740\uff0c\u5206\u522b\u5c40\u9650\u4e8e\u4e00\u5b9a\u7684\u7a7a\u95f4\u3002 \u8fdb\u7a0b process \u8fdb\u7a0b\u662f\u4e00\u4e2a\u52a8\u6001\u7684\u8fc7\u7a0b\u3002 \u8fdb\u7a0b\u63a7\u5236\u5757 PCB process control block \u4e09\u4e2a\u4fe1\u606f\uff1a \u8fdb\u7a0b\u6807\u8bc6 PID \u5904\u7406\u673a\u72b6\u6001\u4fe1\u606f\u4fdd\u5b58\u533a \u7528\u6237\u53ef\u89c1\u5bc4\u5b58\u5668 \u63a7\u5236\u548c\u72b6\u6001\u5bc4\u5b58\u5668 \u6808\u6307\u9488 \u7ec4\u7ec7\u65b9\u5f0f\uff1a \u94fe\u8868 \u7d22\u5f15\u8868 \u8fdb\u7a0b\u7684\u751f\u547d\u5468\u671f \u8fdb\u7a0b\u521b\u5efa \u8fdb\u7a0b\u8fd0\u884c \u8fdb\u7a0b\u7b49\u5f85 \u8fdb\u7a0b\u5524\u9192 \u8fdb\u7a0b\u7ed3\u675f \u8fdb\u7a0b\u72b6\u6001\u53d8\u5316\u6a21\u578b \u65f6\u95f4\u7247\u5b8c\uff0c\u591a\u4e2a\u7a0b\u5e8f\u9ad8\u901f\u5207\u6362\u8fd0\u884c\u3002 \u8fdb\u7a0b\u6302\u8d77 \u6302\u8d77\u4e0e\u8fdb\u7a0b\u7684\u963b\u585e\u4e0d\u540c\u3002 \u8fdb\u7a0b\u6302\u8d77\u610f\u5473\u7740\u8fdb\u7a0b\u6ca1\u6709\u5360\u7528\u5185\u5b58\u7a7a\u95f4\uff0c\u5904\u4e8e\u6302\u8d77\u7684\u8fdb\u7a0b\u6620\u50cf\u5728\u786c\u76d8\u4e0a\u3002 \u64cd\u4f5c\u7cfb\u7edf\u8981\u7ef4\u62a4\u4e00\u7cfb\u5217\u8fdb\u7a0b\u3002 \u7ebf\u7a0b read()\u963b\u585e\u4e86\u6574\u4e2a\u7a0b\u5e8f\u8fdb\u884c \u7ebf\u7a0b\uff1a\u5982\u540c\u8fdb\u7a0b\u4e00\u6837\u5e76\u53d1\u8fd0\u884c \u4f46\u662f\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\u76f8\u540c\u7684\u5730\u5740\u7a7a\u95f4\u3002 \u7ebf\u7a0b\u7684\u4f18\u70b9\uff1a \u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u53ef\u4ee5\u540c\u65f6\u5b58\u5728\u591a\u4e2a\u7ebf\u7a0b \u5404\u4e2a\u7ebf\u7a0b\u5e76\u53d1\u8fdb\u884c \u5404\u4e2a\u7ebf\u7a0b\u5171\u4eab\u8d44\u6e90 \u7f3a\u70b9\uff1a \u4e00\u4e2a\u7ebf\u7a0b\u5d29\u6e83\uff0c\u4f1a\u5bfc\u81f4\u5176\u6240\u5c5e\u7684\u8fdb\u7a0b\u6240\u6709\u7684\u7ebf\u7a0b\u5d29\u6e83\u3002 \u591a\u7ebf\u7a0b \u9002\u7528\u4e8e\u9ad8\u6027\u80fd\u8ba1\u7b97 \u591a\u8fdb\u7a0b \u9002\u7528\u4e8e\u7f51\u7edc\u6d4f\u89c8\u5668 \u7ebf\u7a0b\u7684\u5b9e\u73b0 \u7528\u6237\u7ebf\u7a0b \u5185\u6838\u7ebf\u7a0b \u4e0a\u4e0b\u6587\u5207\u6362 ### \u8fdb\u7a0b\u52a0\u8f7d CPU\u8c03\u5ea6 \u8fdb\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362 CPU\u8c03\u5ea6\uff1a\u4ece\u5c31\u7eea\u961f\u5217\u4e2d\u6311\u9009\u4e00\u4e2a\u8fdb\u7a0b/\u7ebf\u7a0b\u4f5c\u4e3aCPU\u5c06\u8981\u8fd0\u884c\u7684\u4e0b\u4e00\u4e2a\u8fdb\u7a0b \u8c03\u5ea6\u7a0b\u5e8f\uff1a\u6311\u9009\u8fdb\u7a0b\u7684\u5185\u6838\u51fd\u6570 \u4ec0\u4e48\u65f6\u5019\u8c03\u5ea6 \u8c03\u5ea6\u539f\u5219 \u5145\u5206\u5730\u5229\u7528CPU\u3002 \u8bc4\u4ef7\u6307\u6807\uff1a \u8c03\u5ea6\u7b97\u6cd5 First Come First Server \u4e0d\u540c\u7684\u8c03\u5ea6\u987a\u5e8f\uff0c\u5468\u8f6c\u65f6\u95f4\u4f1a\u6709\u53d8\u5316\uff01\u56e0\u4e3a\u5468\u8f6c\u65f6\u95f4\u5305\u62ec\u4e86\u7b49\u5f85\u65f6\u95f4\u3002 https://www.bilibili.com/video/BV1wq4y1M7qf?p=50","title":"\u300a\u64cd\u4f5c\u7cfb\u7edf\u300b"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_1","text":"","title":"\u300a\u64cd\u4f5c\u7cfb\u7edf\u300b"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_2","text":"\u64cd\u4f5c\u7cfb\u7edf\u662f\u4e00\u4e2a\u63a7\u5236\u7a0b\u5e8f\uff1b \u7ba1\u7406\u5e94\u7528\u7a0b\u5e8f\uff1b \u4e3a\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u670d\u52a1\uff1b \u6740\u6b7b\u5e94\u7528\u7a0b\u5e8f\uff1b \u8d44\u6e90\u7ba1\u7406\uff1b \u7ba1\u7406\u5916\u8bbe\uff0c\u5206\u914d\u8d44\u6e90\uff1b","title":"\u5b9a\u4e49"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_3","text":"\u786c\u4ef6\u4e4b\u4e0a \u5e94\u7528\u7a0b\u5e8f\u4e4b\u4e0b","title":"\u5c42\u6b21"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_4","text":"CPU\u8c03\u5ea6\u5668 \u7269\u7406\u5185\u5b58 \u865a\u62df\u5185\u5b58 \u6587\u4ef6\u7cfb\u7edf\u7ba1\u7406 \u4e2d\u65ad\u5904\u7406\u4e0e\u8bbe\u5907\u9a71\u52a8","title":"\u5185\u90e8\u7ec4\u4ef6"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_5","text":"\u5e76\u53d1\uff1a\u4e00\u6bb5\u65f6\u95f4\u5185\uff0c\u591a\u4e2a\u7a0b\u5e8f\u8fd0\u884c \u5e76\u884c\uff1a\u4e00\u4e2a\u65f6\u95f4\u70b9\uff0c\u591a\u4e2a\u7a0b\u5e8f\u8fd0\u884c \u865a\u62df\u5316\uff1a\u4e00\u53f0\u7269\u7406\u673a\u5668\u865a\u62df\u4e3a\u591a\u53f0\u673a\u5668","title":"\u6982\u5ff5"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_6","text":"UNIX BSD\u5bb6\u65cf unix \u4f2f\u514b\u5229\u5bb6\u65cf Linux\u5bb6\u65cf windows\u5bb6\u65cf","title":"\u7c7b\u522b"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_7","text":"60\u5e74\u4ee3 \u6279\u5904\u7406 \u5185\u5b58\u5bb9\u91cf\u8d8a\u6765\u8d8a\u5927\uff0cCPU\u6267\u884c\u591a\u4e2a\u7a0b\u5e8f --\u5e76\u53d1 IO\u6267\u884c\u6162\uff0c\u4f7f\u5f97\u7b49\u5f85\u65f6\u95f4\u8ba9\u5176\u4ed6\u7a0b\u5e8f\u6765\u6267\u884c \uff08\u8c03\u5ea6\uff0c\u4e2d\u65ad\uff09 \u5206\u65f6\u7cfb\u7edf\uff0c\u5206\u65f6\u8c03\u52a8\u3002 \u5343\u5206\u4e4b\u4e00\u79d2----\u65f6\u95f4\u7247\uff0c\u8f6e\u6d41\u5207\u6362\u8fd0\u884c\u3002\u201c\u65f6\u949f\u201d\u5b9a\u671f\u4ea7\u751f\u4e2d\u65ad \u5206\u5e03\u5f0f\u64cd\u4f5c\u7cfb\u7edf","title":"\u53d1\u5c55"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_8","text":"\u677e\u8026\u5408 \u7d27\u8026\u5408 \u865a\u62df\u673a","title":"\u67b6\u6784"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_9","text":"disk \u5b58\u653eOS\uff0cbootloader BIOS \u57fa\u672cIO\u7cfb\u7edf \u52a0\u7535\u81ea\u68c0 \u5bfb\u627e\u663e\u5361\u548c\u6267\u884cBIOS \u5148\u52a0\u8f7dbootloader\uff0cbootloader\u52a0\u8f7dos","title":"\u542f\u52a8"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_10","text":"\u7cfb\u7edf\u8c03\u7528\uff1a \u5e94\u7528\u7a0b\u5e8f\u5411OS\u53d1\u51fa\u670d\u52a1\u8bf7\u6c42 \u5f02\u5e38\uff1a \u975e\u6cd5\u7a0b\u5e8f\uff0c\u975e\u6cd5\u6307\u4ee4 \u4e2d\u65ad\uff1a \u6765\u6e90\u4e8e\u5916\u8bbe \u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u5185\u6838\u662f\u88ab\u4fe1\u4efb\u7684\u7b2c\u4e09\u65b9 \u53ea\u6709\u5185\u6838\u53ef\u4ee5\u6267\u884c\u7279\u6743\u6307\u4ee4 \u4e3a\u4e86\u65b9\u4fbf\u5e94\u7528\u7a0b\u5e8f \u5904\u7406\u65f6\u95f4\uff1a \u4e2d\u65ad\uff1a\u5f02\u6b65 \u5f02\u5e38\uff1a\u540c\u6b65 \u7cfb\u7edf\u8c03\u7528\uff1a\u5f02\u6b65\u4e0e\u540c\u6b65 \u54cd\u5e94\uff1a \u4e2d\u65ad\uff1a\u5e94\u7528\u7a0b\u5e8f\u65e0\u6cd5\u611f\u77e5 \u5f02\u5e38\uff1a\u6740\u6b7b\u6216\u91cd\u65b0\u6267\u884c \u7cfb\u7edf\u8c03\u7528\uff1a\u7b49\u5f85\u548c\u6301\u7eed","title":"\u4e2d\u65ad\uff0c\u5f02\u5e38\uff0c\u7cfb\u7edf\u8c03\u7528"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_11","text":"\u786c\u4ef6\uff1a\u8bbe\u7f6e\u4e2d\u65ad\u6807\u8bb0\uff08cpu\u521d\u59cb\u5316\uff09\u3002 \u64cd\u4f5c\u7cfb\u7edf\uff1a\u4fdd\u5b58\u7a0b\u5e8f\u6267\u884c\u7684\u73b0\u573a\u3002 \u8f6f\u4ef6\uff1a\u4fdd\u5b58\u5f53\u524d\u5904\u7406\u72b6\u6001\uff0c\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\uff0c\u6e05\u9664\u4e2d\u65ad\u6807\u8bb0\uff0c\u56de\u590d","title":"\u4e2d\u65ad"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_12","text":"\u5f02\u5e38\u73b0\u573a \u5f02\u5e38\u5904\u7406 \u6062\u590d\u73b0\u573a","title":"\u5f02\u5e38"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_13","text":"\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3 print \u8c03\u7528\u7cfb\u7edf\u63a5\u53e3 write Win32 API \u7528\u4e8e windows https://docs.microsoft.com/en-us/windows/win32/apiindex/windows-api-list POSIX API Java API \u7528\u4e8e java \u865a\u62df\u673a","title":"\u7cfb\u7edf\u8c03\u7528"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_14","text":"\u4e3b\u5b58\u5c31\u662f\u7269\u7406\u5185\u5b58\uff0c\u6bd4\u5bc4\u5b58\u5668\u4e0ecache\u5927\u5f88\u591a\uff0c\u4f46\u901f\u5ea6\u4e0d\u5982\u5bc4\u5b58\u5668\u4e0ecache\u3002 \u8d8a\u9760\u8fd1CPU\u8d8a\u5feb\uff0c\u4f46\u662f\u5bb9\u91cf\u8d8a\u5c0f -- \u5c42\u6b21\u7ed3\u6784","title":"\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u4ee5\u53ca\u5185\u5b58\u5206\u5c42\u4f53\u7cfb"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_15","text":"\u7269\u7406\u5730\u5740\u7a7a\u95f4\uff0c\u786c\u4ef6\u652f\u6301\u7684\u5730\u5740\u7a7a\u95f4\uff1b \u903b\u8f91\u5730\u5740\u7a7a\u95f4\uff0c\u5e94\u7528\u7a0b\u5e8f\u6240\u62e5\u6709\u7684\u5185\u5b58\u8303\u56f4\u3002 \u903b\u8f91\u5730\u5740\u7a7a\u95f4\u90fd\u662f\u843d\u5b9e\u5728\u7269\u7406\u5730\u5740\u7a7a\u95f4\u5185\u7684 \u6848\u4f8b\uff1ac\u7a0b\u5e8f c\u7f16\u8bd1\u4e3a\u6c47\u7f16\uff0c\u6c47\u7f16\u7528\u6c47\u7f16\u5668\u8f6c\u5316\u4e3a\u673a\u5668\u8bed\u8a00 \u903b\u8f91\u5730\u5740---\u6620\u5c04--->\u7269\u7406\u5730\u5740 CPU \u7684MMU\u67e5\u627e\u6620\u5c04\u8868","title":"\u5730\u5740\u7a7a\u95f4\u4e0e\u5730\u5740\u751f\u6210"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_16","text":"\u7a7a\u95f2\u5185\u5b58\u4e0d\u80fd\u88ab\u5229\u7528 \u5916\u90e8\u788e\u7247 \u5185\u90e8\u788e\u7247","title":"\u5185\u5b58\u788e\u7247\u95ee\u9898"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_17","text":"\u7528\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u8fdb\u884c\u7ba1\u7406 \u9996\u6b21\u9002\u914d\u7b97\u6cd5 \u7b80\u5355\uff0c\u5bb9\u6613\u4ea7\u751f\u5916\u788e\u7247\uff0c\u4e0d\u786e\u5b9a\u6027 \u6700\u4f18\u9002\u914d\u7b97\u6cd5 \u627e\u5230\u6700\u9002\u5408\u7684\u7a7a\u95f2\u5757 \u907f\u514d\u5207\u5272\u5927\u7a7a\u95f2\u5757\uff0c\u6700\u5c0f\u5316\u5916\u90e8\u788e\u7247\u3002\u9700\u8981\u6309size\u6392\u5e8f\uff0c\u5bb9\u6613\u4ea7\u751f\u5fae\u5c0f\u5916\u788e\u7247 \u6700\u574f\u9002\u914d\u7b97\u6cd5 \u5bb9\u6613\u7834\u788e\u5927\u7684\u7a7a\u95f2\u5757\u3002","title":"\u5206\u533a\u7684\u52a8\u6001\u5206\u914d"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_18","text":"SWAP \u6362\u5165\u6362\u51fa https://www.bilibili.com/video/BV1wq4y1M7qf?p=15&spm_id_from=pageDriver","title":"\u538b\u7f29\u5f0f\u4e0e\u4ea4\u6362\u5f0f\u788e\u7247\u6574\u7406"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_19","text":"\u8fde\u7eed\u5185\u5b58\u5206\u914d\uff1a\u7ed9\u5e94\u7528\u7a0b\u5e8f\u5206\u914d\u7684\u5730\u5740\u7a7a\u95f4\u662f\u8fde\u7eed\u7684 \u5efa\u7acb\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u4e4b\u95f4\u7684\u8f6c\u6362 \u8f6f\u4ef6\u65b9\u6848 \u786c\u4ef6\u65b9\u6848 \u4e24\u79cd\u786c\u4ef6\u65b9\u6848\uff1a\u5206\u6bb5\uff0c\u5206\u9875","title":"\u975e\u8fde\u7eed\u5185\u5b58\u5206\u914d"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_20","text":"\u6bb5\u8868\u4e2d\u5b58\u50a8\uff1a \u8d77\u59cb\uff0c\u957f\u5ea6 \u6bb5\u8868\u662fOS\u65e9\u5c31\u5efa\u7acb\u597d\u7684\uff0c\u4f9d\u636e\u5177\u4f53\u786c\u4ef6","title":"\u5206\u6bb5"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_21","text":"\u5206\u9875\u7684\u5730\u5740\u7a7a\u95f4 \u5206\u9875\u5bfb\u5740 \u9875\u53f7\uff0c\u9875\u504f\u79fb \u9875\u7684\u5927\u5c0f\u4e0d\u53d8\uff0c\u9875---\u300b\u7269\u7406\u9875\uff1a\u8d1e\u7684\u6620\u5c04\u5173\u7cfb \u9875\u8868\u7531\u64cd\u4f5c\u7cfb\u7edf\u5efa\u7acb \u591a\u7ea7\u9875\u8868 \u8282\u7701\u7a7a\u95f4 \u53cd\u5411\u9875\u8868\uff0c\u6839\u636e\u7269\u7406\u5730\u5740\u627e\u5230\u9875\u8d1e\u53f7 \u5173\u8054\u5185\u5b58\u65b9\u6848\u3002 \u57fa\u4e8e\u54c8\u5e0c\u67e5\u627e","title":"\u5206\u9875"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_22","text":"\u624b\u52a8\u8986\u76d6 \u81ea\u52a8\u4ea4\u6362 \u81ea\u52a8\u7684\u865a\u62df\u5185\u5b58 https://www.bilibili.com/video/BV1wq4y1M7qf?p=21","title":"\u865a\u62df\u5185\u5b58"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_23","text":"","title":"\u8986\u76d6\u6280\u672f"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_24","text":"","title":"\u4ea4\u6362\u6280\u672f"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_25","text":"\u5185\u5b58\u4e0d\u591f\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u91c7\u7528\u8986\u76d6\u6280\u672f\u548c\u4ea4\u6362\u6280\u672f \u865a\u5b58\u6280\u672f\uff1a \u4e0d\u662f\u628a\u7a0b\u5e8f\u7684\u6240\u6709\u5185\u5bb9\u90fd\u653e\u5728\u5185\u5b58\u4e2d\uff1b \u52a8\u6001\u5b9e\u73b0\u5185\u5b58\u4e0e\u5916\u5b58\u4e4b\u95f4\u7684\u4ea4\u6362\u3002 \u7a0b\u5e8f\u7684\u5c40\u90e8\u6027\u539f\u7406\uff1a\u7a0b\u5e8f\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u7684\u4e00\u4e2a\u8f83\u77ed\u7684\u65f6\u671f\uff0c\u6240\u6267\u884c\u7684\u6307\u4ee4\u5730\u5740\u548c\u6307\u4ee4\u7684\u64cd\u4f5c\u5730\u5740\uff0c\u5206\u522b\u5c40\u9650\u4e8e\u4e00\u5b9a\u7684\u7a7a\u95f4\u3002","title":"\u865a\u62df\u5185\u5b58\u7ba1\u7406\u6280\u672f"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_26","text":"process \u8fdb\u7a0b\u662f\u4e00\u4e2a\u52a8\u6001\u7684\u8fc7\u7a0b\u3002","title":"\u8fdb\u7a0b"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_27","text":"PCB process control block \u4e09\u4e2a\u4fe1\u606f\uff1a \u8fdb\u7a0b\u6807\u8bc6 PID \u5904\u7406\u673a\u72b6\u6001\u4fe1\u606f\u4fdd\u5b58\u533a \u7528\u6237\u53ef\u89c1\u5bc4\u5b58\u5668 \u63a7\u5236\u548c\u72b6\u6001\u5bc4\u5b58\u5668 \u6808\u6307\u9488 \u7ec4\u7ec7\u65b9\u5f0f\uff1a \u94fe\u8868 \u7d22\u5f15\u8868","title":"\u8fdb\u7a0b\u63a7\u5236\u5757"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_28","text":"\u8fdb\u7a0b\u521b\u5efa \u8fdb\u7a0b\u8fd0\u884c \u8fdb\u7a0b\u7b49\u5f85 \u8fdb\u7a0b\u5524\u9192 \u8fdb\u7a0b\u7ed3\u675f","title":"\u8fdb\u7a0b\u7684\u751f\u547d\u5468\u671f"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_29","text":"\u65f6\u95f4\u7247\u5b8c\uff0c\u591a\u4e2a\u7a0b\u5e8f\u9ad8\u901f\u5207\u6362\u8fd0\u884c\u3002","title":"\u8fdb\u7a0b\u72b6\u6001\u53d8\u5316\u6a21\u578b"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_30","text":"\u6302\u8d77\u4e0e\u8fdb\u7a0b\u7684\u963b\u585e\u4e0d\u540c\u3002 \u8fdb\u7a0b\u6302\u8d77\u610f\u5473\u7740\u8fdb\u7a0b\u6ca1\u6709\u5360\u7528\u5185\u5b58\u7a7a\u95f4\uff0c\u5904\u4e8e\u6302\u8d77\u7684\u8fdb\u7a0b\u6620\u50cf\u5728\u786c\u76d8\u4e0a\u3002 \u64cd\u4f5c\u7cfb\u7edf\u8981\u7ef4\u62a4\u4e00\u7cfb\u5217\u8fdb\u7a0b\u3002","title":"\u8fdb\u7a0b\u6302\u8d77"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_31","text":"read()\u963b\u585e\u4e86\u6574\u4e2a\u7a0b\u5e8f\u8fdb\u884c \u7ebf\u7a0b\uff1a\u5982\u540c\u8fdb\u7a0b\u4e00\u6837\u5e76\u53d1\u8fd0\u884c \u4f46\u662f\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\u76f8\u540c\u7684\u5730\u5740\u7a7a\u95f4\u3002 \u7ebf\u7a0b\u7684\u4f18\u70b9\uff1a \u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u53ef\u4ee5\u540c\u65f6\u5b58\u5728\u591a\u4e2a\u7ebf\u7a0b \u5404\u4e2a\u7ebf\u7a0b\u5e76\u53d1\u8fdb\u884c \u5404\u4e2a\u7ebf\u7a0b\u5171\u4eab\u8d44\u6e90 \u7f3a\u70b9\uff1a \u4e00\u4e2a\u7ebf\u7a0b\u5d29\u6e83\uff0c\u4f1a\u5bfc\u81f4\u5176\u6240\u5c5e\u7684\u8fdb\u7a0b\u6240\u6709\u7684\u7ebf\u7a0b\u5d29\u6e83\u3002 \u591a\u7ebf\u7a0b \u9002\u7528\u4e8e\u9ad8\u6027\u80fd\u8ba1\u7b97 \u591a\u8fdb\u7a0b \u9002\u7528\u4e8e\u7f51\u7edc\u6d4f\u89c8\u5668","title":"\u7ebf\u7a0b"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_32","text":"\u7528\u6237\u7ebf\u7a0b \u5185\u6838\u7ebf\u7a0b","title":"\u7ebf\u7a0b\u7684\u5b9e\u73b0"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_33","text":"### \u8fdb\u7a0b\u52a0\u8f7d","title":"\u4e0a\u4e0b\u6587\u5207\u6362"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#cpu","text":"\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362 CPU\u8c03\u5ea6\uff1a\u4ece\u5c31\u7eea\u961f\u5217\u4e2d\u6311\u9009\u4e00\u4e2a\u8fdb\u7a0b/\u7ebf\u7a0b\u4f5c\u4e3aCPU\u5c06\u8981\u8fd0\u884c\u7684\u4e0b\u4e00\u4e2a\u8fdb\u7a0b \u8c03\u5ea6\u7a0b\u5e8f\uff1a\u6311\u9009\u8fdb\u7a0b\u7684\u5185\u6838\u51fd\u6570 \u4ec0\u4e48\u65f6\u5019\u8c03\u5ea6","title":"CPU\u8c03\u5ea6"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_34","text":"\u5145\u5206\u5730\u5229\u7528CPU\u3002 \u8bc4\u4ef7\u6307\u6807\uff1a","title":"\u8c03\u5ea6\u539f\u5219"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_35","text":"First Come First Server \u4e0d\u540c\u7684\u8c03\u5ea6\u987a\u5e8f\uff0c\u5468\u8f6c\u65f6\u95f4\u4f1a\u6709\u53d8\u5316\uff01\u56e0\u4e3a\u5468\u8f6c\u65f6\u95f4\u5305\u62ec\u4e86\u7b49\u5f85\u65f6\u95f4\u3002 https://www.bilibili.com/video/BV1wq4y1M7qf?p=50","title":"\u8c03\u5ea6\u7b97\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%9A%E5%8E%9F%E7%90%86%E5%85%A5%E9%97%A8%E3%80%8B/","text":"\u300a\u6df1\u5165\u6d45\u51fa\u5f3a\u5316\u5b66\u4e60\uff1a\u539f\u7406\u5165\u95e8\u300b \u9a6c\u5c14\u79d1\u592b\u51b3\u7b56\u8fc7\u7a0b \u9a6c\u5c14\u79d1\u592b\u6027 \uff1a\u6307\u7684\u662f\u7cfb\u7edf\u7684\u4e0b\u4e00\u4e2a\u72b6\u6001$s_{t+1}$\u4ec5\u4e0e\u5f53\u524d\u72b6\u6001$s_{t}$\u6709\u5173\uff0c\u800c\u4e0e\u4ee5\u524d\u7684\u72b6\u6001\u65e0\u5173\u3002 $$ p(s_{t+1}|s_t)=p(s_{t+1}|s_1,...,s_t) $$ \u9a6c\u5c14\u79d1\u592b\u8fc7\u7a0b \uff1a\u9a6c\u5c14\u79d1\u592b\u8fc7\u7a0b\u7528\u4e8c\u5143\u7ec4\u8868\u793a\uff0c(S,P)\uff0c\u5176\u4e2dS\u662f\u6709\u9650\u72b6\u6001\u96c6\u5408\uff0cP\u662f\u72b6\u6001\u8f6c\u79fb\u77e9\u9635\u3002 \u9a6c\u5c14\u79d1\u592b\u51b3\u7b56\u51b3\u7b56\u8fc7\u7a0b \uff1a $(S,A,P,R,\\lambda)$ (\u72b6\u6001\u96c6\uff0c\u52a8\u4f5c\u96c6\uff0c\u72b6\u6001\u8f6c\u79fb\u77e9\u9635\uff0c\u56de\u62a5\u51fd\u6570\uff0c\u6298\u6263\u56e0\u5b50) \u9a6c\u5c14\u79d1\u592b\u51b3\u7b56\u8fc7\u7a0b\u7684\u72b6\u6001\u8f6c\u79fb\u77e9\u9635\u662f\u5305\u542b\u52a8\u4f5c\u7684 \u5f3a\u5316\u5b66\u4e60\u7684\u57fa\u672c\u6982\u5ff5 \u7ed9\u5b9a\u4e00\u4e2a\u9a6c\u5c14\u79d1\u592b\u51b3\u7b56\u8fc7\u7a0b\uff0c\u5bfb\u627e\u6700\u4f18\u7b56\u7565\u3002 \u7b56\u7565 \u7b56\u7565 \u662f\u72b6\u6001\u5230\u52a8\u4f5c\u7684\u6620\u5c04\uff0c\u5e38\u7528$\\pi$\u8868\u793a\u3002\u5b83\u6307\u7684\u662f\u7ed9\u5b9a\u72b6\u6001s\u65f6\uff0c\u52a8\u4f5c\u96c6\u4e0a\u7684\u4e00\u4e2a\u5206\u5e03\uff0c\u5373\uff1a $$ \\pi(a|s)=p(A_t=a|S_t=s) $$ \u5f3a\u5316\u5b66\u4e60\u4e00\u822c\u91c7\u7528\u968f\u673a\u7b56\u7565\uff0c\u539f\u56e0\u662f\u968f\u673a\u7b56\u7565\u53ef\u4ee5\u5c06\u63a2\u7d22\u8026\u5408\u5230\u91c7\u6837\u8fc7\u7a0b\u4e2d\u3002 \u5f53\u7ed9\u5b9a\u7b56\u7565$\\pi$\u7684\u65f6\u5019\uff0c\u72b6\u6001\u5e8f\u5217\u53ef\u80fd\u4e3a\uff1a $$ \\begin{aligned} &s_{1} \\rightarrow s_{2} \\rightarrow s_{3} \\rightarrow s_{4} \\rightarrow s_{5} \\ &s_{1} \\rightarrow s_{2} \\rightarrow s_{3} \\rightarrow s_{5} \\ &\\vdots \\end{aligned} $$ \u56e0\u4e3a\u7b56\u7565\u4e0e\u72b6\u6001\u8f6c\u79fb\u90fd\u5177\u6709\u968f\u673a\u6027\uff01\u6240\u4ee5\u7d2f\u79ef\u56de\u62a5\uff1a $$ G_{t}=R_{t+1}+\\gamma R_{t+2}+\\cdots=\\sum_{k=0}^{\\infty} \\gamma^{k} R_{t+k+1} $$ \u662f\u968f\u673a\u7684\uff0c\u4e3a\u4e86\u8bc4\u4ef7\u72b6\u6001$s_1$\uff0c\u9700\u8981\u627e\u5230\u4e00\u4e2a\u786e\u5b9a\u7684\u503c\uff0c\u6240\u4ee5\u7528\u7d2f\u79ef\u56de\u62a5\u7684\u671f\u671b\u6765\u8868\u793a\u3002 \u72b6\u6001\u4ef7\u503c\u51fd\u6570 \u7ed9\u5b9a\u7b56\u7565$\\pi$\uff0c\u7d2f\u79ef\u56de\u62a5\u670d\u4ece\u4e00\u4e2a\u6982\u7387\u5206\u5e03\uff0c\u7d2f\u8ba1\u6c47\u62a5\u5728s\u5904\u7684\u671f\u671b\u503c\u5b9a\u4e49\u4e3a\uff1a $$ v_{\\pi}(s)=\\mathrm{E} {\\pi}\\left[\\sum {k=0}^{\\infty} \\gamma^{k} R_{t+k+1} \\mid S_{t}=s\\right] $$ \u8fd9\u5c31\u662f\u72b6\u6001\u4ef7\u503c\u51fd\u6570\u3002 \u72b6\u6001\u884c\u4e3a\u4ef7\u503c\u51fd\u6570 $$ q_{\\pi}(s, a)=E_{\\pi}\\left[\\sum_{k=0}^{\\infty} \\gamma^{k} R_{t+k+1} \\mid S_{t}=s, A_{t}=a\\right] $$ \u72b6\u6001\u884c\u4e3a\u4ef7\u503c\u51fd\u6570\uff0c\u5b83\u63cf\u8ff0\u7684\u662f\u5728\u7ed9\u5b9a\u72b6\u6001\uff0c\u7ed9\u5b9a\u7b56\u7565\uff0c\u8be5\u52a8\u4f5c\u7684\u4ef7\u503c\u3002 \u8d1d\u5c14\u66fc\u65b9\u7a0b $$ \\begin{aligned} &v(s)=E\\left[G_{t} \\mid S_{t}=s\\right] \\ &=E\\left[R_{t+1}+\\gamma R_{t+2}+\\cdots \\mid S_{t}=s\\right] \\ &=E\\left[R_{t+1}+\\gamma\\left(R_{t+2}+\\gamma R_{t+3}+\\cdots\\right) \\mid S_{t}=s\\right] \\ &=E\\left[R_{t+1}+\\gamma G_{t+1} \\mid S_{t}=s\\right] \\ &=E\\left[R_{t+1}+\\gamma v\\left(S_{t+1}\\right) \\mid S_{t}=s\\right] \\end{aligned} $$ \u6700\u4f18\u72b6\u6001\u4ef7\u503c\u51fd\u6570 \u6700\u4f18\u72b6\u6001\u4ef7\u503c\u51fd\u6570\u4e3a\u6240\u6709\u7b56\u7565\u4e2d\uff0c\u503c\u6700\u5927\u7684\u503c\u51fd\u6570\uff1a $$ v^{*}(s)=\\max {\\pi} v {\\pi}(s) $$ \u6700\u4f18\u72b6\u6001\u884c\u4e3a\u4ef7\u503c\u51fd\u6570\uff1a $$ q^{*}(s, a)=\\max {\\pi} q {\\pi}(s, a) $$ \u5c0f\u7ed3 bootstraping \u7b97\u6cd5 \u72b6\u6001\u4ef7\u503c\u51fd\u6570\u53ef\u4ee5\u6539\u5199\u4e3a\u4ee5\u4e0b\u5f62\u5f0f\uff1a $$ v_{\\pi}(s)=\\sum_{a \\in A} \\pi(a \\mid s)\\left(R_{s}^{a}+\\gamma \\sum_{s^{\\prime} \\in S} P_{s s^{\\prime}}^{a}v_{\\pi}\\left(s^{\\prime}\\right)\\right) $$ \u53ef\u4ee5\u770b\u5230\uff0c\u4ef7\u503c\u51fd\u6570\u662f\u672a\u77e5\u7684\uff0c\u8fd9\u8be5\u5982\u4f55\u89e3\u5462\uff1f \u8fd9\u4e2a\u5f0f\u5b50\u91cc\u5df2\u77e5\uff0c$R_{s}^{a}, \\pi, P^{a} {ss'}$ \uff0c\u672a\u77e5 $v \\pi$ \u8fd9\u662f\u4e00\u79cd\u8fed\u4ee3\u7b97\u6cd5\uff0c\u4e0d\u65ad\u5730\u66f4\u65b0$v()$\u3002 \u901a\u8fc7\u8fd9\u4e2a\u7b56\u7565\u8bc4\u4f30\u7b97\u6cd5\uff0c\u53ef\u4ee5\u5f97\u5230\u67d0\u4e2a\u52a8\u4f5c\u51fd\u6570\u7684\u503c\u51fd\u6570\u3002 \u5728\u901a\u8fc7\u8fd9\u4e2a\u503c\u51fd\u6570\u6765\u6539\u5584\u7b56\u7565\uff1a \u5982\u679c\u91c7\u7528\u8d2a\u5a6a\u5f97\u65b9\u5f0f\uff0c\u90a3\u4e48\uff1a \u5982\u679c\u53ea\u8bc4\u4f30\u4e00\u6b21\u540e\u5c31\u5bf9\u7b56\u7565\u8fdb\u884c\u6539\u5584\uff0c\u5219\u79f0\u4e3a\u503c\u51fd\u6570\u8fed\u4ee3\u7b97\u6cd5\uff1a \u503c\u51fd\u6570\u8fed\u4ee3\u7b97\u6cd5\uff1a \u503c\u51fd\u6570\u8bc4\u4f30\u8fc7\u7a0b\u4e2d\uff0c\u5305\u62ec\u4e24\u4e2a\u8fed\u4ee3\u5faa\u73af\uff1a \u5916\u5c42\u662f\u4e3a\u4e86\u4fdd\u8bc1\u503c\u51fd\u6570\u7684\u51c6\u786e\u6027 \u5185\u5c42\u662f\u662f\u5bf9\u6240\u6709\u72b6\u6001\u7a7a\u95f4\u7684\u626b\u63cf \u8fd9\u91cc\u53cd\u6620\u51fa\u4e86dp\u7b97\u6cd5\u4e0e\u65e0\u6a21\u578b\u7684\u5f3a\u5316\u5b66\u4e60\u7684\u672c\u8d28\u533a\u522b\uff1a\u72b6\u6001\u8f6c\u79fb\u77e9\u9635P\uff01 dp\u5df2\u77e5\u6a21\u578b\uff0c\u6240\u4ee5\u53ef\u4ee5\u786e\u5207\u5730\u77e5\u9053\u6bcf\u4e00\u6b65\u6267\u884c\u540e\u7684\u72b6\u6001\uff0c\u8fd9\u4e2a\u6027\u8d28\u4f7f\u5f97\u667a\u80fd\u4f53\u4e0d\u9700\u8981\u91c7\u53d6\u4efb\u4f55\u884c\u52a8\u5c31\u80fd\u5bf9\u672a\u6765\u8fdb\u884c\u8bc4\u4f30\u3002","title":"\u300a\u6df1\u5165\u6d45\u51fa\u5f3a\u5316\u5b66\u4e60\uff1a\u539f\u7406\u5165\u95e8\u300b"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%9A%E5%8E%9F%E7%90%86%E5%85%A5%E9%97%A8%E3%80%8B/#_1","text":"\u9a6c\u5c14\u79d1\u592b\u51b3\u7b56\u8fc7\u7a0b \u9a6c\u5c14\u79d1\u592b\u6027 \uff1a\u6307\u7684\u662f\u7cfb\u7edf\u7684\u4e0b\u4e00\u4e2a\u72b6\u6001$s_{t+1}$\u4ec5\u4e0e\u5f53\u524d\u72b6\u6001$s_{t}$\u6709\u5173\uff0c\u800c\u4e0e\u4ee5\u524d\u7684\u72b6\u6001\u65e0\u5173\u3002 $$ p(s_{t+1}|s_t)=p(s_{t+1}|s_1,...,s_t) $$ \u9a6c\u5c14\u79d1\u592b\u8fc7\u7a0b \uff1a\u9a6c\u5c14\u79d1\u592b\u8fc7\u7a0b\u7528\u4e8c\u5143\u7ec4\u8868\u793a\uff0c(S,P)\uff0c\u5176\u4e2dS\u662f\u6709\u9650\u72b6\u6001\u96c6\u5408\uff0cP\u662f\u72b6\u6001\u8f6c\u79fb\u77e9\u9635\u3002 \u9a6c\u5c14\u79d1\u592b\u51b3\u7b56\u51b3\u7b56\u8fc7\u7a0b \uff1a $(S,A,P,R,\\lambda)$ (\u72b6\u6001\u96c6\uff0c\u52a8\u4f5c\u96c6\uff0c\u72b6\u6001\u8f6c\u79fb\u77e9\u9635\uff0c\u56de\u62a5\u51fd\u6570\uff0c\u6298\u6263\u56e0\u5b50) \u9a6c\u5c14\u79d1\u592b\u51b3\u7b56\u8fc7\u7a0b\u7684\u72b6\u6001\u8f6c\u79fb\u77e9\u9635\u662f\u5305\u542b\u52a8\u4f5c\u7684","title":"\u300a\u6df1\u5165\u6d45\u51fa\u5f3a\u5316\u5b66\u4e60\uff1a\u539f\u7406\u5165\u95e8\u300b"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%9A%E5%8E%9F%E7%90%86%E5%85%A5%E9%97%A8%E3%80%8B/#_2","text":"\u7ed9\u5b9a\u4e00\u4e2a\u9a6c\u5c14\u79d1\u592b\u51b3\u7b56\u8fc7\u7a0b\uff0c\u5bfb\u627e\u6700\u4f18\u7b56\u7565\u3002","title":"\u5f3a\u5316\u5b66\u4e60\u7684\u57fa\u672c\u6982\u5ff5"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%9A%E5%8E%9F%E7%90%86%E5%85%A5%E9%97%A8%E3%80%8B/#_3","text":"\u7b56\u7565 \u662f\u72b6\u6001\u5230\u52a8\u4f5c\u7684\u6620\u5c04\uff0c\u5e38\u7528$\\pi$\u8868\u793a\u3002\u5b83\u6307\u7684\u662f\u7ed9\u5b9a\u72b6\u6001s\u65f6\uff0c\u52a8\u4f5c\u96c6\u4e0a\u7684\u4e00\u4e2a\u5206\u5e03\uff0c\u5373\uff1a $$ \\pi(a|s)=p(A_t=a|S_t=s) $$ \u5f3a\u5316\u5b66\u4e60\u4e00\u822c\u91c7\u7528\u968f\u673a\u7b56\u7565\uff0c\u539f\u56e0\u662f\u968f\u673a\u7b56\u7565\u53ef\u4ee5\u5c06\u63a2\u7d22\u8026\u5408\u5230\u91c7\u6837\u8fc7\u7a0b\u4e2d\u3002 \u5f53\u7ed9\u5b9a\u7b56\u7565$\\pi$\u7684\u65f6\u5019\uff0c\u72b6\u6001\u5e8f\u5217\u53ef\u80fd\u4e3a\uff1a $$ \\begin{aligned} &s_{1} \\rightarrow s_{2} \\rightarrow s_{3} \\rightarrow s_{4} \\rightarrow s_{5} \\ &s_{1} \\rightarrow s_{2} \\rightarrow s_{3} \\rightarrow s_{5} \\ &\\vdots \\end{aligned} $$ \u56e0\u4e3a\u7b56\u7565\u4e0e\u72b6\u6001\u8f6c\u79fb\u90fd\u5177\u6709\u968f\u673a\u6027\uff01\u6240\u4ee5\u7d2f\u79ef\u56de\u62a5\uff1a $$ G_{t}=R_{t+1}+\\gamma R_{t+2}+\\cdots=\\sum_{k=0}^{\\infty} \\gamma^{k} R_{t+k+1} $$ \u662f\u968f\u673a\u7684\uff0c\u4e3a\u4e86\u8bc4\u4ef7\u72b6\u6001$s_1$\uff0c\u9700\u8981\u627e\u5230\u4e00\u4e2a\u786e\u5b9a\u7684\u503c\uff0c\u6240\u4ee5\u7528\u7d2f\u79ef\u56de\u62a5\u7684\u671f\u671b\u6765\u8868\u793a\u3002","title":"\u7b56\u7565"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%9A%E5%8E%9F%E7%90%86%E5%85%A5%E9%97%A8%E3%80%8B/#_4","text":"\u7ed9\u5b9a\u7b56\u7565$\\pi$\uff0c\u7d2f\u79ef\u56de\u62a5\u670d\u4ece\u4e00\u4e2a\u6982\u7387\u5206\u5e03\uff0c\u7d2f\u8ba1\u6c47\u62a5\u5728s\u5904\u7684\u671f\u671b\u503c\u5b9a\u4e49\u4e3a\uff1a $$ v_{\\pi}(s)=\\mathrm{E} {\\pi}\\left[\\sum {k=0}^{\\infty} \\gamma^{k} R_{t+k+1} \\mid S_{t}=s\\right] $$ \u8fd9\u5c31\u662f\u72b6\u6001\u4ef7\u503c\u51fd\u6570\u3002","title":"\u72b6\u6001\u4ef7\u503c\u51fd\u6570"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%9A%E5%8E%9F%E7%90%86%E5%85%A5%E9%97%A8%E3%80%8B/#_5","text":"$$ q_{\\pi}(s, a)=E_{\\pi}\\left[\\sum_{k=0}^{\\infty} \\gamma^{k} R_{t+k+1} \\mid S_{t}=s, A_{t}=a\\right] $$ \u72b6\u6001\u884c\u4e3a\u4ef7\u503c\u51fd\u6570\uff0c\u5b83\u63cf\u8ff0\u7684\u662f\u5728\u7ed9\u5b9a\u72b6\u6001\uff0c\u7ed9\u5b9a\u7b56\u7565\uff0c\u8be5\u52a8\u4f5c\u7684\u4ef7\u503c\u3002","title":"\u72b6\u6001\u884c\u4e3a\u4ef7\u503c\u51fd\u6570"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%9A%E5%8E%9F%E7%90%86%E5%85%A5%E9%97%A8%E3%80%8B/#_6","text":"$$ \\begin{aligned} &v(s)=E\\left[G_{t} \\mid S_{t}=s\\right] \\ &=E\\left[R_{t+1}+\\gamma R_{t+2}+\\cdots \\mid S_{t}=s\\right] \\ &=E\\left[R_{t+1}+\\gamma\\left(R_{t+2}+\\gamma R_{t+3}+\\cdots\\right) \\mid S_{t}=s\\right] \\ &=E\\left[R_{t+1}+\\gamma G_{t+1} \\mid S_{t}=s\\right] \\ &=E\\left[R_{t+1}+\\gamma v\\left(S_{t+1}\\right) \\mid S_{t}=s\\right] \\end{aligned} $$","title":"\u8d1d\u5c14\u66fc\u65b9\u7a0b"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%9A%E5%8E%9F%E7%90%86%E5%85%A5%E9%97%A8%E3%80%8B/#_7","text":"\u6700\u4f18\u72b6\u6001\u4ef7\u503c\u51fd\u6570\u4e3a\u6240\u6709\u7b56\u7565\u4e2d\uff0c\u503c\u6700\u5927\u7684\u503c\u51fd\u6570\uff1a $$ v^{*}(s)=\\max {\\pi} v {\\pi}(s) $$","title":"\u6700\u4f18\u72b6\u6001\u4ef7\u503c\u51fd\u6570"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%9A%E5%8E%9F%E7%90%86%E5%85%A5%E9%97%A8%E3%80%8B/#_8","text":"$$ q^{*}(s, a)=\\max {\\pi} q {\\pi}(s, a) $$","title":"\u6700\u4f18\u72b6\u6001\u884c\u4e3a\u4ef7\u503c\u51fd\u6570\uff1a"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%9A%E5%8E%9F%E7%90%86%E5%85%A5%E9%97%A8%E3%80%8B/#_9","text":"","title":"\u5c0f\u7ed3"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%9A%E5%8E%9F%E7%90%86%E5%85%A5%E9%97%A8%E3%80%8B/#bootstraping","text":"\u72b6\u6001\u4ef7\u503c\u51fd\u6570\u53ef\u4ee5\u6539\u5199\u4e3a\u4ee5\u4e0b\u5f62\u5f0f\uff1a $$ v_{\\pi}(s)=\\sum_{a \\in A} \\pi(a \\mid s)\\left(R_{s}^{a}+\\gamma \\sum_{s^{\\prime} \\in S} P_{s s^{\\prime}}^{a}v_{\\pi}\\left(s^{\\prime}\\right)\\right) $$ \u53ef\u4ee5\u770b\u5230\uff0c\u4ef7\u503c\u51fd\u6570\u662f\u672a\u77e5\u7684\uff0c\u8fd9\u8be5\u5982\u4f55\u89e3\u5462\uff1f \u8fd9\u4e2a\u5f0f\u5b50\u91cc\u5df2\u77e5\uff0c$R_{s}^{a}, \\pi, P^{a} {ss'}$ \uff0c\u672a\u77e5 $v \\pi$ \u8fd9\u662f\u4e00\u79cd\u8fed\u4ee3\u7b97\u6cd5\uff0c\u4e0d\u65ad\u5730\u66f4\u65b0$v()$\u3002 \u901a\u8fc7\u8fd9\u4e2a\u7b56\u7565\u8bc4\u4f30\u7b97\u6cd5\uff0c\u53ef\u4ee5\u5f97\u5230\u67d0\u4e2a\u52a8\u4f5c\u51fd\u6570\u7684\u503c\u51fd\u6570\u3002 \u5728\u901a\u8fc7\u8fd9\u4e2a\u503c\u51fd\u6570\u6765\u6539\u5584\u7b56\u7565\uff1a \u5982\u679c\u91c7\u7528\u8d2a\u5a6a\u5f97\u65b9\u5f0f\uff0c\u90a3\u4e48\uff1a \u5982\u679c\u53ea\u8bc4\u4f30\u4e00\u6b21\u540e\u5c31\u5bf9\u7b56\u7565\u8fdb\u884c\u6539\u5584\uff0c\u5219\u79f0\u4e3a\u503c\u51fd\u6570\u8fed\u4ee3\u7b97\u6cd5\uff1a","title":"bootstraping \u7b97\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%9A%E5%8E%9F%E7%90%86%E5%85%A5%E9%97%A8%E3%80%8B/#_10","text":"\u503c\u51fd\u6570\u8bc4\u4f30\u8fc7\u7a0b\u4e2d\uff0c\u5305\u62ec\u4e24\u4e2a\u8fed\u4ee3\u5faa\u73af\uff1a \u5916\u5c42\u662f\u4e3a\u4e86\u4fdd\u8bc1\u503c\u51fd\u6570\u7684\u51c6\u786e\u6027 \u5185\u5c42\u662f\u662f\u5bf9\u6240\u6709\u72b6\u6001\u7a7a\u95f4\u7684\u626b\u63cf \u8fd9\u91cc\u53cd\u6620\u51fa\u4e86dp\u7b97\u6cd5\u4e0e\u65e0\u6a21\u578b\u7684\u5f3a\u5316\u5b66\u4e60\u7684\u672c\u8d28\u533a\u522b\uff1a\u72b6\u6001\u8f6c\u79fb\u77e9\u9635P\uff01 dp\u5df2\u77e5\u6a21\u578b\uff0c\u6240\u4ee5\u53ef\u4ee5\u786e\u5207\u5730\u77e5\u9053\u6bcf\u4e00\u6b65\u6267\u884c\u540e\u7684\u72b6\u6001\uff0c\u8fd9\u4e2a\u6027\u8d28\u4f7f\u5f97\u667a\u80fd\u4f53\u4e0d\u9700\u8981\u91c7\u53d6\u4efb\u4f55\u884c\u52a8\u5c31\u80fd\u5bf9\u672a\u6765\u8fdb\u884c\u8bc4\u4f30\u3002","title":"\u503c\u51fd\u6570\u8fed\u4ee3\u7b97\u6cd5\uff1a"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/","text":"\u6df1\u5ea6\u5b66\u4e60 \u6df1\u5ea6\u5b66\u4e60 \u6570\u5b66\u57fa\u7840 tensorflow \u4e00\u4e9b\u57fa\u672c\u6982\u5ff5 \u5f20\u91cf \u5982\u4f55\u7406\u89e3\u9ad8\u7ef4\u5f20\u91cf \u7d22\u5f15\u4e0eslicing reshape broadcasting \u7279\u5f81 \u77e9\u9635\u4e58\u6cd5 \u5c0f\u77e5\u8bc6\u70b9\uff1a \u5e38\u7528\u51fd\u6570 tf.Variable \u5e38\u7528\u8fd0\u7b97\u51fd\u6570 \u8f93\u5165\u6807\u7b7e\uff0c\u6807\u7b7e tf.GradientTape tf.one_hot tf.argmax model.fit() \u7528generator\u6765\u505a\u8f93\u5165\uff1ax tf.data \u4ece\u5185\u5b58\u4e2d\u52a0\u8f7d\u6570\u636e tf.data.Dataset.element_spec Dataset.batch tf.nest functions tf.nest.flatten graph keras sequential model \u7f51\u7edc\u7ed3\u6784 model.compile model.fit build(self, inputs_shape) keras.backend.rnn \u6a21\u578b\u7684\u4fdd\u5b58\u4e0e\u52a0\u8f7d \u5168\u90e8\u4fdd\u5b58 \u4fdd\u5b58\u7ed3\u6784 \u4fdd\u5b58\u6743\u91cd\uff0c\u53c2\u6570 pytorch \u51c6\u5907\u5de5\u4f5c torch.utils.data.Dataset \u81ea\u5b9a\u4e49\u6570\u636e\u96c6 torch.utils.data.DataLoader nn.module nn.module\u4e2d\u7684layer \u5e38\u7528\u51fd\u6570 \u8bad\u7ec3\u7f51\u7edc \u53cd\u5411\u4f20\u64ad \u8ba1\u7b97\u56fe\uff1a \u5fae\u79ef\u5206\u4e2d\u7684\u94fe\u5f0f\u6cd5\u5219 \u7b2c\u4e00\u4e2a\u7248\u672c\u7684\u53cd\u5411\u4f20\u64ad \u7528\u4f8b\u5b50\u6765\u8bf4\u660e\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5 \u771f\u6b63\u5730\u8003\u8651\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\uff1a reference RNN\u5faa\u73af\u795e\u7ecf\u7f51\u7edc \u7ecf\u5178\u7684RNN\u7ed3\u6784 \u4f18\u7f3a\u70b9 \u7f3a\u70b9\uff1a \u635f\u5931\u51fd\u6570\uff1a reference sequence to sequence \u7ed3\u6784 \u5206\u6790 teacher forcing attention keras.layers.SimpleRNN SimpleRNN \u7684\u8f93\u5165\u8f93\u51fa units\u5230\u5e95\u662f\u4ec0\u4e48\u5462 LSTM cell state keras.layers.LSTM tensorflow2 \u7684 LSTM \u6e90\u7801\u9605\u8bfb LSTMCell \u7c7b LSTM \u7c7b transformer\u4e2d\u7684\u4f4d\u7f6e\u7f16\u7801 \u6570\u5b66\u57fa\u7840 \u6807\u91cf \u5411\u91cf \u77e9\u9635 \u5f20\u91cf tensorflow \u4e00\u4e9b\u57fa\u672c\u6982\u5ff5 keras\u662ftensorflow\u7684\u9ad8\u9636api\uff0c\u76f8\u5f53\u4e8e\u96c6\u6210\u597d\u4e86\u4e00\u4e9btensor\u7684\u64cd\u4f5c\u3002 tensorflow\u662f\u5f20\u91cf\u7684\u56fe\u8ba1\u7b97\u6d41 \u5f20\u91cf \u5f20\u91cf\u662f\u4e00\u4e2a\u9ad8\u7ef4\u7684\u6570\u7ec4\u3002 \u5f20\u91cf\u53ef\u4ee5\u662f\u5927\u4e8e2\u4e2aaxes\u7684\uff1a \u5982\u4f55\u7406\u89e3\u9ad8\u7ef4\u5f20\u91cf (3,2,5) \u5c31\u662f3\u4e2a2*5\u7684\u77e9\u9635\u53e0\u5728\u4e00\u8d77 (5,256,256,3) \u5c31\u662f5\u5f20RGB\u7167\u7247\u53e0\u5728\u4e00\u8d77 \u56e0\u4e3a\u5e38\u5e38\u5904\u7406\u56fe\u50cf\u6570\u636e\uff0c\u6240\u4ee5\u5e38\u7528\u7684tensor\u5f62\u72b6\u4e3a(B,W,H,C) \u7d22\u5f15\u4e0eslicing \u7d22\u5f15\u5c31\u5982numpy\u7684\u7d22\u5f15\u65b9\u5f0f\uff0c\u6709\u51e0\u4e2aaxes\u5c31\u80fd\u5728\u51e0\u4e2aaxes\u4e0a\u8fdb\u884c\u7d22\u5f15\u3002 tensor[axe1,axe2,axe3] \u5bf9\u4e8e\u9ad8\u7ef4\u5411\u91cf\u7684\u7d22\u5f15\uff0c\u5982\u679c\u76f4\u5bf9\u4e00\u4e2a\u7ef4\u5ea6\u8fdb\u884c\u7d22\u5f15\uff0c\u5207\u7247\u7684\u6837\u5b50\u5f88\u96be\u60f3\u8c61\u51fa\u6765\uff0c\u8fd9\u91cc\u4e3e\u4f8b\uff1a # There can be an arbitrary number of # axes (sometimes called \"dimensions\") rank_3_tensor = tf.constant([ [[0, 1, 2, 3, 4], [5, 6, 7, 8, 9]], [[10, 11, 12, 13, 14], [15, 16, 17, 18, 19]], [[20, 21, 22, 23, 24], [25, 26, 27, 28, 29]],]) print(rank_3_tensor) >>> tf.Tensor( [[[ 0 1 2 3 4] [ 5 6 7 8 9]] [[10 11 12 13 14] [15 16 17 18 19]] [[20 21 22 23 24] [25 26 27 28 29]]], shape=(3, 2, 5), dtype=int32) rank_3_tensor[:, :, 4] >>> <tf.Tensor: shape=(3, 2), dtype=int32, numpy= array([[ 4, 9], [14, 19], [24, 29]])> reshape flatten\u6839\u636e\u7684\u662f\u5f20\u91cf\u4e2d\u5143\u7d20\u5728\u5185\u5b58\u4e2d\u7684\u6392\u5217\u3002TensorFlow uses C-style \"row-major\" memory ordering, where incrementing the rightmost index corresponds to a single step in memory. \u5728reshape\u65f6\uff0c\u8981\u8003\u8651\u5230\u6570\u636e\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u56e0\u4e3areshape\u53ea\u8981\u6c42\u524d\u540e\u5143\u7d20\u6570\u76ee\u76f8\u540c\uff0c\u4e0d\u4fdd\u8bc1\u4fdd\u7559\u6570\u636e\u5173\u7cfb\u3002 broadcasting \u7279\u5f81 \u8fd9\u4e00\u70b9\u4e0enumpy\u4e2d\u7684\u5e7f\u64ad\u6027\u8d28\u4e00\u81f4\u3002 \u5728\u4e00\u4e2aoperation\u5f53\u4e2d\uff0c\u5982\u679carray\u4e0escalar\u8fdb\u884c\u8fd0\u7b97\uff0c\u90a3\u4e48\u4f1a\u53d1\u751f\u4ec0\u4e48\u5462\uff1f \u4e24\u4e2aarrays\u8fdb\u884coperation\uff0c\u8981\u6c42\u4ed6\u4eec\u7684\u7ef4\u5ea6\u662fcompatible\u7684\uff1a \u7ef4\u5ea6\u76f8\u540c \u5176\u4e2d\u4e00\u4e2a\u4e3a1 https://numpy.org/devdocs/user/basics.broadcasting.html \u5982\uff1a(5,4)\u53ef\u4ee5\u4e0e(1,)\uff0c(4,)\u8fdb\u884coperation\uff0c\u4f46\u4e0d\u80fd\u4e0e(3,)\u8fdb\u884coperation \u4ece\u5de6\u4fa7\u5f00\u59cb\u914d\u5bf9\uff0c\u4ece\u6700\u5185\u7684\u5143\u7d20\u5f00\u59cb\u3002 \u77e9\u9635\u4e58\u6cd5 \u5b9e\u9645\u4e0a\u77e9\u9635\u4e58\u6cd5\u5c31\u662f\u7b26\u5408\u5e7f\u64ad\u7279\u6027\u7684\uff1a a = 1 * 3 b = 4 * 1 result = 4 * 3 \u5c0f\u77e5\u8bc6\u70b9\uff1a \u5f20\u91cf\u5728\u56fe\u4e2d\u6d41\u52a8\uff0c\u6240\u4ee5\u53ebtensorflow \u8fd9\u4e2a\u4e00\u7ef4\u5f20\u91cf\u7684\u6d41\u52a8\u8fc7\u7a0b \u5f20\u91cf\u53ef\u4ee5\u7531numpy\u6784\u5efa\uff0c\u4ee5\u53ca\u4e00\u4e9b\u7279\u6b8a\u7684\u65b9\u6cd5 tf.zeros() tf.ones() tf.random.normal() axis: \u5e38\u7528\u51fd\u6570 tf.Variable \u7528\u8be5\u51fd\u6570\u6807\u8bb0\u540e\uff0c\u8be5\u53d8\u91cf\u5c31\u662f\u53ef\u8bad\u7ec3\u7684\u4e86\u3002 w = tf.Variable(tf.random.normal([2,2],mean,stddev=1)) \u5e38\u7528\u8fd0\u7b97\u51fd\u6570 tf.add tf.subtract tf.multiply \u7b49\u7b49 \u8f93\u5165\u6807\u7b7e\uff0c\u6807\u7b7e tf.data.Dataset.from_tensor_slices tf.GradientTape \u8ba1\u7b97\u68af\u5ea6 tf.one_hot \u72ec\u70ed\u7f16\u7801 tf.argmax \u8fd4\u56de\u5f20\u91cf\u6307\u5b9a\u7ef4\u5ea6\u6700\u5927\u503c\u7684\u7d22\u5f15\u53f7\u3002 model.fit() fit(x=None, y=None, batch_size=None, epochs=1, verbose='auto', callbacks=None, validation_split=0.0, validation_data=None, shuffle=True, class_weight=None, sample_weight=None, initial_epoch=0, steps_per_epoch=None, validation_steps=None, validation_batch_size=None, validation_freq=1, max_queue_size=10, workers=1, use_multiprocessing=False ) \u8f93\u5165\u6570\u636ex,y\u662f\u6700\u91cd\u8981\u7684\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u76f4\u63a5\u5c06\u6570\u636e\u5b58\u5230\u5185\u5b58\u4e2d\uff0c\u7136\u540e\u4f20\u5230x\u5c31\u597d\u3002\u4f46\u662f\u4f1a\u51fa\u73b0\u8fd9\u6837\u7684\u60c5\u51b5\uff1a \u6570\u636e\u592a\u5927\uff0c\u5185\u5b58\u65e0\u6cd5\u88c5\u4e0b\uff0c\u8fd9\u8be5\u600e\u4e48\u529e\u5462\uff1f \u4f7f\u7528\u751f\u6210\u5668generator\u6216\u8005tf.data.Dataset\u6765\u8fdb\u884c\u8f93\u5165\u3002 \u7528generator\u6765\u505a\u8f93\u5165\uff1ax generator\u5e94\u8be5\u6bcf\u6b21\u4ea7\u751f\u4e00\u4e2a\uff08x\uff0cy\uff09\u3002 \u5e76\u4e14fit()\u51fd\u6570\u4e2dy\u53c2\u6570\u4e3aNone\uff0cbatch_size\u4e5f\u662fNone \u4e5f\u5c31\u662f\u8bf4\u751f\u6210\u5668\u6bcf\u6b21yield\u7684x\uff0cy\u662f\u4e00\u4e2abatch\u3002 \u6848\u4f8b\uff1a tf.data tf.data.Dataset\u662f\u6838\u5fc3 tf.data.Dataset\u662f\u4e00\u4e2apython\u8fed\u4ee3\u5668 \u4ece\u5185\u5b58\u4e2d\u52a0\u8f7d\u6570\u636e tf.data.Dataset.from_tensors() \"\"\"Creates a `Dataset` with a single element, comprising the given tensors. `from_tensors` produces a dataset containing only a single element. To slice the input tensor into multiple elements, use `from_tensor_slices` instead. \"\"\" tf.data.Dataset.from_tensor_slices() \"\"\"Creates a `Dataset` whose elements are slices of the given tensors. The given tensors are sliced along their first dimension. This operation preserves the structure of the input tensors, removing the first dimension of each tensor and using it as the dataset dimension. All input tensors must have the same size in their first dimensions. \"\"\" \u5728\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\u4e0a\u8fdb\u884c\u5207\u7247\uff0c\u6240\u4ee5\u4e00\u822c\u56fe\u7247\u7684\u7b2c\u4e00\u7ef4\u5ea6\u662fbatch tf.data.Dataset.element_spec \u68c0\u67e5\u5143\u7d20\uff0c\u8981\u6ce8\u610f\u7684\u662f\u5b83\u68c0\u67e5\u7684\u662f\u5355\u4e2a\u5143\u7d20\uff1a dataset2 = tf.data.Dataset.from_tensor_slices( (tf.random.uniform([4]), tf.random.uniform([4, 100], maxval=100, dtype=tf.int32))) dataset2.element_spec >>> (TensorSpec(shape=(), dtype=tf.float32, name=None), TensorSpec(shape=(100,), dtype=tf.int32, name=None)) Dataset.batch Combines consecutive elements of this dataset into batches. dataset = tf.data.Dataset.range(8) dataset = dataset.batch(3) list(dataset.as_numpy_iterator()) [[0,1,2],[3,4,5],[6,7]] tf.nest nest\u6a21\u5757\u662f\u7528\u4e8e\u5904\u7406nested structure\u7ed3\u6784\u7684\uff0cnested structure\u76ee\u524d\u652f\u6301\u7684\u7ed3\u6784\u662ftuple\uff0cdict\uff0cnamedtuple\u3002 \u5bf9\u4e8enested_structure\u53ef\u4ee5\u4f7f\u7528is_nested()\u5224\u65ad\u3002 tf.nest.is_nested(((7, 8), (5, 6))) >>>True tf.nest.is_nested({\"a\": 1, \"b\": 2}) >>>True tf.nest.is_nested(set([1, 2])) >>>False ones = tf.ones([2, 3]) >>>False functions assert_same_structure(...) : Asserts that two structures are nested in the same way. flatten(...) : Returns a flat list from a given nested structure. is_nested(...) : Returns true if its input is a collections.abc.Sequence (except strings). map_structure(...) : Applies func to each entry in structure and returns a new structure. pack_sequence_as(...) : Returns a given flattened sequence packed into a given structure. \u5e38\u7528\u51fd\u6570\u662fflatten() tf.nest.flatten \u6839\u636ekey\u6765\u6392\u5e8f\uff01 dict = { \"key3\": \"value3\", \"key1\": \"value1\", \"key2\": \"value2\" } tf.nest.flatten(dict) >>> ['value1','value2','value3'] tuple\u6839\u636e\u5185\u5b58\u987a\u5e8f graph keras \u516b\u80a1\u6587\u5199\u4ee3\u7801\u65b9\u6cd5\uff1a # import \u6a21\u5757 # train test # model # model.compile # model.fit # model.summary sequential model # Define Sequential model with 3 layers model = keras.Sequential( [ layers.Dense(2, activation=\"relu\", name=\"layer1\"), layers.Dense(3, activation=\"relu\", name=\"layer2\"), layers.Dense(4, name=\"layer3\"), ] ) # Call model on a test input x = tf.ones((3, 3)) y = model(x) sequential model \u4e0d\u9002\u7528\u4e8e\uff1a \u591a\u8f93\u5165\u4e0e\u591a\u8f93\u51fa \u5c42\u4e4b\u95f4\u7684\u5171\u4eab \u7b49\u7b49\u3002\u3002\u3002 \u7f51\u7edc\u7ed3\u6784 \u62c9\u76f4\u5c42 \u5168\u8fde\u63a5\u5c42 \u5377\u79ef\u5c42 LSTM\u5c42 model.compile model.compile(optimizer='sgd',loss,metrics=[\"accuracy\"]) \u6307\u5b9a\u7f51\u7edc\u7684\u4f18\u5316\u5668\u4e0e\u635f\u5931\u51fd\u6570 model.fit model.fit( x, y, batch_size, validation_data, validation_split, validation_freq ) build(self, inputs_shape) \u5728\u7ee7\u627ftf.keras.layers.Layer\u65f6\uff0c\u53ef\u4ee5\u91cd\u5199call\uff0cbuild\u548cinit\u51fd\u6570 build\u51fd\u6570\u4e3b\u8981\u7528\u4e8e\u521d\u59cb\u5316\u53c2\u6570\uff0c\u5f53call\u88ab\u7b2c\u4e00\u6b21\u8c03\u7528\u7684\u65f6\u5019\uff0c\u4f1a\u5148\u6267\u884cbuild()\u65b9\u6cd5\u521d\u59cb\u5316\u53d8\u91cf\uff0c\u4f46\u540e\u9762\u518d\u8c03\u7528\u5230call\u7684\u65f6\u5019\uff0c\u662f\u4e0d\u4f1a\u518d\u53bb\u6267\u884cbuild()\u65b9\u6cd5\u521d\u59cb\u5316\u53d8\u91cf\u3002\u4e00\u822c\u7528\u4e8e\u9700\u8981\u77e5\u9053\u8f93\u5165tensor\u7684\u5f62\u72b6\uff0c\u5b8c\u6210\u53d6\u51b3\u4e8e\u8f93\u5165tensor\u5f62\u72b6\u7684\u521d\u59cb\u5316\u3002 class Linear(keras.layers.Layer): def __init__(self, units=32): super(Linear, self).__init__() self.units = units def build(self, input_shape): self.w = self.add_weight( shape=(input_shape[-1], self.units), initializer=\"random_normal\", trainable=True, ) self.b = self.add_weight( shape=(self.units,), initializer=\"random_normal\", trainable=True ) def call(self, inputs): return tf.matmul(inputs, self.w) + self.b keras.backend.rnn \u5728\u65f6\u95f4\u6b65\u7ef4\u5ea6\u4e0a\u5bf9\u5f20\u91cf\u8fdb\u884c\u8fed\u4ee3\u3002 tf.keras.backend.rnn( step_function, inputs, initial_states, go_backwards=False, mask=None, constants=None, unroll=False, input_length=None, time_major=False, zero_output_for_mask=False, ) \u9700\u8981\u5b9a\u4e49step function\uff1a step(input): \"\"\"do some thing\"\"\" return output input\u5f20\u91cf\u9700\u8981\u53bb\u9664time_steps\u7ef4\u5ea6\uff0c\u4e3a[batch, features] output\u5f20\u91cf\u540c\u6837\u6ca1\u6709\u65f6\u95f4\u7ef4\u5ea6\uff0c\u4e3a[batch, output_dimensions] \u6a21\u578b\u7684\u4fdd\u5b58\u4e0e\u52a0\u8f7d \u4e00\u4e2a\u6a21\u578b\u5305\u62ec\u591a\u4e2a\u90e8\u4ef6\uff1a \u6a21\u578b\u7684\u7ed3\u6784\uff0c\u5305\u62eclayers\uff0chow they are connected \u6743\u91cd\uff0c\u4e5f\u5c31\u662f\u6a21\u578b\u7684\u53c2\u6570 \u4f18\u5316\u5668\uff0c\u5728compile \u6a21\u578b\u7684\u65f6\u5019\u6307\u5b9a \u635f\u5931\u51fd\u6570\u4e0emetric\uff0c\u4e5f\u662f\u5728compile\u65f6\u5019\u6307\u5b9a \u53ef\u4ee5\u4e00\u6b21\u5168\u90e8\u4fdd\u5b58\uff0c\u4e5f\u53ef\u4ee5\u5206\u522b\u50a8\u5b58\u3002 \u5168\u90e8\u4fdd\u5b58 # \u4fdd\u5b58\u6a21\u578b model.save('path/to/location') # \u52a0\u8f7d\u6a21\u578b model = keras.models.load_model('path/to/location') model.save \u4fdd\u5b58\u6240\u6709\uff0c\u683c\u5f0f\u4e3a SavedModel \u683c\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u6307\u5b9a\u4e3a H5 \u683c\u5f0f SavedModel \u5176\u5b9e\u662f\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u4fdd\u5b58\u4e86\u4e00\u4e9b\u6587\u4ef6\u3002\u8be6\u60c5\u53ef\u89c1 https://www.tensorflow.org/guide/saved_model#the_savedmodel_format_on_disk \u4fdd\u5b58\u7ed3\u6784 model.get_config() model.from_config() tf.keras.models.model_to_json() tf.keras.models.model_from_json() \u4fdd\u5b58\u6743\u91cd\uff0c\u53c2\u6570 model.save_weights() model.load_weights() \u53ef\u4ee5\u5b58\u50a8\u7684\u6587\u4ef6\u683c\u5f0f\u6709\uff1a TensorFlow Checkpoint HDF5 H5 pytorch \u51c6\u5907\u5de5\u4f5c \u67e5\u770bcudn\u7684\u7248\u672c nvcc --version \u67e5\u770bpytorch \u7248\u672c print(torch.__version__) print(torch.cuda.is_available()) device = 'cuda' if torch.cuda.is_available() else 'cpu' print('Using {} device'.format(device)) torch.utils.data.Dataset \u6570\u636e \u81ea\u5e26\u6570\u636e\u96c6 \u81ea\u5b9a\u4e49\u6570\u636e\u96c6 \u81ea\u5b9a\u4e49\u6570\u636e\u96c6 import os import pandas as pd from torchvision.io import read_image class CustomImageDataset(Dataset): def __init__(self, annotations_file, img_dir, transform=None, target_transform=None): self.img_labels = pd.read_csv(annotations_file) self.img_dir = img_dir self.transform = transform self.target_transform = target_transform def __len__(self): return len(self.img_labels) def __getitem__(self, idx): img_path = os.path.join(self.img_dir, self.img_labels.iloc[idx, 0]) image = read_image(img_path) label = self.img_labels.iloc[idx, 1] if self.transform: image = self.transform(image) if self.target_transform: label = self.target_transform(label) return image, label Dataset\u662f\u4e3afile\u670d\u52a1\u7684\u3002\u51e0\u4e2a\u5fc5\u987b\u7684\u51fd\u6570\uff1a init len getitem \u7528\u4e8e\u4e4b\u540e\u4f20\u5165dataloader torch.utils.data.DataLoader \u8fd9\u662f\u4e00\u4e2a\u53ef\u8fed\u4ee3\u7c7b\uff0c\u4e3a\u4e86\u5c31\u662f\u5c06dataset\u6253\u5305\u6210\u4e00\u4e2a\u4e2abatch\uff0c\u7528\u4e8e\u8bad\u7ec3 \u6240\u4ee5\u8bf4 dataloader\u662f\u4e3a\u8bad\u7ec3\u670d\u52a1\u7684\u3002 nn.module class NeuralNetwork(nn.Module): def __init__(self): super(NeuralNetwork, self).__init__() self.flatten = nn.Flatten() self.linear_relu_stack = nn.Sequential( nn.Linear(28*28, 512), nn.ReLU(), nn.Linear(512, 512), nn.ReLU(), nn.Linear(512, 10), ) def forward(self, x): x = self.flatten(x) logits = self.linear_relu_stack(x) return logits model = NeuralNetwork().to(device) \u5728init\u4e2d\u5b9a\u4e49\u7ec4\u4ef6\uff0c\u5728forward\u51fd\u6570\u5b9a\u4e49\u7f51\u7edc\u7684\u524d\u5411\u4f20\u64ad nn.module\u4e2d\u7684layer nn.Flatten nn.Linear nn.ReLU nn.Sequential layer\u7684\u5bb9\u5668 nn.Softmax \u5e38\u7528\u51fd\u6570 for name, param in model.named_parameters(): print(f\"Layer: {name} | Size: {param.size()} | Values : {param[:2]} \\n\") \u8bad\u7ec3\u7f51\u7edc \u5b9a\u4e49\u635f\u5931\u51fd\u6570 \u5b9a\u4e49\u4f18\u5316\u5668 \u5b9a\u4e49\u4e00\u4e2aepoch\u7684\u884c\u4e3a \u5f00\u59cb\u8bad\u7ec3\u591a\u4e2aepoch # 1 loss_fn = nn.CrossEntropyLoss() # 2 optimizer = torch.optim.SGD(model.parameters(), lr=learning_rate) # 3 def train_loop(dataloader, model, loss_fn, optimizer): size = len(dataloader.dataset) for batch, (X, y) in enumerate(dataloader): # Compute prediction and loss pred = model(X) loss = loss_fn(pred, y) # Backpropagation optimizer.zero_grad() loss.backward() optimizer.step() if batch % 100 == 0: loss, current = loss.item(), batch * len(X) print(f\"loss: {loss:>7f} [{current:>5d}/{size:>5d}]\") def test_loop(dataloader, model, loss_fn): size = len(dataloader.dataset) num_batches = len(dataloader) test_loss, correct = 0, 0 with torch.no_grad(): for X, y in dataloader: pred = model(X) test_loss += loss_fn(pred, y).item() correct += (pred.argmax(1) == y).type(torch.float).sum().item() test_loss /= num_batches correct /= size print(f\"Test Error: \\n Accuracy: {(100*correct):>0.1f}%, Avg loss: {test_loss:>8f} \\n\") loss_fn = nn.CrossEntropyLoss() optimizer = torch.optim.SGD(model.parameters(), lr=learning_rate) epochs = 10 for t in range(epochs): print(f\"Epoch {t+1}\\n-------------------------------\") train_loop(train_dataloader, model, loss_fn, optimizer) test_loop(test_dataloader, model, loss_fn) print(\"Done!\") Call optimizer.zero_grad() to reset the gradients of model parameters. Gradients by default add up; to prevent double-counting, we explicitly zero them at each iteration. \u53cd\u5411\u4f20\u64ad \u8f93\u5165x\uff0c\u8f93\u51fay\uff0c\u53c2\u6570\u4e3a$\\theta$ \u5b9a\u4e49\u635f\u5931\u51fd\u6570 $J(\\theta)$ \u6211\u4eec\u9700\u8981\u8ba1\u7b97\u7684\u662f $\\nabla _\\theta J(\\theta) $ \u8ba1\u7b97\u56fe\uff1a \u4e00\u4e2aDAG\uff0c\u4e00\u4e2a\u8282\u70b9\u53ef\u4ee5\u662f\u53d8\u91cf\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2aoperation\u3002 \u5fae\u79ef\u5206\u4e2d\u7684\u94fe\u5f0f\u6cd5\u5219 \u5bf9\u4e8e\u8fd9\u6837\u4e00\u4e2a\u51fd\u6570\uff1a $$ y = g(x)\\ z = f(g(x)) $$ z\u5bf9x\u6c42\u5bfc\uff0c\u5199\u4e3a\uff1a $$ dz/dx = dz/dy*dy/dx $$ \u8fd9\u53ea\u662f\u6807\u91cf\u7684\u5199\u6cd5\uff0c\u5982\u679c\u6269\u5c55\u4e3a\u5411\u91cf\uff1a $$ \\nabla_x z = (\\frac{\\delta y}{\\delta x})^T\\nabla_y z $$ \u5176\u4e2dz\u662f\u4e00\u4e2a\u6807\u91cf $x \\in R^m, y \\in R^n$, $\\frac{\\delta y}{\\delta x}$ \u662f n$\\times$m\u7684 Jacobian\u77e9\u9635\u3002 \u6b64\u65f6\u5982\u679c\u6211\u4eec\u5c06 z\u770b\u4f5c\uff1a\u635f\u5931\u51fd\u6570\u8f93\u51fa\u7684\u6807\u91cf\u3002 $$ z = f(y) $$ y\u770b\u4f5c\u795e\u7ecf\u7f51\u7edc\u7684\u8f93\u51fa\u91cf\uff0cg()\u662f\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\uff1a $$ y = g(x) $$ \u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u8f93\u5165\u5b9e\u9645\u4e0a\u662f\u7f51\u7edc\u53c2\u6570$x$, \u901a\u8fc7\u4e0d\u65ad\u6539\u53d8$x$ \u4f7f\u5f97\u635f\u5931\u51fd\u6570\u6700\u5c0f\u3002 \u7b2c\u4e00\u4e2a\u7248\u672c\u7684\u53cd\u5411\u4f20\u64ad \u5b9a\u4e49\u8fd9\u6837\u4e00\u4e2aforward\u8fc7\u7a0b\uff1a $u^{(1)},...,u^{(n_i)}$ \u4e3a\u8f93\u5165\u8282\u70b9\uff08\u53ef\u4ee5\u7406\u89e3\u4e3a\u53c2\u6570w\uff09 $u^{(n)}$\u4e3a\u8f93\u51fa\uff0c\u662f\u635f\u5931\u51fd\u6570\u8ba1\u7b97\u51fa\u6765\u7684\u6807\u91cf\u503c\u3002 \u76ee\u6807\uff0c\u6c42 $$ \\frac{\\partial u^{(n)}}{\\partial u^{(j)}},j\\in{1,2,3...i}\\ =\\sum_{i: j \\in P a\\left(u^{(i)}\\right)} \\frac{\\partial u^{(n)}}{\\partial u^{(i)}} \\frac{\\partial u^{(i)}}{\\partial u^{(j)}} $$ \u6267\u884c\u53cd\u5411\u4f20\u64ad\u6240\u9700\u8981\u7684\u8ba1\u7b97\u91cf\u4e0eG\u4e2d\u8fb9\u7684\u6570\u91cf\u6210\u6bd4\u4f8b\u3002\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u7684\u8bbe\u8ba1\u5c31\u662f\u4e3a\u4e86\u51cf\u5c11\u516c\u5171\u5b50\u8868\u8fbe\u5f0f\u7684\u6570\u91cf\uff0c\u800c\u4e0d\u8003\u8651\u50a8\u5b58\u7684\u5f00\u9500\u3002 \u7b97\u6cd5\u7684\u7b80\u5316\u7248\u672c\uff0c\u53ea\u9002\u7528\u4e8e\u524d\u9762\u63d0\u5230\u7684\u524d\u5411\u4f20\u64ad\u8fc7\u7a0b\u3002\u5927\u81f4\u89c2\u5bdf\u4e00\u4e0b\uff0c\u53ef\u4ee5\u770b\u5230\u65b0\u589e\u4e86\u4e00\u4e2agrad_table\uff0c\u7528\u4e8e\u5b58\u50a8\u5df2\u7ecf\u8ba1\u7b97\u8fc7\u4e86\u7684\u68af\u5ea6\uff0c\u8fd9\u5c31\u662f\u4e00\u79cd\u727a\u7272\u7a7a\u95f4\u6362\u53d6\u65f6\u95f4\u7684\u7b97\u6cd5\u3002 \u7528\u4f8b\u5b50\u6765\u8bf4\u660e\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5 \u5bf9\u4e8e\u8fd9\u6837\u4e00\u4e2a\u56fe\u7ed3\u6784\uff0c\u8bb0\uff1a$j < i , u_j\u662fu_i\u7684\u7236\u8282\u70b9$ $\\frac{\\partial u^{6}}{\\partial u^{6}}=1$ \u76f4\u63a5\u8bb0\u4e0b\uff0c\u5199\u5165grad_table \u8fdb\u5165\u8fed\u4ee3\uff0cj = 5 \uff08\u82e5\u65e0grad_table\uff09\u8ba1\u7b97$\\frac{\\partial u^{6}}{\\partial u^{5}}=\\frac{\\partial u^{6}}{\\partial u^{5}}$ \u6709grad_table\uff0c$grad_table[u^6]=1$\uff0c\u6240\u4ee5$grad_table[u^5]=1\\times\\frac{\\partial u^{6}}{\\partial u^{5}}$ \u8fdb\u5165\u8fed\u4ee3\uff0cj=4 \uff08\u82e5\u65e0grad_table\uff09\u8ba1\u7b97$\\frac{\\partial u^{6}}{\\partial u^{4}}=\\frac{\\partial u^{6}}{\\partial u^{4}}$ \u6709grad_table\uff0c$grad_table[u^6]=1$\uff0c\u6240\u4ee5$grad_table[u^4]=1\\times\\frac{\\partial u^{6}}{\\partial u^{4}}$ \u8fdb\u5165\u8fed\u4ee3\uff0cj=3 \uff08\u82e5\u65e0grad_table\uff09\u8ba1\u7b97$\\frac{\\partial u^{6}}{\\partial u^{3}}=\\frac{\\partial u^{6}}{\\partial u^{5}}\\frac{\\partial u^{5}}{\\partial u^{3}}$ \u6709grad_table\uff0c$grad_table[u^5]=1\\times\\frac{\\partial u^{6}}{\\partial u^{5}}$\uff0c\u6240\u4ee5$grad_table[u^3]=grad_table[u^5]\\times\\frac{\\partial u^{5}}{\\partial u^{3}}$ \u8fdb\u5165\u8fed\u4ee3\uff0cj=2 \uff08\u82e5\u65e0grad_table\uff09\u8ba1\u7b97$\\frac{\\partial u^{6}}{\\partial u^{2}}=\\frac{\\partial u^{6}}{\\partial u^{4}}\\frac{\\partial u^{4}}{\\partial u^{2}}+\\frac{\\partial u^{6}}{\\partial u^{5}}\\frac{\\partial u^{5}}{\\partial u^{2}}$ \u6709grad_table\uff0c\u6240\u4ee5$grad_table[u^2]=grad_table[u^5]\\times\\frac{\\partial u^{5}}{\\partial u^{2}}+grad_table[u^4]\\times\\frac{\\partial u^{4}}{\\partial u^{2}}$ \u4ee5\u6b64\u7c7b\u63a8 \u6240\u4ee5\u7efc\u4e0a\u6240\u8ff0\uff0c\u8282\u7ea6\u4e86\u591a\u6b21\u5185\u79ef\u7684\u8ba1\u7b97\u65f6\u95f4,\u4f46\u662f\u8fd9\u53ea\u662f\u4e00\u79cd\u7b80\u5355\u4e14\u76f4\u89c2\u7684\u60c5\u51b5\u3002 \u771f\u6b63\u5730\u8003\u8651\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\uff1a \u5b83\u7684forward\u8fc7\u7a0b\u5982\u4e0b\u63cf\u8ff0\uff1a \u53cd\u5411\u4f20\u64ad\u8fc7\u7a0b\uff1a reference https://github.com/exacity/deeplearningbook-chinese RNN\u5faa\u73af\u795e\u7ecf\u7f51\u7edc \u672c\u8d28\u4e0a\uff0c\u4efb\u4f55\u5305\u542b\u5faa\u73af\u7684\u51fd\u6570\u90fd\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u3002 $$ \\boldsymbol{h}^{(t)}=f\\left(\\boldsymbol{h}^{(t-1)}, \\boldsymbol{x}^{(t)} ; \\boldsymbol{\\theta}\\right) $$ \u7f51\u7edc\u901a\u5e38\u4f7f\u7528$\\boldsymbol{h}^{(t)}$ \u4f5c\u4e3a\u8fc7\u53bb\u5e8f\u5217\u4e0e\u4efb\u52a1\u76f8\u5173\u65b9\u9762\u7684\u6709\u635f\u6458\u8981\uff0c\u4e00\u822c\u800c\u8a00\u4e00\u5b9a\u662f\u6709\u635f\u7684\u3002$\\boldsymbol{h}^{(t)}$ \u6620\u5c04\u4efb\u610f\u957f\u5ea6\u5e8f\u5217$\\left(\\boldsymbol{x}^{(t)}, \\boldsymbol{x}^{(t-1)}, \\boldsymbol{x}^{(t-2)}, \\ldots, \\boldsymbol{x}^{(2)}, \\boldsymbol{x}^{(1)}\\right)$\u5230\u4e00\u5b9a\u957f\u5ea6$\\boldsymbol{h}^{(t)}$ \u8ba1\u7b97\u516c\u5f0f\uff1a $$ h_t = tanh(w_xx_t+w_hh_{t-1}+b) \\ y_t = w_yh_t $$ \u5176\u4e2d\u6574\u4e2a\u6a21\u578b\u5171\u4eab\u53c2\u6570\uff1a$w_h,w_x,w_y$ \u7ecf\u5178\u7684RNN\u7ed3\u6784 n->n n->1 n->m \u4f18\u7f3a\u70b9 \u4f18\u70b9\uff1a \u2022 Possibility of processing input of any length \u2022 Model size not increasing with size of input \u2022 Computation takes into account historical information \u2022 Weights are shared across time \u7f3a\u70b9\uff1a \u2022 Computation being slow \u2022 Difficulty of accessing information from a long time ago \u2022 Cannot consider any future input for the current state \u635f\u5931\u51fd\u6570 $$ \\mathcal{L}(\\hat{y}, y)=\\sum_{t=1}^{T_{y}} \\mathcal{L}\\left(\\widehat{y}^{ }, y^{ }\\right) $$ \u5982\u679c\u6211\u4eec\u9700\u8981\u7684\u6a21\u578b\u662fn->1\uff1a \u90a3\u4e48\u8bad\u7ec3\u6240\u7ed9\u7684\u6570\u636e\u4e5f\u5e94\u8be5\u5982\uff1a $$ [X^n,y^n]\\ X^n=x_1,x_2,...,x_t\\ y^n=y_t $$ \u635f\u5931\u51fd\u6570\uff1a \u6839\u636e\u65f6\u95f4\u6b65\u7684\u8fde\u4e58\u3002 $$ \\frac{\\partial \\mathcal{L}^{(T)}}{\\partial W}=\\left.\\sum_{t=1}^{T} \\frac{\\partial \\mathcal{L}^{(T)}}{\\partial W}\\right|_{(t)} $$ \u5e38\u89c1\u95ee\u9898: vanishing/ exploding gradient The reason why they happen is that it is difficult to capture long term dependencies because of multiplicative gradient that can be exponentially decreasing/increasing with respect to the number of layers. \u65f6\u95f4\u6b65\u4e00\u957f\uff0c\u8fde\u4e58\u5c31\u8981\u51fa\u95ee\u9898\u3002 \u5bf9\u68af\u5ea6\u7684\u6700\u5927\u503c\u8fdb\u884c\u9650\u5236\u662f\u4e00\u4e2a\u653e\u7f6eexploding\u7684\u65b9\u6cd5\u3002 reference https://stanford.edu/~shervine/teaching/cs-230/cheatsheet-recurrent-neural-networks#overview sequence to sequence \u7ed3\u6784 \u4e00\u822cRNN\u7ed3\u6784\u5bf9\u4e8e\u8f93\u5165\u4e0e\u8f93\u51fa\u7684\u4e2a\u6570\u90fd\u505a\u4e86\u9650\u5b9a\uff0c\u4f46\u5b9e\u9645\u4e0a\u5f88\u591a\u4efb\u52a1\u7684\u5e8f\u5217\u957f\u5ea6\u662f\u4e0d\u56fa\u5b9a\u7684\u3002 \u5206\u6790 \u53ef\u4ee5\u89c2\u5bdf\u5230\uff0c\u5176\u5b9e\u524d\u534a\u90e8\u5206\u662f\u4e00\u4e2aencoder\u6a21\u578b\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2aN->1\u7684RNN\u6a21\u578b\u3002\u8fd9\u4e2a\u5411\u91cf\u4e00\u822c\u79f0\u4f5c \u4e0a\u4e0b\u6587\u5411\u91cfc \u5f53\u7136c\u53ef\u4ee5\u7531$h_n$\u51b3\u5b9a\uff0c\u4e5f\u53ef\u4ee5\u7531$h_1,...h_n$\u51b3\u5b9a\u3002 $$ \\begin{gathered} c=h_{N} \\ c=q\\left(h_{N}\\right) \\ c=q\\left(h_{1}, h_{2}, \\ldots, h_{N}\\right) \\end{gathered} $$ \u7136\u540e\u4f7f\u7528decoder\u5bf9c\u8fdb\u884c\u89e3\u7801\uff1a teacher forcing TODO attention \u4ee5\u4e0a\u6a21\u578b\u7684\u7f3a\u9677\uff1a c\u5982\u679c\u5b9a\u957f\uff0c\u5f88\u96be\u5b8c\u5168\u6db5\u76d6\u8f93\u5165 RNN \u5b58\u5728\u957f\u5e8f\u5217\u68af\u5ea6\u6d88\u5931\u7684\u95ee\u9898\uff0c\u53ea\u4f7f\u7528\u6700\u540e\u4e00\u4e2a\u795e\u7ecf\u5143\u5f97\u5230\u7684\u5411\u91cf c \u6548\u679c\u4e0d\u7406\u60f3\u3002 \u4e0e\u4eba\u7c7b\u7684\u6ce8\u610f\u529b\u65b9\u5f0f\u4e0d\u540c\uff0c\u5373\u4eba\u7c7b\u5728\u9605\u8bfb\u6587\u7ae0\u7684\u65f6\u5019\uff0c\u4f1a\u628a\u6ce8\u610f\u529b\u653e\u5728\u5f53\u524d\u7684\u53e5\u5b50\u4e0a\u3002 \u4f7f\u7528attention\u673a\u5236\uff0c\u4f7f\u5f97\u4e0a\u4e0b\u6587\u5411\u91cfc\u4e0d\u518d\u56fa\u5b9a\uff0c\u800c\u662f\u6839\u636e\u5f53\u524d\u4fe1\u606f\u8ba1\u7b97c \u4e0a\u4e0b\u6587\u5411\u91cf--->\u53d7\u5230\u62fc\u63a5 keras.layers.SimpleRNN \u5bf9\u4e8e\u4e00\u4e2a\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff0c\u5b83\u7684\u8f93\u5165\u5f20\u91cf\u4e00\u822c\u4e3a\uff1a (samples\uff0ctimesteps,features) \u4f8b\u5982\u624b\u4e0a\u7684\u6570\u636e\u4e3a\uff1a\u4e00\u5c0f\u65f6\u4e00\u4e2a\u65f6\u95f4\u6233\uff0c\u4e00\u4e2a\u6837\u672c\u7edf\u8ba1\u4e86100h\uff0c\u6d89\u53ca\u523012\u4e2a\u53d8\u91cf\uff0c\u7edf\u8ba1\u4e8680\u6b21\uff0c\u90a3\u4e48\u6570\u636e\u53ef\u4ee5\u5199\u4e3a\uff1a (80,100,12) \u4e3a\u4e86\u65b9\u4fbf\u4e4b\u540e\u53c2\u6570\u8ba1\u7b97\u7684\u8ba8\u8bba\uff0c\u6211\u4eec\u8003\u8651\u7684\u60c5\u51b5\u4e3a x.shape = (10,5,2) y.shape = (10,2) \u6765\u505a\u4e00\u4e2a\u4e8c\u5206\u7c7b\u95ee\u9898\u3002 SimpleRNN \u7684\u8f93\u5165\u8f93\u51fa \u5b83\u7684\u8f93\u5165\u88ab\u6307\u5b9a\u4e3a3\u7ef4(samples\uff0ctimesteps, features) x = tf.random.normal(shape=(3,10,5,4)) rnn = layers.SimpleRNN(units=1) y = rnn(x) print(y.shape) >>> ValueError: Input 0 of layer simple_rnn is incompatible with the layer: expected ndim=3, found ndim=4. Full shape received: (3, 10, 5, 4) \u8f93\u51fa\u7ef4\u5ea6\u7531\u552f\u4e00\u7684\u53c2\u6570units\u51b3\u5b9a units: Positive integer, dimensionality of the output space\u3002\u5f88\u663e\u7136\uff0c\u5bf9\u4e8e\u4e00\u4e2abatch\uff0c\u4ed6\u7684\u8f93\u51fa\u4e3a(batch_size,units) units\u5230\u5e95\u662f\u4ec0\u4e48\u5462 $$ h_t = tanh(w_xx_t+w_hh_{t-1}+b) $$ \u53c2\u6570\u5171\u4eab\uff0c\u6240\u4ee5\u770b\u5230\u7684\u5c55\u5f00\u5f0f\uff0c\u90fd\u662f\u5171\u4eab\u8fd9\u4e00\u5957\u53c2\u6570\u3002units\uff0c\u672c\u8d28\u4e0a\u662f$h_t$\u7684\u7ef4\u5ea6\u3002 $(5,2)$\u7684x\u8fdb\u6765\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a\u4e24\u7ef4\u7684\u5411\u91cf\u8fdb\u6765\uff0c\u8f93\u51fa\u7684$h_t$\u4e5f\u662f\u4e00\u4e2a\u4e24\u4f4d\u5411\u91cf\uff0c\u6240\u4ee5\u8fd9\u6837\u8ba1\u7b97\uff1a \u4e00\u5171\u662f10\u4e2a\u53c2\u6570\u3002 \u6ce8\u610f\uff0c\u56fe\u4e2d\u7684$w_y$\u5e76\u4e0d\u662fRNN\u7ed3\u6784\u4e2d\u53c2\u6570\uff0c\u56e0\u4e3aSimpleRNN\u4e2d\u5c31\u4e0d\u5305\u62ecy\uff0c\u4ed6\u76f4\u63a5\u5c06h\u5411\u91cf\u8f93\u51fa\uff0c\u5982\u679c\u9700\u8981\u56fe\u4e2d\u7684y\uff0c\u9700\u8981\u81ea\u884c\u6dfb\u52a0dense\u5c42\u3002 \u516c\u5f0f\u4e3a\uff1a recurrent_weights + input_weights + biases num_units* num_units + num_features* num_units + biases \u8fd9\u5f20\u56fe\u7247\u4e5f\u65b9\u4fbf\u7406\u89e3: https://stackoverflow.com/questions/50134334/number-of-parameters-for-keras-simplernn LSTM LSTM\u7684\u5168\u79f0\u662fLong Short Term Memory\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5b83\u5177\u6709\u8bb0\u5fc6\u957f\u77ed\u671f\u4fe1\u606f\u7684\u80fd\u529b\u7684\u795e\u7ecf\u7f51\u7edc\u3002LSTM\u9996\u5148\u57281997\u5e74\u7531Hochreiter & Schmidhuber \u63d0\u51fa\uff0c\u7531\u4e8e\u6df1\u5ea6\u5b66\u4e60\u57282012\u5e74\u7684\u5174\u8d77\uff0cLSTM\u53c8\u7ecf\u8fc7\u4e86\u82e5\u5e72\u4ee3\u5927\u725b(Felix Gers, Fred Cummins, Santiago Fernandez, Justin Bayer, Daan Wierstra, Julian Togelius, Faustino Gomez, Matteo Gagliolo, and Alex Gloves)\u7684\u53d1\u5c55\uff0c\u7531\u6b64\u4fbf\u5f62\u6210\u4e86\u6bd4\u8f83\u7cfb\u7edf\u4e14\u5b8c\u6574\u7684LSTM\u6846\u67b6\uff0c\u5e76\u4e14\u5728\u5f88\u591a\u9886\u57df\u5f97\u5230\u4e86\u5e7f\u6cdb\u7684\u5e94\u7528\u3002\u672c\u6587\u7740\u91cd\u4ecb\u7ecd\u6df1\u5ea6\u5b66\u4e60\u65f6\u4ee3\u7684LSTM\u3002 LSTM\u63d0\u51fa\u7684\u52a8\u673a\u662f\u4e3a\u4e86\u89e3\u51b3\u4e0a\u9762\u6211\u4eec\u63d0\u5230\u7684\u957f\u671f\u4f9d\u8d56\u95ee\u9898\u3002\u4f20\u7edf\u7684RNN\u8282\u70b9\u8f93\u51fa\u4ec5\u7531\u6743\u503c\uff0c\u504f\u7f6e\u4ee5\u53ca\u6fc0\u6d3b\u51fd\u6570\u51b3\u5b9a\uff08\u56fe3\uff09\u3002RNN\u662f\u4e00\u4e2a\u94fe\u5f0f\u7ed3\u6784\uff0c\u6bcf\u4e2a\u65f6\u95f4\u7247\u4f7f\u7528\u7684\u662f\u76f8\u540c\u7684\u53c2\u6570\u3002 https://zhuanlan.zhihu.com/p/42717426 LSTM\u4f7f\u7528\u95e8\u7684\u673a\u5236\uff0c\u63a7\u5236\u7279\u5f81\u7684\u6d41\u901a\u548c\u635f\u5931\u3002LSTM\u53ef\u4ee5\u505a\u5230t9\u7684\u65f6\u523b\u8003\u8651t2\u7684\u7279\u5f81\uff0c cell state $$ C_{t}=f_{t} \\times C_{t-1}+i_{t} \\times \\tilde{C}_{t} $$ $f_{t}$\u662f\u4e00\u4e2a\u9057\u5fd8\u95e8\uff0c0~1\u4e4b\u95f4 $i_{t}$\u662f\u8f93\u5165\u95e8\uff0c\u5176\u529f\u80fd\u975e\u5e38\u76f8\u4f3c\u7528\u4e8e\u4fdd\u7559\u4e0e\u4ee5\u5f80\uff0c$h_t,x_t$\u7684\u4fe1\u606f $\\tilde{C}_{t}$\u8868\u793a\u5355\u5143\u72b6\u6001\u66f4\u65b0\u503c $C_t$\u4e3acell\u72b6\u6001 \u7531\u6839\u636e$o_t$\u8f93\u51fa\u95e8\uff0c\u66f4\u65b0\u7684 $h_t$ \u503c\u3002 \u7efc\u4e0a\u6240\u8ff0\uff0cLSTM\u4e00\u4e2acell\u91cc\u9762\u8f93\u51fa\u4e86\u4e24\u4e2a\u53d8\u91cf\uff0c\u5206\u522b\u4e3a$C_t$\uff0c$h_t$\u3002 keras.layers.LSTM >>> inputs = tf.random.normal([32, 10, 8]) >>> lstm = tf.keras.layers.LSTM(4) >>> output = lstm(inputs) >>> print(output.shape) (32, 4) >>> lstm = tf.keras.layers.LSTM(4, return_sequences=True, return_state=True) >>> whole_seq_output, final_memory_state, final_carry_state = lstm(inputs) >>> print(whole_seq_output.shape) (32, 10, 4) >>> print(final_memory_state.shape) (32, 4) >>> print(final_carry_state.shape) (32, 4) units: $h_t$ \u7684\u7ef4\u5ea6 whole_seq_output, final_memory_state, final_carry_state = lstm(inputs) \u6ce8\u610f\u8f93\u51fa\u7684\u987a\u5e8f sequence_output \u662f\u6307 $h_t$ whole_seq_output \u662f\u6307 $h_1,h_2,...h_t$ tensorflow2 \u7684 LSTM \u6e90\u7801\u9605\u8bfb LSTM\u662f\u4e00\u4e2alayer\uff0c\u5b83\u7ee7\u627f\u4e86RNN layer \u4f7f\u7528\u7684\u662fLSTMCell LSTM\u662f\u4e00\u4e2a\u5faa\u73af\u64cd\u4f5c\uff08\u8f93\u5165\u4e09\u7ef4\u5ea6\u5f20\u91cf\uff09\uff0cLSTMCell\u5c31\u662f\u4e00\u6b21\u5faa\u73af\u7684\u64cd\u4f5c\uff08\u8f93\u5165\u4e8c\u7ef4\u5f20\u91cf\uff0c\u53bb\u9664\u4e86\u65f6\u95f4\u6233\uff09\u3002 LSTMCell \u7c7b class LSTMCell(DropoutRNNCellMixin, Layer): \"\"\"Cell class for the LSTM layer. Args: units: Positive integer, dimensionality of the output space. activation: Activation function to use. Default: hyperbolic tangent (`tanh`). If you pass `None`, no activation is applied (ie. \"linear\" activation: `a(x) = x`). recurrent_activation: Activation function to use for the recurrent step. Default: hard sigmoid (`hard_sigmoid`). If you pass `None`, no activation is applied (ie. \"linear\" activation: `a(x) = x`). use_bias: Boolean, whether the layer uses a bias vector. kernel_initializer: Initializer for the `kernel` weights matrix, used for the linear transformation of the inputs. recurrent_initializer: Initializer for the `recurrent_kernel` weights matrix, used for the linear transformation of the recurrent state. bias_initializer: Initializer for the bias vector. unit_forget_bias: Boolean. If True, add 1 to the bias of the forget gate at initialization. Setting it to true will also force `bias_initializer=\"zeros\"`. This is recommended in [Jozefowicz et al., 2015]( http://www.jmlr.org/proceedings/papers/v37/jozefowicz15.pdf) kernel_regularizer: Regularizer function applied to the `kernel` weights matrix. recurrent_regularizer: Regularizer function applied to the `recurrent_kernel` weights matrix. bias_regularizer: Regularizer function applied to the bias vector. kernel_constraint: Constraint function applied to the `kernel` weights matrix. recurrent_constraint: Constraint function applied to the `recurrent_kernel` weights matrix. bias_constraint: Constraint function applied to the bias vector. dropout: Float between 0 and 1. Fraction of the units to drop for the linear transformation of the inputs. recurrent_dropout: Float between 0 and 1. Fraction of the units to drop for the linear transformation of the recurrent state. Call arguments: inputs: A 2D tensor. states: List of state tensors corresponding to the previous timestep. training: Python boolean indicating whether the layer should behave in training mode or in inference mode. Only relevant when `dropout` or `recurrent_dropout` is used. \"\"\" \u4e00\u4e2aCell\u53ea\u9700\u8981\u8f93\u5165\u4e8c\u7ef4\u5f20\u91cf[batch,features] call \u51fd\u6570\u8fd4\u56de\u503c\u4e3a h, [h,c] def call(self, inputs, states, training=None): h_tm1 = states[0] # previous memory state c_tm1 = states[1] # previous carry state \"\"\" \u7701\u7565 \"\"\" return h, [h, c] \u6b63\u5982\u8fd9\u4e00\u4e2aCell\u6240\u793a\uff0c\u8fdb\u53bb\u4e00\u4e2a$x_t$ \u51fa\u6765 $h_t,c_t$ LSTM \u7c7b class LSTM(RNN): def __init__(self,units,**kwargs): \"\"\" \u7701\u7565 \"\"\" cell = LSTMCell(units,**cell_kwargs) super(LSTM, self).__init__(cell,**kwargs) def call(self, inputs): return super(LSTM, self).call(inputs) \u53ef\u4ee5\u770b\u5230\uff0c\u672c\u8d28\u4e0a\u662f\u4f7f\u7528\u4e86RNN\u7684call\u51fd\u6570\uff0c\u4f46\u662f\u628aCell\u8fdb\u884c\u4e86\u66f4\u6539\u3002 \u524d\u9762\u5df2\u7ecf\u63d0\u5230\u4e86Cell\u662f\u4e00\u4e2a\uff1a [batch, features] -----LSTMCell-----> h, [h, c] \u63a5\u4e0b\u6765\u8fdb\u5165RNN\u7684call\u51fd\u6570\u4e2d\uff1a def call(self,inputs,): # The input should be dense, padded with zeros. If a ragged input is fed # into the layer, it is padded and the row lengths are used for masking. \"\"\" \u8fdb\u884c\u4e00\u7cfb\u5217\u68c0\u67e5 \"\"\" inputs,initial_state,constants= self._process_inputs(inputs,initial_state,constants) # \u5b9a\u4e49step\u51fd\u6570\uff0c\u6267\u884cCell\u7684call function def step(inputs, states): states = states[0] if len(states) == 1 and is_tf_rnn_cell else states output, new_states = cell_call_fn(inputs, states, **kwargs) if not tf.nest.is_nested(new_states): new_states = [new_states] return output, new_states # \u5c06step\u51fd\u6570\u653e\u5230K.rnn\u4e2d\u6267\u884c last_output, outputs, states = backend.rnn( step, inputs, initial_state) transformer\u4e2d\u7684\u4f4d\u7f6e\u7f16\u7801 \u4e00\u79cd\u597d\u7684\u4f4d\u7f6e\u7f16\u7801\u65b9\u6848\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u51e0\u6761\u8981\u6c42\uff1a \u5b83\u80fd\u4e3a\u6bcf\u4e2a\u65f6\u95f4\u6b65\u8f93\u51fa\u4e00\u4e2a\u72ec\u4e00\u65e0\u4e8c\u7684\u7f16\u7801\uff1b \u4e0d\u540c\u957f\u5ea6\u7684\u53e5\u5b50\u4e4b\u95f4\uff0c\u4efb\u4f55\u4e24\u4e2a\u65f6\u95f4\u6b65\u4e4b\u95f4\u7684\u8ddd\u79bb\u5e94\u8be5\u4fdd\u6301\u4e00\u81f4\uff1b \u6a21\u578b\u5e94\u8be5\u80fd\u6beb\u4e0d\u8d39\u529b\u5730\u6cdb\u5316\u5230\u66f4\u957f\u7684\u53e5\u5b50\u3002 \u5b83\u7684\u503c\u5e94\u8be5\u662f\u6709\u754c\u7684\uff1b \u5b83\u5fc5\u987b\u662f\u786e\u5b9a\u6027\u7684\u3002","title":"\u6df1\u5ea6\u5b66\u4e60"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_1","text":"\u6df1\u5ea6\u5b66\u4e60 \u6570\u5b66\u57fa\u7840 tensorflow \u4e00\u4e9b\u57fa\u672c\u6982\u5ff5 \u5f20\u91cf \u5982\u4f55\u7406\u89e3\u9ad8\u7ef4\u5f20\u91cf \u7d22\u5f15\u4e0eslicing reshape broadcasting \u7279\u5f81 \u77e9\u9635\u4e58\u6cd5 \u5c0f\u77e5\u8bc6\u70b9\uff1a \u5e38\u7528\u51fd\u6570 tf.Variable \u5e38\u7528\u8fd0\u7b97\u51fd\u6570 \u8f93\u5165\u6807\u7b7e\uff0c\u6807\u7b7e tf.GradientTape tf.one_hot tf.argmax model.fit() \u7528generator\u6765\u505a\u8f93\u5165\uff1ax tf.data \u4ece\u5185\u5b58\u4e2d\u52a0\u8f7d\u6570\u636e tf.data.Dataset.element_spec Dataset.batch tf.nest functions tf.nest.flatten graph keras sequential model \u7f51\u7edc\u7ed3\u6784 model.compile model.fit build(self, inputs_shape) keras.backend.rnn \u6a21\u578b\u7684\u4fdd\u5b58\u4e0e\u52a0\u8f7d \u5168\u90e8\u4fdd\u5b58 \u4fdd\u5b58\u7ed3\u6784 \u4fdd\u5b58\u6743\u91cd\uff0c\u53c2\u6570 pytorch \u51c6\u5907\u5de5\u4f5c torch.utils.data.Dataset \u81ea\u5b9a\u4e49\u6570\u636e\u96c6 torch.utils.data.DataLoader nn.module nn.module\u4e2d\u7684layer \u5e38\u7528\u51fd\u6570 \u8bad\u7ec3\u7f51\u7edc \u53cd\u5411\u4f20\u64ad \u8ba1\u7b97\u56fe\uff1a \u5fae\u79ef\u5206\u4e2d\u7684\u94fe\u5f0f\u6cd5\u5219 \u7b2c\u4e00\u4e2a\u7248\u672c\u7684\u53cd\u5411\u4f20\u64ad \u7528\u4f8b\u5b50\u6765\u8bf4\u660e\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5 \u771f\u6b63\u5730\u8003\u8651\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\uff1a reference RNN\u5faa\u73af\u795e\u7ecf\u7f51\u7edc \u7ecf\u5178\u7684RNN\u7ed3\u6784 \u4f18\u7f3a\u70b9 \u7f3a\u70b9\uff1a \u635f\u5931\u51fd\u6570\uff1a reference sequence to sequence \u7ed3\u6784 \u5206\u6790 teacher forcing attention keras.layers.SimpleRNN SimpleRNN \u7684\u8f93\u5165\u8f93\u51fa units\u5230\u5e95\u662f\u4ec0\u4e48\u5462 LSTM cell state keras.layers.LSTM tensorflow2 \u7684 LSTM \u6e90\u7801\u9605\u8bfb LSTMCell \u7c7b LSTM \u7c7b transformer\u4e2d\u7684\u4f4d\u7f6e\u7f16\u7801","title":"\u6df1\u5ea6\u5b66\u4e60"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_2","text":"\u6807\u91cf \u5411\u91cf \u77e9\u9635 \u5f20\u91cf","title":"\u6570\u5b66\u57fa\u7840"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#tensorflow","text":"","title":"tensorflow"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_3","text":"keras\u662ftensorflow\u7684\u9ad8\u9636api\uff0c\u76f8\u5f53\u4e8e\u96c6\u6210\u597d\u4e86\u4e00\u4e9btensor\u7684\u64cd\u4f5c\u3002 tensorflow\u662f\u5f20\u91cf\u7684\u56fe\u8ba1\u7b97\u6d41","title":"\u4e00\u4e9b\u57fa\u672c\u6982\u5ff5"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_4","text":"\u5f20\u91cf\u662f\u4e00\u4e2a\u9ad8\u7ef4\u7684\u6570\u7ec4\u3002 \u5f20\u91cf\u53ef\u4ee5\u662f\u5927\u4e8e2\u4e2aaxes\u7684\uff1a","title":"\u5f20\u91cf"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_5","text":"(3,2,5) \u5c31\u662f3\u4e2a2*5\u7684\u77e9\u9635\u53e0\u5728\u4e00\u8d77 (5,256,256,3) \u5c31\u662f5\u5f20RGB\u7167\u7247\u53e0\u5728\u4e00\u8d77 \u56e0\u4e3a\u5e38\u5e38\u5904\u7406\u56fe\u50cf\u6570\u636e\uff0c\u6240\u4ee5\u5e38\u7528\u7684tensor\u5f62\u72b6\u4e3a(B,W,H,C)","title":"\u5982\u4f55\u7406\u89e3\u9ad8\u7ef4\u5f20\u91cf"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#slicing","text":"\u7d22\u5f15\u5c31\u5982numpy\u7684\u7d22\u5f15\u65b9\u5f0f\uff0c\u6709\u51e0\u4e2aaxes\u5c31\u80fd\u5728\u51e0\u4e2aaxes\u4e0a\u8fdb\u884c\u7d22\u5f15\u3002 tensor[axe1,axe2,axe3] \u5bf9\u4e8e\u9ad8\u7ef4\u5411\u91cf\u7684\u7d22\u5f15\uff0c\u5982\u679c\u76f4\u5bf9\u4e00\u4e2a\u7ef4\u5ea6\u8fdb\u884c\u7d22\u5f15\uff0c\u5207\u7247\u7684\u6837\u5b50\u5f88\u96be\u60f3\u8c61\u51fa\u6765\uff0c\u8fd9\u91cc\u4e3e\u4f8b\uff1a # There can be an arbitrary number of # axes (sometimes called \"dimensions\") rank_3_tensor = tf.constant([ [[0, 1, 2, 3, 4], [5, 6, 7, 8, 9]], [[10, 11, 12, 13, 14], [15, 16, 17, 18, 19]], [[20, 21, 22, 23, 24], [25, 26, 27, 28, 29]],]) print(rank_3_tensor) >>> tf.Tensor( [[[ 0 1 2 3 4] [ 5 6 7 8 9]] [[10 11 12 13 14] [15 16 17 18 19]] [[20 21 22 23 24] [25 26 27 28 29]]], shape=(3, 2, 5), dtype=int32) rank_3_tensor[:, :, 4] >>> <tf.Tensor: shape=(3, 2), dtype=int32, numpy= array([[ 4, 9], [14, 19], [24, 29]])>","title":"\u7d22\u5f15\u4e0eslicing"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#reshape","text":"flatten\u6839\u636e\u7684\u662f\u5f20\u91cf\u4e2d\u5143\u7d20\u5728\u5185\u5b58\u4e2d\u7684\u6392\u5217\u3002TensorFlow uses C-style \"row-major\" memory ordering, where incrementing the rightmost index corresponds to a single step in memory. \u5728reshape\u65f6\uff0c\u8981\u8003\u8651\u5230\u6570\u636e\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u56e0\u4e3areshape\u53ea\u8981\u6c42\u524d\u540e\u5143\u7d20\u6570\u76ee\u76f8\u540c\uff0c\u4e0d\u4fdd\u8bc1\u4fdd\u7559\u6570\u636e\u5173\u7cfb\u3002","title":"reshape"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#broadcasting","text":"\u8fd9\u4e00\u70b9\u4e0enumpy\u4e2d\u7684\u5e7f\u64ad\u6027\u8d28\u4e00\u81f4\u3002 \u5728\u4e00\u4e2aoperation\u5f53\u4e2d\uff0c\u5982\u679carray\u4e0escalar\u8fdb\u884c\u8fd0\u7b97\uff0c\u90a3\u4e48\u4f1a\u53d1\u751f\u4ec0\u4e48\u5462\uff1f \u4e24\u4e2aarrays\u8fdb\u884coperation\uff0c\u8981\u6c42\u4ed6\u4eec\u7684\u7ef4\u5ea6\u662fcompatible\u7684\uff1a \u7ef4\u5ea6\u76f8\u540c \u5176\u4e2d\u4e00\u4e2a\u4e3a1 https://numpy.org/devdocs/user/basics.broadcasting.html \u5982\uff1a(5,4)\u53ef\u4ee5\u4e0e(1,)\uff0c(4,)\u8fdb\u884coperation\uff0c\u4f46\u4e0d\u80fd\u4e0e(3,)\u8fdb\u884coperation \u4ece\u5de6\u4fa7\u5f00\u59cb\u914d\u5bf9\uff0c\u4ece\u6700\u5185\u7684\u5143\u7d20\u5f00\u59cb\u3002","title":"broadcasting \u7279\u5f81"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_6","text":"\u5b9e\u9645\u4e0a\u77e9\u9635\u4e58\u6cd5\u5c31\u662f\u7b26\u5408\u5e7f\u64ad\u7279\u6027\u7684\uff1a a = 1 * 3 b = 4 * 1 result = 4 * 3","title":"\u77e9\u9635\u4e58\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_7","text":"\u5f20\u91cf\u5728\u56fe\u4e2d\u6d41\u52a8\uff0c\u6240\u4ee5\u53ebtensorflow \u8fd9\u4e2a\u4e00\u7ef4\u5f20\u91cf\u7684\u6d41\u52a8\u8fc7\u7a0b \u5f20\u91cf\u53ef\u4ee5\u7531numpy\u6784\u5efa\uff0c\u4ee5\u53ca\u4e00\u4e9b\u7279\u6b8a\u7684\u65b9\u6cd5 tf.zeros() tf.ones() tf.random.normal() axis:","title":"\u5c0f\u77e5\u8bc6\u70b9\uff1a"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_8","text":"","title":"\u5e38\u7528\u51fd\u6570"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#tfvariable","text":"\u7528\u8be5\u51fd\u6570\u6807\u8bb0\u540e\uff0c\u8be5\u53d8\u91cf\u5c31\u662f\u53ef\u8bad\u7ec3\u7684\u4e86\u3002 w = tf.Variable(tf.random.normal([2,2],mean,stddev=1))","title":"tf.Variable"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_9","text":"tf.add tf.subtract tf.multiply \u7b49\u7b49","title":"\u5e38\u7528\u8fd0\u7b97\u51fd\u6570"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_10","text":"tf.data.Dataset.from_tensor_slices","title":"\u8f93\u5165\u6807\u7b7e\uff0c\u6807\u7b7e"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#tfgradienttape","text":"\u8ba1\u7b97\u68af\u5ea6","title":"tf.GradientTape"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#tfone_hot","text":"\u72ec\u70ed\u7f16\u7801","title":"tf.one_hot"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#tfargmax","text":"\u8fd4\u56de\u5f20\u91cf\u6307\u5b9a\u7ef4\u5ea6\u6700\u5927\u503c\u7684\u7d22\u5f15\u53f7\u3002","title":"tf.argmax"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#modelfit","text":"fit(x=None, y=None, batch_size=None, epochs=1, verbose='auto', callbacks=None, validation_split=0.0, validation_data=None, shuffle=True, class_weight=None, sample_weight=None, initial_epoch=0, steps_per_epoch=None, validation_steps=None, validation_batch_size=None, validation_freq=1, max_queue_size=10, workers=1, use_multiprocessing=False ) \u8f93\u5165\u6570\u636ex,y\u662f\u6700\u91cd\u8981\u7684\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u76f4\u63a5\u5c06\u6570\u636e\u5b58\u5230\u5185\u5b58\u4e2d\uff0c\u7136\u540e\u4f20\u5230x\u5c31\u597d\u3002\u4f46\u662f\u4f1a\u51fa\u73b0\u8fd9\u6837\u7684\u60c5\u51b5\uff1a \u6570\u636e\u592a\u5927\uff0c\u5185\u5b58\u65e0\u6cd5\u88c5\u4e0b\uff0c\u8fd9\u8be5\u600e\u4e48\u529e\u5462\uff1f \u4f7f\u7528\u751f\u6210\u5668generator\u6216\u8005tf.data.Dataset\u6765\u8fdb\u884c\u8f93\u5165\u3002","title":"model.fit()"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#generatorx","text":"generator\u5e94\u8be5\u6bcf\u6b21\u4ea7\u751f\u4e00\u4e2a\uff08x\uff0cy\uff09\u3002 \u5e76\u4e14fit()\u51fd\u6570\u4e2dy\u53c2\u6570\u4e3aNone\uff0cbatch_size\u4e5f\u662fNone \u4e5f\u5c31\u662f\u8bf4\u751f\u6210\u5668\u6bcf\u6b21yield\u7684x\uff0cy\u662f\u4e00\u4e2abatch\u3002 \u6848\u4f8b\uff1a","title":"\u7528generator\u6765\u505a\u8f93\u5165\uff1ax"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#tfdata","text":"tf.data.Dataset\u662f\u6838\u5fc3 tf.data.Dataset\u662f\u4e00\u4e2apython\u8fed\u4ee3\u5668","title":"tf.data"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_11","text":"tf.data.Dataset.from_tensors() \"\"\"Creates a `Dataset` with a single element, comprising the given tensors. `from_tensors` produces a dataset containing only a single element. To slice the input tensor into multiple elements, use `from_tensor_slices` instead. \"\"\" tf.data.Dataset.from_tensor_slices() \"\"\"Creates a `Dataset` whose elements are slices of the given tensors. The given tensors are sliced along their first dimension. This operation preserves the structure of the input tensors, removing the first dimension of each tensor and using it as the dataset dimension. All input tensors must have the same size in their first dimensions. \"\"\" \u5728\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\u4e0a\u8fdb\u884c\u5207\u7247\uff0c\u6240\u4ee5\u4e00\u822c\u56fe\u7247\u7684\u7b2c\u4e00\u7ef4\u5ea6\u662fbatch","title":"\u4ece\u5185\u5b58\u4e2d\u52a0\u8f7d\u6570\u636e"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#tfdatadatasetelement_spec","text":"\u68c0\u67e5\u5143\u7d20\uff0c\u8981\u6ce8\u610f\u7684\u662f\u5b83\u68c0\u67e5\u7684\u662f\u5355\u4e2a\u5143\u7d20\uff1a dataset2 = tf.data.Dataset.from_tensor_slices( (tf.random.uniform([4]), tf.random.uniform([4, 100], maxval=100, dtype=tf.int32))) dataset2.element_spec >>> (TensorSpec(shape=(), dtype=tf.float32, name=None), TensorSpec(shape=(100,), dtype=tf.int32, name=None))","title":"tf.data.Dataset.element_spec"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#datasetbatch","text":"Combines consecutive elements of this dataset into batches. dataset = tf.data.Dataset.range(8) dataset = dataset.batch(3) list(dataset.as_numpy_iterator()) [[0,1,2],[3,4,5],[6,7]]","title":"Dataset.batch"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#tfnest","text":"nest\u6a21\u5757\u662f\u7528\u4e8e\u5904\u7406nested structure\u7ed3\u6784\u7684\uff0cnested structure\u76ee\u524d\u652f\u6301\u7684\u7ed3\u6784\u662ftuple\uff0cdict\uff0cnamedtuple\u3002 \u5bf9\u4e8enested_structure\u53ef\u4ee5\u4f7f\u7528is_nested()\u5224\u65ad\u3002 tf.nest.is_nested(((7, 8), (5, 6))) >>>True tf.nest.is_nested({\"a\": 1, \"b\": 2}) >>>True tf.nest.is_nested(set([1, 2])) >>>False ones = tf.ones([2, 3]) >>>False","title":"tf.nest"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#functions","text":"assert_same_structure(...) : Asserts that two structures are nested in the same way. flatten(...) : Returns a flat list from a given nested structure. is_nested(...) : Returns true if its input is a collections.abc.Sequence (except strings). map_structure(...) : Applies func to each entry in structure and returns a new structure. pack_sequence_as(...) : Returns a given flattened sequence packed into a given structure. \u5e38\u7528\u51fd\u6570\u662fflatten()","title":"functions"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#tfnestflatten","text":"\u6839\u636ekey\u6765\u6392\u5e8f\uff01 dict = { \"key3\": \"value3\", \"key1\": \"value1\", \"key2\": \"value2\" } tf.nest.flatten(dict) >>> ['value1','value2','value3'] tuple\u6839\u636e\u5185\u5b58\u987a\u5e8f","title":"tf.nest.flatten"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#graph","text":"","title":"graph"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#keras","text":"\u516b\u80a1\u6587\u5199\u4ee3\u7801\u65b9\u6cd5\uff1a # import \u6a21\u5757 # train test # model # model.compile # model.fit # model.summary","title":"keras"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#sequential-model","text":"# Define Sequential model with 3 layers model = keras.Sequential( [ layers.Dense(2, activation=\"relu\", name=\"layer1\"), layers.Dense(3, activation=\"relu\", name=\"layer2\"), layers.Dense(4, name=\"layer3\"), ] ) # Call model on a test input x = tf.ones((3, 3)) y = model(x) sequential model \u4e0d\u9002\u7528\u4e8e\uff1a \u591a\u8f93\u5165\u4e0e\u591a\u8f93\u51fa \u5c42\u4e4b\u95f4\u7684\u5171\u4eab \u7b49\u7b49\u3002\u3002\u3002","title":"sequential model"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_12","text":"\u62c9\u76f4\u5c42 \u5168\u8fde\u63a5\u5c42 \u5377\u79ef\u5c42 LSTM\u5c42","title":"\u7f51\u7edc\u7ed3\u6784"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#modelcompile","text":"model.compile(optimizer='sgd',loss,metrics=[\"accuracy\"]) \u6307\u5b9a\u7f51\u7edc\u7684\u4f18\u5316\u5668\u4e0e\u635f\u5931\u51fd\u6570","title":"model.compile"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#modelfit_1","text":"model.fit( x, y, batch_size, validation_data, validation_split, validation_freq )","title":"model.fit"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#buildself-inputs_shape","text":"\u5728\u7ee7\u627ftf.keras.layers.Layer\u65f6\uff0c\u53ef\u4ee5\u91cd\u5199call\uff0cbuild\u548cinit\u51fd\u6570 build\u51fd\u6570\u4e3b\u8981\u7528\u4e8e\u521d\u59cb\u5316\u53c2\u6570\uff0c\u5f53call\u88ab\u7b2c\u4e00\u6b21\u8c03\u7528\u7684\u65f6\u5019\uff0c\u4f1a\u5148\u6267\u884cbuild()\u65b9\u6cd5\u521d\u59cb\u5316\u53d8\u91cf\uff0c\u4f46\u540e\u9762\u518d\u8c03\u7528\u5230call\u7684\u65f6\u5019\uff0c\u662f\u4e0d\u4f1a\u518d\u53bb\u6267\u884cbuild()\u65b9\u6cd5\u521d\u59cb\u5316\u53d8\u91cf\u3002\u4e00\u822c\u7528\u4e8e\u9700\u8981\u77e5\u9053\u8f93\u5165tensor\u7684\u5f62\u72b6\uff0c\u5b8c\u6210\u53d6\u51b3\u4e8e\u8f93\u5165tensor\u5f62\u72b6\u7684\u521d\u59cb\u5316\u3002 class Linear(keras.layers.Layer): def __init__(self, units=32): super(Linear, self).__init__() self.units = units def build(self, input_shape): self.w = self.add_weight( shape=(input_shape[-1], self.units), initializer=\"random_normal\", trainable=True, ) self.b = self.add_weight( shape=(self.units,), initializer=\"random_normal\", trainable=True ) def call(self, inputs): return tf.matmul(inputs, self.w) + self.b","title":"build(self, inputs_shape)"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#kerasbackendrnn","text":"\u5728\u65f6\u95f4\u6b65\u7ef4\u5ea6\u4e0a\u5bf9\u5f20\u91cf\u8fdb\u884c\u8fed\u4ee3\u3002 tf.keras.backend.rnn( step_function, inputs, initial_states, go_backwards=False, mask=None, constants=None, unroll=False, input_length=None, time_major=False, zero_output_for_mask=False, ) \u9700\u8981\u5b9a\u4e49step function\uff1a step(input): \"\"\"do some thing\"\"\" return output input\u5f20\u91cf\u9700\u8981\u53bb\u9664time_steps\u7ef4\u5ea6\uff0c\u4e3a[batch, features] output\u5f20\u91cf\u540c\u6837\u6ca1\u6709\u65f6\u95f4\u7ef4\u5ea6\uff0c\u4e3a[batch, output_dimensions]","title":"keras.backend.rnn"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_13","text":"\u4e00\u4e2a\u6a21\u578b\u5305\u62ec\u591a\u4e2a\u90e8\u4ef6\uff1a \u6a21\u578b\u7684\u7ed3\u6784\uff0c\u5305\u62eclayers\uff0chow they are connected \u6743\u91cd\uff0c\u4e5f\u5c31\u662f\u6a21\u578b\u7684\u53c2\u6570 \u4f18\u5316\u5668\uff0c\u5728compile \u6a21\u578b\u7684\u65f6\u5019\u6307\u5b9a \u635f\u5931\u51fd\u6570\u4e0emetric\uff0c\u4e5f\u662f\u5728compile\u65f6\u5019\u6307\u5b9a \u53ef\u4ee5\u4e00\u6b21\u5168\u90e8\u4fdd\u5b58\uff0c\u4e5f\u53ef\u4ee5\u5206\u522b\u50a8\u5b58\u3002","title":"\u6a21\u578b\u7684\u4fdd\u5b58\u4e0e\u52a0\u8f7d"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_14","text":"# \u4fdd\u5b58\u6a21\u578b model.save('path/to/location') # \u52a0\u8f7d\u6a21\u578b model = keras.models.load_model('path/to/location') model.save \u4fdd\u5b58\u6240\u6709\uff0c\u683c\u5f0f\u4e3a SavedModel \u683c\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u6307\u5b9a\u4e3a H5 \u683c\u5f0f SavedModel \u5176\u5b9e\u662f\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u4fdd\u5b58\u4e86\u4e00\u4e9b\u6587\u4ef6\u3002\u8be6\u60c5\u53ef\u89c1 https://www.tensorflow.org/guide/saved_model#the_savedmodel_format_on_disk","title":"\u5168\u90e8\u4fdd\u5b58"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_15","text":"model.get_config() model.from_config() tf.keras.models.model_to_json() tf.keras.models.model_from_json()","title":"\u4fdd\u5b58\u7ed3\u6784"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_16","text":"model.save_weights() model.load_weights() \u53ef\u4ee5\u5b58\u50a8\u7684\u6587\u4ef6\u683c\u5f0f\u6709\uff1a TensorFlow Checkpoint HDF5 H5","title":"\u4fdd\u5b58\u6743\u91cd\uff0c\u53c2\u6570"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#pytorch","text":"","title":"pytorch"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_17","text":"\u67e5\u770bcudn\u7684\u7248\u672c nvcc --version \u67e5\u770bpytorch \u7248\u672c print(torch.__version__) print(torch.cuda.is_available()) device = 'cuda' if torch.cuda.is_available() else 'cpu' print('Using {} device'.format(device))","title":"\u51c6\u5907\u5de5\u4f5c"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#torchutilsdatadataset","text":"\u6570\u636e \u81ea\u5e26\u6570\u636e\u96c6 \u81ea\u5b9a\u4e49\u6570\u636e\u96c6","title":"torch.utils.data.Dataset"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_18","text":"import os import pandas as pd from torchvision.io import read_image class CustomImageDataset(Dataset): def __init__(self, annotations_file, img_dir, transform=None, target_transform=None): self.img_labels = pd.read_csv(annotations_file) self.img_dir = img_dir self.transform = transform self.target_transform = target_transform def __len__(self): return len(self.img_labels) def __getitem__(self, idx): img_path = os.path.join(self.img_dir, self.img_labels.iloc[idx, 0]) image = read_image(img_path) label = self.img_labels.iloc[idx, 1] if self.transform: image = self.transform(image) if self.target_transform: label = self.target_transform(label) return image, label Dataset\u662f\u4e3afile\u670d\u52a1\u7684\u3002\u51e0\u4e2a\u5fc5\u987b\u7684\u51fd\u6570\uff1a init len getitem \u7528\u4e8e\u4e4b\u540e\u4f20\u5165dataloader","title":"\u81ea\u5b9a\u4e49\u6570\u636e\u96c6"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#torchutilsdatadataloader","text":"\u8fd9\u662f\u4e00\u4e2a\u53ef\u8fed\u4ee3\u7c7b\uff0c\u4e3a\u4e86\u5c31\u662f\u5c06dataset\u6253\u5305\u6210\u4e00\u4e2a\u4e2abatch\uff0c\u7528\u4e8e\u8bad\u7ec3 \u6240\u4ee5\u8bf4 dataloader\u662f\u4e3a\u8bad\u7ec3\u670d\u52a1\u7684\u3002","title":"torch.utils.data.DataLoader"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#nnmodule","text":"class NeuralNetwork(nn.Module): def __init__(self): super(NeuralNetwork, self).__init__() self.flatten = nn.Flatten() self.linear_relu_stack = nn.Sequential( nn.Linear(28*28, 512), nn.ReLU(), nn.Linear(512, 512), nn.ReLU(), nn.Linear(512, 10), ) def forward(self, x): x = self.flatten(x) logits = self.linear_relu_stack(x) return logits model = NeuralNetwork().to(device) \u5728init\u4e2d\u5b9a\u4e49\u7ec4\u4ef6\uff0c\u5728forward\u51fd\u6570\u5b9a\u4e49\u7f51\u7edc\u7684\u524d\u5411\u4f20\u64ad","title":"nn.module"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#nnmodulelayer","text":"nn.Flatten nn.Linear nn.ReLU nn.Sequential layer\u7684\u5bb9\u5668 nn.Softmax","title":"nn.module\u4e2d\u7684layer"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_19","text":"for name, param in model.named_parameters(): print(f\"Layer: {name} | Size: {param.size()} | Values : {param[:2]} \\n\")","title":"\u5e38\u7528\u51fd\u6570"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_20","text":"\u5b9a\u4e49\u635f\u5931\u51fd\u6570 \u5b9a\u4e49\u4f18\u5316\u5668 \u5b9a\u4e49\u4e00\u4e2aepoch\u7684\u884c\u4e3a \u5f00\u59cb\u8bad\u7ec3\u591a\u4e2aepoch # 1 loss_fn = nn.CrossEntropyLoss() # 2 optimizer = torch.optim.SGD(model.parameters(), lr=learning_rate) # 3 def train_loop(dataloader, model, loss_fn, optimizer): size = len(dataloader.dataset) for batch, (X, y) in enumerate(dataloader): # Compute prediction and loss pred = model(X) loss = loss_fn(pred, y) # Backpropagation optimizer.zero_grad() loss.backward() optimizer.step() if batch % 100 == 0: loss, current = loss.item(), batch * len(X) print(f\"loss: {loss:>7f} [{current:>5d}/{size:>5d}]\") def test_loop(dataloader, model, loss_fn): size = len(dataloader.dataset) num_batches = len(dataloader) test_loss, correct = 0, 0 with torch.no_grad(): for X, y in dataloader: pred = model(X) test_loss += loss_fn(pred, y).item() correct += (pred.argmax(1) == y).type(torch.float).sum().item() test_loss /= num_batches correct /= size print(f\"Test Error: \\n Accuracy: {(100*correct):>0.1f}%, Avg loss: {test_loss:>8f} \\n\") loss_fn = nn.CrossEntropyLoss() optimizer = torch.optim.SGD(model.parameters(), lr=learning_rate) epochs = 10 for t in range(epochs): print(f\"Epoch {t+1}\\n-------------------------------\") train_loop(train_dataloader, model, loss_fn, optimizer) test_loop(test_dataloader, model, loss_fn) print(\"Done!\") Call optimizer.zero_grad() to reset the gradients of model parameters. Gradients by default add up; to prevent double-counting, we explicitly zero them at each iteration.","title":"\u8bad\u7ec3\u7f51\u7edc"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_21","text":"\u8f93\u5165x\uff0c\u8f93\u51fay\uff0c\u53c2\u6570\u4e3a$\\theta$ \u5b9a\u4e49\u635f\u5931\u51fd\u6570 $J(\\theta)$ \u6211\u4eec\u9700\u8981\u8ba1\u7b97\u7684\u662f $\\nabla _\\theta J(\\theta) $","title":"\u53cd\u5411\u4f20\u64ad"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_22","text":"\u4e00\u4e2aDAG\uff0c\u4e00\u4e2a\u8282\u70b9\u53ef\u4ee5\u662f\u53d8\u91cf\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2aoperation\u3002","title":"\u8ba1\u7b97\u56fe\uff1a"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_23","text":"\u5bf9\u4e8e\u8fd9\u6837\u4e00\u4e2a\u51fd\u6570\uff1a $$ y = g(x)\\ z = f(g(x)) $$ z\u5bf9x\u6c42\u5bfc\uff0c\u5199\u4e3a\uff1a $$ dz/dx = dz/dy*dy/dx $$ \u8fd9\u53ea\u662f\u6807\u91cf\u7684\u5199\u6cd5\uff0c\u5982\u679c\u6269\u5c55\u4e3a\u5411\u91cf\uff1a $$ \\nabla_x z = (\\frac{\\delta y}{\\delta x})^T\\nabla_y z $$ \u5176\u4e2dz\u662f\u4e00\u4e2a\u6807\u91cf $x \\in R^m, y \\in R^n$, $\\frac{\\delta y}{\\delta x}$ \u662f n$\\times$m\u7684 Jacobian\u77e9\u9635\u3002 \u6b64\u65f6\u5982\u679c\u6211\u4eec\u5c06 z\u770b\u4f5c\uff1a\u635f\u5931\u51fd\u6570\u8f93\u51fa\u7684\u6807\u91cf\u3002 $$ z = f(y) $$ y\u770b\u4f5c\u795e\u7ecf\u7f51\u7edc\u7684\u8f93\u51fa\u91cf\uff0cg()\u662f\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\uff1a $$ y = g(x) $$ \u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u8f93\u5165\u5b9e\u9645\u4e0a\u662f\u7f51\u7edc\u53c2\u6570$x$, \u901a\u8fc7\u4e0d\u65ad\u6539\u53d8$x$ \u4f7f\u5f97\u635f\u5931\u51fd\u6570\u6700\u5c0f\u3002","title":"\u5fae\u79ef\u5206\u4e2d\u7684\u94fe\u5f0f\u6cd5\u5219"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_24","text":"\u5b9a\u4e49\u8fd9\u6837\u4e00\u4e2aforward\u8fc7\u7a0b\uff1a $u^{(1)},...,u^{(n_i)}$ \u4e3a\u8f93\u5165\u8282\u70b9\uff08\u53ef\u4ee5\u7406\u89e3\u4e3a\u53c2\u6570w\uff09 $u^{(n)}$\u4e3a\u8f93\u51fa\uff0c\u662f\u635f\u5931\u51fd\u6570\u8ba1\u7b97\u51fa\u6765\u7684\u6807\u91cf\u503c\u3002 \u76ee\u6807\uff0c\u6c42 $$ \\frac{\\partial u^{(n)}}{\\partial u^{(j)}},j\\in{1,2,3...i}\\ =\\sum_{i: j \\in P a\\left(u^{(i)}\\right)} \\frac{\\partial u^{(n)}}{\\partial u^{(i)}} \\frac{\\partial u^{(i)}}{\\partial u^{(j)}} $$ \u6267\u884c\u53cd\u5411\u4f20\u64ad\u6240\u9700\u8981\u7684\u8ba1\u7b97\u91cf\u4e0eG\u4e2d\u8fb9\u7684\u6570\u91cf\u6210\u6bd4\u4f8b\u3002\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u7684\u8bbe\u8ba1\u5c31\u662f\u4e3a\u4e86\u51cf\u5c11\u516c\u5171\u5b50\u8868\u8fbe\u5f0f\u7684\u6570\u91cf\uff0c\u800c\u4e0d\u8003\u8651\u50a8\u5b58\u7684\u5f00\u9500\u3002 \u7b97\u6cd5\u7684\u7b80\u5316\u7248\u672c\uff0c\u53ea\u9002\u7528\u4e8e\u524d\u9762\u63d0\u5230\u7684\u524d\u5411\u4f20\u64ad\u8fc7\u7a0b\u3002\u5927\u81f4\u89c2\u5bdf\u4e00\u4e0b\uff0c\u53ef\u4ee5\u770b\u5230\u65b0\u589e\u4e86\u4e00\u4e2agrad_table\uff0c\u7528\u4e8e\u5b58\u50a8\u5df2\u7ecf\u8ba1\u7b97\u8fc7\u4e86\u7684\u68af\u5ea6\uff0c\u8fd9\u5c31\u662f\u4e00\u79cd\u727a\u7272\u7a7a\u95f4\u6362\u53d6\u65f6\u95f4\u7684\u7b97\u6cd5\u3002","title":"\u7b2c\u4e00\u4e2a\u7248\u672c\u7684\u53cd\u5411\u4f20\u64ad"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_25","text":"\u5bf9\u4e8e\u8fd9\u6837\u4e00\u4e2a\u56fe\u7ed3\u6784\uff0c\u8bb0\uff1a$j < i , u_j\u662fu_i\u7684\u7236\u8282\u70b9$ $\\frac{\\partial u^{6}}{\\partial u^{6}}=1$ \u76f4\u63a5\u8bb0\u4e0b\uff0c\u5199\u5165grad_table \u8fdb\u5165\u8fed\u4ee3\uff0cj = 5 \uff08\u82e5\u65e0grad_table\uff09\u8ba1\u7b97$\\frac{\\partial u^{6}}{\\partial u^{5}}=\\frac{\\partial u^{6}}{\\partial u^{5}}$ \u6709grad_table\uff0c$grad_table[u^6]=1$\uff0c\u6240\u4ee5$grad_table[u^5]=1\\times\\frac{\\partial u^{6}}{\\partial u^{5}}$ \u8fdb\u5165\u8fed\u4ee3\uff0cj=4 \uff08\u82e5\u65e0grad_table\uff09\u8ba1\u7b97$\\frac{\\partial u^{6}}{\\partial u^{4}}=\\frac{\\partial u^{6}}{\\partial u^{4}}$ \u6709grad_table\uff0c$grad_table[u^6]=1$\uff0c\u6240\u4ee5$grad_table[u^4]=1\\times\\frac{\\partial u^{6}}{\\partial u^{4}}$ \u8fdb\u5165\u8fed\u4ee3\uff0cj=3 \uff08\u82e5\u65e0grad_table\uff09\u8ba1\u7b97$\\frac{\\partial u^{6}}{\\partial u^{3}}=\\frac{\\partial u^{6}}{\\partial u^{5}}\\frac{\\partial u^{5}}{\\partial u^{3}}$ \u6709grad_table\uff0c$grad_table[u^5]=1\\times\\frac{\\partial u^{6}}{\\partial u^{5}}$\uff0c\u6240\u4ee5$grad_table[u^3]=grad_table[u^5]\\times\\frac{\\partial u^{5}}{\\partial u^{3}}$ \u8fdb\u5165\u8fed\u4ee3\uff0cj=2 \uff08\u82e5\u65e0grad_table\uff09\u8ba1\u7b97$\\frac{\\partial u^{6}}{\\partial u^{2}}=\\frac{\\partial u^{6}}{\\partial u^{4}}\\frac{\\partial u^{4}}{\\partial u^{2}}+\\frac{\\partial u^{6}}{\\partial u^{5}}\\frac{\\partial u^{5}}{\\partial u^{2}}$ \u6709grad_table\uff0c\u6240\u4ee5$grad_table[u^2]=grad_table[u^5]\\times\\frac{\\partial u^{5}}{\\partial u^{2}}+grad_table[u^4]\\times\\frac{\\partial u^{4}}{\\partial u^{2}}$ \u4ee5\u6b64\u7c7b\u63a8 \u6240\u4ee5\u7efc\u4e0a\u6240\u8ff0\uff0c\u8282\u7ea6\u4e86\u591a\u6b21\u5185\u79ef\u7684\u8ba1\u7b97\u65f6\u95f4,\u4f46\u662f\u8fd9\u53ea\u662f\u4e00\u79cd\u7b80\u5355\u4e14\u76f4\u89c2\u7684\u60c5\u51b5\u3002","title":"\u7528\u4f8b\u5b50\u6765\u8bf4\u660e\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_26","text":"\u5b83\u7684forward\u8fc7\u7a0b\u5982\u4e0b\u63cf\u8ff0\uff1a \u53cd\u5411\u4f20\u64ad\u8fc7\u7a0b\uff1a","title":"\u771f\u6b63\u5730\u8003\u8651\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\uff1a"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#reference","text":"https://github.com/exacity/deeplearningbook-chinese","title":"reference"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#rnn","text":"\u672c\u8d28\u4e0a\uff0c\u4efb\u4f55\u5305\u542b\u5faa\u73af\u7684\u51fd\u6570\u90fd\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u3002 $$ \\boldsymbol{h}^{(t)}=f\\left(\\boldsymbol{h}^{(t-1)}, \\boldsymbol{x}^{(t)} ; \\boldsymbol{\\theta}\\right) $$ \u7f51\u7edc\u901a\u5e38\u4f7f\u7528$\\boldsymbol{h}^{(t)}$ \u4f5c\u4e3a\u8fc7\u53bb\u5e8f\u5217\u4e0e\u4efb\u52a1\u76f8\u5173\u65b9\u9762\u7684\u6709\u635f\u6458\u8981\uff0c\u4e00\u822c\u800c\u8a00\u4e00\u5b9a\u662f\u6709\u635f\u7684\u3002$\\boldsymbol{h}^{(t)}$ \u6620\u5c04\u4efb\u610f\u957f\u5ea6\u5e8f\u5217$\\left(\\boldsymbol{x}^{(t)}, \\boldsymbol{x}^{(t-1)}, \\boldsymbol{x}^{(t-2)}, \\ldots, \\boldsymbol{x}^{(2)}, \\boldsymbol{x}^{(1)}\\right)$\u5230\u4e00\u5b9a\u957f\u5ea6$\\boldsymbol{h}^{(t)}$ \u8ba1\u7b97\u516c\u5f0f\uff1a $$ h_t = tanh(w_xx_t+w_hh_{t-1}+b) \\ y_t = w_yh_t $$ \u5176\u4e2d\u6574\u4e2a\u6a21\u578b\u5171\u4eab\u53c2\u6570\uff1a$w_h,w_x,w_y$","title":"RNN\u5faa\u73af\u795e\u7ecf\u7f51\u7edc"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#rnn_1","text":"n->n n->1 n->m","title":"\u7ecf\u5178\u7684RNN\u7ed3\u6784"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_27","text":"\u4f18\u70b9\uff1a \u2022 Possibility of processing input of any length \u2022 Model size not increasing with size of input \u2022 Computation takes into account historical information \u2022 Weights are shared across time","title":"\u4f18\u7f3a\u70b9"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_28","text":"\u2022 Computation being slow \u2022 Difficulty of accessing information from a long time ago \u2022 Cannot consider any future input for the current state \u635f\u5931\u51fd\u6570 $$ \\mathcal{L}(\\hat{y}, y)=\\sum_{t=1}^{T_{y}} \\mathcal{L}\\left(\\widehat{y}^{ }, y^{ }\\right) $$ \u5982\u679c\u6211\u4eec\u9700\u8981\u7684\u6a21\u578b\u662fn->1\uff1a \u90a3\u4e48\u8bad\u7ec3\u6240\u7ed9\u7684\u6570\u636e\u4e5f\u5e94\u8be5\u5982\uff1a $$ [X^n,y^n]\\ X^n=x_1,x_2,...,x_t\\ y^n=y_t $$","title":"\u7f3a\u70b9\uff1a"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_29","text":"\u6839\u636e\u65f6\u95f4\u6b65\u7684\u8fde\u4e58\u3002 $$ \\frac{\\partial \\mathcal{L}^{(T)}}{\\partial W}=\\left.\\sum_{t=1}^{T} \\frac{\\partial \\mathcal{L}^{(T)}}{\\partial W}\\right|_{(t)} $$ \u5e38\u89c1\u95ee\u9898: vanishing/ exploding gradient The reason why they happen is that it is difficult to capture long term dependencies because of multiplicative gradient that can be exponentially decreasing/increasing with respect to the number of layers. \u65f6\u95f4\u6b65\u4e00\u957f\uff0c\u8fde\u4e58\u5c31\u8981\u51fa\u95ee\u9898\u3002 \u5bf9\u68af\u5ea6\u7684\u6700\u5927\u503c\u8fdb\u884c\u9650\u5236\u662f\u4e00\u4e2a\u653e\u7f6eexploding\u7684\u65b9\u6cd5\u3002","title":"\u635f\u5931\u51fd\u6570\uff1a"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#reference_1","text":"https://stanford.edu/~shervine/teaching/cs-230/cheatsheet-recurrent-neural-networks#overview","title":"reference"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#sequence-to-sequence","text":"\u4e00\u822cRNN\u7ed3\u6784\u5bf9\u4e8e\u8f93\u5165\u4e0e\u8f93\u51fa\u7684\u4e2a\u6570\u90fd\u505a\u4e86\u9650\u5b9a\uff0c\u4f46\u5b9e\u9645\u4e0a\u5f88\u591a\u4efb\u52a1\u7684\u5e8f\u5217\u957f\u5ea6\u662f\u4e0d\u56fa\u5b9a\u7684\u3002","title":"sequence to sequence \u7ed3\u6784"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#_30","text":"\u53ef\u4ee5\u89c2\u5bdf\u5230\uff0c\u5176\u5b9e\u524d\u534a\u90e8\u5206\u662f\u4e00\u4e2aencoder\u6a21\u578b\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2aN->1\u7684RNN\u6a21\u578b\u3002\u8fd9\u4e2a\u5411\u91cf\u4e00\u822c\u79f0\u4f5c \u4e0a\u4e0b\u6587\u5411\u91cfc \u5f53\u7136c\u53ef\u4ee5\u7531$h_n$\u51b3\u5b9a\uff0c\u4e5f\u53ef\u4ee5\u7531$h_1,...h_n$\u51b3\u5b9a\u3002 $$ \\begin{gathered} c=h_{N} \\ c=q\\left(h_{N}\\right) \\ c=q\\left(h_{1}, h_{2}, \\ldots, h_{N}\\right) \\end{gathered} $$ \u7136\u540e\u4f7f\u7528decoder\u5bf9c\u8fdb\u884c\u89e3\u7801\uff1a","title":"\u5206\u6790"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#teacher-forcing","text":"TODO","title":"teacher forcing"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#attention","text":"\u4ee5\u4e0a\u6a21\u578b\u7684\u7f3a\u9677\uff1a c\u5982\u679c\u5b9a\u957f\uff0c\u5f88\u96be\u5b8c\u5168\u6db5\u76d6\u8f93\u5165 RNN \u5b58\u5728\u957f\u5e8f\u5217\u68af\u5ea6\u6d88\u5931\u7684\u95ee\u9898\uff0c\u53ea\u4f7f\u7528\u6700\u540e\u4e00\u4e2a\u795e\u7ecf\u5143\u5f97\u5230\u7684\u5411\u91cf c \u6548\u679c\u4e0d\u7406\u60f3\u3002 \u4e0e\u4eba\u7c7b\u7684\u6ce8\u610f\u529b\u65b9\u5f0f\u4e0d\u540c\uff0c\u5373\u4eba\u7c7b\u5728\u9605\u8bfb\u6587\u7ae0\u7684\u65f6\u5019\uff0c\u4f1a\u628a\u6ce8\u610f\u529b\u653e\u5728\u5f53\u524d\u7684\u53e5\u5b50\u4e0a\u3002 \u4f7f\u7528attention\u673a\u5236\uff0c\u4f7f\u5f97\u4e0a\u4e0b\u6587\u5411\u91cfc\u4e0d\u518d\u56fa\u5b9a\uff0c\u800c\u662f\u6839\u636e\u5f53\u524d\u4fe1\u606f\u8ba1\u7b97c \u4e0a\u4e0b\u6587\u5411\u91cf--->\u53d7\u5230\u62fc\u63a5","title":"attention"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#keraslayerssimplernn","text":"\u5bf9\u4e8e\u4e00\u4e2a\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff0c\u5b83\u7684\u8f93\u5165\u5f20\u91cf\u4e00\u822c\u4e3a\uff1a (samples\uff0ctimesteps,features) \u4f8b\u5982\u624b\u4e0a\u7684\u6570\u636e\u4e3a\uff1a\u4e00\u5c0f\u65f6\u4e00\u4e2a\u65f6\u95f4\u6233\uff0c\u4e00\u4e2a\u6837\u672c\u7edf\u8ba1\u4e86100h\uff0c\u6d89\u53ca\u523012\u4e2a\u53d8\u91cf\uff0c\u7edf\u8ba1\u4e8680\u6b21\uff0c\u90a3\u4e48\u6570\u636e\u53ef\u4ee5\u5199\u4e3a\uff1a (80,100,12) \u4e3a\u4e86\u65b9\u4fbf\u4e4b\u540e\u53c2\u6570\u8ba1\u7b97\u7684\u8ba8\u8bba\uff0c\u6211\u4eec\u8003\u8651\u7684\u60c5\u51b5\u4e3a x.shape = (10,5,2) y.shape = (10,2) \u6765\u505a\u4e00\u4e2a\u4e8c\u5206\u7c7b\u95ee\u9898\u3002","title":"keras.layers.SimpleRNN"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#simplernn","text":"\u5b83\u7684\u8f93\u5165\u88ab\u6307\u5b9a\u4e3a3\u7ef4(samples\uff0ctimesteps, features) x = tf.random.normal(shape=(3,10,5,4)) rnn = layers.SimpleRNN(units=1) y = rnn(x) print(y.shape) >>> ValueError: Input 0 of layer simple_rnn is incompatible with the layer: expected ndim=3, found ndim=4. Full shape received: (3, 10, 5, 4) \u8f93\u51fa\u7ef4\u5ea6\u7531\u552f\u4e00\u7684\u53c2\u6570units\u51b3\u5b9a units: Positive integer, dimensionality of the output space\u3002\u5f88\u663e\u7136\uff0c\u5bf9\u4e8e\u4e00\u4e2abatch\uff0c\u4ed6\u7684\u8f93\u51fa\u4e3a(batch_size,units)","title":"SimpleRNN \u7684\u8f93\u5165\u8f93\u51fa"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#units","text":"$$ h_t = tanh(w_xx_t+w_hh_{t-1}+b) $$ \u53c2\u6570\u5171\u4eab\uff0c\u6240\u4ee5\u770b\u5230\u7684\u5c55\u5f00\u5f0f\uff0c\u90fd\u662f\u5171\u4eab\u8fd9\u4e00\u5957\u53c2\u6570\u3002units\uff0c\u672c\u8d28\u4e0a\u662f$h_t$\u7684\u7ef4\u5ea6\u3002 $(5,2)$\u7684x\u8fdb\u6765\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a\u4e24\u7ef4\u7684\u5411\u91cf\u8fdb\u6765\uff0c\u8f93\u51fa\u7684$h_t$\u4e5f\u662f\u4e00\u4e2a\u4e24\u4f4d\u5411\u91cf\uff0c\u6240\u4ee5\u8fd9\u6837\u8ba1\u7b97\uff1a \u4e00\u5171\u662f10\u4e2a\u53c2\u6570\u3002 \u6ce8\u610f\uff0c\u56fe\u4e2d\u7684$w_y$\u5e76\u4e0d\u662fRNN\u7ed3\u6784\u4e2d\u53c2\u6570\uff0c\u56e0\u4e3aSimpleRNN\u4e2d\u5c31\u4e0d\u5305\u62ecy\uff0c\u4ed6\u76f4\u63a5\u5c06h\u5411\u91cf\u8f93\u51fa\uff0c\u5982\u679c\u9700\u8981\u56fe\u4e2d\u7684y\uff0c\u9700\u8981\u81ea\u884c\u6dfb\u52a0dense\u5c42\u3002 \u516c\u5f0f\u4e3a\uff1a recurrent_weights + input_weights + biases num_units* num_units + num_features* num_units + biases \u8fd9\u5f20\u56fe\u7247\u4e5f\u65b9\u4fbf\u7406\u89e3: https://stackoverflow.com/questions/50134334/number-of-parameters-for-keras-simplernn","title":"units\u5230\u5e95\u662f\u4ec0\u4e48\u5462"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#lstm","text":"LSTM\u7684\u5168\u79f0\u662fLong Short Term Memory\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5b83\u5177\u6709\u8bb0\u5fc6\u957f\u77ed\u671f\u4fe1\u606f\u7684\u80fd\u529b\u7684\u795e\u7ecf\u7f51\u7edc\u3002LSTM\u9996\u5148\u57281997\u5e74\u7531Hochreiter & Schmidhuber \u63d0\u51fa\uff0c\u7531\u4e8e\u6df1\u5ea6\u5b66\u4e60\u57282012\u5e74\u7684\u5174\u8d77\uff0cLSTM\u53c8\u7ecf\u8fc7\u4e86\u82e5\u5e72\u4ee3\u5927\u725b(Felix Gers, Fred Cummins, Santiago Fernandez, Justin Bayer, Daan Wierstra, Julian Togelius, Faustino Gomez, Matteo Gagliolo, and Alex Gloves)\u7684\u53d1\u5c55\uff0c\u7531\u6b64\u4fbf\u5f62\u6210\u4e86\u6bd4\u8f83\u7cfb\u7edf\u4e14\u5b8c\u6574\u7684LSTM\u6846\u67b6\uff0c\u5e76\u4e14\u5728\u5f88\u591a\u9886\u57df\u5f97\u5230\u4e86\u5e7f\u6cdb\u7684\u5e94\u7528\u3002\u672c\u6587\u7740\u91cd\u4ecb\u7ecd\u6df1\u5ea6\u5b66\u4e60\u65f6\u4ee3\u7684LSTM\u3002 LSTM\u63d0\u51fa\u7684\u52a8\u673a\u662f\u4e3a\u4e86\u89e3\u51b3\u4e0a\u9762\u6211\u4eec\u63d0\u5230\u7684\u957f\u671f\u4f9d\u8d56\u95ee\u9898\u3002\u4f20\u7edf\u7684RNN\u8282\u70b9\u8f93\u51fa\u4ec5\u7531\u6743\u503c\uff0c\u504f\u7f6e\u4ee5\u53ca\u6fc0\u6d3b\u51fd\u6570\u51b3\u5b9a\uff08\u56fe3\uff09\u3002RNN\u662f\u4e00\u4e2a\u94fe\u5f0f\u7ed3\u6784\uff0c\u6bcf\u4e2a\u65f6\u95f4\u7247\u4f7f\u7528\u7684\u662f\u76f8\u540c\u7684\u53c2\u6570\u3002 https://zhuanlan.zhihu.com/p/42717426 LSTM\u4f7f\u7528\u95e8\u7684\u673a\u5236\uff0c\u63a7\u5236\u7279\u5f81\u7684\u6d41\u901a\u548c\u635f\u5931\u3002LSTM\u53ef\u4ee5\u505a\u5230t9\u7684\u65f6\u523b\u8003\u8651t2\u7684\u7279\u5f81\uff0c","title":"LSTM"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#cell-state","text":"$$ C_{t}=f_{t} \\times C_{t-1}+i_{t} \\times \\tilde{C}_{t} $$ $f_{t}$\u662f\u4e00\u4e2a\u9057\u5fd8\u95e8\uff0c0~1\u4e4b\u95f4 $i_{t}$\u662f\u8f93\u5165\u95e8\uff0c\u5176\u529f\u80fd\u975e\u5e38\u76f8\u4f3c\u7528\u4e8e\u4fdd\u7559\u4e0e\u4ee5\u5f80\uff0c$h_t,x_t$\u7684\u4fe1\u606f $\\tilde{C}_{t}$\u8868\u793a\u5355\u5143\u72b6\u6001\u66f4\u65b0\u503c $C_t$\u4e3acell\u72b6\u6001 \u7531\u6839\u636e$o_t$\u8f93\u51fa\u95e8\uff0c\u66f4\u65b0\u7684 $h_t$ \u503c\u3002 \u7efc\u4e0a\u6240\u8ff0\uff0cLSTM\u4e00\u4e2acell\u91cc\u9762\u8f93\u51fa\u4e86\u4e24\u4e2a\u53d8\u91cf\uff0c\u5206\u522b\u4e3a$C_t$\uff0c$h_t$\u3002","title":"cell state"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#keraslayerslstm","text":">>> inputs = tf.random.normal([32, 10, 8]) >>> lstm = tf.keras.layers.LSTM(4) >>> output = lstm(inputs) >>> print(output.shape) (32, 4) >>> lstm = tf.keras.layers.LSTM(4, return_sequences=True, return_state=True) >>> whole_seq_output, final_memory_state, final_carry_state = lstm(inputs) >>> print(whole_seq_output.shape) (32, 10, 4) >>> print(final_memory_state.shape) (32, 4) >>> print(final_carry_state.shape) (32, 4) units: $h_t$ \u7684\u7ef4\u5ea6 whole_seq_output, final_memory_state, final_carry_state = lstm(inputs) \u6ce8\u610f\u8f93\u51fa\u7684\u987a\u5e8f sequence_output \u662f\u6307 $h_t$ whole_seq_output \u662f\u6307 $h_1,h_2,...h_t$","title":"keras.layers.LSTM"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#tensorflow2-lstm","text":"LSTM\u662f\u4e00\u4e2alayer\uff0c\u5b83\u7ee7\u627f\u4e86RNN layer \u4f7f\u7528\u7684\u662fLSTMCell LSTM\u662f\u4e00\u4e2a\u5faa\u73af\u64cd\u4f5c\uff08\u8f93\u5165\u4e09\u7ef4\u5ea6\u5f20\u91cf\uff09\uff0cLSTMCell\u5c31\u662f\u4e00\u6b21\u5faa\u73af\u7684\u64cd\u4f5c\uff08\u8f93\u5165\u4e8c\u7ef4\u5f20\u91cf\uff0c\u53bb\u9664\u4e86\u65f6\u95f4\u6233\uff09\u3002","title":"tensorflow2 \u7684 LSTM \u6e90\u7801\u9605\u8bfb"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#lstmcell","text":"class LSTMCell(DropoutRNNCellMixin, Layer): \"\"\"Cell class for the LSTM layer. Args: units: Positive integer, dimensionality of the output space. activation: Activation function to use. Default: hyperbolic tangent (`tanh`). If you pass `None`, no activation is applied (ie. \"linear\" activation: `a(x) = x`). recurrent_activation: Activation function to use for the recurrent step. Default: hard sigmoid (`hard_sigmoid`). If you pass `None`, no activation is applied (ie. \"linear\" activation: `a(x) = x`). use_bias: Boolean, whether the layer uses a bias vector. kernel_initializer: Initializer for the `kernel` weights matrix, used for the linear transformation of the inputs. recurrent_initializer: Initializer for the `recurrent_kernel` weights matrix, used for the linear transformation of the recurrent state. bias_initializer: Initializer for the bias vector. unit_forget_bias: Boolean. If True, add 1 to the bias of the forget gate at initialization. Setting it to true will also force `bias_initializer=\"zeros\"`. This is recommended in [Jozefowicz et al., 2015]( http://www.jmlr.org/proceedings/papers/v37/jozefowicz15.pdf) kernel_regularizer: Regularizer function applied to the `kernel` weights matrix. recurrent_regularizer: Regularizer function applied to the `recurrent_kernel` weights matrix. bias_regularizer: Regularizer function applied to the bias vector. kernel_constraint: Constraint function applied to the `kernel` weights matrix. recurrent_constraint: Constraint function applied to the `recurrent_kernel` weights matrix. bias_constraint: Constraint function applied to the bias vector. dropout: Float between 0 and 1. Fraction of the units to drop for the linear transformation of the inputs. recurrent_dropout: Float between 0 and 1. Fraction of the units to drop for the linear transformation of the recurrent state. Call arguments: inputs: A 2D tensor. states: List of state tensors corresponding to the previous timestep. training: Python boolean indicating whether the layer should behave in training mode or in inference mode. Only relevant when `dropout` or `recurrent_dropout` is used. \"\"\" \u4e00\u4e2aCell\u53ea\u9700\u8981\u8f93\u5165\u4e8c\u7ef4\u5f20\u91cf[batch,features] call \u51fd\u6570\u8fd4\u56de\u503c\u4e3a h, [h,c] def call(self, inputs, states, training=None): h_tm1 = states[0] # previous memory state c_tm1 = states[1] # previous carry state \"\"\" \u7701\u7565 \"\"\" return h, [h, c] \u6b63\u5982\u8fd9\u4e00\u4e2aCell\u6240\u793a\uff0c\u8fdb\u53bb\u4e00\u4e2a$x_t$ \u51fa\u6765 $h_t,c_t$","title":"LSTMCell \u7c7b"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#lstm_1","text":"class LSTM(RNN): def __init__(self,units,**kwargs): \"\"\" \u7701\u7565 \"\"\" cell = LSTMCell(units,**cell_kwargs) super(LSTM, self).__init__(cell,**kwargs) def call(self, inputs): return super(LSTM, self).call(inputs) \u53ef\u4ee5\u770b\u5230\uff0c\u672c\u8d28\u4e0a\u662f\u4f7f\u7528\u4e86RNN\u7684call\u51fd\u6570\uff0c\u4f46\u662f\u628aCell\u8fdb\u884c\u4e86\u66f4\u6539\u3002 \u524d\u9762\u5df2\u7ecf\u63d0\u5230\u4e86Cell\u662f\u4e00\u4e2a\uff1a [batch, features] -----LSTMCell-----> h, [h, c] \u63a5\u4e0b\u6765\u8fdb\u5165RNN\u7684call\u51fd\u6570\u4e2d\uff1a def call(self,inputs,): # The input should be dense, padded with zeros. If a ragged input is fed # into the layer, it is padded and the row lengths are used for masking. \"\"\" \u8fdb\u884c\u4e00\u7cfb\u5217\u68c0\u67e5 \"\"\" inputs,initial_state,constants= self._process_inputs(inputs,initial_state,constants) # \u5b9a\u4e49step\u51fd\u6570\uff0c\u6267\u884cCell\u7684call function def step(inputs, states): states = states[0] if len(states) == 1 and is_tf_rnn_cell else states output, new_states = cell_call_fn(inputs, states, **kwargs) if not tf.nest.is_nested(new_states): new_states = [new_states] return output, new_states # \u5c06step\u51fd\u6570\u653e\u5230K.rnn\u4e2d\u6267\u884c last_output, outputs, states = backend.rnn( step, inputs, initial_state)","title":"LSTM \u7c7b"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B/#transformer","text":"\u4e00\u79cd\u597d\u7684\u4f4d\u7f6e\u7f16\u7801\u65b9\u6848\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u51e0\u6761\u8981\u6c42\uff1a \u5b83\u80fd\u4e3a\u6bcf\u4e2a\u65f6\u95f4\u6b65\u8f93\u51fa\u4e00\u4e2a\u72ec\u4e00\u65e0\u4e8c\u7684\u7f16\u7801\uff1b \u4e0d\u540c\u957f\u5ea6\u7684\u53e5\u5b50\u4e4b\u95f4\uff0c\u4efb\u4f55\u4e24\u4e2a\u65f6\u95f4\u6b65\u4e4b\u95f4\u7684\u8ddd\u79bb\u5e94\u8be5\u4fdd\u6301\u4e00\u81f4\uff1b \u6a21\u578b\u5e94\u8be5\u80fd\u6beb\u4e0d\u8d39\u529b\u5730\u6cdb\u5316\u5230\u66f4\u957f\u7684\u53e5\u5b50\u3002 \u5b83\u7684\u503c\u5e94\u8be5\u662f\u6709\u754c\u7684\uff1b \u5b83\u5fc5\u987b\u662f\u786e\u5b9a\u6027\u7684\u3002","title":"transformer\u4e2d\u7684\u4f4d\u7f6e\u7f16\u7801"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/","text":"\u300a\u7b97\u6cd5\u5bfc\u8bba\u300b\u9605\u8bfb\u7b14\u8bb0 \u5f00\u59cb\u4e8e2021\u5e743\u67083\u65e5 \u9ec4\u6d69 \u7b54\u6848\uff1ahttps://walkccc.me/CLRS/ \u7b2c\u4e00\u7ae0 \u7b97\u6cd5\u5728\u8ba1\u7b97\u4e2d\u7684\u4f5c\u7528 \u7b97\u6cd5algorithm\u63cf\u8ff0\u4e00\u4e2a\u7279\u5b9a\u7684\u8ba1\u7b97\u8fc7\u7a0b\u6765\u5b9e\u73b0\u8f93\u5165\u548c\u8f93\u51fa\u7684\u5173\u7cfb \u7b97\u6cd5\u95ee\u9898\u7684\u4e24\u4e2a\u7279\u5f81\uff1a \u5b58\u5728\u8bb8\u591a\u5019\u9009\u89e3\uff0c\u5bfb\u627e\u4e00\u4e2a\u771f\u6b63\u7684\u89e3\u6216\u8005\u4e00\u4e2a\u6700\u597d\u7684\u89e3\u53ef\u80fd\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u6311\u6218\uff1b \u5b58\u5728\u5b9e\u9645\u5e94\u7528\u3002 \u6570\u636e\u7ed3\u6784 \u6570\u636e\u7ed3\u6784\u662f\u6570\u636e\u7684\u50a8\u5b58\u548c\u7ec4\u7ec7\u65b9\u5f0f\uff0c\u65e8\u5728\u65b9\u4fbf\u8bbf\u95ee\u4e0e\u4fee\u6539 \u6280\u672f \u672c\u4e66\u6709\u4e00\u4e9b\u7279\u5b9a\u7684\u95ee\u9898\u89e3\u51b3\u65b9\u6cd5 \u96be\u9898 \u4e00\u90e8\u5206\u95ee\u9898\uff0c\u76ee\u524d\u4e0d\u77e5\u9053\u6709\u6548\u7684\u65b9\u6cd5\uff0c\u88ab\u79f0\u4e3a NP\u5b8c\u5168\u7684 \u3002\u8bf7\u53c2\u7167\u7b2c34\u7ae0\u5b66\u4e60NP\u5b8c\u5168\u6027\u3002 \u7279\u70b9\uff1a1. \u5bf9\u4e8eNP\u5b8c\u5168\u95ee\u9898\uff0c\u76ee\u524d\u6ca1\u6709\u627e\u5230\u6709\u6548\u7684\u7b97\u6cd5\uff0c\u4f46\u662f\u4e5f\u6ca1\u4eba\u80fd\u8bc1\u660eNP\u5b8c\u5168\u7684\u95ee\u9898\u786e\u5b9e\u4e0d\u5b58\u5728\u6709\u6548\u7b97\u6cd5\u3002 \u200b 2. \u5982\u679cNP\u5b8c\u5168\u95ee\u9898\u88ab\u89e3\u51b3\uff0c\u90a3\u4e48\u4e00\u7cfb\u5217\u7684NP\u5b8c\u5168\u95ee\u9898\u90fd\u4f1a\u88ab\u89e3\u51b3 \u201c\u65c5\u884c\u5546\u95ee\u9898\u201d\uff0cNP\u5b8c\u5168\u95ee\u9898\u4e00\u822c\u5bfb\u6c42\u8fd1\u4f3c\u7b97\u6cd5\u3002 \u5e76\u884c\u6027 \u4f5c\u4e3a\u4e00\u79cd\u6280\u672f\u7684\u7b97\u6cd5 \u8ba1\u7b97\u673a\u6709\u4e24\u4e2a\u9650\u5236\uff1a\u901f\u5ea6\u4e0e\u50a8\u5b58 \u6307\u4ee4/\u901f\u5ea6 = \u65f6\u95f4 \u6307\u4ee4\u6570\u76ee\u4e0e\u7b97\u6cd5\u4e0e\u7f16\u8bd1\u5668\u6709\u5173 \u901f\u5ea6\u4e0e\u8ba1\u7b97\u673a\u901f\u5ea6\u6709\u5173\u3002 \u7b97\u6cd5\u7684\u91cd\u8981\u6027 \u6bd4\u8f83\u63d2\u5165\u6392\u5e8f\u4e0e\u5e76\u5f52\u6392\u5e8f \u6bd4\u8f83\u63d2\u5165\u987a\u5e8f\u4e0e\u5f52\u5e76\u987a\u5e8f\u5728\u76f8\u540c\u673a\u5668\u4e0a\u7684\u5b9e\u73b0\u3002\u8f93\u5165\u89c4\u6a21\u4e3an\uff0c\u63d2\u5165\u6392\u5e8f\u8fd0\u884c8n^2\u6b65\uff0c\u800c\u5e76\u5f52\u6392\u5e8f\u8fd0\u884c64n lgn \u6b65\uff0c\u95ee\u5bf9\u4e8e\u54ea\u4e9bn\u503c\uff0c\u63d2\u5165\u6392\u5e8f\u4f18\u4e8e\u5f52\u5e76\u6392\u5e8f n\u53d62\uff0c3\uff0c4\uff0c5\uff0c6\u3002 \u7b2c\u4e8c\u7ae0 \u7b97\u6cd5\u57fa\u7840 \u63d2\u5165\u6392\u5e8f def insertion_sort(A): for j in range(1,len(A)): key = A[j] i = j - 1 while i >= 0 and A[i] > key: A[i+1] = A[i] i -= 1 a[i+1] = key \u6ce8\u610f\u8fb9\u754c\u6761\u4ef6\uff0c\u4ee5\u53ca \u5faa\u73af\u4e0d\u53d8\u5f0f \uff1aA[:j]\u662f\u6392\u5e8f\u597d\u4e86\u7684\uff0c\u6bd4\u5982 j=1\u7684\u65f6\u5019\uff0cA[0]\u4e00\u4e2a\u5143\u7d20\u5c31\u662f\u6392\u5e8f\u597d\u4e86\u7684\u3002 \u63d2\u5165\u6392\u5e8f\u9002\u7528\u4e8e\u5c11\u91cf\u5143\u7d20\u7684\u6392\u5e8f\u3002 \u8fd9\u662f\u4e00\u4e2a$O(n^2)$\u7684\u7b97\u6cd5\u3002 \u5206\u6790\u7b97\u6cd5 \u63d2\u5165\u6392\u5e8f\u7b97\u6cd5\u7684\u5206\u6790 \u8f93\u5165\u89c4\u6a21 \u8fd0\u884c\u65f6\u95f4\uff0c\u6307\u6267\u884c\u7684\u57fa\u672c\u64cd\u4f5c\u6570\u6216\u6b65\u6570 \u5f97\u5230\u8fd0\u884c\u65f6\u95f4\u4e3a\uff1a \u6700\u4f73\u60c5\u51b5\uff0c\u5c31\u662f\u8f93\u5165\u7684\u5c31\u662f\u4e2a\u5df2\u7ecf\u6392\u5e8f\u62cd\u597d\u7684\uff1a \u6700\u574f\u60c5\u51b5\uff0c\u8f93\u5165\u662f\u76f8\u53cd\u6392\u5e8f\u7684\uff1a \u6700\u574f\u60c5\u51b5 \u5e73\u5747\u60c5\u51b5\u5206\u6790 \u589e\u957f\u91cf\u7ea7 \u4f7f\u7528\u4e00\u4e9b\u7b80\u5316\u62bd\u8c61\uff0c\u6bd4\u5982\u5ffd\u7565\u4e0a\u6587\u4e2d\u7684c\uff0c\u5373\u6bcf\u4e2a\u6307\u4ee4\u7684\u65f6\u95f4\uff0c\u800c\u5173\u6ce8\u6700\u91cd\u8981\u7684\u9879\u3002\u5bf9\u4e8e\u8db3\u591f\u5927\u7684\u8f93\u5165\uff0c\u6700\u9ad8\u9636\u9879\u8d77\u6700\u5927\u4f5c\u7528\u3002 \u7ec3\u4e60\u9898: \u8bbe\u8ba1\u7b97\u6cd5 \u63d2\u5165\u6392\u5e8f\u91c7\u7528 \u4e86\u589e\u91cf\u7684\u65b9\u6cd5\uff1a\u5728\u6392\u5e8f\u597d\u524d 1--j-1\u4e2a\u5143\u7d20\u4ee5\u540e\uff0c\u518d\u5c06\u5f53\u4e2aj\u5143\u7d20\u63d2\u5165\u5230\u5b50\u6570\u7ec4\u7684\u9002\u5f53\u4f4d\u7f6e\uff0c\u4ea7\u751f\u6392\u5e8f\u597d\u7684\u5b50\u6570\u7ec4 i--j \u5206\u6cbb\u6cd5 \u5206\u6cbb\u6cd5\u7684\u601d\u60f3\uff1a\u5c06\u539f\u95ee\u9898\u5206\u89e3\u4e3a\u51e0\u4e2a\u89c4\u6a21\u8f83\u5c0f\u4f46\u7c7b\u4f3c\u4e8e\u539f\u95ee\u9898\u7684\u5b50\u95ee\u9898\uff0c\u9012\u5f52\u5730\u6c42\u89e3\u8fd9\u4e9b\u5b50\u95ee\u9898\u3001 \u5206\u6cbb\u7684\u6a21\u5f0f\uff1a \u5206\u89e3 \u89e3\u51b3\u8fd9\u4e9b\u5b50\u95ee\u9898 \u5408\u5e76 \u5f52\u5e76\u6392\u5e8f\u7b97\u6cd5 \u5b8c\u5168\u9075\u5faa\u5206\u6cbb\u6a21\u5f0f \u5408\u5e76\u51fd\u6570 merge\uff1a \u8f93\u5165\u6570\u7ec4\uff0cp\uff0cq\uff0cr\uff0c\u5206\u6210\u4e24\u6bb5\uff0c\u5c06\u4e24\u7ec4\u8fdb\u884c\u5408\u5e76 \u5c06merge\u4f5c\u4e3a\u5f52\u5e76\u6392\u5e8f\u7b97\u6cd5\u4e2d\u7684\u4e00\u4e2a\u5b50\u7a0b\u5e8f\u6765\u7528\uff1a def merge_sort(A,p,r): def merge(A,p,r,q): pass if p<r: q = int((r-p)/2) merge_sort(A,p,q) merge_sort(A,q,r) merge(A,p,q,r) \u5206\u6790\u5206\u6cbb\u7b97\u6cd5 \u5e76\u5f52\u6392\u5e8f\u7b97\u6cd5\u7684\u5206\u6790 \u5ffd\u7565\u4f4e\u9636\u9879\u548c\u5e38\u6570c\u4fbf\u7ed9\u51fa\u671f\u671b\u7684\u7ed3\u679cO(nlgn) \u601d\u8003\u9898 \u5192\u6ce1\u6392\u5e8f\u7684\u6700\u574f\u60c5\u51b5\u8fd0\u884c O(n^2^)\uff0c\u63d2\u5165\u6392\u5e8f\u7684\u6700\u574f\u8fd0\u884c\u4e5f\u662fO(n^2^) b. n-1 + ... +1 = n(n-1)/2 \u4e2a \u7b2c\u4e09\u7ae0 \u51fd\u6570\u7684\u589e\u957f \u7b97\u6cd5\u8fd0\u884c\u65f6\u95f4\u7684\u589e\u957f\u91cf\u7ea7\u7b80\u5355\u5730\u523b\u753b\u4e86\u7b97\u6cd5\u7684\u6548\u7387\u3002 \u5f53\u8f93\u5165\u89c4\u6a21n\u53d8\u5f97\u8db3\u591f\u5927\uff0c\u6700\u574f\u8fd0\u884c\u65f6\u95f4\u4e3a$\\Theta(n \\lg n)$ \u7684\u5e76\u5f52\u6392\u5e8f\u5c06\u6218\u80dc\u63d2\u5165\u6392\u5e8f$\\Theta\\left(n^{2}\\right)$ \u6e10\u8fd1\u8bb0\u53f7 $\\Theta$\u8bb0\u53f7 $O$ \u8bb0\u53f7\uff1a\u6e10\u8fd1\u4e0a\u754c $\\Omega$\u8bb0\u53f7\uff1a\u6e10\u8fd1\u4e0b\u754c \u5404\u79cd\u6e10\u8fd1\u5173\u7cfb\u7b26\u5408\uff1a\u4f20\u9012\u6027\uff0c\u81ea\u53cd\u6027\uff0c\u5bf9\u79f0\u6027\uff0c\u8f6c\u7f6e\u5bf9\u79f0\u6027\uff0c\u4e09\u5206\u6027 \u6807\u51c6\u8bb0\u53f7\u4e0e\u5e38\u7528\u51fd\u6570 \u5355\u8c03\u6027 \u5411\u4e0b\u53d6\u6574\u4e0e\u5411\u4e0a\u53d6\u6574 \u6a21\u8fd0\u7b97 \u591a\u9879\u5f0f \u6307\u6570 \u5bf9\u6570 \u9636\u4e58 \u591a\u91cd\u51fd\u6570 \u591a\u91cd\u5bf9\u6570\u51fd\u6570 \u6590\u6ce2\u90a3\u5951\u6570 \u7b2c\u56db\u7ae0 \u5206\u6cbb\u7b56\u7565 \u5206\u6cbb\u7684\u7b56\u7565\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u9012\u5f52\u6765\u89e3\u51b3\u95ee\u9898\u3002 \u4e09\u4e2a\u6838\u5fc3\uff1a \u5206\u89e3\u4e3a\u5b50\u95ee\u9898 \u89e3\u51b3\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u7ec8\u6b62\u6761\u4ef6 \u5408\u5e76 \u9012\u5f52\u5f0f \u5206\u6cbb\u7684\u89c4\u6a21\u5bf9\u5206\u6cbb\u6cd5\u7684\u6027\u80fd\u5f71\u54cd\u5f88\u5927\u3002 \u4f8b\u5982\u5bf9\u534a\u5206\uff08\u5206\u6cbb\u6392\u5e8f\uff09\uff1a \u8fd8\u53ef\u4ee51/3,2/3\u5206 \u51cf\u5c11\u4e00\u4e2a\u5143\u7d20\u5206\uff1a **\u4e0d\u540c\u7684\u9012\u5f52\u5f0f\uff0c\u5176\u590d\u6742\u5ea6\u4e5f\u5927\u4e0d\u76f8\u540c\uff01 \u5f53\u5b50\u95ee\u9898\u8db3\u591f\u5927\u9700\u8981\u9012\u5f52\u6c42\u89e3\u65f6\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a \u9012\u5f52\u60c5\u51b5 \u5f53\u5b50\u95ee\u9898\u8db3\u591f\u5c0f\uff0c\u4e0d\u518d\u9700\u8981\u9012\u5f52\u65f6\uff0c\u8bf4\u660e\u9012\u5f52\u5df2\u7ecf\u89e6\u5e95\uff0c\u8fdb\u5165\u4e86 \u57fa\u672c\u60c5\u51b5 \u9012\u5f52\u5f0f\uff1a \u6c42\u89e3\u53ef\u5f97\uff1a \u6c42\u89e3\u9012\u5f52\u5f0f\u7684\u65b9\u6cd5\uff1a\u4ee3\u5165\u6cd5\uff0c\u9012\u5f52\u6811\u6cd5\uff0c\u4e3b\u65b9\u6cd5\u3002 \u6700\u5927\u6570\u7ec4\u95ee\u9898 \u66b4\u529b\u6c42\u89e3\u6cd5 \u95ee\u9898\u53d8\u6362 \u4f7f\u7528\u5206\u6cbb\u7b56\u7565\u7684\u6c42\u89e3\u6cd5 \u4f7f\u7528\u5206\u6cbb\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u4e3a \u7ec3\u4e60 \u8fd9\u9053\u9898\u9700\u8981\u91c7\u7528\u52a8\u6001\u89c4\u5212\u7684\u529e\u6cd5\u89e3\u51b3\u3002 \u5c1a\u672a\u89e3\u51b3 \u77e9\u9635\u4e58\u6cd5\u7684Strassen\u7b97\u6cd5 \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$\\Theta\\left(n^{3}\\right)$\uff0c\u4f46\u662fStrassen\u7684\u8457\u540dn*n\u77e9\u9635\u76f8\u4e58\u7684\u9012\u5f52\u7b97\u6cd5\uff0c\u590d\u6742\u5ea6\u4e3a$\\Theta\\left(n^{\\lg 7}\\right)$\uff0c\u5176\u4e2dlg7\u7ea6\u4e3a2.8\u548c2.81\u3002 \u9012\u5f52\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$\\Theta\\left(n^{3}\\right)$\u3002 \u5176\u4e2d$\\Theta(1)$ \u662f\u5206\u89e3A,B,C\u77e9\u9635\u3002$\\Theta\\left(n^{2}\\right)$ \u662f\u5143\u7d20\u76f8\u52a0\u3002 \u6ce8\u610f8T(n/2)\u4e2d\u76848\u51b3\u5b9a\u4e86\u9012\u5f52\u6811\u662f\u5426\u8302\u76db\uff0c\u4e0d\u80fd\u7701\u7565\uff0c\u5426\u5219\u5c31\u662f\u7ebf\u6027\u7ed3\u6784\u4e86\u3002 Strassen\u7b97\u6cd5 \u5176\u6838\u5fc3\u601d\u60f3\u5c31\u662f\u5c068T(n/2)\u6539\u4e3a7T(n/2) \u4f2a\u4ee3\u7801\uff08\u81ea\u5199\uff09\uff1a def Strassen(a,b): n = a\u7684\u7ef4\u5ea6 c = n*n matrix if n == 1: c11 = a11*b11 else: s1 = b12-b22 s2 = a11+a12 s3 = a21+a22 s4 = b21-b11 s5 = a11+a22 s6 = b11+b22 s7 = a12-a22 s8 = b21+b22 s9 = a11-a21 s10 = b11+b12 p1 = Strassen(a11,s1) p2 p3 p4 p5 p6 p7 c11 = c12 c21 c22 return c \u7ec3\u4e60\uff1a \u6c42\u89e3\u9012\u5f52\u5f0f \u4ee3\u5165\u6cd5 \uff0c\u5b83\u4e3b\u8981\u5206\u4e3a\u4e24\u6b65\uff1a \u731c\u6d4b\u89e3\u7684\u5f62\u5f0f \u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u6c42\u51fa\u89e3\u7684\u5e38\u6570\uff0c\u5e76\u8bc1\u660e\u89e3\u662f\u6b63\u786e\u7684 \u731c\u6d4b\uff1a \u4e0a\u754c\u4e3a\uff1a \u8981\u6c42\u8bc1\u660e\uff1a \u9012\u5f52\u6811 \u4f8b\u5982\uff1a \u4e3b\u65b9\u6cd5 \uff08\u7565\uff09 \u7b2c\u4e94\u7ae0 \u6982\u7387\u5206\u6790\u548c\u968f\u673a\u7b97\u6cd5 \u96c7\u4f63\u95ee\u9898 \u4f2a\u4ee3\u7801\uff1a \u6700\u574f\u60c5\u5f62\u5206\u6790 \u968f\u673a\u7b97\u6cd5 \u4e3a\u4e86\u5229\u7528\u6982\u7387\u5206\u6790\uff0c\u9700\u8981\u4e86\u89e3\u5173\u4e8e\u8f93\u5165\u5206\u5e03\u7684\u4e00\u4e9b\u4fe1\u606f\u3002 \u6307\u793a\u5668\u968f\u673a\u53d8\u91cf \u968f\u673a\u7b97\u6cd5 \u5982\u4f55\u7406\u89e3\u968f\u673a\u6392\u5e8f\uff0c\u4e00\u4e2a\u516c\u5e73\u7684\u7b97\u6cd5\u80fd\u591f\u5747\u5300\u5730\u7ed9\u51fan\uff01\u4e2a\u7ed3\u679c\u4e2d\u7684\u4e00\u4e2a\u3002\u4f46\u662f\u5982\u679c\u8fd9\u6837\u7684\u8bdd\uff0c\u7b97\u6cd5\u9700\u8981\u7ed9\u51fan\uff01\u4e2a\u9009\u62e9\uff0c\u5b83\u7684\u590d\u6742\u5ea6\u592a\u9ad8O(n!)\uff0c\u968f\u673a\u7b97\u6cd5\u5e94\u8fd0\u800c\u751f\u3002 \u968f\u673a\u6392\u5217\u6570\u7ec4\uff1a P\u8868\u793a\u7684\u662f\u4f18\u5148\u7ea7\uff1a\u5047\u8bbe\u4f18\u5148\u7ea7\u90fd\u4e0d\u540c\uff0c\u5219\u7b97\u6cd5\u4ea7\u751f\u8f93\u5165\u7684\u5747\u5300\u968f\u673a\u6392\u5217\u3002 \u5c0ftip\uff1a Knuth\u6d17\u724c\u7b97\u6cd5 \u6392\u5e8f\u95ee\u9898\uff1a \u6392\u5e8f\u7b97\u6cd5\uff1a \u63d2\u5165\u6392\u5e8f\uff0c$\\Theta\\left(n^{2}\\right)$\uff0c\u4ed6\u662f\u539f\u5740\u7684\uff08\u4ec5\u6709\u5e38\u6570\u9879\u4e2a\u5143\u7d20\u9700\u8981\u50a8\u5b58\u5728\u6570\u7ec4\u4e4b\u5916\uff09\uff0c\u5bf9\u4e8e\u5c0f\u89c4\u6a21\u6392\u5e8f\uff0c\u63d2\u5165\u6392\u5e8f\u975e\u5e38\u9002\u7528\u3002 \u5f52\u5e76\u7b97\u6cd5\uff0c$\\Theta(n \\lg n)$\uff0c\u5b83\u7684merge\u51fd\u6570\u5e76\u4e0d\u662f\u539f\u5740\u7684\uff0c\u4f46\u4ed6\u6709\u66f4\u597d\u7684\u6e10\u8fdb\u65f6\u95f4\u3002 \u5728\u4e0b\u6587\u4e2d \u7b2c\u516d\u573a\u4ecb\u7ecd\u5806\u6392\u5e8f\uff0c\u7b2c\u4e03\u7ae0\u4ecb\u7ecd\u5feb\u901f\u6392\u5e8f\u3002 \u7b2c\u516d\u7ae0 \u5806\u6392\u5e8f \u5b83\u878d\u5408\u4e86\u5feb\u901f\u6392\u5e8f\u548c\u5f52\u5e76\u6392\u5e8f\u7684\u4f18\u70b9 \u5229\u7528\u5806\u7684\u6570\u636e\u7ed3\u6784\uff0c\u7ed3\u5408\u4e86\u63d2\u5165\u6392\u5e8f\u548c\u5f52\u5e76\u6392\u5e8f\u7684\u4f18\u70b9\uff1a\u590d\u6742\u5ea6$\\Theta(n \\lg n)$\uff0c\u5177\u6709\u539f\u5740\u6027\u3002 \u5806 \u5806\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u4e00\u4e2a\u8fd1\u4f3c\u7684\u5b8c\u5168\u4e8c\u53c9\u6811 \u8ba1\u7b97\u4f4d\u7f6e\uff1a \u6700\u5927\u5806\uff0c\u6700\u5c0f\u5806\u3002\u6700\u5927\u5806\u5c31\u662f\u6700\u5927\u7684\u8282\u70b9\u5728\u6700\u4e0a\u9762\u7684\u6839\u8282\u70b9\u3002 \u6700\u5927\u5806\u7684\u4e00\u4e9b\u6027\u8d28\uff1a \u6700\u5927\u5806\u7684\u6700\u5927\u503c\u5728\u6839\u8282\u70b9\u4e0a\uff0c\u5728python\u4e2d\uff0c\u4e00\u822c\u4f7f\u7528\u6700\u5c0f\u5806\uff0c\u6839\u8282\u70b9\u662f\u6700\u5c0f\u503c \u6784\u9020\u6700\u5927\u5806\uff0c\u7ebf\u6027\u590d\u6742\u5ea6 \u7ef4\u62a4\u6700\u5927\u5806\uff0c\u590d\u6742\u5ea6\u4e3a $O(lgn)$\uff0c\u53ea\u80fd \u5806\u6392\u5e8f $O(nlgn)$ \u7ef4\u6301\u6700\u5927\u5806 \u590d\u6742\u5ea6\uff1aO(lgn) \u7ef4\u62a4\u6700\u5927\u5806\uff1a\u5c31\u662f\u628a\u7b2ci\u4e2a\u5143\u7d20\u548c\u4e24\u4e2a\u5b69\u5b50\u505a\u5bf9\u6bd4\uff0c\u4e0e\u5b69\u5b50\u4e2d\u7684\u8f83\u5927\u503c\u8fdb\u884c\u4ea4\u6362\u3002 \u5efa\u5806 \u81ea\u5e95\u5411\u4e0a\u5efa\u9020\u6700\u5927\u5806\u3002 \u6570\u5b66\u5f52\u7eb3\u53ef\u77e5: (n-1)//2+1 \u5230 n \u5747\u4e3a \u53f6\u5b50\uff0c\u90a3\u4e48\uff08n-1\uff09//2 \u4e3a\u975e\u53f6\u5b50\uff0c\u6240\u4ee5\u5bf9\u8fd9\u4e9b\u8fdb\u884c\u6700\u5927\u5806\u7ef4\u62a4\u5373\u53ef \u5806\u6392\u5e8f \u9700\u8981\u4e00\u5b9a\u7684\u6570\u5b66\u8bc1\u660e\uff1a\u5806\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3anlogn \u4f18\u5148\u961f\u5217 \u7528\u6700\u5927\u5806\u5b9e\u73b0\u6700\u5927\u4f18\u5148\u961f\u5217 \u4f18\u5148\u961f\u5217\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u6709\u4e00\u4e2a\u76f8\u5173\u7684\u503c\uff0c\u79f0\u4e3a\u5173\u952e\u5b57KEY\uff0c\u6700\u5927\u4f18\u5148\u961f\u5217\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1a insert(s,x):\u628a\u5143\u7d20\u63d2\u5165\u5230\u96c6\u5408x\u4e2d maximum(s):\u8fd4\u56des\u4e2d\u6700\u5927\u5143\u7d20 extract-max(s):\u53bb\u6389\u5e76\u8fd4\u56des\u4e2d\u5177\u6709\u6700\u5927\u5173\u952e\u5b57\u7684\u5143\u7d20 increase-key(s,x,k):\u5c06\u5143\u7d20x\u7684\u5173\u952e\u5b57\u503c\u589e\u52a0\u5230k\uff0c\u5047\u8bbek\u503c\u4e0d\u5c0f\u4e8e\u539f\u6765\u7684\u5173\u952e\u5b57\u503c ** \u63d2\u5165\u5c31\u76f4\u63a5\u5728\u6570\u7ec4\u540e\u65b9\u52a0\u5165\uff0c\u7136\u540e\u6ce8\u610f\u7ef4\u62a4\u5806\u5373\u53ef \u5148\u6539\u53d8A[i]\u7684\u503c\uff0c\u7136\u540e\u5728\u2018\u2019\u539f\u6709\u7684\u6700\u5927\u5806\u2018\u2019\u4e0a\u7ef4\u62a4\u6700\u5927\u5806\u3002 \u7b2c\u4e03\u7ae0 \u5feb\u901f\u6392\u5e8f \u5feb\u901f\u6392\u5e8f\u662f\u5b9e\u9645\u6392\u5e8f\u5e94\u7528\u4e2d\u7684\u6700\u597d\u9009\u62e9\uff0c\u5b83\u7684\u5e73\u5747\u6027\u80fd\u6700\u597d\uff0c\u671f\u671b\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u662f$\\Theta(n \\lg n)$\uff0c\u4f46\u662f\u9690\u542b\u7684\u5e38\u6570\u56e0\u5b50\u975e\u5e38\u5c0f\uff0c\u4ed6\u4e5f\u80fd\u8fdb\u884c\u539f\u5740\u6392\u5e8f\uff0c\u751a\u81f3\u865a\u62df\u73af\u5883\u4e2d\u4e5f\u80fd\u5f88\u597d\u5730\u5de5\u4f5c\u3002 \u5206\u6cbb\u7684\u601d\u60f3 \u7b97\u6cd5\u53ef\u4ee5\u57fa\u4e8e\u539f\u5740\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u5f52\u5e76\uff0c\u53ea\u9700\u8981\u505a\u597d\u5206\u5272\u5373\u53ef\u3002 \u5206\u5272\u51fd\u6570 \u5feb\u901f\u6392\u5e8f\u7684\u6027\u80fd\u5206\u6790 \u6700\u574f\u60c5\u51b5\u5212\u5206 \u5982\u679c\u6bcf\u6b21\u5212\u5206\u90fd\u5305\u542b\u4e86n-1\u548c1\u4e2a\u5143\u7d20\uff0c\u90a3\u662f\u6700\u5dee\u7684\u60c5\u51b5\uff0c\u5212\u5206\u64cd\u4f5c\u590d\u6742\u5ea6\u4e3an \u590d\u6742\u5ea6\u7ed3\u679c\u4e3a\uff1a$\\Theta\\left(n^{2}\\right)$ \u6700\u597d\u60c5\u51b5\u5212\u5206 \u590d\u6742\u5ea6\u7ed3\u679c\u4e3a$\\Theta(n \\lg n)$ \u5e73\u8861\u7684\u5212\u5206 \u5feb\u901f\u6392\u5e8f\u7684\u5e73\u5747\u8fd0\u884c\u65f6\u95f4\u66f4\u63a5\u8fd1\u4e8e\u5176\u6700\u597d\u60c5\u51b5\uff0c\u5e76\u975e\u6700\u574f\u60c5\u51b5 \uff08\u4e2a\u4eba\u7406\u89e3\uff1a\u6bcf\u6b21\u5212\u5206\uff0c\u90fd\u5206\u5230\u5230\u6700\u5dee\u60c5\u51b5\u7684\u6982\u7387\u662f\u975e\u5e38\u5c0f\u7684\uff09 \u5feb\u901f\u6392\u5e8f\u7684\u968f\u673a\u5316\u7248\u672c \u4e3b\u8981\u4fee\u6539\u662f\u5c06\u4e3b\u5143\u7d20\u968f\u673a\u9009\u53d6 \u63d2\u5165\u6392\u5e8f \u63d2\u5165\u6251\u514b\u724c\u5f0f \u5f52\u5e76\u6392\u5e8f \u5206\u6cbb \u5806\u6392\u5e8f \u6700\u5927\u5806\u7684\u7ef4\u62a4\u59cb\u7ec8\u80fd\u627e\u5230\u6700\u5927\u7684\u5143\u7d20 \u5feb\u901f\u6392\u5e8f \u5206\u5272 \u7b2c\u516b\u7ae0 \u7ebf\u6027\u65f6\u95f4\u6392\u5e8f \u4e4b\u524d\u63d0\u5230\u7684\u7b97\u6cd5\u90fd\u6709\u4e00\u4e2a\u6027\u8d28\uff1a\u5728\u6392\u5e8f\u7684\u6700\u7ec8\u7ed3\u679c\u4e2d\uff0c\u4e2a\u5143\u7d20\u7684\u6b21\u5e8f\u4f9d\u8d56\u4e8e\u5b83\u4eec\u4e4b\u95f4\u7684\u6bd4\u8f83\u3002 \u6bd4\u8f83\u6392\u5e8f \u6392\u5e8f\u7b97\u6cd5\u7684\u4e0b\u754c \u51b3\u7b56\u6811\u6a21\u578b---\u5b8c\u5168\u4e8c\u53c9\u6811 \u53f6\u8282\u70b9\u5171\u6709n\uff01\u79cd\u53ef\u80fd\u7684\u6392\u5217\u3002 \u6700\u574f\u60c5\u51b5\u7684\u4e0b\u754c \u6392\u5e8f\u7b97\u6cd5\u6700\u574f\u60c5\u51b5\u5c31\u662f\u51b3\u7b56\u6811\u7684\u9ad8\u5ea6 \u5b9a\u7406\uff1a \u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u4efb\u4f55\u6bd4\u8f83\u6392\u5e8f\u7b97\u6cd5\u90fd\u9700\u8981$\\Omega(n \\lg n)$\u6b21\u6bd4\u8f83 \u5806\u6392\u5e8f\u548c\u5f52\u5e76\u6392\u5e8f\u90fd\u662f\u6e10\u8fdb\u6700\u4f18\u7684\u6392\u5e8f\u7b97\u6cd5 \u8ba1\u6570\u6392\u5e8f \u56fe\u89e3\uff1a \u8fd0\u884c\u65f6\u95f4\u4e3a\uff1a$\\Theta(n)$ \u8ba1\u6570\u6392\u5e8f\u7684\u4e00\u4e2a\u91cd\u8981\u6027\u8d28\u5c31\u662f \u7a33\u5b9a \uff0c\u5bf9\u4e8e\u76f8\u540c\u503c\u7684\u5143\u7d20\u5728\u8f93\u51fa\u6570\u7ec4\u4e2d\u7684\u76f8\u5bf9\u6b21\u5e8f\u4e0e\u4ed6\u4eec\u5728\u8f93\u5165\u6570\u7ec4\u4e2d\u7684\u6b21\u5e8f\u76f8\u540c\uff0c\u8fd9\u79cd\u7a33\u5b9a\u6027\u5728\u5f53\u6709\u6570\u636e\u9644\u5e26\u536b\u661f\u6570\u636e\u65f6\u6bd4\u8f83\u91cd\u8981\u3002 \u57fa\u6570\u6392\u5e8f \u4f2a\u4ee3\u7801\uff1a \u5f15\u7406\uff1a \u91c7\u7528\u7a33\u5b9a\u6392\u5e8f\u65b9\u6cd5\uff0c\u6bd4\u5982\u8ba1\u6570\u6392\u5e8f\uff1a$\\Theta(d(n+k))$ \uff0c\u5373\u8fd0\u884cd\u6b21\u8ba1\u6570\u6392\u5e8f\u3002 \u57fa\u6570\u6392\u5e8f\u662f\u5426\u6bd4\u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\u7b97\u6cd5\u66f4\u597d\u5462\uff1f \u57fa\u6570\u6392\u5e8f\u867d\u7136\u6267\u884c\u7684\u5faa\u73af\u8f6e\u6570\u4f1a\u6bd4\u5feb\u901f\u6392\u5e8f\u5c11\uff0c\u4f46\u662f\u6bcf\u4e00\u8f6e\u5b83\u6240\u8017\u8d39\u7684\u65f6\u95f4\u8981\u957f\u7684\u591a\uff0c\u54ea\u4e00\u79cd\u6392\u5e8f\u5408\u9002\u66f4\u4f9d\u8d56\u4e8e\u5177\u4f53\u5b9e\u73b0\u548c\u5e95\u5c42\u7684\u7279\u6027\uff0c\u6bd4\u5982\u5feb\u901f\u6392\u5e8f\u901a\u5e38\u6bd4\u57fa\u6570\u6392\u5e8f\u66f4\u6709\u6548\u5730\u4f7f\u7528\u786c\u4ef6\u7684\u7f13\u5b58\u3002 \u6876\u6392\u5e8f \u6876\u6392\u5e8f\u5047\u8bbe\u8f93\u5165\u6570\u636e\u670d\u4ece\u5747\u5300\u5206\u5e03\uff0c\u5e73\u5747\u60c5\u51b5\u4e0b\u5b83\u7684\u65f6\u95f4\u4ee3\u4ef7\u4e3a$O(n)$\u3002 \u7b2c\u4e5d\u7ae0 \u4e2d\u4f4d\u6570\u548c\u987a\u5e8f\u7edf\u8ba1\u91cf order statistic \u7b2ci\u4e2a\u987a\u5e8f\u7edf\u8ba1\u91cf\u662f\u8be5\u96c6\u5408\u4e2d\u7b2ci\u4e2a\u5143\u7d20 \u6700\u5927\u503c i = n \u6700\u5c0f\u503c n = 1 n\u4e3a\u5076\u6570\u65f6\u5b58\u5728\u4e24\u4e2a\u4e2d\u4f4d\u6570\uff0c\u4e0b\u4e2d\u4f4d\u6570/\u4e0a\u4e2d\u4f4d\u6570 \u6700\u5c0f\u503c\u548c\u6700\u5927\u503c \u7ecf\u8fc7n-1\u6b21\u6bd4\u8f83\u627e\u51fa\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c\u3002 \u671f\u671b\u4e3a\u7ebf\u6027\u65f6\u95f4\u7684\u9009\u62e9\u7b97\u6cd5 \u9009\u62e9\u6570\u7ec4\u4e2d\u7b2ci\u5c0f\u7684\u5143\u7d20 \u6b64\u5904\u7684partition\u662f\u5feb\u901f\u6392\u5e8f\u7684\u5206\u5272\uff08\u5206\u6210\u4e09\u6bb5\uff0c\u7b2c\u4e00\u6bb5\u5c0f\u4e8ekey\uff0c\u7b2c\u4e8c\u6bb5\u4e3akey\uff0c\u7b2c\u4e09\u6bb5\u5927\u4e8ekey\uff09 \u7b2c\u5341\u7ae0 \u57fa\u672c\u6570\u636e\u7ed3\u6784 \u6808\uff0c\u961f\u5217\uff0c\u94fe\u8868\uff0c\u6709\u6839\u6811\u3002 \u6808\u548c\u961f\u5217 \u6808\u548c\u961f\u5217\u90fd\u662f\u52a8\u6001\u96c6\u5408\uff0c\u5728\u5176\u4e0a\u8fdb\u884cdelete\u64cd\u4f5c\u662f\u9884\u5b9a\u7684\uff1a \u6808\uff1a\u540e\u8fdb\u5148\u51fa \u961f\u5217\uff1a\u5148\u8fdb\u5148\u51fa \u6808 insert\u64cd\u4f5c\u88ab\u79f0\u4e3a\u538b\u5165push delete\u64cd\u4f5c\u88ab\u79f0\u4e3a\u5f39\u51fapop \u961f\u5217 insert: enqueue delete: dequeue \u94fe\u8868 \u53cc\u5411\u94fe\u8868 prev - element - next \u54e8\u5175 L.nil \u7684next \u6307\u5411\u7b2c\u4e00\u4e2a\u5143\u7d20\uff08\u8868\u5934\uff09 L.nil\u7684prev \u6307\u5411\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff08\u8868\u5c3e\uff09 \u6240\u4ee5\u6b64\u5904\u4e0d\u9700\u8981L.head \u53ea\u9700\u8981L.nil.next \u6709\u6839\u6811 \u6811\u53ef\u4ee5\u5206\u4e3a\u591a\u79cd\u6811\uff0c\u4e8c\u53c9\u6811\uff0c\u5206\u652f\u65e0\u9650\u5236\u7684\u6709\u6839\u6811\u3002\u3002\u3002\u7b49\u7b49 \u4e8c\u53c9\u6811 \u5206\u652f\u65e0\u9650\u5236\u7684\u6709\u6839\u6811 \u7b2c\u5341\u4e00\u7ae0 \u6563\u5217\u8868 \u5f85\u5b8c\u6210\u3002\u3002\u3002 \u7b2c\u5341\u4e8c\u7ae0 \u4e8c\u53c9\u641c\u7d22\u6811 \u4e2d\u5e8f\u904d\u5386\u3001\u524d\u5e8f\u904d\u5386\uff0c\u540e\u5e8f\u904d\u5386 \u91c7\u7528 \u9012\u5f52 \u7684\u65b9\u5f0f\u8fdb\u884c\u904d\u5386\uff0c\u4e5f\u53ef\u4ee5\u7528 \u6808 \u3002 \u4e0a\u9762\u7684\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u4e3a 2\uff0c5\uff0c5\uff0c6\uff0c7\uff0c8 \u5982\u679c\u60f3\u4e00\u5c42\u5c42\u7684\u904d\u5386\uff0c\u91c7\u7528\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u501f\u7528\u961f\u5217 \u7b2c\u5341\u4e94\u7ae0 \u52a8\u6001\u89c4\u5212 dynamic programming \u52a8\u6001\u89c4\u5212 \u7279\u5f81\uff1a \u627e\u7684\u662f\u6700\u4f18\u89e3\u3002 \u6700\u4f18\u5b50\u7ed3\u6784\uff1a\u6700\u4f18\u89e3=f(\u6700\u4f18\u5b50\u7ed3\u6784) \u91cd\u53e0\u5b50\u95ee\u9898\uff1a\u5f53\u5904\u7406\u5b50\u95ee\u9898\u7684\u65f6\u5019\uff0c\u4f1a\u9047\u5230\u91cd\u590d\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u5f52\u5e76\u6392\u5e8f\u5e76\u4e0d\u5c5e\u4e8e\u52a8\u6001\u89c4\u5212\u3002 \u4e24\u79cd\u5b9e\u73b0\u65b9\u6cd5\uff1a \u81ea\u4e0a\u800c\u4e0b\uff1a\u91c7\u7528\u5907\u5fd8\u5f55\u7684\u65b9\u5f0f \u81ea\u4e0b\u800c\u4e0a\uff1a\u6784\u5efa\u8868\u683c\uff0c\u4e5f\u79f0\u4e3a\u7684dp\u6570\u7ec4 \u8bbe\u8ba1\u65b9\u6cd5 \u5199\u51fa\u9012\u5f52\u51fd\u6570\\\u8d1d\u5c14\u66fc\u65b9\u7a0b\\\u6700\u4f18\u89e3\u7684\u7ed3\u6784\u7279\u5f81 \u8ba1\u7b97\u6700\u4f18\u89e3\u7684\u503c\uff0c\u901a\u5e38\u91c7\u7528\u81ea\u5e95\u5411\u4e0a\u7684\u65b9\u6cd5 \u81ea\u4e0b\u800c\u4e0a\u7684\u4e00\u7ef4\u6570\u7ec4 \u94a2\u7ba1\u5207\u5272 \u627e\u6700\u4f18\u89e3 \u5b58\u5728\u6700\u4f18\u5b50\u7ed3\u6784 \u6b64\u65f6\u5df2\u7ecf\u53ef\u4ee5\u91c7\u7528\u9012\u5f52\u7684\u65b9\u5f0f\u8fdb\u884c\u6c42\u89e3\u4e86\uff0c\u9012\u5f52\u590d\u6742\u5ea6\u592a\u9ad8\u4e86\uff0c\u6307\u6570\u7ea7 3. \u53d1\u73b0\u91cd\u53e0\u5b50\u7ed3\u6784 3. \u52a8\u6001\u89c4\u5212\uff01 3. \u9009\u62e9\uff1a\u81ea\u4e0a\u800c\u4e0b\uff0c\u6216\u8005**\u81ea\u4e0b\u800c\u4e0a** \u9996\u5148\u5199\u51fa\u9012\u5f52\u516c\u5f0f\uff1a $$ r_n = max[p_1+r_{n-1}, p_2+r_{n-2},...,p_n] $$ \u9012\u5f52\u516c\u5f0f\uff0c\u5de6\u8fb9\u7531\u591a\u4e2a\u503c\u8ba1\u7b97\u800c\u6765\uff0c $$ r_1 = p_1 \\ r_2 = r_1 + p_1 \u6216 p_2 \\ r_3 = r_1 + p_2 \u6216 r_2+ p_1 \u6216 p_3 $$ \u53ef\u4ee5\u770b\u5230\uff0cr\u5c31\u662f\u901a\u8fc7\u524d\u9762\u7684\u6570\u7b97\u51fa\u6765\u7684\uff0c\u5c31\u6784\u5efa\u6570\u7ec4\uff0c\u521d\u59cb\u5316$r_1$ \uff0c\u5f00\u59cb\u5411\u4e0a\u8ba1\u7b97\u3002 \u81ea\u4e0b\u800c\u4e0a\u7684\u4e8c\u7ef4\u6570\u7ec4 \u5bf9\u4e8e\u4e00\u7ef4\u95ee\u9898 $$ f(0:n) = a+f(1:n) $$ \u4e8c\u7ef4\u95ee\u9898\uff1a $$ f(0:n)=f(0:k)+f(k:n) $$ \u77e9\u9635\u94fe\u4e58 \u627e\u6700\u4f18\u5316\u65b9\u6848\uff0c\u660e\u786e\u8fd9\u662f\u4e00\u4e2a\u6700\u4f18\u5316\u95ee\u9898\u3002 \u5199\u9012\u5f52\u65b9\u7a0b\uff1a m\u8868\u662fdp\u8868 s\u8868\u7528\u4e8e\u8bb0\u5f55\u6700\u4f73\u5206\u5272\u4f4d\u7f6ek \u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217 \u523b\u753b\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u7684\u7279\u5f81 X\u6709$2^m$\u4e2a\u5b50\u5e8f\u5217\uff0c\u5168\u90e8\u904d\u5386\u4e00\u8fb9\uff0c\u53ef\u4ee5\u627e\u5230\u6700\u957f\u7684 \u6700\u4f18\u4e8c\u53c9\u641c\u7d22\u6811 \u6d89\u53ca\u6982\u7387\uff0c\u6709\u70b9\u96be\uff0c\u5f85\u5b8c\u5584\u3002 \u81ea\u4e0a\u800c\u4e0b\u7684\u5907\u5fd8\u5f55\u673a\u5236 \u7b2c\u4e8c\u5341\u4e8c\u7ae0 \u56fe\u7b97\u6cd5 \u56fe\u7684\u8868\u793a\uff1a \u90bb\u63a5\u94fe\u8868 \u5728\u8868\u793a\u7a00\u758f\u56fe\u7684\u65f6\u5019\u975e\u5e38\u9002\u7528 \u90bb\u63a5\u77e9\u9635 \u8868\u793a\u7a20\u5bc6\u56fe\u9002\u7528\uff0c\u53ef\u4ee5\u5feb\u901f\u5224\u65ad\u4e24\u4e2a\u8282\u70b9\u662f\u5426\u5b58\u5728\u8fb9 \u65e0\u8bba\u662f\u6709\u5411\u56fe\u8fd8\u662f\u65e0\u5411\u56fe\uff0c\u90bb\u63a5\u94fe\u8868\u7684\u50a8\u5b58\u7a7a\u95f4\u9700\u6c42\u4e3a\uff1a$\\Theta(V+E)$ \u90bb\u63a5\u94fe\u8868\u7a0d\u52a0\u4fee\u6539\u5373\u53ef\u8868\u793a \u6743\u91cd\u56fe \uff0c\u4e0d\u8db3\u5728\u4e8e\u4e0d\u80fd\u5feb\u901f\u5224\u65ad\u662f\u5426\u5b58\u5728\u67d0\u4e2a\u8fb9\uff0c\u8981\u53bb\u641c\u7d22\u3002 \u90bb\u63a5\u77e9\u9635\u53ef\u4ee5\u5feb\u901f\u5224\u65ad\u662f\u5426\u5b58\u5728\u67d0\u4e2a\u8fb9\uff0c\u4f46\u662f\u50a8\u5b58\u7a7a\u95f4\u8f83\u5927\u3002\u9700\u6c42\u4e3a\uff1a$\\Theta\\left(V^{2}\\right)$ \u65e0\u5411\u56fe\u662f\u5bf9\u79f0\u7684\uff0c\u53ef\u4ee5\u8282\u7ea6\u4e00\u534a\u7684\u7a7a\u95f4\u3002 \u4f8b\u9898 \u5bf9\u4e8e\u90bb\u63a5\u94fe\u8868\u6765\u8bf4\uff1a \u904d\u5386\u6bcf\u4e2a\u7ed3\u70b9\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u8fb9\u8fdb\u884c\u7ffb\u8f6c \u90bb\u63a5\u77e9\u9635 \u4e0a\u4e0b\u4e09\u89d2\u5bf9\u6362\u3002 \u6709\u5411\u65e0\u73af\u56fe \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22 \u8be5\u7b97\u6cd5\u80fd\u591f\u8ba1\u7b97\u8282\u70b9s\u5230\u6bcf\u4e2a\u53ef\u5230\u8fbe\u7684\u7ed3\u70b9\u7684\u8ddd\u79bb\uff08\u6700\u5c11\u7684\u8fb9\u6570\uff09\uff0c\u540c\u65f6\u751f\u6210\u4e00\u9897\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u6811\u3002 s -- v\u7684\u6700\u77ed\u8def\u5f84\u3002 \u5148\u627e\u51fa\u7070\u8272 \u7070\u8272\u4e2d\u9009\u62e9\u4e00\u4e2a\u53d8\u9ed1\uff0c\u53d8\u9ed1\u5143\u7d20\u5468\u56f4\u53d8\u7070 \u518d\u627e\u51fa\u7070\u8272 \u5982\u6b64\u53cd\u590d\u3002 https://www.redblobgames.com/pathfinding/a-star/introduction.html \u53ef\u4ee5\u53c2\u8003\u5b66\u4e60 \u6700\u77ed\u8def\u5f84 \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6700\u77ed\u8def\u5f84\u3002 \u6700\u77ed\u8def\u5f84\u8ddd\u79bb\u7684\u4e00\u4e9b\u6027\u8d28 \u95ee\u9898\uff0c\u81ea\u6d4b \u63cf\u8ff0\u5f52\u5e76\u6392\u5e8f \u8bc1\u660e\u5f52\u5e76\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6 \u753b\u56fe\u3001\u6570\u5b66\u5f52\u7eb3\u6cd5 \u4e8c\u5206\u67e5\u627e\u63cf\u8ff0\uff0c\u590d\u6742\u5ea6 \u63cf\u8ff0\u4e00\u4e2a\u7b97\u6cd5\uff0c\u6570\u7ec4\u4e2d\u627e\u548c\u4e3ax\u7684\u5143\u7d20\u5bf9\uff0cnlogn \u5f52\u5e76\u6cd5 \u9006\u5e8f\u5bf9 \u5f52\u5e76\u6cd5 \u5982\u679c\u53ea\u80fd\u8c03\u7528random(0,1)\uff0c\u5982\u4f55\u505a\u5230random(a,b),\u8fd4\u56deab\u4e4b\u95f4\u7684\u6574\u6570\u3001 \u9996\u5148\uff0crandom(0,1)\u662f\u968f\u673a\u7684\u4ea7\u751f0,1\u4e24\u4e2a\u6574\u6570\uff0crandom(a,b)\u662f\u968f\u673a\u4ea7\u751f[a,b]\u4e4b\u95f4\u7684\u6574\u6570\u3002 \u5b9e\u9645\u4e0a\u8981\u968f\u673a\u751f\u6210\u4e00\u4e2a [0,b-a]\u7684\u6570\uff0c\u6700\u540e\u52a0\u4e0aa\u3002 \u4e3a\u4e86\u751f\u6210\u8fd9\u4e2a\u6570\uff0c\u90a3\u5c31\u8981\u751f\u62102\u8fdb\u5236\u6570\uff0cbits\uff0c\u901a\u8fc7random(0,1\uff09\u751f\u6210\u7684\u4e8c\u8fdb\u5236\u6570\u90fd\u662f\u7b49\u6982\u7387\u7684\u3002 \u6240\u4ee5\u903b\u8f91\u5c31\u662f\uff0c\u7528random(0,1)\u751f\u6210\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570 RANDOM(a, b) range = b - a bits = ceil(log(2, range)) result = 0 for i = 0 to bits - 1 r = RANDOM(0, 1) result = result + r << i if result > range return RANDOM(a, b) else return a + result \u5728\u96c7\u4f63\u95ee\u9898\u4e2d\uff0c\u6b63\u597d\u96c7\u4f63\u4e00\u6b21\u7684\u6982\u7387\u662f\u591a\u5c11\uff0c\u96c7\u4f63n\u6b21\u662f\u591a\u5c11\uff1f\u96c7\u4f632\u6b21 \u96c7\u4f63\u4e00\u6b21\uff0c\u6700\u725b\u7684\u5728\u7b2c\u4e00\uff0c\u6240\u4ee5$\\frac{(n-1) !}{n !}=\\frac{1}{n}$ \u96c7\u4f63n\u6b21\uff0c\u5c31\u662f\u6bcf\u4e2a\u90fd\u96c7\u4f63\uff0c\u987a\u5e8f\u5c31\u662f1\uff0c2\uff0c3\uff0c4\uff0c..n.\u6240\u4ee5 $\\frac{1}{n !}$ \u96c7\u4f632\u6b21\uff1a \u7b2c\u4e00\u4e2a\u4eba\u80af\u5b9a\u96c7\u4f63 \u80fd\u529b\u6700\u5f3a\u7684\u4eba\u80af\u5b9a\u96c7\u4f63 \u5982\u679c\u8bf4\u6700\u5f3a\u7684\u4eba\u5728\u7b2c\u4e00\u4e2a\uff0c\u90a3\u4e48\u53ea\u4f1a\u96c7\u4f63\u4e00\u6b21 \u8bb0\u7b2c\u4e00\u4e2a\u4eba\u7684\u80fd\u529b\u4e3a$rank_i$ \uff0c\u7136\u540e$rank_{i+1},...,rank_{n-1}$ (\u6bd4\u7b2c\u4e00\u540d\u5f3a\u7684\u4eba)\u8981\u5728\u7b2c\u4e00\u540d$rank_{n}$ \u4e4b\u540e\u9762\u8bd5 $P(E_{i})=1/n$ \u4e3a \u7b2c\u4e00\u540d\u6392\u540d\u4e3a$rank_i$\u7684\u6982\u7387 $$ \\sum_{i=1}^{n-1} P\\left(E_{i}\\right) \\cdot \\frac{1}{n-i}=\\sum_{i=1}^{n-1} \\frac{1}{n} \\cdot \\frac{1}{n-i} $$ \u63b7n\u4e2a\u9ab0\u5b50\uff0c\u548c\u7684\u671f\u671b $X_i$ \u7b2ci\u4e2a\u9ab0\u5b50\u7684\u503c $sum=\\sum_{i=1}^n X_i$ $E(sum)=E(\\sum_{i=1}^n X_i)=\\sum_{i=1}^nE(X_i)=3.5n$ \u5e3d\u5b50\u6838\u5bf9\u95ee\u9898 n\u4e2a\u5ba2\u6237\uff0c\u6bcf\u4e2a\u4eba\u7ed9\u670d\u52a1\u751f\u4e00\u9876\u5e3d\u5b50\uff0c\u670d\u52a1\u751f\u628a\u5e3d\u5b50\u4ee5\u968f\u673a\u987a\u5e8f\u8fd8\u7ed9\u5ba2\u6237\uff0c\u8bf7\u95ee\u62ff\u5230\u81ea\u5df1\u5e3d\u5b50\u7684\u5ba2\u6237\u6570\u76ee\u7684\u671f\u671b\uff1f $X_i$ \u7b2c i \u4e2a\u5ba2\u6237\u62ff\u5230\u81ea\u5df1\u7684\u5e3d\u5b50 \u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u4eba\u62ff\u5230\u81ea\u5df1\u5e3d\u5b50\u7684\u6982\u7387P = \u7b2c\u4e00\u4e2a\u4eba\u62ff\u5230\u7b2c\u4e8c\u4e2a\u4eba\u7684\u5e3d\u5b50\u7684\u6982\u7387(1/n) * 0 + \u7b2c\u4e00\u4e2a\u4eba\u6ca1\u62ff\u5230\u7b2c\u4e8c\u4e2a\u4eba\u7684\u5e3d\u5b50\u7684\u6982\u7387(n-1)/n * (1/n-1) = 1/n\uff0c \u7c7b\u6bd4\u7740\uff0c\u4e0d\u7ba1\u6309\u7167\u4ec0\u4e48\u987a\u5e8f\uff0c\u6bcf\u4e2a\u4eba\u62ff\u5230\u81ea\u5df1\u5e3d\u5b50\u7684\u6982\u7387\u90fd\u662f1/n\uff0c \u8fd9\u662f\u53e4\u5178\u6982\u578b\u3002 $P(X_i)=1/n$ $E\\left[\\sum_{i=1}^{n} X_{i}\\right]=\\sum_{i=1}^{n} E\\left[X_{i}\\right]=\\sum_{i=1}^{n} \\frac{1}{n}=1$ \u9006\u5e8f\u5bf9\u6570\u76ee\u7684\u671f\u671b https://walkccc.me/CLRS/Chap05/5.2/ $$ \\begin{aligned} \\mathrm{E}\\left[\\sum_{i<j} X_{i, j}\\right] &=\\sum_{i A[j]} \\ &=\\frac{1}{2} \\sum_{i=1}^{n-1} n-i \\ &=\\frac{n(n-1)}{2}-\\frac{n(n-1)}{4} \\ &=\\frac{n(n-1)}{4} . \\end{aligned} $$ \u9ad8\u5ea6\u4e3ah\u7684\u5806\uff0c\u6700\u591a\u591a\u5c11\u4e2a\u5143\u7d20\uff1f \u9996\u5148\u8981\u660e\u767d\u5806\u7684\u5b9a\u4e49\uff0c\u662f\u4e00\u4e2a\u8fd1\u4f3c\u7684\u5b8c\u5168\u4e8c\u53c9\u6811 \u7b49\u6bd4\u6570\u5217\u6c42\u548c $S_{n}=a_{1} \\frac{1-q^{n}}{1-q}$ \u5bf9\u4e8e\u4e00\u4e2a\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u9ad8\u5ea6h-1\uff0c\u90a3\u4e48\u5b83\u7684\u5143\u7d20\u4e2a\u6570\u4e3a$1+2+4+8+...+2^{h-1}$ \u6c42\u548c\u4e3a$2^{h}-1$ \u90a3\u4e48\u4e00\u4e2a\u9ad8\u5ea6\u4e3ah\u7684\u5806\uff0c\u653e\u6ee1\u4e86\u4e3a $2^{h+1}-1$ \u524d\u4e00\u884c\u653e\u6ee1\uff0c\u7b2ch\u884c\u653e\u4e00\u4e2a\uff0c\u5219\u4e3a\uff1a$2^{h}$ \u542b\u6709n\u4e2a\u5143\u7d20\u7684\u5806\u7684\u9ad8\u5ea6 \u7531\u4e0a\u9898\u76ee\u53ef\u77e5\uff0ch\u9ad8\u5ea6\uff0c\u6700\u591a$2^{h+1}-1$\u4e2a\u5143\u7d20\uff0c\u6700\u5c11$2^{h}$ \u6240\u4ee5n\u4e2a\u5143\u7d20\uff0c\u9ad8\u5ea6\u4e3a $\\lfloor\\lg n\\rfloor$ \u6700\u5927\u5806\u7684\u6700\u5c0f\u5143\u7d20\u5728\u54ea\uff1f \u5806\u6570\u7ec4\u7684\u540e\u534a\u90e8\u5206 \u5df2\u7ecf\u6392\u597d\u5e8f\u7684\u6570\u7ec4\uff0c\u662f\u6700\u5c0f\u5806\u5417\uff1f \u662f\uff0cparent[i]< left[2i],parent[i]< right[2i+1]","title":"\u300a\u7b97\u6cd5\u5bfc\u8bba\u300b\u9605\u8bfb\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_1","text":"\u5f00\u59cb\u4e8e2021\u5e743\u67083\u65e5 \u9ec4\u6d69 \u7b54\u6848\uff1ahttps://walkccc.me/CLRS/","title":"\u300a\u7b97\u6cd5\u5bfc\u8bba\u300b\u9605\u8bfb\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_2","text":"\u7b97\u6cd5algorithm\u63cf\u8ff0\u4e00\u4e2a\u7279\u5b9a\u7684\u8ba1\u7b97\u8fc7\u7a0b\u6765\u5b9e\u73b0\u8f93\u5165\u548c\u8f93\u51fa\u7684\u5173\u7cfb \u7b97\u6cd5\u95ee\u9898\u7684\u4e24\u4e2a\u7279\u5f81\uff1a \u5b58\u5728\u8bb8\u591a\u5019\u9009\u89e3\uff0c\u5bfb\u627e\u4e00\u4e2a\u771f\u6b63\u7684\u89e3\u6216\u8005\u4e00\u4e2a\u6700\u597d\u7684\u89e3\u53ef\u80fd\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u6311\u6218\uff1b \u5b58\u5728\u5b9e\u9645\u5e94\u7528\u3002 \u6570\u636e\u7ed3\u6784 \u6570\u636e\u7ed3\u6784\u662f\u6570\u636e\u7684\u50a8\u5b58\u548c\u7ec4\u7ec7\u65b9\u5f0f\uff0c\u65e8\u5728\u65b9\u4fbf\u8bbf\u95ee\u4e0e\u4fee\u6539 \u6280\u672f \u672c\u4e66\u6709\u4e00\u4e9b\u7279\u5b9a\u7684\u95ee\u9898\u89e3\u51b3\u65b9\u6cd5 \u96be\u9898 \u4e00\u90e8\u5206\u95ee\u9898\uff0c\u76ee\u524d\u4e0d\u77e5\u9053\u6709\u6548\u7684\u65b9\u6cd5\uff0c\u88ab\u79f0\u4e3a NP\u5b8c\u5168\u7684 \u3002\u8bf7\u53c2\u7167\u7b2c34\u7ae0\u5b66\u4e60NP\u5b8c\u5168\u6027\u3002 \u7279\u70b9\uff1a1. \u5bf9\u4e8eNP\u5b8c\u5168\u95ee\u9898\uff0c\u76ee\u524d\u6ca1\u6709\u627e\u5230\u6709\u6548\u7684\u7b97\u6cd5\uff0c\u4f46\u662f\u4e5f\u6ca1\u4eba\u80fd\u8bc1\u660eNP\u5b8c\u5168\u7684\u95ee\u9898\u786e\u5b9e\u4e0d\u5b58\u5728\u6709\u6548\u7b97\u6cd5\u3002 \u200b 2. \u5982\u679cNP\u5b8c\u5168\u95ee\u9898\u88ab\u89e3\u51b3\uff0c\u90a3\u4e48\u4e00\u7cfb\u5217\u7684NP\u5b8c\u5168\u95ee\u9898\u90fd\u4f1a\u88ab\u89e3\u51b3 \u201c\u65c5\u884c\u5546\u95ee\u9898\u201d\uff0cNP\u5b8c\u5168\u95ee\u9898\u4e00\u822c\u5bfb\u6c42\u8fd1\u4f3c\u7b97\u6cd5\u3002 \u5e76\u884c\u6027","title":"\u7b2c\u4e00\u7ae0 \u7b97\u6cd5\u5728\u8ba1\u7b97\u4e2d\u7684\u4f5c\u7528"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_3","text":"\u8ba1\u7b97\u673a\u6709\u4e24\u4e2a\u9650\u5236\uff1a\u901f\u5ea6\u4e0e\u50a8\u5b58 \u6307\u4ee4/\u901f\u5ea6 = \u65f6\u95f4 \u6307\u4ee4\u6570\u76ee\u4e0e\u7b97\u6cd5\u4e0e\u7f16\u8bd1\u5668\u6709\u5173 \u901f\u5ea6\u4e0e\u8ba1\u7b97\u673a\u901f\u5ea6\u6709\u5173\u3002","title":"\u4f5c\u4e3a\u4e00\u79cd\u6280\u672f\u7684\u7b97\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_4","text":"","title":"\u7b97\u6cd5\u7684\u91cd\u8981\u6027"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_5","text":"\u6bd4\u8f83\u63d2\u5165\u987a\u5e8f\u4e0e\u5f52\u5e76\u987a\u5e8f\u5728\u76f8\u540c\u673a\u5668\u4e0a\u7684\u5b9e\u73b0\u3002\u8f93\u5165\u89c4\u6a21\u4e3an\uff0c\u63d2\u5165\u6392\u5e8f\u8fd0\u884c8n^2\u6b65\uff0c\u800c\u5e76\u5f52\u6392\u5e8f\u8fd0\u884c64n lgn \u6b65\uff0c\u95ee\u5bf9\u4e8e\u54ea\u4e9bn\u503c\uff0c\u63d2\u5165\u6392\u5e8f\u4f18\u4e8e\u5f52\u5e76\u6392\u5e8f n\u53d62\uff0c3\uff0c4\uff0c5\uff0c6\u3002","title":"\u6bd4\u8f83\u63d2\u5165\u6392\u5e8f\u4e0e\u5e76\u5f52\u6392\u5e8f"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_6","text":"","title":"\u7b2c\u4e8c\u7ae0 \u7b97\u6cd5\u57fa\u7840"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_7","text":"def insertion_sort(A): for j in range(1,len(A)): key = A[j] i = j - 1 while i >= 0 and A[i] > key: A[i+1] = A[i] i -= 1 a[i+1] = key \u6ce8\u610f\u8fb9\u754c\u6761\u4ef6\uff0c\u4ee5\u53ca \u5faa\u73af\u4e0d\u53d8\u5f0f \uff1aA[:j]\u662f\u6392\u5e8f\u597d\u4e86\u7684\uff0c\u6bd4\u5982 j=1\u7684\u65f6\u5019\uff0cA[0]\u4e00\u4e2a\u5143\u7d20\u5c31\u662f\u6392\u5e8f\u597d\u4e86\u7684\u3002 \u63d2\u5165\u6392\u5e8f\u9002\u7528\u4e8e\u5c11\u91cf\u5143\u7d20\u7684\u6392\u5e8f\u3002 \u8fd9\u662f\u4e00\u4e2a$O(n^2)$\u7684\u7b97\u6cd5\u3002","title":"\u63d2\u5165\u6392\u5e8f"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_8","text":"\u63d2\u5165\u6392\u5e8f\u7b97\u6cd5\u7684\u5206\u6790 \u8f93\u5165\u89c4\u6a21 \u8fd0\u884c\u65f6\u95f4\uff0c\u6307\u6267\u884c\u7684\u57fa\u672c\u64cd\u4f5c\u6570\u6216\u6b65\u6570 \u5f97\u5230\u8fd0\u884c\u65f6\u95f4\u4e3a\uff1a \u6700\u4f73\u60c5\u51b5\uff0c\u5c31\u662f\u8f93\u5165\u7684\u5c31\u662f\u4e2a\u5df2\u7ecf\u6392\u5e8f\u62cd\u597d\u7684\uff1a \u6700\u574f\u60c5\u51b5\uff0c\u8f93\u5165\u662f\u76f8\u53cd\u6392\u5e8f\u7684\uff1a \u6700\u574f\u60c5\u51b5 \u5e73\u5747\u60c5\u51b5\u5206\u6790 \u589e\u957f\u91cf\u7ea7 \u4f7f\u7528\u4e00\u4e9b\u7b80\u5316\u62bd\u8c61\uff0c\u6bd4\u5982\u5ffd\u7565\u4e0a\u6587\u4e2d\u7684c\uff0c\u5373\u6bcf\u4e2a\u6307\u4ee4\u7684\u65f6\u95f4\uff0c\u800c\u5173\u6ce8\u6700\u91cd\u8981\u7684\u9879\u3002\u5bf9\u4e8e\u8db3\u591f\u5927\u7684\u8f93\u5165\uff0c\u6700\u9ad8\u9636\u9879\u8d77\u6700\u5927\u4f5c\u7528\u3002 \u7ec3\u4e60\u9898:","title":"\u5206\u6790\u7b97\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_9","text":"\u63d2\u5165\u6392\u5e8f\u91c7\u7528 \u4e86\u589e\u91cf\u7684\u65b9\u6cd5\uff1a\u5728\u6392\u5e8f\u597d\u524d 1--j-1\u4e2a\u5143\u7d20\u4ee5\u540e\uff0c\u518d\u5c06\u5f53\u4e2aj\u5143\u7d20\u63d2\u5165\u5230\u5b50\u6570\u7ec4\u7684\u9002\u5f53\u4f4d\u7f6e\uff0c\u4ea7\u751f\u6392\u5e8f\u597d\u7684\u5b50\u6570\u7ec4 i--j","title":"\u8bbe\u8ba1\u7b97\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_10","text":"\u5206\u6cbb\u6cd5\u7684\u601d\u60f3\uff1a\u5c06\u539f\u95ee\u9898\u5206\u89e3\u4e3a\u51e0\u4e2a\u89c4\u6a21\u8f83\u5c0f\u4f46\u7c7b\u4f3c\u4e8e\u539f\u95ee\u9898\u7684\u5b50\u95ee\u9898\uff0c\u9012\u5f52\u5730\u6c42\u89e3\u8fd9\u4e9b\u5b50\u95ee\u9898\u3001 \u5206\u6cbb\u7684\u6a21\u5f0f\uff1a \u5206\u89e3 \u89e3\u51b3\u8fd9\u4e9b\u5b50\u95ee\u9898 \u5408\u5e76 \u5f52\u5e76\u6392\u5e8f\u7b97\u6cd5 \u5b8c\u5168\u9075\u5faa\u5206\u6cbb\u6a21\u5f0f \u5408\u5e76\u51fd\u6570 merge\uff1a \u8f93\u5165\u6570\u7ec4\uff0cp\uff0cq\uff0cr\uff0c\u5206\u6210\u4e24\u6bb5\uff0c\u5c06\u4e24\u7ec4\u8fdb\u884c\u5408\u5e76 \u5c06merge\u4f5c\u4e3a\u5f52\u5e76\u6392\u5e8f\u7b97\u6cd5\u4e2d\u7684\u4e00\u4e2a\u5b50\u7a0b\u5e8f\u6765\u7528\uff1a def merge_sort(A,p,r): def merge(A,p,r,q): pass if p<r: q = int((r-p)/2) merge_sort(A,p,q) merge_sort(A,q,r) merge(A,p,q,r)","title":"\u5206\u6cbb\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_11","text":"\u5e76\u5f52\u6392\u5e8f\u7b97\u6cd5\u7684\u5206\u6790 \u5ffd\u7565\u4f4e\u9636\u9879\u548c\u5e38\u6570c\u4fbf\u7ed9\u51fa\u671f\u671b\u7684\u7ed3\u679cO(nlgn) \u601d\u8003\u9898 \u5192\u6ce1\u6392\u5e8f\u7684\u6700\u574f\u60c5\u51b5\u8fd0\u884c O(n^2^)\uff0c\u63d2\u5165\u6392\u5e8f\u7684\u6700\u574f\u8fd0\u884c\u4e5f\u662fO(n^2^) b. n-1 + ... +1 = n(n-1)/2 \u4e2a","title":"\u5206\u6790\u5206\u6cbb\u7b97\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_12","text":"\u7b97\u6cd5\u8fd0\u884c\u65f6\u95f4\u7684\u589e\u957f\u91cf\u7ea7\u7b80\u5355\u5730\u523b\u753b\u4e86\u7b97\u6cd5\u7684\u6548\u7387\u3002 \u5f53\u8f93\u5165\u89c4\u6a21n\u53d8\u5f97\u8db3\u591f\u5927\uff0c\u6700\u574f\u8fd0\u884c\u65f6\u95f4\u4e3a$\\Theta(n \\lg n)$ \u7684\u5e76\u5f52\u6392\u5e8f\u5c06\u6218\u80dc\u63d2\u5165\u6392\u5e8f$\\Theta\\left(n^{2}\\right)$","title":"\u7b2c\u4e09\u7ae0 \u51fd\u6570\u7684\u589e\u957f"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_13","text":"$\\Theta$\u8bb0\u53f7 $O$ \u8bb0\u53f7\uff1a\u6e10\u8fd1\u4e0a\u754c $\\Omega$\u8bb0\u53f7\uff1a\u6e10\u8fd1\u4e0b\u754c \u5404\u79cd\u6e10\u8fd1\u5173\u7cfb\u7b26\u5408\uff1a\u4f20\u9012\u6027\uff0c\u81ea\u53cd\u6027\uff0c\u5bf9\u79f0\u6027\uff0c\u8f6c\u7f6e\u5bf9\u79f0\u6027\uff0c\u4e09\u5206\u6027","title":"\u6e10\u8fd1\u8bb0\u53f7"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_14","text":"\u5355\u8c03\u6027 \u5411\u4e0b\u53d6\u6574\u4e0e\u5411\u4e0a\u53d6\u6574 \u6a21\u8fd0\u7b97 \u591a\u9879\u5f0f \u6307\u6570 \u5bf9\u6570 \u9636\u4e58 \u591a\u91cd\u51fd\u6570 \u591a\u91cd\u5bf9\u6570\u51fd\u6570 \u6590\u6ce2\u90a3\u5951\u6570","title":"\u6807\u51c6\u8bb0\u53f7\u4e0e\u5e38\u7528\u51fd\u6570"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_15","text":"\u5206\u6cbb\u7684\u7b56\u7565\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u9012\u5f52\u6765\u89e3\u51b3\u95ee\u9898\u3002 \u4e09\u4e2a\u6838\u5fc3\uff1a \u5206\u89e3\u4e3a\u5b50\u95ee\u9898 \u89e3\u51b3\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u7ec8\u6b62\u6761\u4ef6 \u5408\u5e76","title":"\u7b2c\u56db\u7ae0 \u5206\u6cbb\u7b56\u7565"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_16","text":"\u5206\u6cbb\u7684\u89c4\u6a21\u5bf9\u5206\u6cbb\u6cd5\u7684\u6027\u80fd\u5f71\u54cd\u5f88\u5927\u3002 \u4f8b\u5982\u5bf9\u534a\u5206\uff08\u5206\u6cbb\u6392\u5e8f\uff09\uff1a \u8fd8\u53ef\u4ee51/3,2/3\u5206 \u51cf\u5c11\u4e00\u4e2a\u5143\u7d20\u5206\uff1a **\u4e0d\u540c\u7684\u9012\u5f52\u5f0f\uff0c\u5176\u590d\u6742\u5ea6\u4e5f\u5927\u4e0d\u76f8\u540c\uff01 \u5f53\u5b50\u95ee\u9898\u8db3\u591f\u5927\u9700\u8981\u9012\u5f52\u6c42\u89e3\u65f6\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a \u9012\u5f52\u60c5\u51b5 \u5f53\u5b50\u95ee\u9898\u8db3\u591f\u5c0f\uff0c\u4e0d\u518d\u9700\u8981\u9012\u5f52\u65f6\uff0c\u8bf4\u660e\u9012\u5f52\u5df2\u7ecf\u89e6\u5e95\uff0c\u8fdb\u5165\u4e86 \u57fa\u672c\u60c5\u51b5 \u9012\u5f52\u5f0f\uff1a \u6c42\u89e3\u53ef\u5f97\uff1a \u6c42\u89e3\u9012\u5f52\u5f0f\u7684\u65b9\u6cd5\uff1a\u4ee3\u5165\u6cd5\uff0c\u9012\u5f52\u6811\u6cd5\uff0c\u4e3b\u65b9\u6cd5\u3002","title":"\u9012\u5f52\u5f0f"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_17","text":"\u66b4\u529b\u6c42\u89e3\u6cd5 \u95ee\u9898\u53d8\u6362 \u4f7f\u7528\u5206\u6cbb\u7b56\u7565\u7684\u6c42\u89e3\u6cd5 \u4f7f\u7528\u5206\u6cbb\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u4e3a \u7ec3\u4e60 \u8fd9\u9053\u9898\u9700\u8981\u91c7\u7528\u52a8\u6001\u89c4\u5212\u7684\u529e\u6cd5\u89e3\u51b3\u3002 \u5c1a\u672a\u89e3\u51b3","title":"\u6700\u5927\u6570\u7ec4\u95ee\u9898"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#strassen","text":"\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$\\Theta\\left(n^{3}\\right)$\uff0c\u4f46\u662fStrassen\u7684\u8457\u540dn*n\u77e9\u9635\u76f8\u4e58\u7684\u9012\u5f52\u7b97\u6cd5\uff0c\u590d\u6742\u5ea6\u4e3a$\\Theta\\left(n^{\\lg 7}\\right)$\uff0c\u5176\u4e2dlg7\u7ea6\u4e3a2.8\u548c2.81\u3002 \u9012\u5f52\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$\\Theta\\left(n^{3}\\right)$\u3002 \u5176\u4e2d$\\Theta(1)$ \u662f\u5206\u89e3A,B,C\u77e9\u9635\u3002$\\Theta\\left(n^{2}\\right)$ \u662f\u5143\u7d20\u76f8\u52a0\u3002 \u6ce8\u610f8T(n/2)\u4e2d\u76848\u51b3\u5b9a\u4e86\u9012\u5f52\u6811\u662f\u5426\u8302\u76db\uff0c\u4e0d\u80fd\u7701\u7565\uff0c\u5426\u5219\u5c31\u662f\u7ebf\u6027\u7ed3\u6784\u4e86\u3002 Strassen\u7b97\u6cd5 \u5176\u6838\u5fc3\u601d\u60f3\u5c31\u662f\u5c068T(n/2)\u6539\u4e3a7T(n/2) \u4f2a\u4ee3\u7801\uff08\u81ea\u5199\uff09\uff1a def Strassen(a,b): n = a\u7684\u7ef4\u5ea6 c = n*n matrix if n == 1: c11 = a11*b11 else: s1 = b12-b22 s2 = a11+a12 s3 = a21+a22 s4 = b21-b11 s5 = a11+a22 s6 = b11+b22 s7 = a12-a22 s8 = b21+b22 s9 = a11-a21 s10 = b11+b12 p1 = Strassen(a11,s1) p2 p3 p4 p5 p6 p7 c11 = c12 c21 c22 return c \u7ec3\u4e60\uff1a","title":"\u77e9\u9635\u4e58\u6cd5\u7684Strassen\u7b97\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_18","text":"\u4ee3\u5165\u6cd5 \uff0c\u5b83\u4e3b\u8981\u5206\u4e3a\u4e24\u6b65\uff1a \u731c\u6d4b\u89e3\u7684\u5f62\u5f0f \u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u6c42\u51fa\u89e3\u7684\u5e38\u6570\uff0c\u5e76\u8bc1\u660e\u89e3\u662f\u6b63\u786e\u7684 \u731c\u6d4b\uff1a \u4e0a\u754c\u4e3a\uff1a \u8981\u6c42\u8bc1\u660e\uff1a \u9012\u5f52\u6811 \u4f8b\u5982\uff1a \u4e3b\u65b9\u6cd5 \uff08\u7565\uff09","title":"\u6c42\u89e3\u9012\u5f52\u5f0f"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_19","text":"","title":"\u7b2c\u4e94\u7ae0 \u6982\u7387\u5206\u6790\u548c\u968f\u673a\u7b97\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_20","text":"\u4f2a\u4ee3\u7801\uff1a \u6700\u574f\u60c5\u5f62\u5206\u6790 \u968f\u673a\u7b97\u6cd5 \u4e3a\u4e86\u5229\u7528\u6982\u7387\u5206\u6790\uff0c\u9700\u8981\u4e86\u89e3\u5173\u4e8e\u8f93\u5165\u5206\u5e03\u7684\u4e00\u4e9b\u4fe1\u606f\u3002","title":"\u96c7\u4f63\u95ee\u9898"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_21","text":"","title":"\u6307\u793a\u5668\u968f\u673a\u53d8\u91cf"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_22","text":"\u5982\u4f55\u7406\u89e3\u968f\u673a\u6392\u5e8f\uff0c\u4e00\u4e2a\u516c\u5e73\u7684\u7b97\u6cd5\u80fd\u591f\u5747\u5300\u5730\u7ed9\u51fan\uff01\u4e2a\u7ed3\u679c\u4e2d\u7684\u4e00\u4e2a\u3002\u4f46\u662f\u5982\u679c\u8fd9\u6837\u7684\u8bdd\uff0c\u7b97\u6cd5\u9700\u8981\u7ed9\u51fan\uff01\u4e2a\u9009\u62e9\uff0c\u5b83\u7684\u590d\u6742\u5ea6\u592a\u9ad8O(n!)\uff0c\u968f\u673a\u7b97\u6cd5\u5e94\u8fd0\u800c\u751f\u3002 \u968f\u673a\u6392\u5217\u6570\u7ec4\uff1a P\u8868\u793a\u7684\u662f\u4f18\u5148\u7ea7\uff1a\u5047\u8bbe\u4f18\u5148\u7ea7\u90fd\u4e0d\u540c\uff0c\u5219\u7b97\u6cd5\u4ea7\u751f\u8f93\u5165\u7684\u5747\u5300\u968f\u673a\u6392\u5217\u3002 \u5c0ftip\uff1a","title":"\u968f\u673a\u7b97\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#knuth","text":"\u6392\u5e8f\u95ee\u9898\uff1a \u6392\u5e8f\u7b97\u6cd5\uff1a \u63d2\u5165\u6392\u5e8f\uff0c$\\Theta\\left(n^{2}\\right)$\uff0c\u4ed6\u662f\u539f\u5740\u7684\uff08\u4ec5\u6709\u5e38\u6570\u9879\u4e2a\u5143\u7d20\u9700\u8981\u50a8\u5b58\u5728\u6570\u7ec4\u4e4b\u5916\uff09\uff0c\u5bf9\u4e8e\u5c0f\u89c4\u6a21\u6392\u5e8f\uff0c\u63d2\u5165\u6392\u5e8f\u975e\u5e38\u9002\u7528\u3002 \u5f52\u5e76\u7b97\u6cd5\uff0c$\\Theta(n \\lg n)$\uff0c\u5b83\u7684merge\u51fd\u6570\u5e76\u4e0d\u662f\u539f\u5740\u7684\uff0c\u4f46\u4ed6\u6709\u66f4\u597d\u7684\u6e10\u8fdb\u65f6\u95f4\u3002 \u5728\u4e0b\u6587\u4e2d \u7b2c\u516d\u573a\u4ecb\u7ecd\u5806\u6392\u5e8f\uff0c\u7b2c\u4e03\u7ae0\u4ecb\u7ecd\u5feb\u901f\u6392\u5e8f\u3002","title":"Knuth\u6d17\u724c\u7b97\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_23","text":"\u5b83\u878d\u5408\u4e86\u5feb\u901f\u6392\u5e8f\u548c\u5f52\u5e76\u6392\u5e8f\u7684\u4f18\u70b9 \u5229\u7528\u5806\u7684\u6570\u636e\u7ed3\u6784\uff0c\u7ed3\u5408\u4e86\u63d2\u5165\u6392\u5e8f\u548c\u5f52\u5e76\u6392\u5e8f\u7684\u4f18\u70b9\uff1a\u590d\u6742\u5ea6$\\Theta(n \\lg n)$\uff0c\u5177\u6709\u539f\u5740\u6027\u3002","title":"\u7b2c\u516d\u7ae0 \u5806\u6392\u5e8f"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_24","text":"\u5806\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u4e00\u4e2a\u8fd1\u4f3c\u7684\u5b8c\u5168\u4e8c\u53c9\u6811 \u8ba1\u7b97\u4f4d\u7f6e\uff1a \u6700\u5927\u5806\uff0c\u6700\u5c0f\u5806\u3002\u6700\u5927\u5806\u5c31\u662f\u6700\u5927\u7684\u8282\u70b9\u5728\u6700\u4e0a\u9762\u7684\u6839\u8282\u70b9\u3002 \u6700\u5927\u5806\u7684\u4e00\u4e9b\u6027\u8d28\uff1a \u6700\u5927\u5806\u7684\u6700\u5927\u503c\u5728\u6839\u8282\u70b9\u4e0a\uff0c\u5728python\u4e2d\uff0c\u4e00\u822c\u4f7f\u7528\u6700\u5c0f\u5806\uff0c\u6839\u8282\u70b9\u662f\u6700\u5c0f\u503c \u6784\u9020\u6700\u5927\u5806\uff0c\u7ebf\u6027\u590d\u6742\u5ea6 \u7ef4\u62a4\u6700\u5927\u5806\uff0c\u590d\u6742\u5ea6\u4e3a $O(lgn)$\uff0c\u53ea\u80fd \u5806\u6392\u5e8f $O(nlgn)$","title":"\u5806"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_25","text":"\u590d\u6742\u5ea6\uff1aO(lgn) \u7ef4\u62a4\u6700\u5927\u5806\uff1a\u5c31\u662f\u628a\u7b2ci\u4e2a\u5143\u7d20\u548c\u4e24\u4e2a\u5b69\u5b50\u505a\u5bf9\u6bd4\uff0c\u4e0e\u5b69\u5b50\u4e2d\u7684\u8f83\u5927\u503c\u8fdb\u884c\u4ea4\u6362\u3002","title":"\u7ef4\u6301\u6700\u5927\u5806"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_26","text":"\u81ea\u5e95\u5411\u4e0a\u5efa\u9020\u6700\u5927\u5806\u3002 \u6570\u5b66\u5f52\u7eb3\u53ef\u77e5: (n-1)//2+1 \u5230 n \u5747\u4e3a \u53f6\u5b50\uff0c\u90a3\u4e48\uff08n-1\uff09//2 \u4e3a\u975e\u53f6\u5b50\uff0c\u6240\u4ee5\u5bf9\u8fd9\u4e9b\u8fdb\u884c\u6700\u5927\u5806\u7ef4\u62a4\u5373\u53ef","title":"\u5efa\u5806"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_27","text":"\u9700\u8981\u4e00\u5b9a\u7684\u6570\u5b66\u8bc1\u660e\uff1a\u5806\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3anlogn","title":"\u5806\u6392\u5e8f"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_28","text":"\u7528\u6700\u5927\u5806\u5b9e\u73b0\u6700\u5927\u4f18\u5148\u961f\u5217 \u4f18\u5148\u961f\u5217\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u6709\u4e00\u4e2a\u76f8\u5173\u7684\u503c\uff0c\u79f0\u4e3a\u5173\u952e\u5b57KEY\uff0c\u6700\u5927\u4f18\u5148\u961f\u5217\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1a insert(s,x):\u628a\u5143\u7d20\u63d2\u5165\u5230\u96c6\u5408x\u4e2d maximum(s):\u8fd4\u56des\u4e2d\u6700\u5927\u5143\u7d20 extract-max(s):\u53bb\u6389\u5e76\u8fd4\u56des\u4e2d\u5177\u6709\u6700\u5927\u5173\u952e\u5b57\u7684\u5143\u7d20 increase-key(s,x,k):\u5c06\u5143\u7d20x\u7684\u5173\u952e\u5b57\u503c\u589e\u52a0\u5230k\uff0c\u5047\u8bbek\u503c\u4e0d\u5c0f\u4e8e\u539f\u6765\u7684\u5173\u952e\u5b57\u503c ** \u63d2\u5165\u5c31\u76f4\u63a5\u5728\u6570\u7ec4\u540e\u65b9\u52a0\u5165\uff0c\u7136\u540e\u6ce8\u610f\u7ef4\u62a4\u5806\u5373\u53ef \u5148\u6539\u53d8A[i]\u7684\u503c\uff0c\u7136\u540e\u5728\u2018\u2019\u539f\u6709\u7684\u6700\u5927\u5806\u2018\u2019\u4e0a\u7ef4\u62a4\u6700\u5927\u5806\u3002","title":"\u4f18\u5148\u961f\u5217"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_29","text":"\u5feb\u901f\u6392\u5e8f\u662f\u5b9e\u9645\u6392\u5e8f\u5e94\u7528\u4e2d\u7684\u6700\u597d\u9009\u62e9\uff0c\u5b83\u7684\u5e73\u5747\u6027\u80fd\u6700\u597d\uff0c\u671f\u671b\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u662f$\\Theta(n \\lg n)$\uff0c\u4f46\u662f\u9690\u542b\u7684\u5e38\u6570\u56e0\u5b50\u975e\u5e38\u5c0f\uff0c\u4ed6\u4e5f\u80fd\u8fdb\u884c\u539f\u5740\u6392\u5e8f\uff0c\u751a\u81f3\u865a\u62df\u73af\u5883\u4e2d\u4e5f\u80fd\u5f88\u597d\u5730\u5de5\u4f5c\u3002 \u5206\u6cbb\u7684\u601d\u60f3 \u7b97\u6cd5\u53ef\u4ee5\u57fa\u4e8e\u539f\u5740\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u5f52\u5e76\uff0c\u53ea\u9700\u8981\u505a\u597d\u5206\u5272\u5373\u53ef\u3002 \u5206\u5272\u51fd\u6570","title":"\u7b2c\u4e03\u7ae0 \u5feb\u901f\u6392\u5e8f"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_30","text":"\u6700\u574f\u60c5\u51b5\u5212\u5206 \u5982\u679c\u6bcf\u6b21\u5212\u5206\u90fd\u5305\u542b\u4e86n-1\u548c1\u4e2a\u5143\u7d20\uff0c\u90a3\u662f\u6700\u5dee\u7684\u60c5\u51b5\uff0c\u5212\u5206\u64cd\u4f5c\u590d\u6742\u5ea6\u4e3an \u590d\u6742\u5ea6\u7ed3\u679c\u4e3a\uff1a$\\Theta\\left(n^{2}\\right)$ \u6700\u597d\u60c5\u51b5\u5212\u5206 \u590d\u6742\u5ea6\u7ed3\u679c\u4e3a$\\Theta(n \\lg n)$ \u5e73\u8861\u7684\u5212\u5206 \u5feb\u901f\u6392\u5e8f\u7684\u5e73\u5747\u8fd0\u884c\u65f6\u95f4\u66f4\u63a5\u8fd1\u4e8e\u5176\u6700\u597d\u60c5\u51b5\uff0c\u5e76\u975e\u6700\u574f\u60c5\u51b5 \uff08\u4e2a\u4eba\u7406\u89e3\uff1a\u6bcf\u6b21\u5212\u5206\uff0c\u90fd\u5206\u5230\u5230\u6700\u5dee\u60c5\u51b5\u7684\u6982\u7387\u662f\u975e\u5e38\u5c0f\u7684\uff09","title":"\u5feb\u901f\u6392\u5e8f\u7684\u6027\u80fd\u5206\u6790"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_31","text":"\u4e3b\u8981\u4fee\u6539\u662f\u5c06\u4e3b\u5143\u7d20\u968f\u673a\u9009\u53d6 \u63d2\u5165\u6392\u5e8f \u63d2\u5165\u6251\u514b\u724c\u5f0f \u5f52\u5e76\u6392\u5e8f \u5206\u6cbb \u5806\u6392\u5e8f \u6700\u5927\u5806\u7684\u7ef4\u62a4\u59cb\u7ec8\u80fd\u627e\u5230\u6700\u5927\u7684\u5143\u7d20 \u5feb\u901f\u6392\u5e8f \u5206\u5272","title":"\u5feb\u901f\u6392\u5e8f\u7684\u968f\u673a\u5316\u7248\u672c"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_32","text":"\u4e4b\u524d\u63d0\u5230\u7684\u7b97\u6cd5\u90fd\u6709\u4e00\u4e2a\u6027\u8d28\uff1a\u5728\u6392\u5e8f\u7684\u6700\u7ec8\u7ed3\u679c\u4e2d\uff0c\u4e2a\u5143\u7d20\u7684\u6b21\u5e8f\u4f9d\u8d56\u4e8e\u5b83\u4eec\u4e4b\u95f4\u7684\u6bd4\u8f83\u3002 \u6bd4\u8f83\u6392\u5e8f","title":"\u7b2c\u516b\u7ae0 \u7ebf\u6027\u65f6\u95f4\u6392\u5e8f"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_33","text":"\u51b3\u7b56\u6811\u6a21\u578b---\u5b8c\u5168\u4e8c\u53c9\u6811 \u53f6\u8282\u70b9\u5171\u6709n\uff01\u79cd\u53ef\u80fd\u7684\u6392\u5217\u3002","title":"\u6392\u5e8f\u7b97\u6cd5\u7684\u4e0b\u754c"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_34","text":"\u6392\u5e8f\u7b97\u6cd5\u6700\u574f\u60c5\u51b5\u5c31\u662f\u51b3\u7b56\u6811\u7684\u9ad8\u5ea6 \u5b9a\u7406\uff1a \u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u4efb\u4f55\u6bd4\u8f83\u6392\u5e8f\u7b97\u6cd5\u90fd\u9700\u8981$\\Omega(n \\lg n)$\u6b21\u6bd4\u8f83 \u5806\u6392\u5e8f\u548c\u5f52\u5e76\u6392\u5e8f\u90fd\u662f\u6e10\u8fdb\u6700\u4f18\u7684\u6392\u5e8f\u7b97\u6cd5","title":"\u6700\u574f\u60c5\u51b5\u7684\u4e0b\u754c"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_35","text":"\u56fe\u89e3\uff1a \u8fd0\u884c\u65f6\u95f4\u4e3a\uff1a$\\Theta(n)$ \u8ba1\u6570\u6392\u5e8f\u7684\u4e00\u4e2a\u91cd\u8981\u6027\u8d28\u5c31\u662f \u7a33\u5b9a \uff0c\u5bf9\u4e8e\u76f8\u540c\u503c\u7684\u5143\u7d20\u5728\u8f93\u51fa\u6570\u7ec4\u4e2d\u7684\u76f8\u5bf9\u6b21\u5e8f\u4e0e\u4ed6\u4eec\u5728\u8f93\u5165\u6570\u7ec4\u4e2d\u7684\u6b21\u5e8f\u76f8\u540c\uff0c\u8fd9\u79cd\u7a33\u5b9a\u6027\u5728\u5f53\u6709\u6570\u636e\u9644\u5e26\u536b\u661f\u6570\u636e\u65f6\u6bd4\u8f83\u91cd\u8981\u3002","title":"\u8ba1\u6570\u6392\u5e8f"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_36","text":"\u4f2a\u4ee3\u7801\uff1a \u5f15\u7406\uff1a \u91c7\u7528\u7a33\u5b9a\u6392\u5e8f\u65b9\u6cd5\uff0c\u6bd4\u5982\u8ba1\u6570\u6392\u5e8f\uff1a$\\Theta(d(n+k))$ \uff0c\u5373\u8fd0\u884cd\u6b21\u8ba1\u6570\u6392\u5e8f\u3002 \u57fa\u6570\u6392\u5e8f\u662f\u5426\u6bd4\u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\u7b97\u6cd5\u66f4\u597d\u5462\uff1f \u57fa\u6570\u6392\u5e8f\u867d\u7136\u6267\u884c\u7684\u5faa\u73af\u8f6e\u6570\u4f1a\u6bd4\u5feb\u901f\u6392\u5e8f\u5c11\uff0c\u4f46\u662f\u6bcf\u4e00\u8f6e\u5b83\u6240\u8017\u8d39\u7684\u65f6\u95f4\u8981\u957f\u7684\u591a\uff0c\u54ea\u4e00\u79cd\u6392\u5e8f\u5408\u9002\u66f4\u4f9d\u8d56\u4e8e\u5177\u4f53\u5b9e\u73b0\u548c\u5e95\u5c42\u7684\u7279\u6027\uff0c\u6bd4\u5982\u5feb\u901f\u6392\u5e8f\u901a\u5e38\u6bd4\u57fa\u6570\u6392\u5e8f\u66f4\u6709\u6548\u5730\u4f7f\u7528\u786c\u4ef6\u7684\u7f13\u5b58\u3002","title":"\u57fa\u6570\u6392\u5e8f"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_37","text":"\u6876\u6392\u5e8f\u5047\u8bbe\u8f93\u5165\u6570\u636e\u670d\u4ece\u5747\u5300\u5206\u5e03\uff0c\u5e73\u5747\u60c5\u51b5\u4e0b\u5b83\u7684\u65f6\u95f4\u4ee3\u4ef7\u4e3a$O(n)$\u3002","title":"\u6876\u6392\u5e8f"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_38","text":"order statistic \u7b2ci\u4e2a\u987a\u5e8f\u7edf\u8ba1\u91cf\u662f\u8be5\u96c6\u5408\u4e2d\u7b2ci\u4e2a\u5143\u7d20 \u6700\u5927\u503c i = n \u6700\u5c0f\u503c n = 1 n\u4e3a\u5076\u6570\u65f6\u5b58\u5728\u4e24\u4e2a\u4e2d\u4f4d\u6570\uff0c\u4e0b\u4e2d\u4f4d\u6570/\u4e0a\u4e2d\u4f4d\u6570","title":"\u7b2c\u4e5d\u7ae0 \u4e2d\u4f4d\u6570\u548c\u987a\u5e8f\u7edf\u8ba1\u91cf"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_39","text":"\u7ecf\u8fc7n-1\u6b21\u6bd4\u8f83\u627e\u51fa\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c\u3002","title":"\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_40","text":"\u9009\u62e9\u6570\u7ec4\u4e2d\u7b2ci\u5c0f\u7684\u5143\u7d20 \u6b64\u5904\u7684partition\u662f\u5feb\u901f\u6392\u5e8f\u7684\u5206\u5272\uff08\u5206\u6210\u4e09\u6bb5\uff0c\u7b2c\u4e00\u6bb5\u5c0f\u4e8ekey\uff0c\u7b2c\u4e8c\u6bb5\u4e3akey\uff0c\u7b2c\u4e09\u6bb5\u5927\u4e8ekey\uff09","title":"\u671f\u671b\u4e3a\u7ebf\u6027\u65f6\u95f4\u7684\u9009\u62e9\u7b97\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_41","text":"\u6808\uff0c\u961f\u5217\uff0c\u94fe\u8868\uff0c\u6709\u6839\u6811\u3002","title":"\u7b2c\u5341\u7ae0 \u57fa\u672c\u6570\u636e\u7ed3\u6784"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_42","text":"\u6808\u548c\u961f\u5217\u90fd\u662f\u52a8\u6001\u96c6\u5408\uff0c\u5728\u5176\u4e0a\u8fdb\u884cdelete\u64cd\u4f5c\u662f\u9884\u5b9a\u7684\uff1a \u6808\uff1a\u540e\u8fdb\u5148\u51fa \u961f\u5217\uff1a\u5148\u8fdb\u5148\u51fa \u6808 insert\u64cd\u4f5c\u88ab\u79f0\u4e3a\u538b\u5165push delete\u64cd\u4f5c\u88ab\u79f0\u4e3a\u5f39\u51fapop \u961f\u5217 insert: enqueue delete: dequeue","title":"\u6808\u548c\u961f\u5217"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_43","text":"\u53cc\u5411\u94fe\u8868 prev - element - next \u54e8\u5175 L.nil \u7684next \u6307\u5411\u7b2c\u4e00\u4e2a\u5143\u7d20\uff08\u8868\u5934\uff09 L.nil\u7684prev \u6307\u5411\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff08\u8868\u5c3e\uff09 \u6240\u4ee5\u6b64\u5904\u4e0d\u9700\u8981L.head \u53ea\u9700\u8981L.nil.next","title":"\u94fe\u8868"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_44","text":"\u6811\u53ef\u4ee5\u5206\u4e3a\u591a\u79cd\u6811\uff0c\u4e8c\u53c9\u6811\uff0c\u5206\u652f\u65e0\u9650\u5236\u7684\u6709\u6839\u6811\u3002\u3002\u3002\u7b49\u7b49","title":"\u6709\u6839\u6811"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_45","text":"","title":"\u4e8c\u53c9\u6811"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_46","text":"","title":"\u5206\u652f\u65e0\u9650\u5236\u7684\u6709\u6839\u6811"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_47","text":"\u5f85\u5b8c\u6210\u3002\u3002\u3002","title":"\u7b2c\u5341\u4e00\u7ae0 \u6563\u5217\u8868"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_48","text":"","title":"\u7b2c\u5341\u4e8c\u7ae0 \u4e8c\u53c9\u641c\u7d22\u6811"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_49","text":"\u91c7\u7528 \u9012\u5f52 \u7684\u65b9\u5f0f\u8fdb\u884c\u904d\u5386\uff0c\u4e5f\u53ef\u4ee5\u7528 \u6808 \u3002 \u4e0a\u9762\u7684\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u4e3a 2\uff0c5\uff0c5\uff0c6\uff0c7\uff0c8 \u5982\u679c\u60f3\u4e00\u5c42\u5c42\u7684\u904d\u5386\uff0c\u91c7\u7528\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u501f\u7528\u961f\u5217","title":"\u4e2d\u5e8f\u904d\u5386\u3001\u524d\u5e8f\u904d\u5386\uff0c\u540e\u5e8f\u904d\u5386"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_50","text":"dynamic programming \u52a8\u6001\u89c4\u5212 \u7279\u5f81\uff1a \u627e\u7684\u662f\u6700\u4f18\u89e3\u3002 \u6700\u4f18\u5b50\u7ed3\u6784\uff1a\u6700\u4f18\u89e3=f(\u6700\u4f18\u5b50\u7ed3\u6784) \u91cd\u53e0\u5b50\u95ee\u9898\uff1a\u5f53\u5904\u7406\u5b50\u95ee\u9898\u7684\u65f6\u5019\uff0c\u4f1a\u9047\u5230\u91cd\u590d\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u5f52\u5e76\u6392\u5e8f\u5e76\u4e0d\u5c5e\u4e8e\u52a8\u6001\u89c4\u5212\u3002 \u4e24\u79cd\u5b9e\u73b0\u65b9\u6cd5\uff1a \u81ea\u4e0a\u800c\u4e0b\uff1a\u91c7\u7528\u5907\u5fd8\u5f55\u7684\u65b9\u5f0f \u81ea\u4e0b\u800c\u4e0a\uff1a\u6784\u5efa\u8868\u683c\uff0c\u4e5f\u79f0\u4e3a\u7684dp\u6570\u7ec4","title":"\u7b2c\u5341\u4e94\u7ae0 \u52a8\u6001\u89c4\u5212"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_51","text":"\u5199\u51fa\u9012\u5f52\u51fd\u6570\\\u8d1d\u5c14\u66fc\u65b9\u7a0b\\\u6700\u4f18\u89e3\u7684\u7ed3\u6784\u7279\u5f81 \u8ba1\u7b97\u6700\u4f18\u89e3\u7684\u503c\uff0c\u901a\u5e38\u91c7\u7528\u81ea\u5e95\u5411\u4e0a\u7684\u65b9\u6cd5","title":"\u8bbe\u8ba1\u65b9\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_52","text":"","title":"\u81ea\u4e0b\u800c\u4e0a\u7684\u4e00\u7ef4\u6570\u7ec4"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_53","text":"\u627e\u6700\u4f18\u89e3 \u5b58\u5728\u6700\u4f18\u5b50\u7ed3\u6784 \u6b64\u65f6\u5df2\u7ecf\u53ef\u4ee5\u91c7\u7528\u9012\u5f52\u7684\u65b9\u5f0f\u8fdb\u884c\u6c42\u89e3\u4e86\uff0c\u9012\u5f52\u590d\u6742\u5ea6\u592a\u9ad8\u4e86\uff0c\u6307\u6570\u7ea7 3. \u53d1\u73b0\u91cd\u53e0\u5b50\u7ed3\u6784 3. \u52a8\u6001\u89c4\u5212\uff01 3. \u9009\u62e9\uff1a\u81ea\u4e0a\u800c\u4e0b\uff0c\u6216\u8005**\u81ea\u4e0b\u800c\u4e0a** \u9996\u5148\u5199\u51fa\u9012\u5f52\u516c\u5f0f\uff1a $$ r_n = max[p_1+r_{n-1}, p_2+r_{n-2},...,p_n] $$ \u9012\u5f52\u516c\u5f0f\uff0c\u5de6\u8fb9\u7531\u591a\u4e2a\u503c\u8ba1\u7b97\u800c\u6765\uff0c $$ r_1 = p_1 \\ r_2 = r_1 + p_1 \u6216 p_2 \\ r_3 = r_1 + p_2 \u6216 r_2+ p_1 \u6216 p_3 $$ \u53ef\u4ee5\u770b\u5230\uff0cr\u5c31\u662f\u901a\u8fc7\u524d\u9762\u7684\u6570\u7b97\u51fa\u6765\u7684\uff0c\u5c31\u6784\u5efa\u6570\u7ec4\uff0c\u521d\u59cb\u5316$r_1$ \uff0c\u5f00\u59cb\u5411\u4e0a\u8ba1\u7b97\u3002","title":"\u94a2\u7ba1\u5207\u5272"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_54","text":"\u5bf9\u4e8e\u4e00\u7ef4\u95ee\u9898 $$ f(0:n) = a+f(1:n) $$ \u4e8c\u7ef4\u95ee\u9898\uff1a $$ f(0:n)=f(0:k)+f(k:n) $$","title":"\u81ea\u4e0b\u800c\u4e0a\u7684\u4e8c\u7ef4\u6570\u7ec4"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_55","text":"\u627e\u6700\u4f18\u5316\u65b9\u6848\uff0c\u660e\u786e\u8fd9\u662f\u4e00\u4e2a\u6700\u4f18\u5316\u95ee\u9898\u3002 \u5199\u9012\u5f52\u65b9\u7a0b\uff1a m\u8868\u662fdp\u8868 s\u8868\u7528\u4e8e\u8bb0\u5f55\u6700\u4f73\u5206\u5272\u4f4d\u7f6ek","title":"\u77e9\u9635\u94fe\u4e58"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_56","text":"\u523b\u753b\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u7684\u7279\u5f81 X\u6709$2^m$\u4e2a\u5b50\u5e8f\u5217\uff0c\u5168\u90e8\u904d\u5386\u4e00\u8fb9\uff0c\u53ef\u4ee5\u627e\u5230\u6700\u957f\u7684","title":"\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_57","text":"\u6d89\u53ca\u6982\u7387\uff0c\u6709\u70b9\u96be\uff0c\u5f85\u5b8c\u5584\u3002","title":"\u6700\u4f18\u4e8c\u53c9\u641c\u7d22\u6811"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_58","text":"","title":"\u81ea\u4e0a\u800c\u4e0b\u7684\u5907\u5fd8\u5f55\u673a\u5236"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_59","text":"\u56fe\u7684\u8868\u793a\uff1a \u90bb\u63a5\u94fe\u8868 \u5728\u8868\u793a\u7a00\u758f\u56fe\u7684\u65f6\u5019\u975e\u5e38\u9002\u7528 \u90bb\u63a5\u77e9\u9635 \u8868\u793a\u7a20\u5bc6\u56fe\u9002\u7528\uff0c\u53ef\u4ee5\u5feb\u901f\u5224\u65ad\u4e24\u4e2a\u8282\u70b9\u662f\u5426\u5b58\u5728\u8fb9 \u65e0\u8bba\u662f\u6709\u5411\u56fe\u8fd8\u662f\u65e0\u5411\u56fe\uff0c\u90bb\u63a5\u94fe\u8868\u7684\u50a8\u5b58\u7a7a\u95f4\u9700\u6c42\u4e3a\uff1a$\\Theta(V+E)$ \u90bb\u63a5\u94fe\u8868\u7a0d\u52a0\u4fee\u6539\u5373\u53ef\u8868\u793a \u6743\u91cd\u56fe \uff0c\u4e0d\u8db3\u5728\u4e8e\u4e0d\u80fd\u5feb\u901f\u5224\u65ad\u662f\u5426\u5b58\u5728\u67d0\u4e2a\u8fb9\uff0c\u8981\u53bb\u641c\u7d22\u3002 \u90bb\u63a5\u77e9\u9635\u53ef\u4ee5\u5feb\u901f\u5224\u65ad\u662f\u5426\u5b58\u5728\u67d0\u4e2a\u8fb9\uff0c\u4f46\u662f\u50a8\u5b58\u7a7a\u95f4\u8f83\u5927\u3002\u9700\u6c42\u4e3a\uff1a$\\Theta\\left(V^{2}\\right)$ \u65e0\u5411\u56fe\u662f\u5bf9\u79f0\u7684\uff0c\u53ef\u4ee5\u8282\u7ea6\u4e00\u534a\u7684\u7a7a\u95f4\u3002","title":"\u7b2c\u4e8c\u5341\u4e8c\u7ae0 \u56fe\u7b97\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_60","text":"\u5bf9\u4e8e\u90bb\u63a5\u94fe\u8868\u6765\u8bf4\uff1a \u904d\u5386\u6bcf\u4e2a\u7ed3\u70b9\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u8fb9\u8fdb\u884c\u7ffb\u8f6c \u90bb\u63a5\u77e9\u9635 \u4e0a\u4e0b\u4e09\u89d2\u5bf9\u6362\u3002 \u6709\u5411\u65e0\u73af\u56fe","title":"\u4f8b\u9898"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_61","text":"\u8be5\u7b97\u6cd5\u80fd\u591f\u8ba1\u7b97\u8282\u70b9s\u5230\u6bcf\u4e2a\u53ef\u5230\u8fbe\u7684\u7ed3\u70b9\u7684\u8ddd\u79bb\uff08\u6700\u5c11\u7684\u8fb9\u6570\uff09\uff0c\u540c\u65f6\u751f\u6210\u4e00\u9897\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u6811\u3002 s -- v\u7684\u6700\u77ed\u8def\u5f84\u3002 \u5148\u627e\u51fa\u7070\u8272 \u7070\u8272\u4e2d\u9009\u62e9\u4e00\u4e2a\u53d8\u9ed1\uff0c\u53d8\u9ed1\u5143\u7d20\u5468\u56f4\u53d8\u7070 \u518d\u627e\u51fa\u7070\u8272 \u5982\u6b64\u53cd\u590d\u3002 https://www.redblobgames.com/pathfinding/a-star/introduction.html \u53ef\u4ee5\u53c2\u8003\u5b66\u4e60 \u6700\u77ed\u8def\u5f84 \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6700\u77ed\u8def\u5f84\u3002 \u6700\u77ed\u8def\u5f84\u8ddd\u79bb\u7684\u4e00\u4e9b\u6027\u8d28","title":"\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_62","text":"","title":"\u95ee\u9898\uff0c\u81ea\u6d4b"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_63","text":"","title":"\u63cf\u8ff0\u5f52\u5e76\u6392\u5e8f"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_64","text":"\u753b\u56fe\u3001\u6570\u5b66\u5f52\u7eb3\u6cd5","title":"\u8bc1\u660e\u5f52\u5e76\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_65","text":"","title":"\u4e8c\u5206\u67e5\u627e\u63cf\u8ff0\uff0c\u590d\u6742\u5ea6"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#xnlogn","text":"\u5f52\u5e76\u6cd5","title":"\u63cf\u8ff0\u4e00\u4e2a\u7b97\u6cd5\uff0c\u6570\u7ec4\u4e2d\u627e\u548c\u4e3ax\u7684\u5143\u7d20\u5bf9\uff0cnlogn"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_66","text":"\u5f52\u5e76\u6cd5","title":"\u9006\u5e8f\u5bf9"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#random01randomabab","text":"\u9996\u5148\uff0crandom(0,1)\u662f\u968f\u673a\u7684\u4ea7\u751f0,1\u4e24\u4e2a\u6574\u6570\uff0crandom(a,b)\u662f\u968f\u673a\u4ea7\u751f[a,b]\u4e4b\u95f4\u7684\u6574\u6570\u3002 \u5b9e\u9645\u4e0a\u8981\u968f\u673a\u751f\u6210\u4e00\u4e2a [0,b-a]\u7684\u6570\uff0c\u6700\u540e\u52a0\u4e0aa\u3002 \u4e3a\u4e86\u751f\u6210\u8fd9\u4e2a\u6570\uff0c\u90a3\u5c31\u8981\u751f\u62102\u8fdb\u5236\u6570\uff0cbits\uff0c\u901a\u8fc7random(0,1\uff09\u751f\u6210\u7684\u4e8c\u8fdb\u5236\u6570\u90fd\u662f\u7b49\u6982\u7387\u7684\u3002 \u6240\u4ee5\u903b\u8f91\u5c31\u662f\uff0c\u7528random(0,1)\u751f\u6210\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570 RANDOM(a, b) range = b - a bits = ceil(log(2, range)) result = 0 for i = 0 to bits - 1 r = RANDOM(0, 1) result = result + r << i if result > range return RANDOM(a, b) else return a + result","title":"\u5982\u679c\u53ea\u80fd\u8c03\u7528random(0,1)\uff0c\u5982\u4f55\u505a\u5230random(a,b),\u8fd4\u56deab\u4e4b\u95f4\u7684\u6574\u6570\u3001"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#n2","text":"\u96c7\u4f63\u4e00\u6b21\uff0c\u6700\u725b\u7684\u5728\u7b2c\u4e00\uff0c\u6240\u4ee5$\\frac{(n-1) !}{n !}=\\frac{1}{n}$ \u96c7\u4f63n\u6b21\uff0c\u5c31\u662f\u6bcf\u4e2a\u90fd\u96c7\u4f63\uff0c\u987a\u5e8f\u5c31\u662f1\uff0c2\uff0c3\uff0c4\uff0c..n.\u6240\u4ee5 $\\frac{1}{n !}$ \u96c7\u4f632\u6b21\uff1a \u7b2c\u4e00\u4e2a\u4eba\u80af\u5b9a\u96c7\u4f63 \u80fd\u529b\u6700\u5f3a\u7684\u4eba\u80af\u5b9a\u96c7\u4f63 \u5982\u679c\u8bf4\u6700\u5f3a\u7684\u4eba\u5728\u7b2c\u4e00\u4e2a\uff0c\u90a3\u4e48\u53ea\u4f1a\u96c7\u4f63\u4e00\u6b21 \u8bb0\u7b2c\u4e00\u4e2a\u4eba\u7684\u80fd\u529b\u4e3a$rank_i$ \uff0c\u7136\u540e$rank_{i+1},...,rank_{n-1}$ (\u6bd4\u7b2c\u4e00\u540d\u5f3a\u7684\u4eba)\u8981\u5728\u7b2c\u4e00\u540d$rank_{n}$ \u4e4b\u540e\u9762\u8bd5 $P(E_{i})=1/n$ \u4e3a \u7b2c\u4e00\u540d\u6392\u540d\u4e3a$rank_i$\u7684\u6982\u7387 $$ \\sum_{i=1}^{n-1} P\\left(E_{i}\\right) \\cdot \\frac{1}{n-i}=\\sum_{i=1}^{n-1} \\frac{1}{n} \\cdot \\frac{1}{n-i} $$","title":"\u5728\u96c7\u4f63\u95ee\u9898\u4e2d\uff0c\u6b63\u597d\u96c7\u4f63\u4e00\u6b21\u7684\u6982\u7387\u662f\u591a\u5c11\uff0c\u96c7\u4f63n\u6b21\u662f\u591a\u5c11\uff1f\u96c7\u4f632\u6b21"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#n","text":"$X_i$ \u7b2ci\u4e2a\u9ab0\u5b50\u7684\u503c $sum=\\sum_{i=1}^n X_i$ $E(sum)=E(\\sum_{i=1}^n X_i)=\\sum_{i=1}^nE(X_i)=3.5n$","title":"\u63b7n\u4e2a\u9ab0\u5b50\uff0c\u548c\u7684\u671f\u671b"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_67","text":"n\u4e2a\u5ba2\u6237\uff0c\u6bcf\u4e2a\u4eba\u7ed9\u670d\u52a1\u751f\u4e00\u9876\u5e3d\u5b50\uff0c\u670d\u52a1\u751f\u628a\u5e3d\u5b50\u4ee5\u968f\u673a\u987a\u5e8f\u8fd8\u7ed9\u5ba2\u6237\uff0c\u8bf7\u95ee\u62ff\u5230\u81ea\u5df1\u5e3d\u5b50\u7684\u5ba2\u6237\u6570\u76ee\u7684\u671f\u671b\uff1f $X_i$ \u7b2c i \u4e2a\u5ba2\u6237\u62ff\u5230\u81ea\u5df1\u7684\u5e3d\u5b50 \u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u4eba\u62ff\u5230\u81ea\u5df1\u5e3d\u5b50\u7684\u6982\u7387P = \u7b2c\u4e00\u4e2a\u4eba\u62ff\u5230\u7b2c\u4e8c\u4e2a\u4eba\u7684\u5e3d\u5b50\u7684\u6982\u7387(1/n) * 0 + \u7b2c\u4e00\u4e2a\u4eba\u6ca1\u62ff\u5230\u7b2c\u4e8c\u4e2a\u4eba\u7684\u5e3d\u5b50\u7684\u6982\u7387(n-1)/n * (1/n-1) = 1/n\uff0c \u7c7b\u6bd4\u7740\uff0c\u4e0d\u7ba1\u6309\u7167\u4ec0\u4e48\u987a\u5e8f\uff0c\u6bcf\u4e2a\u4eba\u62ff\u5230\u81ea\u5df1\u5e3d\u5b50\u7684\u6982\u7387\u90fd\u662f1/n\uff0c \u8fd9\u662f\u53e4\u5178\u6982\u578b\u3002 $P(X_i)=1/n$ $E\\left[\\sum_{i=1}^{n} X_{i}\\right]=\\sum_{i=1}^{n} E\\left[X_{i}\\right]=\\sum_{i=1}^{n} \\frac{1}{n}=1$","title":"\u5e3d\u5b50\u6838\u5bf9\u95ee\u9898"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_68","text":"https://walkccc.me/CLRS/Chap05/5.2/ $$ \\begin{aligned} \\mathrm{E}\\left[\\sum_{i<j} X_{i, j}\\right] &=\\sum_{i A[j]} \\ &=\\frac{1}{2} \\sum_{i=1}^{n-1} n-i \\ &=\\frac{n(n-1)}{2}-\\frac{n(n-1)}{4} \\ &=\\frac{n(n-1)}{4} . \\end{aligned} $$","title":"\u9006\u5e8f\u5bf9\u6570\u76ee\u7684\u671f\u671b"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#h","text":"\u9996\u5148\u8981\u660e\u767d\u5806\u7684\u5b9a\u4e49\uff0c\u662f\u4e00\u4e2a\u8fd1\u4f3c\u7684\u5b8c\u5168\u4e8c\u53c9\u6811 \u7b49\u6bd4\u6570\u5217\u6c42\u548c $S_{n}=a_{1} \\frac{1-q^{n}}{1-q}$ \u5bf9\u4e8e\u4e00\u4e2a\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u9ad8\u5ea6h-1\uff0c\u90a3\u4e48\u5b83\u7684\u5143\u7d20\u4e2a\u6570\u4e3a$1+2+4+8+...+2^{h-1}$ \u6c42\u548c\u4e3a$2^{h}-1$ \u90a3\u4e48\u4e00\u4e2a\u9ad8\u5ea6\u4e3ah\u7684\u5806\uff0c\u653e\u6ee1\u4e86\u4e3a $2^{h+1}-1$ \u524d\u4e00\u884c\u653e\u6ee1\uff0c\u7b2ch\u884c\u653e\u4e00\u4e2a\uff0c\u5219\u4e3a\uff1a$2^{h}$","title":"\u9ad8\u5ea6\u4e3ah\u7684\u5806\uff0c\u6700\u591a\u591a\u5c11\u4e2a\u5143\u7d20\uff1f"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#n_1","text":"\u7531\u4e0a\u9898\u76ee\u53ef\u77e5\uff0ch\u9ad8\u5ea6\uff0c\u6700\u591a$2^{h+1}-1$\u4e2a\u5143\u7d20\uff0c\u6700\u5c11$2^{h}$ \u6240\u4ee5n\u4e2a\u5143\u7d20\uff0c\u9ad8\u5ea6\u4e3a $\\lfloor\\lg n\\rfloor$","title":"\u542b\u6709n\u4e2a\u5143\u7d20\u7684\u5806\u7684\u9ad8\u5ea6"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_69","text":"\u5806\u6570\u7ec4\u7684\u540e\u534a\u90e8\u5206","title":"\u6700\u5927\u5806\u7684\u6700\u5c0f\u5143\u7d20\u5728\u54ea\uff1f"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/#_70","text":"\u662f\uff0cparent[i]< left[2i],parent[i]< right[2i+1]","title":"\u5df2\u7ecf\u6392\u597d\u5e8f\u7684\u6570\u7ec4\uff0c\u662f\u6700\u5c0f\u5806\u5417\uff1f"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/","text":"\u300a\u8ba1\u7b97\u673a\u7f51\u7edc\u300b\u8bfb\u4e66\u7b14\u8bb0 \u4e92\u8054\u7f51\u7684\u7ec4\u6210 \u8fb9\u7f18\u90e8\u5206\uff1a\u7aef\u7cfb\u7edf\uff0c\u53ef\u4ee5\u662f\u4e2a\u4eba\u7535\u8111\uff0c\u4e5f\u53ef\u4ee5\u662f\u5927\u578b\u8ba1\u7b97\u673a \u6838\u5fc3\u90e8\u5206 \u201c\u4e3b\u673aA\u4e0e\u4e3b\u673aB\u8fdb\u884c\u901a\u4fe1\u201d\uff0c\u5b9e\u9645\u4e0a\u6307\u7684\u662f\u8fd0\u884c\u5728\u4e3b\u673aA \u4e0a\u7684\u67d0\u4e2a\u7a0b\u5e8f\u548c\u8fd0\u884c\u5728\u4e3b\u673aB\u4e0a\u7684\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u8fdb\u884c\u901a\u4fe1\u3002 \u7aef\u7cfb\u7edf\u4e4b\u95f4\u7684\u901a\u8baf\u65b9\u5f0f \u5ba2\u6237-\u670d\u52a1\u5668\uff1a \u200b \u8fdb\u7a0b\u4e4b\u95f4\u670d\u52a1\u548c\u88ab\u670d\u52a1\u7684\u5173\u7cfb\uff0c\u5ba2\u6237\u662f\u8bf7\u6c42\u65b9\uff0c\u670d\u52a1\u5668\u662f\u670d\u52a1\u63d0\u4f9b\u65b9\u3002 \u200b \u670d\u52a1\u5668\u7a0b\u5e8f\uff1a\u4e00\u79cd\u4e13\u95e8\u7528\u6765\u63d0\u4f9b\u67d0\u79cd\u670d\u52a1\u7684\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u540c\u65f6\u5904\u7406\u591a\u4e2a\u8fdc\u5730\u6216\u672c\u5730\u5ba2\u6237\u7684\u8bf7\u6c42 \u200b \u5ba2\u6237\u548c\u670d\u52a1\u5668\u6307\u7684\u662f \u8ba1\u7b97\u673a\u8fdb\u7a0b \u5bf9\u7b49\u8fde\u63a5\u65b9\u5f0f\uff1a \u4e24\u53f0\u4e3b\u673a\u8fd0\u884c\u4e86\u5bf9\u7b49\u8fde\u63a5\u8f6f\u4ef6\uff0cP2P\u8f6f\u4ef6\uff0c\u4ed6\u4eec\u5c31\u53ef\u4ee5\u8fdb\u884c\u5e73\u7b49\u7684\u5bf9\u7b49\u4e24\u5c4a\u901a\u4fe1\u3002\u6bd4\u5982\u53cc\u65b9\u90fd\u53ef\u4ee5\u4e0b\u8f7d\u5bf9\u65b9\u7684\u6587\u6863\u3002 \u6838\u5fc3\u90e8\u5206 \u8def\u7531\u5668router\uff0c\u5b83\u662f\u4e00\u79cd\u4e13\u95e8\u8ba1\u7b97\u673a\uff0c\u5b9e\u73b0\u5206\u7ec4\u4ea4\u6362\uff0c\u8f6c\u53d1\u6536\u5230\u7684\u5206\u7ec4\u3002 \u7535\u8def\u4ea4\u6362 \uff1a\u6309\u7167\u67d0\u79cd\u65b9\u5f0f\u52a8\u6001\u5730\u5206\u914d\u4f20\u8f93\u7ebf\u8def\u8d44\u6e90\u3002 \u5efa\u7acb\u8fde\u63a5->\u901a\u8bdd->\u91ca\u653e\u8fde\u63a5 \u7279\u70b9\uff1a\u5728\u7ae5\u8bdd\u7684\u5168\u90e8\u65f6\u95f4\u5185\uff0c\u901a\u8bdd\u7684\u4e24\u4e2a\u7528\u6237\u59cb\u7ec8\u5360\u7528\u7aef\u5230\u7aef\u7684\u901a\u4fe1\u8d44\u6e90\u3002 \u5206\u7ec4\u4ea4\u6362 \uff1a \u62a5\u6587\uff1a\u8981\u53d1\u9001\u7684\u6574\u5757\u6570\u636e \u5206\u7ec4 \u5305 \u8def\u7531\u5668\u6682\u65f6\u5b58\u50a8\u7684\u662f\u4e00\u4e2a\u4e2a\u77ed\u5206\u7ec4\uff0c\u800c\u4e0d\u662f\u6574\u4e2a\u957f\u62a5\u6587\u3002 \u5206\u7ec4\u5728\u4f20\u8f93\u65f6\uff0c\u4e00\u6bb5\u4e00\u6bb5\u5730\u5360\u7528\u901a\u8baf\u8d44\u6e90\u3002 \u8def\u7531\u9009\u62e9\u534f\u8bae-->\u81ea\u52a8\u627e\u5230\u8f6c\u53d1\u5206\u7ec4\u7684\u6700\u5408\u9002\u7684\u8def\u5f84 internet \u7ed3\u6784 \u5176\u4e2d\u6709ISP\uff0cISP\u5206\u5c42 IXP\u5c06ISP\u9ad8\u901f\u8fde\u63a5\u8d77\u6765 \u7f51\u7edc\u5185\u5bb9\u63d0\u4f9b\u5546ICP\u5efa\u7acb\u81ea\u5df1\u7684\u6570\u636e\u4e2d\u5fc3\uff0c\u52a0\u5feb\u7528\u6237\u4f53\u9a8c \u4e2d\u56fd\u6559\u80b2\u4e0e\u79d1\u7814\u7f51 CERNET \u9aa8\u5e72\u7f51\u5206\u5e03 \u5341\u5927ISP\uff1a \u7535\u4fe1\uff1a \u4e2d\u56fd\u516c\u7528\u8ba1\u7b97\u673a\u4e92\u8054\u7f51 (CHINANET\uff0c\u5373 \u4e2d\u56fd\u7535\u4fe1 \u7f51) \u7f51\u901a\uff1a \u4e2d\u56fd\u7f51\u901a \u516c\u7528\u4e92\u8054\u7f51(CNCNET\uff0c\u5305\u62ec\u91d1\u6865\u7f51CHINAGBN) \u79fb\u52a8\uff1a\u4e2d\u56fd\u79fb\u52a8\u4e92\u8054\u7f51\uff08CMNET\uff09 \u8054\u901a\uff1a \u4e2d\u56fd\u8054\u901a \u4e92\u8054\u7f51\uff08UNINET\uff09 \u94c1\u901a\uff1a \u4e2d\u56fd\u94c1\u901a \u4e92\u8054\u7f51\uff08CRCNET\uff09 \u536b\u661f\uff1a \u4e2d\u56fd\u536b\u661f \u96c6\u56e2\u4e92\u8054\u7f51\uff08CSNET\uff09 \u79d1\u6280\uff1a \u4e2d\u56fd\u79d1\u6280\u7f51 \uff08CSTNET\uff09 \u6559\u80b2\uff1a \u4e2d\u56fd\u6559\u80b2\u548c\u79d1\u7814\u8ba1\u7b97\u673a\u7f51 \uff08CERNET\uff09 \u8d38\u6613\uff1a\u4e2d\u56fd\u56fd\u9645\u7ecf\u6d4e\u8d38\u6613\u4e92\u8054\u7f51\uff08CIETNET\uff09 \u957f\u57ce\uff1a\u4e2d\u56fd\u957f\u57ce\u4e92\u8054\u7f51\uff08CGWNET\uff09 \u8ba1\u7b97\u673a\u7f51\u7edc\u7684\u6027\u80fd\u6307\u6807 \u901f\u7387 \u5e26\u5bbd \u541e\u5410\u91cf \u65f6\u5ef6 \u5229\u7528\u7387 \u8ba1\u7b97\u673a\u7f51\u7edc\u4f53\u7cfb\u7ed3\u6784 OSI \u592a\u8fc7\u4e8e\u590d\u6742\uff0c\u4e0d\u5b9e\u7528\u3002 TCP/IP\u56db\u5c42\u534f\u8bae\u6bd4\u8f83\u6e05\u6670\uff0c\u5e76\u4e14\u5e7f\u6cdb\u5e94\u7528\u3002 \u5e94\u7528\u5c42\uff1a\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1\u548c\u4ea4\u4e92\u89c4\u5219\uff0c\u4f8b\u5982DNS,SMTP\uff0c\u5904\u7406\u7684\u6570\u636e\u79f0\u4e3a\u62a5\u6587\u3002 \u8fd0\u8f93\u5c42\uff1a\u4e24\u53f0\u4e3b\u673a\u4e2d\uff0c\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u63d0\u4f9b\u901a\u7528\u7684\u6570\u636e\u4f20\u8f93\u670d\u52a1\u3002TCP,UDP \u7f51\u7edc\u5c42\uff1a\u628a\u8fd0\u8f93\u5c42\u4ea7\u751f\u7684\u62a5\u6587\u6bb5\u6216\u8005\u7528\u6237\u6570\u636e\u62a5\u5c01\u88c5\u6210\u5206\u7ec4\u6216\u5305\u8fdb\u884c\u4f20\u9001\uff0c\u79f0\u4e3aIP\u6570\u636e\u62a5\u3002\u4e92\u8054\u7f51\u4f7f\u7528\u7684\u7f51\u7edc\u5c42\u534f\u8bae\u4e3a\uff1a\u7f51\u9645\u534f\u8baeIP\u548c\u591a\u79cd\u8def\u7531\u9009\u62e9\u534f\u8bae \u6570\u636e\u94fe\u8def\u5c42\uff1a\u5c06IP\u6570\u636e\u62a5\u7ec4\u88c5\u6210\u5e27\uff0c\u6bcf\u4e00\u5e27\u5305\u62ec\u6570\u636e\u548c\u5fc5\u8981\u7684\u63a7\u5236\u4fe1\u606f\u3002 \u7269\u7406\u5c42\uff1a\u4f20\u8f93\u6bd4\u7279 \u7269\u7406\u5c42 \u5bbd\u5e26\u63a5\u5165\u6280\u672f \u6570\u636e\u94fe\u8def\u5c42 \u70b9\u5bf9\u70b9\u4fe1\u9053 \u5e7f\u64ad\u4fe1\u9053 \u5c06IP\u6570\u636e\u62a5\u6dfb\u52a0\u9996\u90e8\u548c\u5c3e\u90e8\u5c01\u88c5\u6210\u5e27 \u53d1\u9001\u7ed9\u8282\u70b9B \u8282\u70b9B\u68c0\u67e5\u65e0\u8bef\u540e\u63d0\u53d6IP\u6570\u636e\u62a5\u7ed9\u4e0a\u5c42\u7f51\u7edc\u5c42 \u4e09\u4e2a\u57fa\u672c\u95ee\u9898\uff1a \u5c01\u88c5\u6210\u5e27\uff0c\u900f\u660e\u4f20\u8f93\uff0c\u5dee\u9519\u68c0\u6d4b\u3002 \u70b9\u5bf9\u70b9\u534f\u8baePPP PPPoE\u662fPPP\u534f\u8bae\u8fd0\u7528\u4e8e\u4ee5\u592a\u7f51\u7684\u4f8b\u5b50\u3002 \u7f51\u7edc\u5c42 \u8fd0\u8f93\u5c42 \u5e94\u7528\u5c42 \u53ef\u80fd\u7684\u5e94\u7528\u6784\u67b6\uff1a \u5ba2\u6237\u7aef\uff0c\u670d\u52a1\u7aef\u6a21\u5f0f P2P C/S\u6a21\u5f0f \u670d\u52a1\u5668\u4e0a\u90e8\u7f72\u8d44\u6e90 \u670d\u52a1\u5668\u4fdd\u6301\u4e00\u76f4\u8fd0\u884c \u76d1\u542c\u77e5\u540dIP \u7f3a\u70b9\uff1a\u53ef\u62d3\u5c55\u6027\u5dee\uff0c\u9ad8\u5e76\u53d1\u6027\u5f31 P2P peer to peer \u5e73\u7b49 \u8bf7\u6c42\u670d\u52a1\u589e\u52a0\uff0c\u670d\u52a1\u89c4\u6a21\u4e5f\u5728\u589e\u52a0 \u96be\u4ee5\u7ba1\u7406 \u8fdb\u7a0b\u901a\u4fe1 \u4e00\u53f0\u8bbe\u5907\u4e0a\u4e24\u4e2a\u8fdb\u7a0b\u901a\u4fe1\u65b9\u5f0f\uff1a \u7ba1\u9053\uff0c\u6d88\u606f\u961f\u5217\u7b49 \u4e0d\u540c\u8bbe\u5907\u4e0a\u7684\u4e24\u4e2a\u8fdb\u7a0b\u901a\u4fe1\u65b9\u5f0f\uff1a \u62a5\u6587message \u89e3\u51b3\u7684\u95ee\u9898\uff1a \u8fdb\u7a0b\u6807\u8bc6 \u5e94\u7528\u5c42\u4e0e\u8fd0\u8f93\u5c42\u7684\u6c9f\u901a \u7528\u6237\u4f7f\u7528\u670d\u52a1 \u8fdb\u7a0b\u6807\u8bc6 ip, udp/tcp\uff0c\u7aef\u53e3\u53f7 tcp\u4e0eudp\u90fd\u6709\u5404\u81ea\u7684\u7aef\u53e3\u53f7\uff0c16\u4e2a\u6bd4\u7279 2^16 TCP\u4e4b\u4e0a\u7684Scoket UDP socket \u5e94\u7528\u5c42\u534f\u8bae \u4f20\u8f93\u5c42\u63d0\u4f9b\u7684\u670d\u52a1 web\u4e0ehttp url\u683c\u5f0f prot://user:psw@","title":"\u300a\u8ba1\u7b97\u673a\u7f51\u7edc\u300b\u8bfb\u4e66\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_1","text":"","title":"\u300a\u8ba1\u7b97\u673a\u7f51\u7edc\u300b\u8bfb\u4e66\u7b14\u8bb0"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_2","text":"\u8fb9\u7f18\u90e8\u5206\uff1a\u7aef\u7cfb\u7edf\uff0c\u53ef\u4ee5\u662f\u4e2a\u4eba\u7535\u8111\uff0c\u4e5f\u53ef\u4ee5\u662f\u5927\u578b\u8ba1\u7b97\u673a \u6838\u5fc3\u90e8\u5206 \u201c\u4e3b\u673aA\u4e0e\u4e3b\u673aB\u8fdb\u884c\u901a\u4fe1\u201d\uff0c\u5b9e\u9645\u4e0a\u6307\u7684\u662f\u8fd0\u884c\u5728\u4e3b\u673aA \u4e0a\u7684\u67d0\u4e2a\u7a0b\u5e8f\u548c\u8fd0\u884c\u5728\u4e3b\u673aB\u4e0a\u7684\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u8fdb\u884c\u901a\u4fe1\u3002","title":"\u4e92\u8054\u7f51\u7684\u7ec4\u6210"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_3","text":"\u5ba2\u6237-\u670d\u52a1\u5668\uff1a \u200b \u8fdb\u7a0b\u4e4b\u95f4\u670d\u52a1\u548c\u88ab\u670d\u52a1\u7684\u5173\u7cfb\uff0c\u5ba2\u6237\u662f\u8bf7\u6c42\u65b9\uff0c\u670d\u52a1\u5668\u662f\u670d\u52a1\u63d0\u4f9b\u65b9\u3002 \u200b \u670d\u52a1\u5668\u7a0b\u5e8f\uff1a\u4e00\u79cd\u4e13\u95e8\u7528\u6765\u63d0\u4f9b\u67d0\u79cd\u670d\u52a1\u7684\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u540c\u65f6\u5904\u7406\u591a\u4e2a\u8fdc\u5730\u6216\u672c\u5730\u5ba2\u6237\u7684\u8bf7\u6c42 \u200b \u5ba2\u6237\u548c\u670d\u52a1\u5668\u6307\u7684\u662f \u8ba1\u7b97\u673a\u8fdb\u7a0b \u5bf9\u7b49\u8fde\u63a5\u65b9\u5f0f\uff1a \u4e24\u53f0\u4e3b\u673a\u8fd0\u884c\u4e86\u5bf9\u7b49\u8fde\u63a5\u8f6f\u4ef6\uff0cP2P\u8f6f\u4ef6\uff0c\u4ed6\u4eec\u5c31\u53ef\u4ee5\u8fdb\u884c\u5e73\u7b49\u7684\u5bf9\u7b49\u4e24\u5c4a\u901a\u4fe1\u3002\u6bd4\u5982\u53cc\u65b9\u90fd\u53ef\u4ee5\u4e0b\u8f7d\u5bf9\u65b9\u7684\u6587\u6863\u3002","title":"\u7aef\u7cfb\u7edf\u4e4b\u95f4\u7684\u901a\u8baf\u65b9\u5f0f"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_4","text":"\u8def\u7531\u5668router\uff0c\u5b83\u662f\u4e00\u79cd\u4e13\u95e8\u8ba1\u7b97\u673a\uff0c\u5b9e\u73b0\u5206\u7ec4\u4ea4\u6362\uff0c\u8f6c\u53d1\u6536\u5230\u7684\u5206\u7ec4\u3002 \u7535\u8def\u4ea4\u6362 \uff1a\u6309\u7167\u67d0\u79cd\u65b9\u5f0f\u52a8\u6001\u5730\u5206\u914d\u4f20\u8f93\u7ebf\u8def\u8d44\u6e90\u3002 \u5efa\u7acb\u8fde\u63a5->\u901a\u8bdd->\u91ca\u653e\u8fde\u63a5 \u7279\u70b9\uff1a\u5728\u7ae5\u8bdd\u7684\u5168\u90e8\u65f6\u95f4\u5185\uff0c\u901a\u8bdd\u7684\u4e24\u4e2a\u7528\u6237\u59cb\u7ec8\u5360\u7528\u7aef\u5230\u7aef\u7684\u901a\u4fe1\u8d44\u6e90\u3002 \u5206\u7ec4\u4ea4\u6362 \uff1a \u62a5\u6587\uff1a\u8981\u53d1\u9001\u7684\u6574\u5757\u6570\u636e \u5206\u7ec4 \u5305 \u8def\u7531\u5668\u6682\u65f6\u5b58\u50a8\u7684\u662f\u4e00\u4e2a\u4e2a\u77ed\u5206\u7ec4\uff0c\u800c\u4e0d\u662f\u6574\u4e2a\u957f\u62a5\u6587\u3002 \u5206\u7ec4\u5728\u4f20\u8f93\u65f6\uff0c\u4e00\u6bb5\u4e00\u6bb5\u5730\u5360\u7528\u901a\u8baf\u8d44\u6e90\u3002 \u8def\u7531\u9009\u62e9\u534f\u8bae-->\u81ea\u52a8\u627e\u5230\u8f6c\u53d1\u5206\u7ec4\u7684\u6700\u5408\u9002\u7684\u8def\u5f84","title":"\u6838\u5fc3\u90e8\u5206"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#internet","text":"\u5176\u4e2d\u6709ISP\uff0cISP\u5206\u5c42 IXP\u5c06ISP\u9ad8\u901f\u8fde\u63a5\u8d77\u6765 \u7f51\u7edc\u5185\u5bb9\u63d0\u4f9b\u5546ICP\u5efa\u7acb\u81ea\u5df1\u7684\u6570\u636e\u4e2d\u5fc3\uff0c\u52a0\u5feb\u7528\u6237\u4f53\u9a8c \u4e2d\u56fd\u6559\u80b2\u4e0e\u79d1\u7814\u7f51 CERNET \u9aa8\u5e72\u7f51\u5206\u5e03 \u5341\u5927ISP\uff1a \u7535\u4fe1\uff1a \u4e2d\u56fd\u516c\u7528\u8ba1\u7b97\u673a\u4e92\u8054\u7f51 (CHINANET\uff0c\u5373 \u4e2d\u56fd\u7535\u4fe1 \u7f51) \u7f51\u901a\uff1a \u4e2d\u56fd\u7f51\u901a \u516c\u7528\u4e92\u8054\u7f51(CNCNET\uff0c\u5305\u62ec\u91d1\u6865\u7f51CHINAGBN) \u79fb\u52a8\uff1a\u4e2d\u56fd\u79fb\u52a8\u4e92\u8054\u7f51\uff08CMNET\uff09 \u8054\u901a\uff1a \u4e2d\u56fd\u8054\u901a \u4e92\u8054\u7f51\uff08UNINET\uff09 \u94c1\u901a\uff1a \u4e2d\u56fd\u94c1\u901a \u4e92\u8054\u7f51\uff08CRCNET\uff09 \u536b\u661f\uff1a \u4e2d\u56fd\u536b\u661f \u96c6\u56e2\u4e92\u8054\u7f51\uff08CSNET\uff09 \u79d1\u6280\uff1a \u4e2d\u56fd\u79d1\u6280\u7f51 \uff08CSTNET\uff09 \u6559\u80b2\uff1a \u4e2d\u56fd\u6559\u80b2\u548c\u79d1\u7814\u8ba1\u7b97\u673a\u7f51 \uff08CERNET\uff09 \u8d38\u6613\uff1a\u4e2d\u56fd\u56fd\u9645\u7ecf\u6d4e\u8d38\u6613\u4e92\u8054\u7f51\uff08CIETNET\uff09 \u957f\u57ce\uff1a\u4e2d\u56fd\u957f\u57ce\u4e92\u8054\u7f51\uff08CGWNET\uff09","title":"internet \u7ed3\u6784"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_5","text":"\u901f\u7387 \u5e26\u5bbd \u541e\u5410\u91cf \u65f6\u5ef6 \u5229\u7528\u7387","title":"\u8ba1\u7b97\u673a\u7f51\u7edc\u7684\u6027\u80fd\u6307\u6807"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_6","text":"OSI \u592a\u8fc7\u4e8e\u590d\u6742\uff0c\u4e0d\u5b9e\u7528\u3002 TCP/IP\u56db\u5c42\u534f\u8bae\u6bd4\u8f83\u6e05\u6670\uff0c\u5e76\u4e14\u5e7f\u6cdb\u5e94\u7528\u3002 \u5e94\u7528\u5c42\uff1a\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1\u548c\u4ea4\u4e92\u89c4\u5219\uff0c\u4f8b\u5982DNS,SMTP\uff0c\u5904\u7406\u7684\u6570\u636e\u79f0\u4e3a\u62a5\u6587\u3002 \u8fd0\u8f93\u5c42\uff1a\u4e24\u53f0\u4e3b\u673a\u4e2d\uff0c\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u63d0\u4f9b\u901a\u7528\u7684\u6570\u636e\u4f20\u8f93\u670d\u52a1\u3002TCP,UDP \u7f51\u7edc\u5c42\uff1a\u628a\u8fd0\u8f93\u5c42\u4ea7\u751f\u7684\u62a5\u6587\u6bb5\u6216\u8005\u7528\u6237\u6570\u636e\u62a5\u5c01\u88c5\u6210\u5206\u7ec4\u6216\u5305\u8fdb\u884c\u4f20\u9001\uff0c\u79f0\u4e3aIP\u6570\u636e\u62a5\u3002\u4e92\u8054\u7f51\u4f7f\u7528\u7684\u7f51\u7edc\u5c42\u534f\u8bae\u4e3a\uff1a\u7f51\u9645\u534f\u8baeIP\u548c\u591a\u79cd\u8def\u7531\u9009\u62e9\u534f\u8bae \u6570\u636e\u94fe\u8def\u5c42\uff1a\u5c06IP\u6570\u636e\u62a5\u7ec4\u88c5\u6210\u5e27\uff0c\u6bcf\u4e00\u5e27\u5305\u62ec\u6570\u636e\u548c\u5fc5\u8981\u7684\u63a7\u5236\u4fe1\u606f\u3002 \u7269\u7406\u5c42\uff1a\u4f20\u8f93\u6bd4\u7279","title":"\u8ba1\u7b97\u673a\u7f51\u7edc\u4f53\u7cfb\u7ed3\u6784"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_7","text":"\u5bbd\u5e26\u63a5\u5165\u6280\u672f","title":"\u7269\u7406\u5c42"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_8","text":"\u70b9\u5bf9\u70b9\u4fe1\u9053 \u5e7f\u64ad\u4fe1\u9053 \u5c06IP\u6570\u636e\u62a5\u6dfb\u52a0\u9996\u90e8\u548c\u5c3e\u90e8\u5c01\u88c5\u6210\u5e27 \u53d1\u9001\u7ed9\u8282\u70b9B \u8282\u70b9B\u68c0\u67e5\u65e0\u8bef\u540e\u63d0\u53d6IP\u6570\u636e\u62a5\u7ed9\u4e0a\u5c42\u7f51\u7edc\u5c42 \u4e09\u4e2a\u57fa\u672c\u95ee\u9898\uff1a \u5c01\u88c5\u6210\u5e27\uff0c\u900f\u660e\u4f20\u8f93\uff0c\u5dee\u9519\u68c0\u6d4b\u3002","title":"\u6570\u636e\u94fe\u8def\u5c42"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#ppp","text":"PPPoE\u662fPPP\u534f\u8bae\u8fd0\u7528\u4e8e\u4ee5\u592a\u7f51\u7684\u4f8b\u5b50\u3002","title":"\u70b9\u5bf9\u70b9\u534f\u8baePPP"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_9","text":"","title":"\u7f51\u7edc\u5c42"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_10","text":"","title":"\u8fd0\u8f93\u5c42"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_11","text":"\u53ef\u80fd\u7684\u5e94\u7528\u6784\u67b6\uff1a \u5ba2\u6237\u7aef\uff0c\u670d\u52a1\u7aef\u6a21\u5f0f P2P","title":"\u5e94\u7528\u5c42"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#cs","text":"\u670d\u52a1\u5668\u4e0a\u90e8\u7f72\u8d44\u6e90 \u670d\u52a1\u5668\u4fdd\u6301\u4e00\u76f4\u8fd0\u884c \u76d1\u542c\u77e5\u540dIP \u7f3a\u70b9\uff1a\u53ef\u62d3\u5c55\u6027\u5dee\uff0c\u9ad8\u5e76\u53d1\u6027\u5f31","title":"C/S\u6a21\u5f0f"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#p2p","text":"peer to peer \u5e73\u7b49 \u8bf7\u6c42\u670d\u52a1\u589e\u52a0\uff0c\u670d\u52a1\u89c4\u6a21\u4e5f\u5728\u589e\u52a0 \u96be\u4ee5\u7ba1\u7406","title":"P2P"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_12","text":"\u4e00\u53f0\u8bbe\u5907\u4e0a\u4e24\u4e2a\u8fdb\u7a0b\u901a\u4fe1\u65b9\u5f0f\uff1a \u7ba1\u9053\uff0c\u6d88\u606f\u961f\u5217\u7b49 \u4e0d\u540c\u8bbe\u5907\u4e0a\u7684\u4e24\u4e2a\u8fdb\u7a0b\u901a\u4fe1\u65b9\u5f0f\uff1a \u62a5\u6587message \u89e3\u51b3\u7684\u95ee\u9898\uff1a \u8fdb\u7a0b\u6807\u8bc6 \u5e94\u7528\u5c42\u4e0e\u8fd0\u8f93\u5c42\u7684\u6c9f\u901a \u7528\u6237\u4f7f\u7528\u670d\u52a1","title":"\u8fdb\u7a0b\u901a\u4fe1"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_13","text":"ip, udp/tcp\uff0c\u7aef\u53e3\u53f7 tcp\u4e0eudp\u90fd\u6709\u5404\u81ea\u7684\u7aef\u53e3\u53f7\uff0c16\u4e2a\u6bd4\u7279 2^16","title":"\u8fdb\u7a0b\u6807\u8bc6"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#tcpscoket","text":"","title":"TCP\u4e4b\u4e0a\u7684Scoket"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#udp-socket","text":"","title":"UDP socket"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_14","text":"","title":"\u5e94\u7528\u5c42\u534f\u8bae"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#_15","text":"","title":"\u4f20\u8f93\u5c42\u63d0\u4f9b\u7684\u670d\u52a1"},{"location":"%E5%86%85%E5%AE%B9/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#webhttp","text":"url\u683c\u5f0f prot://user:psw@","title":"web\u4e0ehttp"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/JavaScript/","text":"JavaScript \u7ed3\u6784\u5c42HTML \u8868\u73b0\u5c42CSS \u884c\u4e3a\u5c42JavaScript \u4e09\u5927\u6846\u67b6 angular react Vue\uff0c\u4e00\u6b3e\u6e10\u8fdb\u5f0f\u7684JS\u6846\u67b6 UI\u6846\u67b6 ant design bootstrap \u4ec0\u4e48\u662fJavaScript JS\u662f\u4e00\u79cd\u811a\u672c\u8bed\u8a00\u3002 \u4e00\u822c\u653e\u7f6e\u5728js\u6587\u4ef6\u4e2d\uff0c\u518dhtml\u7684","title":"JavaScript"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/JavaScript/#javascript","text":"\u7ed3\u6784\u5c42HTML \u8868\u73b0\u5c42CSS \u884c\u4e3a\u5c42JavaScript","title":"JavaScript"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/JavaScript/#_1","text":"angular react Vue\uff0c\u4e00\u6b3e\u6e10\u8fdb\u5f0f\u7684JS\u6846\u67b6","title":"\u4e09\u5927\u6846\u67b6"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/JavaScript/#ui","text":"ant design bootstrap","title":"UI\u6846\u67b6"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/JavaScript/#javascript_1","text":"JS\u662f\u4e00\u79cd\u811a\u672c\u8bed\u8a00\u3002 \u4e00\u822c\u653e\u7f6e\u5728js\u6587\u4ef6\u4e2d\uff0c\u518dhtml\u7684","title":"\u4ec0\u4e48\u662fJavaScript"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/Jekyll%20%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/","text":"Jekyll \u642d\u5efa\u535a\u5ba2 jekyll\u53ef\u4ee5\u76f4\u63a5\u7528github page\u9a71\u52a8\uff0c\u6240\u4ee5\u5728\u6b64\u8bb0\u5f55\u642d\u5efa\u535a\u5ba2\u7684\u8fc7\u7a0b\u3002 https://jekyllrb.com/ \u4f46\u662fjekyll\u4e0d\u88abwindows\u652f\u6301\uff0c\u6240\u4ee5\u8981\u60f3\u672c\u5730\u67e5\u770b\u6548\u679c\u7684\u5316\uff0c\u9700\u8981\u4f7f\u7528\u865a\u62df\u673a\u3002 \u4e00\u4e9b\u6982\u5ff5 jekyll\u4f7f\u7528Ruby\u5199\u7684 Gems\u662fRuby\u7684\u5305 Gemfile\u662f\u4f60\u7684\u7ad9\u70b9\uff08\u9879\u76ee\uff09\u6240\u9700\u8981Gems Bundler\u7c7b\u4f3c\u4e8epip\uff0c\u672c\u8eab\u662f\u4e00\u4e2agem\uff0c\u5b83\u53ef\u4ee5\u5e2e\u4f60\u5b89\u88c5Gemfile\u91cc\u6240\u6709\u7684gems gem \u4e5f\u662f\u4e00\u4e2a\u5305\u7ba1\u7406\u5668 \u4f46\u662f\u4ee5\u4e0a\uff0c\u5176\u5b9e\u4e0d\u9700\u8981\u592a\u591a\u4e86\u89e3\u3002\u53ea\u9700\u8981\u77e5\u9053\u7684\u662fjekyll\u662f\u4e00\u4e2a\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668\uff0c\u4f60\u53ea\u9700\u8981\u6309\u7167\u89c4\u5219\u5199\u597dhtml\u6216\u8005md\u6587\u4ef6\uff0c\u4ed6\u4f1a\u6309\u7167\u76ee\u5f55\u5173\u7cfb\u7ed9\u4f60\u751f\u6210\u4e00\u4e2a\u9759\u6001\u7ad9\u70b9\uff01 jekyll build \u8be5\u547d\u4ee4\u5c06\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u6e32\u67d3\u6210\u9759\u6001\u7ad9\u70b9\uff0c\u5230 /_site \u6587\u4ef6\u5939\u4e2d\u3002 \u6a21\u677f jekyll\u867d\u7136\u751f\u6210\u9759\u6001\u7ad9\u70b9\uff0c\u4ecd\u7136\u5728build\u8fc7\u7a0b\u4e2d\u6e32\u67d3\u4e86\u4e00\u6b21\uff0c\u6240\u4ee5\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6a21\u677f\u3002 \u6a21\u677f\u8bed\u8a00\u662fLiquid\u3002 \u548cpython\u7684\u6a21\u677f\u8bed\u8a00\u975e\u5e38\u7c7b\u4f3c\uff0c\u5305\u62ec\u4e09\u79cd\u7b26\u53f7 {{}} {% %} {{\u201ccontent\u201d|filter}} front matter \u7528\u4e8e\u6807\u8bb0\u5728\u6587\u4ef6\u5934\u90e8 --- my_number: 5 --- \u8fd9\u662f\u4e00\u79cd\u4f20\u5165\u53d8\u91cf\u7684\u65b9\u6cd5\uff0c\u6709\u4e86\u4e0a\u9762\u7684\u5934\u90e8\uff0c\u5728\u6a21\u677f\u4e2d\u53ef\u4ee5\u4f7f\u7528\uff1a {{ page.my_number }} layout \u4e00\u822c\u4fdd\u5b58\u5728/_layout\u76ee\u5f55\u4e0b \u4f8b\u5982\uff1a <!doctype html> <html> <head> <meta charset=\"utf-8\"> <title>{{ page.title }}</title> </head> <body> {{ content }} </body> </html> \u8fd9\u91ccpage.title\u662ffront matter\u91cc\u9762\u7684\u503c content\u662f\u4e00\u4e2a\u7279\u6b8a\u53d8\u91cf\uff0c\u5305\u542b\u4e86\u8be5\u9875\u9762\u6e32\u67d3\u540e\u7684\u7ed3\u679c\u3002 posts \u4e5f\u5c31\u662f\u5199\u535a\u5ba2\u7684\u5730\u65b9 /_posts \u76ee\u5f55\u4e0b \u4e00\u822c\u4f7f\u7528md\uff0c\u53ea\u8981\u63d0\u524d\u5199\u597dfont matter\u91cc\u9700\u8981\u5b9a\u4e49\u7684\u53d8\u91cf\u5373\u53ef\u3002 --- layout: post author: jill --- A banana is an edible fruit \u2013 botanically a berry \u2013 produced by several kinds of large herbaceous flowering plants in the genus Musa. In some countries, bananas used for cooking may be called \"plantains\", distinguishing them from dessert bananas. The fruit is variable in size, color, and firmness, but is usually elongated and curved, with soft flesh rich in starch covered with a rind, which may be green, yellow, red, purple, or brown when ripe.","title":"Jekyll \u642d\u5efa\u535a\u5ba2"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/Jekyll%20%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/#jekyll","text":"jekyll\u53ef\u4ee5\u76f4\u63a5\u7528github page\u9a71\u52a8\uff0c\u6240\u4ee5\u5728\u6b64\u8bb0\u5f55\u642d\u5efa\u535a\u5ba2\u7684\u8fc7\u7a0b\u3002 https://jekyllrb.com/ \u4f46\u662fjekyll\u4e0d\u88abwindows\u652f\u6301\uff0c\u6240\u4ee5\u8981\u60f3\u672c\u5730\u67e5\u770b\u6548\u679c\u7684\u5316\uff0c\u9700\u8981\u4f7f\u7528\u865a\u62df\u673a\u3002","title":"Jekyll \u642d\u5efa\u535a\u5ba2"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/Jekyll%20%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/#_1","text":"jekyll\u4f7f\u7528Ruby\u5199\u7684 Gems\u662fRuby\u7684\u5305 Gemfile\u662f\u4f60\u7684\u7ad9\u70b9\uff08\u9879\u76ee\uff09\u6240\u9700\u8981Gems Bundler\u7c7b\u4f3c\u4e8epip\uff0c\u672c\u8eab\u662f\u4e00\u4e2agem\uff0c\u5b83\u53ef\u4ee5\u5e2e\u4f60\u5b89\u88c5Gemfile\u91cc\u6240\u6709\u7684gems gem \u4e5f\u662f\u4e00\u4e2a\u5305\u7ba1\u7406\u5668 \u4f46\u662f\u4ee5\u4e0a\uff0c\u5176\u5b9e\u4e0d\u9700\u8981\u592a\u591a\u4e86\u89e3\u3002\u53ea\u9700\u8981\u77e5\u9053\u7684\u662fjekyll\u662f\u4e00\u4e2a\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668\uff0c\u4f60\u53ea\u9700\u8981\u6309\u7167\u89c4\u5219\u5199\u597dhtml\u6216\u8005md\u6587\u4ef6\uff0c\u4ed6\u4f1a\u6309\u7167\u76ee\u5f55\u5173\u7cfb\u7ed9\u4f60\u751f\u6210\u4e00\u4e2a\u9759\u6001\u7ad9\u70b9\uff01 jekyll build \u8be5\u547d\u4ee4\u5c06\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u6e32\u67d3\u6210\u9759\u6001\u7ad9\u70b9\uff0c\u5230 /_site \u6587\u4ef6\u5939\u4e2d\u3002","title":"\u4e00\u4e9b\u6982\u5ff5"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/Jekyll%20%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/#_2","text":"jekyll\u867d\u7136\u751f\u6210\u9759\u6001\u7ad9\u70b9\uff0c\u4ecd\u7136\u5728build\u8fc7\u7a0b\u4e2d\u6e32\u67d3\u4e86\u4e00\u6b21\uff0c\u6240\u4ee5\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6a21\u677f\u3002 \u6a21\u677f\u8bed\u8a00\u662fLiquid\u3002 \u548cpython\u7684\u6a21\u677f\u8bed\u8a00\u975e\u5e38\u7c7b\u4f3c\uff0c\u5305\u62ec\u4e09\u79cd\u7b26\u53f7 {{}} {% %} {{\u201ccontent\u201d|filter}}","title":"\u6a21\u677f"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/Jekyll%20%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/#front-matter","text":"\u7528\u4e8e\u6807\u8bb0\u5728\u6587\u4ef6\u5934\u90e8 --- my_number: 5 --- \u8fd9\u662f\u4e00\u79cd\u4f20\u5165\u53d8\u91cf\u7684\u65b9\u6cd5\uff0c\u6709\u4e86\u4e0a\u9762\u7684\u5934\u90e8\uff0c\u5728\u6a21\u677f\u4e2d\u53ef\u4ee5\u4f7f\u7528\uff1a {{ page.my_number }}","title":"front matter"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/Jekyll%20%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/#layout","text":"\u4e00\u822c\u4fdd\u5b58\u5728/_layout\u76ee\u5f55\u4e0b \u4f8b\u5982\uff1a <!doctype html> <html> <head> <meta charset=\"utf-8\"> <title>{{ page.title }}</title> </head> <body> {{ content }} </body> </html> \u8fd9\u91ccpage.title\u662ffront matter\u91cc\u9762\u7684\u503c content\u662f\u4e00\u4e2a\u7279\u6b8a\u53d8\u91cf\uff0c\u5305\u542b\u4e86\u8be5\u9875\u9762\u6e32\u67d3\u540e\u7684\u7ed3\u679c\u3002","title":"layout"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/Jekyll%20%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/#posts","text":"\u4e5f\u5c31\u662f\u5199\u535a\u5ba2\u7684\u5730\u65b9 /_posts \u76ee\u5f55\u4e0b \u4e00\u822c\u4f7f\u7528md\uff0c\u53ea\u8981\u63d0\u524d\u5199\u597dfont matter\u91cc\u9700\u8981\u5b9a\u4e49\u7684\u53d8\u91cf\u5373\u53ef\u3002 --- layout: post author: jill --- A banana is an edible fruit \u2013 botanically a berry \u2013 produced by several kinds of large herbaceous flowering plants in the genus Musa. In some countries, bananas used for cooking may be called \"plantains\", distinguishing them from dessert bananas. The fruit is variable in size, color, and firmness, but is usually elongated and curved, with soft flesh rich in starch covered with a rind, which may be green, yellow, red, purple, or brown when ripe.","title":"posts"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/Nginx/","text":"Nginx\u6559\u7a0b \u5199\u4e8e2020\u5e7412\u670831\u65e5\u665a\u4e0a\uff0c\u54c8\u54c8\u54c8 \u5b9e\u9645\u4e0a\u672c\u7bc7\u6559\u5b66\u90fd\u53ef\u4ee5\u5728\u5b98\u65b9\u624b\u518c\u4e0a\u627e\u5230\uff0c\u6211\u53ea\u662f\u7b5b\u9009\u51fa\u4e86\u611f\u89c9\u6bd4\u8f83\u6709\u4ef7\u503c\u7684\u4fe1\u606f \u7b2c\u4e00\u6b65\u4f7f\u7528yum\u5b89\u88c5Nginx yum install nginx \u8fd9\u4e00\u6b65\u975e\u5e38\u7b80\u5355\uff0cLinux\u672c\u8eab\u5c31\u5177\u5907\u4e86\u975e\u5e38\u4f18\u79c0\u7684\u5305\u7ba1\u7406 \u542f\u52a8Nginx \u542f\u52a8 nginx netstat -anp | grep 80 \u7b2c\u4e00\u884c\u7528\u4e8e\u542f\u52a8Nginx \u7b2c\u4e8c\u884c\u7528\u4e8e\u67e5\u770b80\u7aef\u53e3\u7684\u5360\u7528\u60c5\u51b5 \u6b64\u65f6\u5c31\u53ef\u4ee5\u53bb\u516c\u7f51ip\u67e5\u770bNginx\u7684\u6b22\u8fce\u9875\u4e86 Nginx\u7684\u8bed\u6cd5 man nginx \u53ef\u4ee5\u4f7f\u7528linux\u81ea\u5e26\u7684\u624b\u518c\u67e5\u770b\uff1a \u5176\u4e2d\u5e38\u7528\u7684\u5c31\u662f\u5411nginx\u4f20\u9012signal nginx -s signal stop \u2014 fast shutdown quit \u2014 graceful shutdown reload \u2014 reloading the configuration file #\u5e38\u7528\u4e8e\u8ddf\u65b0configure\u6587\u4ef6\u4ee5\u540e reopen \u2014 reopening the log files \u914d\u7f6e\u6587\u4ef6\u7684\u7ed3\u6784 \u914d\u7f6e\u6587\u4ef6\u5305\u62ec directives -----> simple directives: name parameter; \u200b ------->block directives: { } \u610f\u601d\u5c31\u662f\u8bf4\u5305\u62ec\u7b80\u5355\u6307\u4ee4\u548c\u5757\u6307\u4ee4\u3002 http { } \u8fd9\u5c31\u662f\u4e00\u4e2a\u5757\u6307\u4ee4 \u670d\u52a1\u9759\u6001\u5185\u5bb9 \u4f5c\u4e3a\u4e00\u4e2aweb\u670d\u52a1\u5668\uff0c\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u4e8b\u60c5\u5c31\u662fserving out images or HTML \u9875\u9762 \u4ee5\u6b64\u4e3a\u4f8b\u5b50\uff1a\u6211\u4eec\u9700\u8981\u5728http\u5757\u4e2d\u5199\u5165server\u5757\u3002 \u7b2c\u4e00\u6b65\uff1a \u5728 ~ \u76ee\u5f55\u4e0b\u521b\u5efa /data/www \u6587\u4ef6\u5939 \u548c /data/images \u6587\u4ef6\u5939 \u7b2c\u4e8c\u6b65\uff1a \u6253\u5f00\u4f4d\u4e8e config\u6587\u4ef6\uff0c\u8fdb\u884c\u7f16\u8f91 # For more information on configuration, see: # * Official English Documentation: http://nginx.org/en/docs/ # * Official Russian Documentation: http://nginx.org/ru/docs/ user nginx; worker_processes auto; error_log /var/log/nginx/error.log; pid /run/nginx.pid; # Load dynamic modules. See /usr/share/doc/nginx/README.dynamic. include /usr/share/nginx/modules/*.conf; events { worker_connections 1024; } http { log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' '$status $body_bytes_sent \"$http_referer\" ' '\"$http_user_agent\" \"$http_x_forwarded_for\"'; access_log /var/log/nginx/access.log main; sendfile on; tcp_nopush on; tcp_nodelay on; keepalive_timeout 65; types_hash_max_size 2048; include /etc/nginx/mime.types; default_type application/octet-stream; # Load modular configuration files from the /etc/nginx/conf.d directory. # See http://nginx.org/en/docs/ngx_core_module.html#include # for more information. include /etc/nginx/conf.d/*.conf; server { listen 80 default_server; listen [::]:80 default_server; server_name _; root /usr/share/nginx/html; # Load configuration files for the default server block. include /etc/nginx/default.d/*.conf; location / { } error_page 404 /404.html; location = /404.html { } error_page 500 502 503 504 /50x.html; location = /50x.html { } } # Settings for a TLS enabled server. # # server { # listen 443 ssl http2 default_server; # listen [::]:443 ssl http2 default_server; # server_name _; # root /usr/share/nginx/html; # # ssl_certificate \"/etc/pki/nginx/server.crt\"; # ssl_certificate_key \"/etc/pki/nginx/private/server.key\"; # ssl_session_cache shared:SSL:1m; # ssl_session_timeout 10m; # ssl_ciphers HIGH:!aNULL:!MD5; # ssl_prefer_server_ciphers on; # # # Load configuration files for the default server block. # include /etc/nginx/default.d/*.conf; # # location / { # } # # error_page 404 /404.html; # location = /404.html { # } # # error_page 500 502 503 504 /50x.html; # location = /50x.html { # } # } } \u53ef\u4ee5\u770b\u5230\uff1a \u5168\u5c40\u5757 events\u5757 http\u5757--->sever\u5757 \u5148\u5bf9\u5176\u8fdb\u884c\u4fee\u6539\uff1a # For more information on configuration, see: # * Official English Documentation: http://nginx.org/en/docs/ # * Official Russian Documentation: http://nginx.org/ru/docs/ # user nginx; worker_processes auto; error_log /var/log/nginx/error.log; # pid /run/nginx.pid; # Load dynamic modules. See /usr/share/doc/nginx/README.dynamic. include /usr/share/nginx/modules/*.conf; events { worker_connections 1024; accept_mutex on; #\u8bbe\u7f6e\u7f51\u8def\u8fde\u63a5\u5e8f\u5217\u5316\uff0c\u9632\u6b62\u60ca\u7fa4\u73b0\u8c61\u53d1\u751f\uff0c\u9ed8\u8ba4\u4e3aon multi_accept on; #\u8bbe\u7f6e\u4e00\u4e2a\u8fdb\u7a0b\u662f\u5426\u540c\u65f6\u63a5\u53d7\u591a\u4e2a\u7f51\u7edc\u8fde\u63a5\uff0c\u9ed8\u8ba4\u4e3aoff } http { log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' '$status $body_bytes_sent \"$http_referer\" ' '\"$http_user_agent\" \"$http_x_forwarded_for\"'; access_log /var/log/nginx/access.log main; sendfile on; tcp_nopush on; tcp_nodelay on; keepalive_timeout 65; types_hash_max_size 2048; include /etc/nginx/mime.types; default_type application/octet-stream; # Load modular configuration files from the /etc/nginx/conf.d directory. # See http://nginx.org/en/docs/ngx_core_module.html#include # for more information. include /etc/nginx/conf.d/*.conf; server { listen 80 default_server; listen [::]:80 default_server; server_name _; root /usr/share/nginx/html; # Load configuration files for the default server block. include /etc/nginx/default.d/*.conf; location / { } error_page 404 /404.html; location = /404.html { } error_page 500 502 503 504 /50x.html; location = /50x.html { } } # Settings for a TLS enabled server. # # server { # listen 443 ssl http2 default_server; # listen [::]:443 ssl http2 default_server; # server_name _; # root /usr/share/nginx/html; # # ssl_certificate \"/etc/pki/nginx/server.crt\"; # ssl_certificate_key \"/etc/pki/nginx/private/server.key\"; # ssl_session_cache shared:SSL:1m; # ssl_session_timeout 10m; # ssl_ciphers HIGH:!aNULL:!MD5; # ssl_prefer_server_ciphers on; # # # Load configuration files for the default server block. # include /etc/nginx/default.d/*.conf; # # location / { # } # # error_page 404 /404.html; # location = /404.html { # } # # error_page 500 502 503 504 /50x.html; # location = /50x.html { # } # } }","title":"Nginx\u6559\u7a0b"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/Nginx/#nginx","text":"\u5199\u4e8e2020\u5e7412\u670831\u65e5\u665a\u4e0a\uff0c\u54c8\u54c8\u54c8 \u5b9e\u9645\u4e0a\u672c\u7bc7\u6559\u5b66\u90fd\u53ef\u4ee5\u5728\u5b98\u65b9\u624b\u518c\u4e0a\u627e\u5230\uff0c\u6211\u53ea\u662f\u7b5b\u9009\u51fa\u4e86\u611f\u89c9\u6bd4\u8f83\u6709\u4ef7\u503c\u7684\u4fe1\u606f","title":"Nginx\u6559\u7a0b"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/Nginx/#yumnginx","text":"yum install nginx \u8fd9\u4e00\u6b65\u975e\u5e38\u7b80\u5355\uff0cLinux\u672c\u8eab\u5c31\u5177\u5907\u4e86\u975e\u5e38\u4f18\u79c0\u7684\u5305\u7ba1\u7406","title":"\u7b2c\u4e00\u6b65\u4f7f\u7528yum\u5b89\u88c5Nginx"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/Nginx/#nginx_1","text":"\u542f\u52a8 nginx netstat -anp | grep 80 \u7b2c\u4e00\u884c\u7528\u4e8e\u542f\u52a8Nginx \u7b2c\u4e8c\u884c\u7528\u4e8e\u67e5\u770b80\u7aef\u53e3\u7684\u5360\u7528\u60c5\u51b5 \u6b64\u65f6\u5c31\u53ef\u4ee5\u53bb\u516c\u7f51ip\u67e5\u770bNginx\u7684\u6b22\u8fce\u9875\u4e86","title":"\u542f\u52a8Nginx"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/Nginx/#nginx_2","text":"man nginx \u53ef\u4ee5\u4f7f\u7528linux\u81ea\u5e26\u7684\u624b\u518c\u67e5\u770b\uff1a \u5176\u4e2d\u5e38\u7528\u7684\u5c31\u662f\u5411nginx\u4f20\u9012signal nginx -s signal stop \u2014 fast shutdown quit \u2014 graceful shutdown reload \u2014 reloading the configuration file #\u5e38\u7528\u4e8e\u8ddf\u65b0configure\u6587\u4ef6\u4ee5\u540e reopen \u2014 reopening the log files","title":"Nginx\u7684\u8bed\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/Nginx/#_1","text":"\u914d\u7f6e\u6587\u4ef6\u5305\u62ec directives -----> simple directives: name parameter; \u200b ------->block directives: { } \u610f\u601d\u5c31\u662f\u8bf4\u5305\u62ec\u7b80\u5355\u6307\u4ee4\u548c\u5757\u6307\u4ee4\u3002 http { } \u8fd9\u5c31\u662f\u4e00\u4e2a\u5757\u6307\u4ee4","title":"\u914d\u7f6e\u6587\u4ef6\u7684\u7ed3\u6784"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/Nginx/#_2","text":"\u4f5c\u4e3a\u4e00\u4e2aweb\u670d\u52a1\u5668\uff0c\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u4e8b\u60c5\u5c31\u662fserving out images or HTML \u9875\u9762 \u4ee5\u6b64\u4e3a\u4f8b\u5b50\uff1a\u6211\u4eec\u9700\u8981\u5728http\u5757\u4e2d\u5199\u5165server\u5757\u3002 \u7b2c\u4e00\u6b65\uff1a \u5728 ~ \u76ee\u5f55\u4e0b\u521b\u5efa /data/www \u6587\u4ef6\u5939 \u548c /data/images \u6587\u4ef6\u5939 \u7b2c\u4e8c\u6b65\uff1a \u6253\u5f00\u4f4d\u4e8e config\u6587\u4ef6\uff0c\u8fdb\u884c\u7f16\u8f91 # For more information on configuration, see: # * Official English Documentation: http://nginx.org/en/docs/ # * Official Russian Documentation: http://nginx.org/ru/docs/ user nginx; worker_processes auto; error_log /var/log/nginx/error.log; pid /run/nginx.pid; # Load dynamic modules. See /usr/share/doc/nginx/README.dynamic. include /usr/share/nginx/modules/*.conf; events { worker_connections 1024; } http { log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' '$status $body_bytes_sent \"$http_referer\" ' '\"$http_user_agent\" \"$http_x_forwarded_for\"'; access_log /var/log/nginx/access.log main; sendfile on; tcp_nopush on; tcp_nodelay on; keepalive_timeout 65; types_hash_max_size 2048; include /etc/nginx/mime.types; default_type application/octet-stream; # Load modular configuration files from the /etc/nginx/conf.d directory. # See http://nginx.org/en/docs/ngx_core_module.html#include # for more information. include /etc/nginx/conf.d/*.conf; server { listen 80 default_server; listen [::]:80 default_server; server_name _; root /usr/share/nginx/html; # Load configuration files for the default server block. include /etc/nginx/default.d/*.conf; location / { } error_page 404 /404.html; location = /404.html { } error_page 500 502 503 504 /50x.html; location = /50x.html { } } # Settings for a TLS enabled server. # # server { # listen 443 ssl http2 default_server; # listen [::]:443 ssl http2 default_server; # server_name _; # root /usr/share/nginx/html; # # ssl_certificate \"/etc/pki/nginx/server.crt\"; # ssl_certificate_key \"/etc/pki/nginx/private/server.key\"; # ssl_session_cache shared:SSL:1m; # ssl_session_timeout 10m; # ssl_ciphers HIGH:!aNULL:!MD5; # ssl_prefer_server_ciphers on; # # # Load configuration files for the default server block. # include /etc/nginx/default.d/*.conf; # # location / { # } # # error_page 404 /404.html; # location = /404.html { # } # # error_page 500 502 503 504 /50x.html; # location = /50x.html { # } # } } \u53ef\u4ee5\u770b\u5230\uff1a \u5168\u5c40\u5757 events\u5757 http\u5757--->sever\u5757 \u5148\u5bf9\u5176\u8fdb\u884c\u4fee\u6539\uff1a # For more information on configuration, see: # * Official English Documentation: http://nginx.org/en/docs/ # * Official Russian Documentation: http://nginx.org/ru/docs/ # user nginx; worker_processes auto; error_log /var/log/nginx/error.log; # pid /run/nginx.pid; # Load dynamic modules. See /usr/share/doc/nginx/README.dynamic. include /usr/share/nginx/modules/*.conf; events { worker_connections 1024; accept_mutex on; #\u8bbe\u7f6e\u7f51\u8def\u8fde\u63a5\u5e8f\u5217\u5316\uff0c\u9632\u6b62\u60ca\u7fa4\u73b0\u8c61\u53d1\u751f\uff0c\u9ed8\u8ba4\u4e3aon multi_accept on; #\u8bbe\u7f6e\u4e00\u4e2a\u8fdb\u7a0b\u662f\u5426\u540c\u65f6\u63a5\u53d7\u591a\u4e2a\u7f51\u7edc\u8fde\u63a5\uff0c\u9ed8\u8ba4\u4e3aoff } http { log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' '$status $body_bytes_sent \"$http_referer\" ' '\"$http_user_agent\" \"$http_x_forwarded_for\"'; access_log /var/log/nginx/access.log main; sendfile on; tcp_nopush on; tcp_nodelay on; keepalive_timeout 65; types_hash_max_size 2048; include /etc/nginx/mime.types; default_type application/octet-stream; # Load modular configuration files from the /etc/nginx/conf.d directory. # See http://nginx.org/en/docs/ngx_core_module.html#include # for more information. include /etc/nginx/conf.d/*.conf; server { listen 80 default_server; listen [::]:80 default_server; server_name _; root /usr/share/nginx/html; # Load configuration files for the default server block. include /etc/nginx/default.d/*.conf; location / { } error_page 404 /404.html; location = /404.html { } error_page 500 502 503 504 /50x.html; location = /50x.html { } } # Settings for a TLS enabled server. # # server { # listen 443 ssl http2 default_server; # listen [::]:443 ssl http2 default_server; # server_name _; # root /usr/share/nginx/html; # # ssl_certificate \"/etc/pki/nginx/server.crt\"; # ssl_certificate_key \"/etc/pki/nginx/private/server.key\"; # ssl_session_cache shared:SSL:1m; # ssl_session_timeout 10m; # ssl_ciphers HIGH:!aNULL:!MD5; # ssl_prefer_server_ciphers on; # # # Load configuration files for the default server block. # include /etc/nginx/default.d/*.conf; # # location / { # } # # error_page 404 /404.html; # location = /404.html { # } # # error_page 500 502 503 504 /50x.html; # location = /50x.html { # } # } }","title":"\u670d\u52a1\u9759\u6001\u5185\u5bb9"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/","text":"R\u8bed\u8a00\u5b66\u4e60 # \u83b7\u53d6\u5f53\u524d\u5de5\u4f5c\u8def\u5f84 getwd() # \u5220\u9664\u53d8\u91cf rm() # \u5b89\u88c5\u5305 install.package() # \u8f7d\u5165\u5305 library() # \u67e5\u770b\u8bf4\u660e help() \u6570\u636e\u7ed3\u6784 \u6570\u503c\u578b \u5b57\u7b26\u4e32\u578b \u903b\u8f91\u578b \u65e5\u671f\u578b\u7b49","title":"R\u8bed\u8a00\u5b66\u4e60"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/#r","text":"# \u83b7\u53d6\u5f53\u524d\u5de5\u4f5c\u8def\u5f84 getwd() # \u5220\u9664\u53d8\u91cf rm() # \u5b89\u88c5\u5305 install.package() # \u8f7d\u5165\u5305 library() # \u67e5\u770b\u8bf4\u660e help()","title":"R\u8bed\u8a00\u5b66\u4e60"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/#_1","text":"\u6570\u503c\u578b \u5b57\u7b26\u4e32\u578b \u903b\u8f91\u578b \u65e5\u671f\u578b\u7b49","title":"\u6570\u636e\u7ed3\u6784"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/bootstrap%E5%AD%A6%E4%B9%A0/","text":"bootstrap\u5b66\u4e60 https://getbootstrap.com/ \u76ee\u524d\u662fbootstrap4\uff0c\u5efa\u8bae\u4f7f\u75283 \u4e0b\u8f7d\u540e\u5c06 bootsrap.min.css bootstrap.min.js \u62f7\u8d1d\u5230\u9879\u76ee\u4e2d \u5f53\u7136\u4e5f\u53ef\u4ee5\u7528\u4ed6\u4eec\u7684cdn\u3002 <!doctype html> <html lang=\"zh-CN\"> <head> <meta charset=\"utf-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <!-- IE \u517c\u5bb9 --> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> <!-- \u4e0a\u8ff03\u4e2ameta\u6807\u7b7e*\u5fc5\u987b*\u653e\u5728\u6700\u524d\u9762\uff0c\u4efb\u4f55\u5176\u4ed6\u5185\u5bb9\u90fd*\u5fc5\u987b*\u8ddf\u968f\u5176\u540e\uff01 --> <title>Bootstrap 101 Template</title> <!-- Bootstrap --> <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\" integrity=\"sha384-HSMxcRTRxnN+Bdg0JdbxYKrThecOKuH5zCYotlSAcp1+c8xmyTe9GYg1l9a69psu\" crossorigin=\"anonymous\"> <!-- HTML5 shim \u548c Respond.js \u662f\u4e3a\u4e86\u8ba9 IE8 \u652f\u6301 HTML5 \u5143\u7d20\u548c\u5a92\u4f53\u67e5\u8be2\uff08media queries\uff09\u529f\u80fd --> <!-- \u8b66\u544a\uff1a\u901a\u8fc7 file:// \u534f\u8bae\uff08\u5c31\u662f\u76f4\u63a5\u5c06 html \u9875\u9762\u62d6\u62fd\u5230\u6d4f\u89c8\u5668\u4e2d\uff09\u8bbf\u95ee\u9875\u9762\u65f6 Respond.js \u4e0d\u8d77\u4f5c\u7528 --> <!--[if lt IE 9]> <script src=\"https://cdn.jsdelivr.net/npm/html5shiv@3.7.3/dist/html5shiv.min.js\"></script> <script src=\"https://cdn.jsdelivr.net/npm/respond.js@1.4.2/dest/respond.min.js\"></script> <![endif]--> </head> <body> <h1>\u4f60\u597d\uff0c\u4e16\u754c\uff01</h1> <!-- jQuery (Bootstrap \u7684\u6240\u6709 JavaScript \u63d2\u4ef6\u90fd\u4f9d\u8d56 jQuery\uff0c\u6240\u4ee5\u5fc5\u987b\u653e\u5728\u524d\u8fb9) --> <script src=\"https://cdn.jsdelivr.net/npm/jquery@1.12.4/dist/jquery.min.js\" integrity=\"sha384-nvAa0+6Qg9clwYCGGPpDQLVpLNn0fRaROjHqs13t4Ggj3Ez50XnGQqc/r8MhnRDZ\" crossorigin=\"anonymous\"></script> <!-- \u52a0\u8f7d Bootstrap \u7684\u6240\u6709 JavaScript \u63d2\u4ef6\u3002\u4f60\u4e5f\u53ef\u4ee5\u6839\u636e\u9700\u8981\u53ea\u52a0\u8f7d\u5355\u4e2a\u63d2\u4ef6\u3002 --> <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\" integrity=\"sha384-aJ21OjlMXNL5UyIl/XNwTMqvzeRMZH2w8c5cRVpzpU8Y5bApTppSuUkhZXN0VxHd\" crossorigin=\"anonymous\"></script> </body> </html> \u5e03\u5c40 \u4e24\u4fa7\u6709\u7559\u767d\u7684 <div class=\"container\"> .... </div> \u65e0\u7559\u767d \u5b8c\u5168\u8986\u76d6\u5168\u5c4f container-fluid \u6805\u683c\u7f51\u683c\u7cfb\u7edf \u7528row\u548ccolumn\u6765\u521b\u5efa\u5e03\u5c40 \u7528div\u6765\u5b9e\u73b0\uff1a <div class=\"container\"> <div class=\"row\"> <div class=\"col-md-4\"> </div> <div class=\"col-md-8\"> </div> </div> </div> \u4e3a\u4e86\u5c45\u4e2d\uff0c\u6709\u65f6\u5019\u4f1a\u4f7f\u7528\u5217\u504f\u79fb \u6392\u7248 \u6807\u9898 <div class=\"h1\"> </div> \u6bb5\u843d \u8868\u5355 <input type=\"text\" class=\"form-control\" />","title":"bootstrap\u5b66\u4e60"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/bootstrap%E5%AD%A6%E4%B9%A0/#bootstrap","text":"https://getbootstrap.com/ \u76ee\u524d\u662fbootstrap4\uff0c\u5efa\u8bae\u4f7f\u75283 \u4e0b\u8f7d\u540e\u5c06 bootsrap.min.css bootstrap.min.js \u62f7\u8d1d\u5230\u9879\u76ee\u4e2d \u5f53\u7136\u4e5f\u53ef\u4ee5\u7528\u4ed6\u4eec\u7684cdn\u3002 <!doctype html> <html lang=\"zh-CN\"> <head> <meta charset=\"utf-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <!-- IE \u517c\u5bb9 --> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> <!-- \u4e0a\u8ff03\u4e2ameta\u6807\u7b7e*\u5fc5\u987b*\u653e\u5728\u6700\u524d\u9762\uff0c\u4efb\u4f55\u5176\u4ed6\u5185\u5bb9\u90fd*\u5fc5\u987b*\u8ddf\u968f\u5176\u540e\uff01 --> <title>Bootstrap 101 Template</title> <!-- Bootstrap --> <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\" integrity=\"sha384-HSMxcRTRxnN+Bdg0JdbxYKrThecOKuH5zCYotlSAcp1+c8xmyTe9GYg1l9a69psu\" crossorigin=\"anonymous\"> <!-- HTML5 shim \u548c Respond.js \u662f\u4e3a\u4e86\u8ba9 IE8 \u652f\u6301 HTML5 \u5143\u7d20\u548c\u5a92\u4f53\u67e5\u8be2\uff08media queries\uff09\u529f\u80fd --> <!-- \u8b66\u544a\uff1a\u901a\u8fc7 file:// \u534f\u8bae\uff08\u5c31\u662f\u76f4\u63a5\u5c06 html \u9875\u9762\u62d6\u62fd\u5230\u6d4f\u89c8\u5668\u4e2d\uff09\u8bbf\u95ee\u9875\u9762\u65f6 Respond.js \u4e0d\u8d77\u4f5c\u7528 --> <!--[if lt IE 9]> <script src=\"https://cdn.jsdelivr.net/npm/html5shiv@3.7.3/dist/html5shiv.min.js\"></script> <script src=\"https://cdn.jsdelivr.net/npm/respond.js@1.4.2/dest/respond.min.js\"></script> <![endif]--> </head> <body> <h1>\u4f60\u597d\uff0c\u4e16\u754c\uff01</h1> <!-- jQuery (Bootstrap \u7684\u6240\u6709 JavaScript \u63d2\u4ef6\u90fd\u4f9d\u8d56 jQuery\uff0c\u6240\u4ee5\u5fc5\u987b\u653e\u5728\u524d\u8fb9) --> <script src=\"https://cdn.jsdelivr.net/npm/jquery@1.12.4/dist/jquery.min.js\" integrity=\"sha384-nvAa0+6Qg9clwYCGGPpDQLVpLNn0fRaROjHqs13t4Ggj3Ez50XnGQqc/r8MhnRDZ\" crossorigin=\"anonymous\"></script> <!-- \u52a0\u8f7d Bootstrap \u7684\u6240\u6709 JavaScript \u63d2\u4ef6\u3002\u4f60\u4e5f\u53ef\u4ee5\u6839\u636e\u9700\u8981\u53ea\u52a0\u8f7d\u5355\u4e2a\u63d2\u4ef6\u3002 --> <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\" integrity=\"sha384-aJ21OjlMXNL5UyIl/XNwTMqvzeRMZH2w8c5cRVpzpU8Y5bApTppSuUkhZXN0VxHd\" crossorigin=\"anonymous\"></script> </body> </html>","title":"bootstrap\u5b66\u4e60"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/bootstrap%E5%AD%A6%E4%B9%A0/#_1","text":"\u4e24\u4fa7\u6709\u7559\u767d\u7684 <div class=\"container\"> .... </div> \u65e0\u7559\u767d \u5b8c\u5168\u8986\u76d6\u5168\u5c4f container-fluid","title":"\u5e03\u5c40"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/bootstrap%E5%AD%A6%E4%B9%A0/#_2","text":"\u7528row\u548ccolumn\u6765\u521b\u5efa\u5e03\u5c40 \u7528div\u6765\u5b9e\u73b0\uff1a <div class=\"container\"> <div class=\"row\"> <div class=\"col-md-4\"> </div> <div class=\"col-md-8\"> </div> </div> </div> \u4e3a\u4e86\u5c45\u4e2d\uff0c\u6709\u65f6\u5019\u4f1a\u4f7f\u7528\u5217\u504f\u79fb","title":"\u6805\u683c\u7f51\u683c\u7cfb\u7edf"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/bootstrap%E5%AD%A6%E4%B9%A0/#_3","text":"","title":"\u6392\u7248"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/bootstrap%E5%AD%A6%E4%B9%A0/#_4","text":"<div class=\"h1\"> </div>","title":"\u6807\u9898"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/bootstrap%E5%AD%A6%E4%B9%A0/#_5","text":"","title":"\u6bb5\u843d"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/bootstrap%E5%AD%A6%E4%B9%A0/#_6","text":"<input type=\"text\" class=\"form-control\" />","title":"\u8868\u5355"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/docker/","text":"docker docker\u5c31\u662f\u4e00\u79cd\u865a\u62df\u5316\u6280\u672f\uff0c\u7528\u4e8e\u6a21\u62df\u4e00\u4e2a\u5b8c\u6574\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002","title":"docker"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/docker/#docker","text":"docker\u5c31\u662f\u4e00\u79cd\u865a\u62df\u5316\u6280\u672f\uff0c\u7528\u4e8e\u6a21\u62df\u4e00\u4e2a\u5b8c\u6574\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002","title":"docker"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/git%20%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/","text":"git \u7248\u672c\u63a7\u5236 \u521d\u59cb\u5316\uff1agit init \u7528\u4e8e\u521b\u5efa\u4e00\u4e2a.git \u6587\u4ef6\u5939\uff0c\u91cc\u9762\u6709\u914d\u7f6e\u6587\u4ef6 \u8bbe\u7f6e\u7b7e\u540d \u7528\u6237\u540d email\u5730\u5740 \u4f5c\u7528\u662f\u533a\u5206\u4e0d\u540c\u7684\u5f00\u53d1\u4eba\u5458 \u8fa8\u6790\uff1a\uff08\u7528\u4e8e\u8fdc\u7a0b\u4ee3\u7801\u6258\u7ba1\u4e2d\u5fc3\uff09 git config user.name tom git config user.email 9484654651@qq.com \u4fdd\u5b58\u5728.git/config git config --global user.name tom git config --global user.email 9484654651@qq.com \u4fdd\u5b58\u5728~/.gitconfig \u4ece\u5de5\u4f5c\u533a\u6dfb\u52a0\u5230\u6682\u5b58\u533a git add \u4ece\u6682\u5b58\u533a\u5220\u9664 git rm --cached \u4ece\u6682\u5b58\u533a\u6dfb\u52a0\u5230\u672c\u5730\u4ed3\u5e93 git commit \u7136\u540egit\u4f1a\u81ea\u52a8\u8c03\u7528vim\u7f16\u8f91\u5668 \uff1awq\u4e3a\u5199\u5165\u5e76\u9000\u51fa \u4fee\u6539\u5de5\u4f5c\u533a\u7684\u6587\u4ef6 git\u4f1a\u81ea\u52a8\u8bc6\u522b\u51fa\u6765 \u67e5\u770b\u5386\u53f2\u8bb0\u5f55 git status git add <file> git commit <file> git commit -m \"context of message\" <file> git log git log --pretty=online git reflog \u6062\u590d\u5386\u53f2\u7248\u672c head\u6307\u9488\u6307\u5411\u5f53\u524d\u7248\u672c\uff0c\u53ef\u4ee5\u524d\u8fdb\u540e\u9000 \u57fa\u4e8e\u7d22\u5f15\u503c\u8fdb\u884c\u64cd\u4f5c git reset --hard <\u5c40\u90e8\u7d22\u5f15> git reset --hard HEAD^ \u4e00\u4e2a^\u4ee3\u8868\u56de\u53bb\u4e00\u6b65 git reset --hard HEAD~n \u56de\u53bbn\u6b65 git \u7b2c\u4e8c\u6b21\u5b66\u4e60 git clone \u514b\u9686\u8fdc\u7a0b\u7684repository git checkout \u9009\u62e9\u64cd\u4f5c\u7684\u5206\u652f git add \u589e\u52a0\u6587\u4ef6\u5230\u6682\u5b58\u533a git commit \u5c06\u5f53\u524d\u7248\u672c\u50a8\u5b58\u5230\u7248\u672c\u5e93\u4e2d git push \u5c06\u672c\u5730\u7248\u672c\u5e93\u63a8\u9001\u5230\u8fdc\u7a0b git pull \u5c06\u8fdc\u7a0b\u7684\u6700\u65b0\u7248\u672c\u62c9\u53d6\u5230\u5de5\u4f5c\u533a\uff0c\u5982\u679c\u6709\u51b2\u7a81\u9700\u8981\u624b\u52a8\u5408\u5e76 git log \u67e5\u770b\u7248\u672c\u63d0\u4ea4\u8bb0\u5f55 . gitignore \u6587\u4ef6\u4e2d\u53ef\u4ee5\u50a8\u5b58\u4e0d\u63a8\u9001\u5230\u670d\u52a1\u5668\u7684\u6587\u4ef6","title":"git \u7248\u672c\u63a7\u5236"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/git%20%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/#git","text":"","title":"git \u7248\u672c\u63a7\u5236"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/git%20%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/#git-init","text":"\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a.git \u6587\u4ef6\u5939\uff0c\u91cc\u9762\u6709\u914d\u7f6e\u6587\u4ef6","title":"\u521d\u59cb\u5316\uff1agit init"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/git%20%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/#_1","text":"\u7528\u6237\u540d email\u5730\u5740 \u4f5c\u7528\u662f\u533a\u5206\u4e0d\u540c\u7684\u5f00\u53d1\u4eba\u5458 \u8fa8\u6790\uff1a\uff08\u7528\u4e8e\u8fdc\u7a0b\u4ee3\u7801\u6258\u7ba1\u4e2d\u5fc3\uff09 git config user.name tom git config user.email 9484654651@qq.com \u4fdd\u5b58\u5728.git/config git config --global user.name tom git config --global user.email 9484654651@qq.com \u4fdd\u5b58\u5728~/.gitconfig","title":"\u8bbe\u7f6e\u7b7e\u540d"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/git%20%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/#_2","text":"git add \u4ece\u6682\u5b58\u533a\u5220\u9664 git rm --cached","title":"\u4ece\u5de5\u4f5c\u533a\u6dfb\u52a0\u5230\u6682\u5b58\u533a"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/git%20%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/#_3","text":"git commit \u7136\u540egit\u4f1a\u81ea\u52a8\u8c03\u7528vim\u7f16\u8f91\u5668 \uff1awq\u4e3a\u5199\u5165\u5e76\u9000\u51fa","title":"\u4ece\u6682\u5b58\u533a\u6dfb\u52a0\u5230\u672c\u5730\u4ed3\u5e93"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/git%20%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/#_4","text":"git\u4f1a\u81ea\u52a8\u8bc6\u522b\u51fa\u6765","title":"\u4fee\u6539\u5de5\u4f5c\u533a\u7684\u6587\u4ef6"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/git%20%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/#_5","text":"git status git add <file> git commit <file> git commit -m \"context of message\" <file> git log git log --pretty=online git reflog","title":"\u67e5\u770b\u5386\u53f2\u8bb0\u5f55"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/git%20%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/#_6","text":"head\u6307\u9488\u6307\u5411\u5f53\u524d\u7248\u672c\uff0c\u53ef\u4ee5\u524d\u8fdb\u540e\u9000 \u57fa\u4e8e\u7d22\u5f15\u503c\u8fdb\u884c\u64cd\u4f5c git reset --hard <\u5c40\u90e8\u7d22\u5f15> git reset --hard HEAD^ \u4e00\u4e2a^\u4ee3\u8868\u56de\u53bb\u4e00\u6b65 git reset --hard HEAD~n \u56de\u53bbn\u6b65","title":"\u6062\u590d\u5386\u53f2\u7248\u672c"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/git%20%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/#git_1","text":"git clone \u514b\u9686\u8fdc\u7a0b\u7684repository git checkout \u9009\u62e9\u64cd\u4f5c\u7684\u5206\u652f git add \u589e\u52a0\u6587\u4ef6\u5230\u6682\u5b58\u533a git commit \u5c06\u5f53\u524d\u7248\u672c\u50a8\u5b58\u5230\u7248\u672c\u5e93\u4e2d git push \u5c06\u672c\u5730\u7248\u672c\u5e93\u63a8\u9001\u5230\u8fdc\u7a0b git pull \u5c06\u8fdc\u7a0b\u7684\u6700\u65b0\u7248\u672c\u62c9\u53d6\u5230\u5de5\u4f5c\u533a\uff0c\u5982\u679c\u6709\u51b2\u7a81\u9700\u8981\u624b\u52a8\u5408\u5e76 git log \u67e5\u770b\u7248\u672c\u63d0\u4ea4\u8bb0\u5f55 . gitignore \u6587\u4ef6\u4e2d\u53ef\u4ee5\u50a8\u5b58\u4e0d\u63a8\u9001\u5230\u670d\u52a1\u5668\u7684\u6587\u4ef6","title":"git \u7b2c\u4e8c\u6b21\u5b66\u4e60"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/git/","text":"git https://rogerdudler.github.io/git-guide/ \u6838\u5fc3\u90e8\u5206 working directory index HEAD \u5de5\u4f5c\u76ee\u5f55\u662f\u771f\u5b9e\u7684\u6587\u4ef6\u76ee\u5f55 index\u662f\u4e00\u4e2a\u6811\u7ed3\u6784\uff0c\u4fdd\u5b58\u4e86\u7248\u672c head\u4e3a\u6307\u9488\uff0c\u6307\u5411\u7248\u672c \u5e38\u7528\u547d\u4ee4 # \u5728\u5f53\u524d\u76ee\u5f55\u65b0\u5efa\u4e00\u4e2aGit\u4ee3\u7801\u5e93 $ git init # \u65b0\u5efa\u4e00\u4e2a\u76ee\u5f55\uff0c\u5c06\u5176\u521d\u59cb\u5316\u4e3aGit\u4ee3\u7801\u5e93 $ git init [project-name] # \u4e0b\u8f7d\u4e00\u4e2a\u9879\u76ee\u548c\u5b83\u7684\u6574\u4e2a\u4ee3\u7801\u5386\u53f2 $ git clone [url] # \u6dfb\u52a0\u6307\u5b9a\u6587\u4ef6\u5230\u6682\u5b58\u533a $ git add [file1] [file2] ... # \u6dfb\u52a0\u6307\u5b9a\u76ee\u5f55\u5230\u6682\u5b58\u533a\uff0c\u5305\u62ec\u5b50\u76ee\u5f55 $ git add [dir] # \u6dfb\u52a0\u5f53\u524d\u76ee\u5f55\u7684\u6240\u6709\u6587\u4ef6\u5230\u6682\u5b58\u533a $ git add . # \u6dfb\u52a0\u6bcf\u4e2a\u53d8\u5316\u524d\uff0c\u90fd\u4f1a\u8981\u6c42\u786e\u8ba4 # \u5bf9\u4e8e\u540c\u4e00\u4e2a\u6587\u4ef6\u7684\u591a\u5904\u53d8\u5316\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5206\u6b21\u63d0\u4ea4 $ git add -p # \u5220\u9664\u5de5\u4f5c\u533a\u6587\u4ef6\uff0c\u5e76\u4e14\u5c06\u8fd9\u6b21\u5220\u9664\u653e\u5165\u6682\u5b58\u533a $ git rm [file1] [file2] ... # \u505c\u6b62\u8ffd\u8e2a\u6307\u5b9a\u6587\u4ef6\uff0c\u4f46\u8be5\u6587\u4ef6\u4f1a\u4fdd\u7559\u5728\u5de5\u4f5c\u533a $ git rm --cached [file] # \u6539\u540d\u6587\u4ef6\uff0c\u5e76\u4e14\u5c06\u8fd9\u4e2a\u6539\u540d\u653e\u5165\u6682\u5b58\u533a $ git mv [file-original] [file-renamed] # \u63d0\u4ea4\u6682\u5b58\u533a\u5230\u4ed3\u5e93\u533a $ git commit -m [message] # \u63d0\u4ea4\u6682\u5b58\u533a\u7684\u6307\u5b9a\u6587\u4ef6\u5230\u4ed3\u5e93\u533a $ git commit [file1] [file2] ... -m [message] # \u63d0\u4ea4\u5de5\u4f5c\u533a\u81ea\u4e0a\u6b21commit\u4e4b\u540e\u7684\u53d8\u5316\uff0c\u76f4\u63a5\u5230\u4ed3\u5e93\u533a $ git commit -a # \u63d0\u4ea4\u65f6\u663e\u793a\u6240\u6709diff\u4fe1\u606f $ git commit -v # \u4f7f\u7528\u4e00\u6b21\u65b0\u7684commit\uff0c\u66ff\u4ee3\u4e0a\u4e00\u6b21\u63d0\u4ea4 # \u5982\u679c\u4ee3\u7801\u6ca1\u6709\u4efb\u4f55\u65b0\u53d8\u5316\uff0c\u5219\u7528\u6765\u6539\u5199\u4e0a\u4e00\u6b21commit\u7684\u63d0\u4ea4\u4fe1\u606f $ git commit --amend -m [message] # \u91cd\u505a\u4e0a\u4e00\u6b21commit\uff0c\u5e76\u5305\u62ec\u6307\u5b9a\u6587\u4ef6\u7684\u65b0\u53d8\u5316 $ git commit --amend [file1] [file2] ... # \u5217\u51fa\u6240\u6709\u672c\u5730\u5206\u652f $ git branch # \u5217\u51fa\u6240\u6709\u8fdc\u7a0b\u5206\u652f $ git branch -r # \u5217\u51fa\u6240\u6709\u672c\u5730\u5206\u652f\u548c\u8fdc\u7a0b\u5206\u652f $ git branch -a # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u4f46\u4f9d\u7136\u505c\u7559\u5728\u5f53\u524d\u5206\u652f $ git branch [branch-name] # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u5e76\u5207\u6362\u5230\u8be5\u5206\u652f $ git checkout -b [branch] # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u6307\u5411\u6307\u5b9acommit $ git branch [branch] [commit] # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u4e0e\u6307\u5b9a\u7684\u8fdc\u7a0b\u5206\u652f\u5efa\u7acb\u8ffd\u8e2a\u5173\u7cfb $ git branch --track [branch] [remote-branch] # \u5207\u6362\u5230\u6307\u5b9a\u5206\u652f\uff0c\u5e76\u66f4\u65b0\u5de5\u4f5c\u533a $ git checkout [branch-name] # \u5207\u6362\u5230\u4e0a\u4e00\u4e2a\u5206\u652f $ git checkout - # \u5efa\u7acb\u8ffd\u8e2a\u5173\u7cfb\uff0c\u5728\u73b0\u6709\u5206\u652f\u4e0e\u6307\u5b9a\u7684\u8fdc\u7a0b\u5206\u652f\u4e4b\u95f4 $ git branch --set-upstream [branch] [remote-branch] # \u5408\u5e76\u6307\u5b9a\u5206\u652f\u5230\u5f53\u524d\u5206\u652f $ git merge [branch] # \u9009\u62e9\u4e00\u4e2acommit\uff0c\u5408\u5e76\u8fdb\u5f53\u524d\u5206\u652f $ git cherry-pick [commit] # \u5220\u9664\u5206\u652f $ git branch -d [branch-name] # \u5220\u9664\u8fdc\u7a0b\u5206\u652f $ git push origin --delete [branch-name] $ git branch -dr [remote/branch] # \u5217\u51fa\u6240\u6709tag $ git tag # \u65b0\u5efa\u4e00\u4e2atag\u5728\u5f53\u524dcommit $ git tag [tag] # \u65b0\u5efa\u4e00\u4e2atag\u5728\u6307\u5b9acommit $ git tag [tag] [commit] # \u5220\u9664\u672c\u5730tag $ git tag -d [tag] # \u5220\u9664\u8fdc\u7a0btag $ git push origin :refs/tags/[tagName] # \u67e5\u770btag\u4fe1\u606f $ git show [tag] # \u63d0\u4ea4\u6307\u5b9atag $ git push [remote] [tag] # \u63d0\u4ea4\u6240\u6709tag $ git push [remote] --tags # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u6307\u5411\u67d0\u4e2atag $ git checkout -b [branch] [tag] # \u663e\u793a\u6709\u53d8\u66f4\u7684\u6587\u4ef6 $ git status # \u663e\u793a\u5f53\u524d\u5206\u652f\u7684\u7248\u672c\u5386\u53f2 $ git log # \u663e\u793acommit\u5386\u53f2\uff0c\u4ee5\u53ca\u6bcf\u6b21commit\u53d1\u751f\u53d8\u66f4\u7684\u6587\u4ef6 $ git log --stat # \u641c\u7d22\u63d0\u4ea4\u5386\u53f2\uff0c\u6839\u636e\u5173\u952e\u8bcd $ git log -S [keyword] # \u663e\u793a\u67d0\u4e2acommit\u4e4b\u540e\u7684\u6240\u6709\u53d8\u52a8\uff0c\u6bcf\u4e2acommit\u5360\u636e\u4e00\u884c $ git log [tag] HEAD --pretty=format:%s # \u663e\u793a\u67d0\u4e2acommit\u4e4b\u540e\u7684\u6240\u6709\u53d8\u52a8\uff0c\u5176\"\u63d0\u4ea4\u8bf4\u660e\"\u5fc5\u987b\u7b26\u5408\u641c\u7d22\u6761\u4ef6 $ git log [tag] HEAD --grep feature # \u663e\u793a\u67d0\u4e2a\u6587\u4ef6\u7684\u7248\u672c\u5386\u53f2\uff0c\u5305\u62ec\u6587\u4ef6\u6539\u540d $ git log --follow [file] $ git whatchanged [file] # \u663e\u793a\u6307\u5b9a\u6587\u4ef6\u76f8\u5173\u7684\u6bcf\u4e00\u6b21diff $ git log -p [file] # \u663e\u793a\u8fc7\u53bb5\u6b21\u63d0\u4ea4 $ git log -5 --pretty --oneline # \u663e\u793a\u6240\u6709\u63d0\u4ea4\u8fc7\u7684\u7528\u6237\uff0c\u6309\u63d0\u4ea4\u6b21\u6570\u6392\u5e8f $ git shortlog -sn # \u663e\u793a\u6307\u5b9a\u6587\u4ef6\u662f\u4ec0\u4e48\u4eba\u5728\u4ec0\u4e48\u65f6\u95f4\u4fee\u6539\u8fc7 $ git blame [file] # \u663e\u793a\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u7684\u5dee\u5f02 $ git diff # \u663e\u793a\u6682\u5b58\u533a\u548c\u4e0a\u4e00\u4e2acommit\u7684\u5dee\u5f02 $ git diff --cached [file] # \u663e\u793a\u5de5\u4f5c\u533a\u4e0e\u5f53\u524d\u5206\u652f\u6700\u65b0commit\u4e4b\u95f4\u7684\u5dee\u5f02 $ git diff HEAD # \u663e\u793a\u4e24\u6b21\u63d0\u4ea4\u4e4b\u95f4\u7684\u5dee\u5f02 $ git diff [first-branch]...[second-branch] # \u663e\u793a\u4eca\u5929\u4f60\u5199\u4e86\u591a\u5c11\u884c\u4ee3\u7801 $ git diff --shortstat \"@{0 day ago}\" # \u663e\u793a\u67d0\u6b21\u63d0\u4ea4\u7684\u5143\u6570\u636e\u548c\u5185\u5bb9\u53d8\u5316 $ git show [commit] # \u663e\u793a\u67d0\u6b21\u63d0\u4ea4\u53d1\u751f\u53d8\u5316\u7684\u6587\u4ef6 $ git show --name-only [commit] # \u663e\u793a\u67d0\u6b21\u63d0\u4ea4\u65f6\uff0c\u67d0\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9 $ git show [commit]:[filename] # \u663e\u793a\u5f53\u524d\u5206\u652f\u7684\u6700\u8fd1\u51e0\u6b21\u63d0\u4ea4 $ git reflog # \u4e0b\u8f7d\u8fdc\u7a0b\u4ed3\u5e93\u7684\u6240\u6709\u53d8\u52a8 $ git fetch [remote] # \u663e\u793a\u6240\u6709\u8fdc\u7a0b\u4ed3\u5e93 $ git remote -v # \u663e\u793a\u67d0\u4e2a\u8fdc\u7a0b\u4ed3\u5e93\u7684\u4fe1\u606f $ git remote show [remote] # \u589e\u52a0\u4e00\u4e2a\u65b0\u7684\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5e76\u547d\u540d $ git remote add [shortname] [url] # \u53d6\u56de\u8fdc\u7a0b\u4ed3\u5e93\u7684\u53d8\u5316\uff0c\u5e76\u4e0e\u672c\u5730\u5206\u652f\u5408\u5e76 $ git pull [remote] [branch] # \u4e0a\u4f20\u672c\u5730\u6307\u5b9a\u5206\u652f\u5230\u8fdc\u7a0b\u4ed3\u5e93 $ git push [remote] [branch] # \u5f3a\u884c\u63a8\u9001\u5f53\u524d\u5206\u652f\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5373\u4f7f\u6709\u51b2\u7a81 $ git push [remote] --force # \u63a8\u9001\u6240\u6709\u5206\u652f\u5230\u8fdc\u7a0b\u4ed3\u5e93 $ git push [remote] --all # \u6062\u590d\u6682\u5b58\u533a\u7684\u6307\u5b9a\u6587\u4ef6\u5230\u5de5\u4f5c\u533a $ git checkout [file] # \u6062\u590d\u67d0\u4e2acommit\u7684\u6307\u5b9a\u6587\u4ef6\u5230\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a $ git checkout [commit] [file] # \u6062\u590d\u6682\u5b58\u533a\u7684\u6240\u6709\u6587\u4ef6\u5230\u5de5\u4f5c\u533a $ git checkout . # \u91cd\u7f6e\u6682\u5b58\u533a\u7684\u6307\u5b9a\u6587\u4ef6\uff0c\u4e0e\u4e0a\u4e00\u6b21commit\u4fdd\u6301\u4e00\u81f4\uff0c\u4f46\u5de5\u4f5c\u533a\u4e0d\u53d8 $ git reset [file] # \u91cd\u7f6e\u6682\u5b58\u533a\u4e0e\u5de5\u4f5c\u533a\uff0c\u4e0e\u4e0a\u4e00\u6b21commit\u4fdd\u6301\u4e00\u81f4 $ git reset --hard # \u91cd\u7f6e\u5f53\u524d\u5206\u652f\u7684\u6307\u9488\u4e3a\u6307\u5b9acommit\uff0c\u540c\u65f6\u91cd\u7f6e\u6682\u5b58\u533a\uff0c\u4f46\u5de5\u4f5c\u533a\u4e0d\u53d8 $ git reset [commit] # \u91cd\u7f6e\u5f53\u524d\u5206\u652f\u7684HEAD\u4e3a\u6307\u5b9acommit\uff0c\u540c\u65f6\u91cd\u7f6e\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\uff0c\u4e0e\u6307\u5b9acommit\u4e00\u81f4 $ git reset --hard [commit] # \u91cd\u7f6e\u5f53\u524dHEAD\u4e3a\u6307\u5b9acommit\uff0c\u4f46\u4fdd\u6301\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u4e0d\u53d8 $ git reset --keep [commit] # \u65b0\u5efa\u4e00\u4e2acommit\uff0c\u7528\u6765\u64a4\u9500\u6307\u5b9acommit # \u540e\u8005\u7684\u6240\u6709\u53d8\u5316\u90fd\u5c06\u88ab\u524d\u8005\u62b5\u6d88\uff0c\u5e76\u4e14\u5e94\u7528\u5230\u5f53\u524d\u5206\u652f $ git revert [commit] # \u6682\u65f6\u5c06\u672a\u63d0\u4ea4\u7684\u53d8\u5316\u79fb\u9664\uff0c\u7a0d\u540e\u518d\u79fb\u5165 $ git stash $ git stash pop branch \u7528\u6cd5 master \u4e3b\u5206\u652f dev\u5f00\u53d1\u7528 v3 ==\u4e00\u822c\u60c5\u51b5\u4e0bmaster\u7248\u672c\u5e94\u8be5\u975e\u5e38\u7a33\u5b9a\uff0c\u4e0d\u5728master\u4e0a\u9762\u5de5\u4f5c\u3002\u4e00\u822c\u5de5\u4f5c\u5728dev\u5206\u652f\u4e0a\u5de5\u4f5c\uff0c\u5b8c\u6210\u540emerge\u5230master\u5206\u652f\u4e0a==","title":"git"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/git/#git","text":"https://rogerdudler.github.io/git-guide/","title":"git"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/git/#_1","text":"working directory index HEAD \u5de5\u4f5c\u76ee\u5f55\u662f\u771f\u5b9e\u7684\u6587\u4ef6\u76ee\u5f55 index\u662f\u4e00\u4e2a\u6811\u7ed3\u6784\uff0c\u4fdd\u5b58\u4e86\u7248\u672c head\u4e3a\u6307\u9488\uff0c\u6307\u5411\u7248\u672c","title":"\u6838\u5fc3\u90e8\u5206"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/git/#_2","text":"# \u5728\u5f53\u524d\u76ee\u5f55\u65b0\u5efa\u4e00\u4e2aGit\u4ee3\u7801\u5e93 $ git init # \u65b0\u5efa\u4e00\u4e2a\u76ee\u5f55\uff0c\u5c06\u5176\u521d\u59cb\u5316\u4e3aGit\u4ee3\u7801\u5e93 $ git init [project-name] # \u4e0b\u8f7d\u4e00\u4e2a\u9879\u76ee\u548c\u5b83\u7684\u6574\u4e2a\u4ee3\u7801\u5386\u53f2 $ git clone [url] # \u6dfb\u52a0\u6307\u5b9a\u6587\u4ef6\u5230\u6682\u5b58\u533a $ git add [file1] [file2] ... # \u6dfb\u52a0\u6307\u5b9a\u76ee\u5f55\u5230\u6682\u5b58\u533a\uff0c\u5305\u62ec\u5b50\u76ee\u5f55 $ git add [dir] # \u6dfb\u52a0\u5f53\u524d\u76ee\u5f55\u7684\u6240\u6709\u6587\u4ef6\u5230\u6682\u5b58\u533a $ git add . # \u6dfb\u52a0\u6bcf\u4e2a\u53d8\u5316\u524d\uff0c\u90fd\u4f1a\u8981\u6c42\u786e\u8ba4 # \u5bf9\u4e8e\u540c\u4e00\u4e2a\u6587\u4ef6\u7684\u591a\u5904\u53d8\u5316\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5206\u6b21\u63d0\u4ea4 $ git add -p # \u5220\u9664\u5de5\u4f5c\u533a\u6587\u4ef6\uff0c\u5e76\u4e14\u5c06\u8fd9\u6b21\u5220\u9664\u653e\u5165\u6682\u5b58\u533a $ git rm [file1] [file2] ... # \u505c\u6b62\u8ffd\u8e2a\u6307\u5b9a\u6587\u4ef6\uff0c\u4f46\u8be5\u6587\u4ef6\u4f1a\u4fdd\u7559\u5728\u5de5\u4f5c\u533a $ git rm --cached [file] # \u6539\u540d\u6587\u4ef6\uff0c\u5e76\u4e14\u5c06\u8fd9\u4e2a\u6539\u540d\u653e\u5165\u6682\u5b58\u533a $ git mv [file-original] [file-renamed] # \u63d0\u4ea4\u6682\u5b58\u533a\u5230\u4ed3\u5e93\u533a $ git commit -m [message] # \u63d0\u4ea4\u6682\u5b58\u533a\u7684\u6307\u5b9a\u6587\u4ef6\u5230\u4ed3\u5e93\u533a $ git commit [file1] [file2] ... -m [message] # \u63d0\u4ea4\u5de5\u4f5c\u533a\u81ea\u4e0a\u6b21commit\u4e4b\u540e\u7684\u53d8\u5316\uff0c\u76f4\u63a5\u5230\u4ed3\u5e93\u533a $ git commit -a # \u63d0\u4ea4\u65f6\u663e\u793a\u6240\u6709diff\u4fe1\u606f $ git commit -v # \u4f7f\u7528\u4e00\u6b21\u65b0\u7684commit\uff0c\u66ff\u4ee3\u4e0a\u4e00\u6b21\u63d0\u4ea4 # \u5982\u679c\u4ee3\u7801\u6ca1\u6709\u4efb\u4f55\u65b0\u53d8\u5316\uff0c\u5219\u7528\u6765\u6539\u5199\u4e0a\u4e00\u6b21commit\u7684\u63d0\u4ea4\u4fe1\u606f $ git commit --amend -m [message] # \u91cd\u505a\u4e0a\u4e00\u6b21commit\uff0c\u5e76\u5305\u62ec\u6307\u5b9a\u6587\u4ef6\u7684\u65b0\u53d8\u5316 $ git commit --amend [file1] [file2] ... # \u5217\u51fa\u6240\u6709\u672c\u5730\u5206\u652f $ git branch # \u5217\u51fa\u6240\u6709\u8fdc\u7a0b\u5206\u652f $ git branch -r # \u5217\u51fa\u6240\u6709\u672c\u5730\u5206\u652f\u548c\u8fdc\u7a0b\u5206\u652f $ git branch -a # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u4f46\u4f9d\u7136\u505c\u7559\u5728\u5f53\u524d\u5206\u652f $ git branch [branch-name] # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u5e76\u5207\u6362\u5230\u8be5\u5206\u652f $ git checkout -b [branch] # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u6307\u5411\u6307\u5b9acommit $ git branch [branch] [commit] # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u4e0e\u6307\u5b9a\u7684\u8fdc\u7a0b\u5206\u652f\u5efa\u7acb\u8ffd\u8e2a\u5173\u7cfb $ git branch --track [branch] [remote-branch] # \u5207\u6362\u5230\u6307\u5b9a\u5206\u652f\uff0c\u5e76\u66f4\u65b0\u5de5\u4f5c\u533a $ git checkout [branch-name] # \u5207\u6362\u5230\u4e0a\u4e00\u4e2a\u5206\u652f $ git checkout - # \u5efa\u7acb\u8ffd\u8e2a\u5173\u7cfb\uff0c\u5728\u73b0\u6709\u5206\u652f\u4e0e\u6307\u5b9a\u7684\u8fdc\u7a0b\u5206\u652f\u4e4b\u95f4 $ git branch --set-upstream [branch] [remote-branch] # \u5408\u5e76\u6307\u5b9a\u5206\u652f\u5230\u5f53\u524d\u5206\u652f $ git merge [branch] # \u9009\u62e9\u4e00\u4e2acommit\uff0c\u5408\u5e76\u8fdb\u5f53\u524d\u5206\u652f $ git cherry-pick [commit] # \u5220\u9664\u5206\u652f $ git branch -d [branch-name] # \u5220\u9664\u8fdc\u7a0b\u5206\u652f $ git push origin --delete [branch-name] $ git branch -dr [remote/branch] # \u5217\u51fa\u6240\u6709tag $ git tag # \u65b0\u5efa\u4e00\u4e2atag\u5728\u5f53\u524dcommit $ git tag [tag] # \u65b0\u5efa\u4e00\u4e2atag\u5728\u6307\u5b9acommit $ git tag [tag] [commit] # \u5220\u9664\u672c\u5730tag $ git tag -d [tag] # \u5220\u9664\u8fdc\u7a0btag $ git push origin :refs/tags/[tagName] # \u67e5\u770btag\u4fe1\u606f $ git show [tag] # \u63d0\u4ea4\u6307\u5b9atag $ git push [remote] [tag] # \u63d0\u4ea4\u6240\u6709tag $ git push [remote] --tags # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u6307\u5411\u67d0\u4e2atag $ git checkout -b [branch] [tag] # \u663e\u793a\u6709\u53d8\u66f4\u7684\u6587\u4ef6 $ git status # \u663e\u793a\u5f53\u524d\u5206\u652f\u7684\u7248\u672c\u5386\u53f2 $ git log # \u663e\u793acommit\u5386\u53f2\uff0c\u4ee5\u53ca\u6bcf\u6b21commit\u53d1\u751f\u53d8\u66f4\u7684\u6587\u4ef6 $ git log --stat # \u641c\u7d22\u63d0\u4ea4\u5386\u53f2\uff0c\u6839\u636e\u5173\u952e\u8bcd $ git log -S [keyword] # \u663e\u793a\u67d0\u4e2acommit\u4e4b\u540e\u7684\u6240\u6709\u53d8\u52a8\uff0c\u6bcf\u4e2acommit\u5360\u636e\u4e00\u884c $ git log [tag] HEAD --pretty=format:%s # \u663e\u793a\u67d0\u4e2acommit\u4e4b\u540e\u7684\u6240\u6709\u53d8\u52a8\uff0c\u5176\"\u63d0\u4ea4\u8bf4\u660e\"\u5fc5\u987b\u7b26\u5408\u641c\u7d22\u6761\u4ef6 $ git log [tag] HEAD --grep feature # \u663e\u793a\u67d0\u4e2a\u6587\u4ef6\u7684\u7248\u672c\u5386\u53f2\uff0c\u5305\u62ec\u6587\u4ef6\u6539\u540d $ git log --follow [file] $ git whatchanged [file] # \u663e\u793a\u6307\u5b9a\u6587\u4ef6\u76f8\u5173\u7684\u6bcf\u4e00\u6b21diff $ git log -p [file] # \u663e\u793a\u8fc7\u53bb5\u6b21\u63d0\u4ea4 $ git log -5 --pretty --oneline # \u663e\u793a\u6240\u6709\u63d0\u4ea4\u8fc7\u7684\u7528\u6237\uff0c\u6309\u63d0\u4ea4\u6b21\u6570\u6392\u5e8f $ git shortlog -sn # \u663e\u793a\u6307\u5b9a\u6587\u4ef6\u662f\u4ec0\u4e48\u4eba\u5728\u4ec0\u4e48\u65f6\u95f4\u4fee\u6539\u8fc7 $ git blame [file] # \u663e\u793a\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u7684\u5dee\u5f02 $ git diff # \u663e\u793a\u6682\u5b58\u533a\u548c\u4e0a\u4e00\u4e2acommit\u7684\u5dee\u5f02 $ git diff --cached [file] # \u663e\u793a\u5de5\u4f5c\u533a\u4e0e\u5f53\u524d\u5206\u652f\u6700\u65b0commit\u4e4b\u95f4\u7684\u5dee\u5f02 $ git diff HEAD # \u663e\u793a\u4e24\u6b21\u63d0\u4ea4\u4e4b\u95f4\u7684\u5dee\u5f02 $ git diff [first-branch]...[second-branch] # \u663e\u793a\u4eca\u5929\u4f60\u5199\u4e86\u591a\u5c11\u884c\u4ee3\u7801 $ git diff --shortstat \"@{0 day ago}\" # \u663e\u793a\u67d0\u6b21\u63d0\u4ea4\u7684\u5143\u6570\u636e\u548c\u5185\u5bb9\u53d8\u5316 $ git show [commit] # \u663e\u793a\u67d0\u6b21\u63d0\u4ea4\u53d1\u751f\u53d8\u5316\u7684\u6587\u4ef6 $ git show --name-only [commit] # \u663e\u793a\u67d0\u6b21\u63d0\u4ea4\u65f6\uff0c\u67d0\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9 $ git show [commit]:[filename] # \u663e\u793a\u5f53\u524d\u5206\u652f\u7684\u6700\u8fd1\u51e0\u6b21\u63d0\u4ea4 $ git reflog # \u4e0b\u8f7d\u8fdc\u7a0b\u4ed3\u5e93\u7684\u6240\u6709\u53d8\u52a8 $ git fetch [remote] # \u663e\u793a\u6240\u6709\u8fdc\u7a0b\u4ed3\u5e93 $ git remote -v # \u663e\u793a\u67d0\u4e2a\u8fdc\u7a0b\u4ed3\u5e93\u7684\u4fe1\u606f $ git remote show [remote] # \u589e\u52a0\u4e00\u4e2a\u65b0\u7684\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5e76\u547d\u540d $ git remote add [shortname] [url] # \u53d6\u56de\u8fdc\u7a0b\u4ed3\u5e93\u7684\u53d8\u5316\uff0c\u5e76\u4e0e\u672c\u5730\u5206\u652f\u5408\u5e76 $ git pull [remote] [branch] # \u4e0a\u4f20\u672c\u5730\u6307\u5b9a\u5206\u652f\u5230\u8fdc\u7a0b\u4ed3\u5e93 $ git push [remote] [branch] # \u5f3a\u884c\u63a8\u9001\u5f53\u524d\u5206\u652f\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5373\u4f7f\u6709\u51b2\u7a81 $ git push [remote] --force # \u63a8\u9001\u6240\u6709\u5206\u652f\u5230\u8fdc\u7a0b\u4ed3\u5e93 $ git push [remote] --all # \u6062\u590d\u6682\u5b58\u533a\u7684\u6307\u5b9a\u6587\u4ef6\u5230\u5de5\u4f5c\u533a $ git checkout [file] # \u6062\u590d\u67d0\u4e2acommit\u7684\u6307\u5b9a\u6587\u4ef6\u5230\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a $ git checkout [commit] [file] # \u6062\u590d\u6682\u5b58\u533a\u7684\u6240\u6709\u6587\u4ef6\u5230\u5de5\u4f5c\u533a $ git checkout . # \u91cd\u7f6e\u6682\u5b58\u533a\u7684\u6307\u5b9a\u6587\u4ef6\uff0c\u4e0e\u4e0a\u4e00\u6b21commit\u4fdd\u6301\u4e00\u81f4\uff0c\u4f46\u5de5\u4f5c\u533a\u4e0d\u53d8 $ git reset [file] # \u91cd\u7f6e\u6682\u5b58\u533a\u4e0e\u5de5\u4f5c\u533a\uff0c\u4e0e\u4e0a\u4e00\u6b21commit\u4fdd\u6301\u4e00\u81f4 $ git reset --hard # \u91cd\u7f6e\u5f53\u524d\u5206\u652f\u7684\u6307\u9488\u4e3a\u6307\u5b9acommit\uff0c\u540c\u65f6\u91cd\u7f6e\u6682\u5b58\u533a\uff0c\u4f46\u5de5\u4f5c\u533a\u4e0d\u53d8 $ git reset [commit] # \u91cd\u7f6e\u5f53\u524d\u5206\u652f\u7684HEAD\u4e3a\u6307\u5b9acommit\uff0c\u540c\u65f6\u91cd\u7f6e\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\uff0c\u4e0e\u6307\u5b9acommit\u4e00\u81f4 $ git reset --hard [commit] # \u91cd\u7f6e\u5f53\u524dHEAD\u4e3a\u6307\u5b9acommit\uff0c\u4f46\u4fdd\u6301\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u4e0d\u53d8 $ git reset --keep [commit] # \u65b0\u5efa\u4e00\u4e2acommit\uff0c\u7528\u6765\u64a4\u9500\u6307\u5b9acommit # \u540e\u8005\u7684\u6240\u6709\u53d8\u5316\u90fd\u5c06\u88ab\u524d\u8005\u62b5\u6d88\uff0c\u5e76\u4e14\u5e94\u7528\u5230\u5f53\u524d\u5206\u652f $ git revert [commit] # \u6682\u65f6\u5c06\u672a\u63d0\u4ea4\u7684\u53d8\u5316\u79fb\u9664\uff0c\u7a0d\u540e\u518d\u79fb\u5165 $ git stash $ git stash pop","title":"\u5e38\u7528\u547d\u4ee4"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/git/#branch","text":"master \u4e3b\u5206\u652f dev\u5f00\u53d1\u7528 v3 ==\u4e00\u822c\u60c5\u51b5\u4e0bmaster\u7248\u672c\u5e94\u8be5\u975e\u5e38\u7a33\u5b9a\uff0c\u4e0d\u5728master\u4e0a\u9762\u5de5\u4f5c\u3002\u4e00\u822c\u5de5\u4f5c\u5728dev\u5206\u652f\u4e0a\u5de5\u4f5c\uff0c\u5b8c\u6210\u540emerge\u5230master\u5206\u652f\u4e0a==","title":"branch \u7528\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/htmlCSS/","text":"html\u5b66\u4e60 h1-h6 \u516d\u4e2a\u6807\u9898\u6807\u7b7e p\u6807\u7b7e \u6bb5\u843d a\u6807\u7b7e \u8d85\u94fe\u63a5 img \u56fe\u7247\u6807\u7b7e <img src=\"\" width=px/100% > hr \u6c34\u5e73\u5206\u5272\u7ebf ol \u6709\u5e8f\u5217\u8868 \u200b ul \u65e0\u5e8f\u5217\u8868 \u76f8\u5bf9\u8def\u5f84 ../ \u7528\u4e8e\u8fd4\u56de\u4e0a\u4e00\u7ea7\u76ee\u5f55 ../../\u7528\u4e8e\u8fd4\u56de\u4e24\u7ea7\u4e0a\u7ea7\u76ee\u5f55 form \u8868\u5355 \u7528\u4e8e\u63d0\u4ea4\u8868\u5355 \u5757\u7ea7\u5143\u7d20 \u884c\u7ea7\u5143\u7d20 \u5757\u7ea7\u5143\u7d20 h/p/div/ul/ol/table/form/hr a/image/iframe/span \u6837\u5f0f\u8868 \u9009\u62e9\u5668 \u6807\u7b7e\u9009\u62e9\u5668 h1 { } id\u9009\u62e9\u5668 HTML\u5143\u7d20\u4ee5id\u5c5e\u6027\u6765\u8bbe\u7f6eid\u9009\u62e9\u5668,CSS \u4e2d id \u9009\u62e9\u5668\u4ee5 \"#\" \u6765\u5b9a\u4e49\u3002 ID\u5c5e\u6027\u4e0d\u8981\u4ee5\u6570\u5b57\u5f00\u5934\uff0c\u6570\u5b57\u5f00\u5934\u7684ID\u5728 Mozilla/Firefox \u6d4f\u89c8\u5668\u4e2d\u4e0d\u8d77\u4f5c\u7528\u3002 #para1 { text-align:center; color:red; } class\u9009\u62e9\u5668 class \u9009\u62e9\u5668\u7528\u4e8e\u63cf\u8ff0\u4e00\u7ec4\u5143\u7d20\u7684\u6837\u5f0f\uff0cclass \u9009\u62e9\u5668\u6709\u522b\u4e8eid\u9009\u62e9\u5668\uff0cclass\u53ef\u4ee5\u5728\u591a\u4e2a\u5143\u7d20\u4e2d\u4f7f\u7528\u3002 class \u9009\u62e9\u5668\u5728HTML\u4e2d\u4ee5class\u5c5e\u6027\u8868\u793a, \u5728 CSS \u4e2d\uff0c\u7c7b\u9009\u62e9\u5668\u4ee5\u4e00\u4e2a\u70b9\".\"\u53f7\u663e\u793a\uff1a \u5728\u4ee5\u4e0b\u7684\u4f8b\u5b50\u4e2d\uff0c\u6240\u6709\u62e5\u6709 center \u7c7b\u7684 HTML \u5143\u7d20\u5747\u4e3a\u5c45\u4e2d\u3002 .center {text-align:center;} CSS \u6837\u5f0f https://www.runoob.com/cssref/css-reference.html \u5185\u90e8\u6837\u5f0f\u8868 \u5916\u90e8\u6837\u5f0f\u8868","title":"html\u5b66\u4e60"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/htmlCSS/#html","text":"h1-h6 \u516d\u4e2a\u6807\u9898\u6807\u7b7e p\u6807\u7b7e \u6bb5\u843d a\u6807\u7b7e \u8d85\u94fe\u63a5 img \u56fe\u7247\u6807\u7b7e <img src=\"\" width=px/100% > hr \u6c34\u5e73\u5206\u5272\u7ebf ol \u6709\u5e8f\u5217\u8868 \u200b ul \u65e0\u5e8f\u5217\u8868","title":"html\u5b66\u4e60"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/htmlCSS/#_1","text":"../ \u7528\u4e8e\u8fd4\u56de\u4e0a\u4e00\u7ea7\u76ee\u5f55 ../../\u7528\u4e8e\u8fd4\u56de\u4e24\u7ea7\u4e0a\u7ea7\u76ee\u5f55","title":"\u76f8\u5bf9\u8def\u5f84"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/htmlCSS/#form","text":"\u7528\u4e8e\u63d0\u4ea4\u8868\u5355","title":"form \u8868\u5355"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/htmlCSS/#_2","text":"\u884c\u7ea7\u5143\u7d20 \u5757\u7ea7\u5143\u7d20 h/p/div/ul/ol/table/form/hr a/image/iframe/span","title":"\u5757\u7ea7\u5143\u7d20"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/htmlCSS/#_3","text":"\u9009\u62e9\u5668","title":"\u6837\u5f0f\u8868"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/htmlCSS/#_4","text":"h1 { }","title":"\u6807\u7b7e\u9009\u62e9\u5668"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/htmlCSS/#id","text":"HTML\u5143\u7d20\u4ee5id\u5c5e\u6027\u6765\u8bbe\u7f6eid\u9009\u62e9\u5668,CSS \u4e2d id \u9009\u62e9\u5668\u4ee5 \"#\" \u6765\u5b9a\u4e49\u3002 ID\u5c5e\u6027\u4e0d\u8981\u4ee5\u6570\u5b57\u5f00\u5934\uff0c\u6570\u5b57\u5f00\u5934\u7684ID\u5728 Mozilla/Firefox \u6d4f\u89c8\u5668\u4e2d\u4e0d\u8d77\u4f5c\u7528\u3002 #para1 { text-align:center; color:red; }","title":"id\u9009\u62e9\u5668"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/htmlCSS/#class","text":"class \u9009\u62e9\u5668\u7528\u4e8e\u63cf\u8ff0\u4e00\u7ec4\u5143\u7d20\u7684\u6837\u5f0f\uff0cclass \u9009\u62e9\u5668\u6709\u522b\u4e8eid\u9009\u62e9\u5668\uff0cclass\u53ef\u4ee5\u5728\u591a\u4e2a\u5143\u7d20\u4e2d\u4f7f\u7528\u3002 class \u9009\u62e9\u5668\u5728HTML\u4e2d\u4ee5class\u5c5e\u6027\u8868\u793a, \u5728 CSS \u4e2d\uff0c\u7c7b\u9009\u62e9\u5668\u4ee5\u4e00\u4e2a\u70b9\".\"\u53f7\u663e\u793a\uff1a \u5728\u4ee5\u4e0b\u7684\u4f8b\u5b50\u4e2d\uff0c\u6240\u6709\u62e5\u6709 center \u7c7b\u7684 HTML \u5143\u7d20\u5747\u4e3a\u5c45\u4e2d\u3002 .center {text-align:center;}","title":"class\u9009\u62e9\u5668"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/htmlCSS/#css","text":"https://www.runoob.com/cssref/css-reference.html","title":"CSS \u6837\u5f0f"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/htmlCSS/#_5","text":"\u5916\u90e8\u6837\u5f0f\u8868","title":"\u5185\u90e8\u6837\u5f0f\u8868"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/http%E5%8D%8F%E8%AE%AE%E5%AD%A6%E4%B9%A0/","text":"HTTP\u534f\u8bae\u7684\u5b66\u4e60 \u76ee\u524d\u6bd4\u8f83\u666e\u904d\u7684\u534f\u8bae\u6709 ftp\uff0chttp\uff0cstmp\uff0cpop\uff0ctcp/ip \u534f\u8bae HTTP\u534f\u8bae\u7684\u5de5\u4f5c\u6d41\u7a0b \u5ba2\u6237\u7aef <---> web\u670d\u52a1\u5668 \u521d\u59cb\u72b6\u6001\uff1a0 \u6ca1\u6709\u5efa\u7acb\u8fde\u63a5 \u8bf7\u6c42\u5934\u4fe1\u606f\uff1b \u54cd\u5e94\u5934\u4fe1\u606f\u3002 \u8bf7\u6c42 \u8bf7\u6c42\u884c \u8bf7\u6c42\u5934\u4fe1\u606f \u8bf7\u6c42\u4e3b\u4f53\u4fe1\u606f \u8bf7\u6c42\u884c\u5206\u4e3a\u4e09\u90e8\u5206\uff1a \u8bf7\u6c42\u65b9\u6cd5\uff0c\u8bf7\u6c42\u8def\u5f84\uff0c\u6240\u7528\u534f\u8bae \u5176\u4e2d\u8bf7\u6c42\u65b9\u6cd5\u6709\uff1aget\uff0cpost\uff0cput\uff0cdelete\uff0ctrace\u7b49 Status Code: 304 Not Modified \u4ece\u7f13\u5b58\u91cc\u81ea\u5df1\u53d6\u7684","title":"HTTP\u534f\u8bae\u7684\u5b66\u4e60"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/http%E5%8D%8F%E8%AE%AE%E5%AD%A6%E4%B9%A0/#http","text":"\u76ee\u524d\u6bd4\u8f83\u666e\u904d\u7684\u534f\u8bae\u6709 ftp\uff0chttp\uff0cstmp\uff0cpop\uff0ctcp/ip \u534f\u8bae","title":"HTTP\u534f\u8bae\u7684\u5b66\u4e60"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/http%E5%8D%8F%E8%AE%AE%E5%AD%A6%E4%B9%A0/#http_1","text":"\u5ba2\u6237\u7aef <---> web\u670d\u52a1\u5668 \u521d\u59cb\u72b6\u6001\uff1a0 \u6ca1\u6709\u5efa\u7acb\u8fde\u63a5 \u8bf7\u6c42\u5934\u4fe1\u606f\uff1b \u54cd\u5e94\u5934\u4fe1\u606f\u3002","title":"HTTP\u534f\u8bae\u7684\u5de5\u4f5c\u6d41\u7a0b"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/http%E5%8D%8F%E8%AE%AE%E5%AD%A6%E4%B9%A0/#_1","text":"\u8bf7\u6c42\u884c \u8bf7\u6c42\u5934\u4fe1\u606f \u8bf7\u6c42\u4e3b\u4f53\u4fe1\u606f \u8bf7\u6c42\u884c\u5206\u4e3a\u4e09\u90e8\u5206\uff1a \u8bf7\u6c42\u65b9\u6cd5\uff0c\u8bf7\u6c42\u8def\u5f84\uff0c\u6240\u7528\u534f\u8bae \u5176\u4e2d\u8bf7\u6c42\u65b9\u6cd5\u6709\uff1aget\uff0cpost\uff0cput\uff0cdelete\uff0ctrace\u7b49 Status Code: 304 Not Modified \u4ece\u7f13\u5b58\u91cc\u81ea\u5df1\u53d6\u7684","title":"\u8bf7\u6c42"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/mysql%20%E5%AE%89%E8%A3%85/","text":"mysql \u5b89\u88c5 \u76f4\u63a5\u7528\u5305\u7ba1\u7406\u5668\u8fdb\u884c\u5b89\u88c5 \u53ef\u4ee5\u7406\u89e3\u4e3amariadb = mysql \u4e00\u822c\u5b89\u88c5mysql 5.7.30 \u76f4\u63a5\u7528\u5305\u7ba1\u7406\u5668\u8fdb\u884c\u5b89\u88c5 apt install mariadb-server apt install mariadb-client \u7136\u540e\u8fdb\u884c\u5bc6\u7801\u8bbe\u7f6e mysql_secure_installation \u547d\u4ee4 mysql \u662fclient \u7528\u4e8e\u64cd\u4f5c\u6570\u636e\u5e93 mysqld \u662fserver\uff0c\u76d1\u542c3306\u7aef\u53e3 mysqld\u7684\u542f\u52a8\u7528systemctl\u6765\u8fdb\u884c\u63a7\u5236","title":"mysql \u5b89\u88c5"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/mysql%20%E5%AE%89%E8%A3%85/#mysql","text":"\u76f4\u63a5\u7528\u5305\u7ba1\u7406\u5668\u8fdb\u884c\u5b89\u88c5 \u53ef\u4ee5\u7406\u89e3\u4e3amariadb = mysql \u4e00\u822c\u5b89\u88c5mysql 5.7.30 \u76f4\u63a5\u7528\u5305\u7ba1\u7406\u5668\u8fdb\u884c\u5b89\u88c5 apt install mariadb-server apt install mariadb-client \u7136\u540e\u8fdb\u884c\u5bc6\u7801\u8bbe\u7f6e mysql_secure_installation","title":"mysql \u5b89\u88c5"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/mysql%20%E5%AE%89%E8%A3%85/#_1","text":"mysql \u662fclient \u7528\u4e8e\u64cd\u4f5c\u6570\u636e\u5e93 mysqld \u662fserver\uff0c\u76d1\u542c3306\u7aef\u53e3 mysqld\u7684\u542f\u52a8\u7528systemctl\u6765\u8fdb\u884c\u63a7\u5236","title":"\u547d\u4ee4"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/yum/","text":"yum \u4e00\u822c\u6765\u8bf4\u8457\u540d\u7684linux\u7cfb\u7edf\u57fa\u672c\u4e0a\u5206\u4e24\u5927\u7c7b\uff1a 1.RedHat\u7cfb\u5217\uff1aRedhat\u3001Centos\u3001Fedora\u7b49 2.Debian\u7cfb\u5217\uff1aDebian\u3001Ubuntu\u7b49 redhat\u7cfb\u5217\u5bf9\u5e94 rpm\u5b89\u88c5\u5305 debian\u7cfb\u5217\u5bf9\u5e94 deb\u5305 \u5305\u7ba1\u7406\u5de5\u5177 yum apt-get \u6e90\u7801\u5b89\u88c5\uff1a \u9700\u8981\u81ea\u5df1\u89e3\u5305\uff0c\u7136\u540e\u8fdb\u884c\u5b89\u88c5\u4e09\u90e8\u66f2\uff0c./configure, make, make install.\u3000\u6765\u5b89\u88c5\u8f6f\u4ef6 \u7ecf\u9a8c\u603b\u7ed3 \u80fd\u7528yum\u5c3d\u91cf\u7528yum\uff0c\u4e0d\u8981\u8bd5\u56fe\u81ea\u5df1\u53bb\u89e3\u51b3\u4f9d\u8d56 \u66f4\u65b0\uff1ayum update \u5b89\u88c5\uff1ayum install xxx \u79fb\u9664\uff1ayum remove xxx \u4f7f\u7528\u6280\u5de7\uff1a yum list package \u53ef\u4ee5\u4f7f\u7528\u8d44\u6e90\u901a\u914d\u7b26\u6bd4\u5982\uff1ayum list nginx* apt-get","title":"yum"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/yum/#yum","text":"\u4e00\u822c\u6765\u8bf4\u8457\u540d\u7684linux\u7cfb\u7edf\u57fa\u672c\u4e0a\u5206\u4e24\u5927\u7c7b\uff1a 1.RedHat\u7cfb\u5217\uff1aRedhat\u3001Centos\u3001Fedora\u7b49 2.Debian\u7cfb\u5217\uff1aDebian\u3001Ubuntu\u7b49 redhat\u7cfb\u5217\u5bf9\u5e94 rpm\u5b89\u88c5\u5305 debian\u7cfb\u5217\u5bf9\u5e94 deb\u5305 \u5305\u7ba1\u7406\u5de5\u5177 yum apt-get \u6e90\u7801\u5b89\u88c5\uff1a \u9700\u8981\u81ea\u5df1\u89e3\u5305\uff0c\u7136\u540e\u8fdb\u884c\u5b89\u88c5\u4e09\u90e8\u66f2\uff0c./configure, make, make install.\u3000\u6765\u5b89\u88c5\u8f6f\u4ef6","title":"yum"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/yum/#_1","text":"\u80fd\u7528yum\u5c3d\u91cf\u7528yum\uff0c\u4e0d\u8981\u8bd5\u56fe\u81ea\u5df1\u53bb\u89e3\u51b3\u4f9d\u8d56 \u66f4\u65b0\uff1ayum update \u5b89\u88c5\uff1ayum install xxx \u79fb\u9664\uff1ayum remove xxx \u4f7f\u7528\u6280\u5de7\uff1a yum list package \u53ef\u4ee5\u4f7f\u7528\u8d44\u6e90\u901a\u914d\u7b26\u6bd4\u5982\uff1ayum list nginx*","title":"\u7ecf\u9a8c\u603b\u7ed3"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/yum/#apt-get","text":"","title":"apt-get"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E3%80%8Adocker%E3%80%8B/","text":"\u300adocker\u300b \u865a\u62df\u5316\u6280\u672f\uff0cdocker \u5bb9\u5668\u6280\u672f\u3002 \u6587\u6863 https://docs.docker.com/get-started/ \u955c\u50cf\uff1a\u7c7b container\uff1a\u5b9e\u4f8b \u90fd\u662f\u7528\u5bb9\u5668\u6765\u63d0\u4f9b\u670d\u52a1\u7684\uff0c\u4e00\u4e2a\u955c\u50cf\u53ef\u4ee5\u5b9e\u4f8b\u5316\u51fa\u591a\u4e2a\u5bb9\u5668 \u4ed3\u5e93\uff1a\u5b58\u653e\u955c\u50cf \u6709\u56fd\u5185\u955c\u50cf\u6e90 docker \u5b89\u88c5 \u5c31\u6309docs\u7528apt\u5b89\u88c5 \u7ed3\u679c\uff1a \u9ed8\u8ba4\u8d44\u6e90\u8def\u5f84 /var/lib/docker run\u7684\u6d41\u7a0b \u6211\u4eec\u5728client docker \u4e0a\u4e0e server docker daemon\u4ea4\u4e92\u3002 docker daemon\u5c31\u662f\u6211\u4eec\u7684\u5b88\u62a4\u8fdb\u7a0b \u5b88\u62a4\u8fdb\u7a0b\uff08daemon\uff09\u662f\u751f\u5b58\u671f\u957f\u7684\u4e00\u79cd\u8fdb\u7a0b\uff0c\u6ca1\u6709\u63a7\u5236\u7ec8\u7aef\u3002\u5b83\u4eec\u5e38\u5e38\u5728\u7cfb\u7edf\u5f15\u5bfc\u88c5\u5165\u65f6\u542f\u52a8\uff0c\u4ec5\u5728\u7cfb\u7edf\u5173\u95ed\u65f6\u624d\u7ec8\u6b62 docker \u57fa\u672c\u547d\u4ee4 docker version docker info # \u53ef\u4ee5\u67e5\u770bserver\u7684\u60c5\u51b5 docker \u547d\u4ee4 --help image docker images \u67e5\u770b\u672c\u5730\u4e3b\u673a\u4e0a\u7684\u955c\u50cf docker search mysql \u641c\u7d22mysql\u955c\u50cf docker pull mysql:5.7 \u4e0b\u8f7d\u955c\u50cf\uff0c\u7533\u660e\u7248\u672c\u4e00\u5b9a\u8981supported\uff0c\u5206\u5c42\u4e0b\u8f7d docker rmi -f \u5bb9\u5668id docker rmi -f $(docker images -aq) \u5168\u90e8\u5220\u9664 container docker run [\u53ef\u9009\u53c2\u6570] image # \u53c2\u6570 --name = \"name\" -d \u4ee5\u540e\u53f0\u65b9\u5f0f\u8fd0\u884c -it \u4f7f\u7528\u4ea4\u4e92\u65b9\u5f0f\u8fd0\u884c -p \u6307\u5b9a\u5bb9\u5668\u7aef\u53e3 -p \u4e3b\u673a8080:\u5bb9\u56688080 docker run -it centos /bin/bash docker ps \u5217\u51fa\u6240\u6709\u8fd0\u884c\u5bb9\u5668 -a \u6240\u6709\u5bb9\u5668 # \u5728\u4ea4\u4e92\u6a21\u5f0f\u4e0b\uff0c\u9000\u51fa\u5bb9\u5668 ctrl + p +q \u9000\u51fa\u5bb9\u5668\u4e0d\u5173\u95ed exit \u9000\u51fa\u5e76\u5173\u95ed dock rm \u5bb9\u5668id docker start \u5bb9\u5668id docker restart id docker stop \u5bb9\u5668id docker kill \u5bb9\u5668id \u5176\u4ed6\u547d\u4ee4 docker run -d \u5bb9\u5668 \u5bb9\u5668\u4f7f\u7528\u540e\u53f0\u8fd0\u884c\uff0c\u5c31\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u524d\u53f0\u8fdb\u7a0b\uff0cdocker \u53d1\u73b0\u8be5\u5bb9\u5668\u672a\u63d0\u4f9b\u670d\u52a1\uff0c\u5c31\u4f1a\u81ea\u52a8\u505c\u6b62\u3002 # \u663e\u793a\u65e5\u5fd7 docker logs -ft \u5bb9\u5668id # \u67e5\u770b\u5bb9\u5668\u4e2d\u8fdb\u7a0b docker top \u5bb9\u5668id # \u67e5\u770b\u5143\u6570\u636e docker inspect \u5bb9\u5668id # \u8fdb\u5165\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\uff0c\u8fdb\u5165\u5bb9\u5668\u540e\u5f00\u542f\u4e00\u4e2a\u65b0\u7684\u7ec8\u7aef docker exec -it \u5bb9\u5668id /bin/bash # \u8fdb\u5165\u5bb9\u5668\u6b63\u5728\u6267\u884c\u7684\u7ec8\u7aef docker attach \u5bb9\u5668id # \u4ece\u5bb9\u5668\u5185\u62f7\u8d1d\u6587\u4ef6 docker cp \u5bb9\u5668id:/\u5730\u5740 /\u5730\u5740 \u53ef\u89c6\u5316 portainer \u662f\u4e00\u4e2adocker \u56fe\u5f62\u5316\u7ba1\u7406\u754c\u9762 \u6ca1\u6709ssl\u8bc1\u4e66\u7684\u5b89\u88c5\u65b9\u6cd5 docker run -d -p 9000:9000 --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce:latest Rancher commit \u955c\u50cf docker commit -m=\"message\" -a=\"author\" \u5bb9\u5668id \u76ee\u6807\u955c\u50cf:tag \u7528\u5bb9\u5668\u751f\u6210\u955c\u50cf \u5bb9\u5668\u6570\u636e\u5377 \u5bb9\u5668\u7684\u6301\u4e45\u5316\u548c\u540c\u6b65\u64cd\u4f5c\uff0c\u5bb9\u5668\u95f4\u6570\u636e\u4e5f\u662f\u53ef\u4ee5\u5171\u4eab\u7684\u3002 docker run -v \u4e3b\u673a\u76ee\u5f55:\u5bb9\u5668\u5185\u76ee\u5f55 \u67e5\u770b\u5143\u6587\u4ef6\u7684\u7ed3\u679c\u3002 \u5bb9\u5668\u5185\u90e8\u52a0\u6587\u4ef6--\u4e3b\u673a\u4e5f\u4f1a\u6dfb\u52a0 \u4e3b\u673a\u6dfb\u52a0--\u5bb9\u5668\u5185\u90e8\u4e5f\u6dfb\u52a0 \u53cc\u5411\u7ed1\u5b9a \u5177\u540d\u6302\u8f7d\uff0c\u533f\u540d\u6302\u8f7d # \u533f\u540d\u6302\u8f7d -v \u53ea\u5199\u5bb9\u5668\u5185\u8def\u5f84 docker run -d -P --name nginx01 -v etc/nginx nginx # \u5177\u540d -v \u5377\u540d: -v \u53ea\u6307\u5b9a\u5bb9\u5668\u5185\u7684\u8def\u5f84\u7684\u8bdd\uff0c\u6570\u636e\u90fd\u88ab\u5b58\u5728\u4e86 var/lib/docker/volumes/ \u4e0b docker volume ls dockerfile \u901a\u8fc7\u811a\u672c\u751f\u6210image docker build -f dockerfile \u6570\u636e\u5377\u5bb9\u5668 --volumes-from \u5b9e\u73b0\u4e24\u4e2a\u5bb9\u5668\u6570\u636e\u540c\u6b65 dockerfile \u547d\u4ee4 FROM #\u57fa\u7840\u955c\u50cf MAINTAINER #\u7ef4\u62a4\u8005\u4fe1\u606f RUN ADD WORKDIR CMD \u53ea\u6267\u884c\u6700\u540e\u4e00\u4e2a ENTRYPOINT \u8ffd\u52a0\u6267\u884c ENV #\u73af\u5883\u53d8\u91cf docker bulit -f /file -t name:tag . docker\u7f51\u7edc \u4e09\u4e2a\u7f51\u7edc linux\u53ef\u4ee5ping\u5bb9\u5668\u5185\u90e8 \u6bcf\u6b21\u542f\u52a8\u4e00\u4e2a\u5bb9\u5668\uff0c\u4e3b\u673a\u5c31\u4f1a\u591a\u4e00\u4e2adocker0 \u7f51\u5361 \u4e3b\u673a\u4e2d\u7684docker0\u7f51\u5361 \u5bf9\u5e94\u5bb9\u5668\u4e2d\u7684\u7f51\u5361 evth-pair \u662f\u4e00\u5bf9\u865a\u62df\u8bbe\u5907\u63a5\u53e3\uff0c\u6210\u5bf9\u51fa\u73b0\u3002\u76f8\u5f53\u4e8e\u4e00\u4e2a\u6865\u6881 \u6bd4\u5982\uff1a \u5bb9\u5668\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92ping\u901a docker0 \u662f\u5bb9\u5668\u7684\u7f51\u6865 --link --link \u5bb9\u5668 \u672c\u8d28\u4e0a\u5c31\u662f\u5728host\u4e2d\u5c06ip\u4e0e\u5bb9\u5668\u540d\u7ed1\u5b9a \u300adocker-compose\u300b \u9ad8\u6548\u7ba1\u7406\u591a\u4e2a\u5bb9\u5668 \u5b9a\u4e49dockerfile \u5b9a\u4e49\u670d\u52a1\uff0c\u7ec4\u7ec7app docker-compose.yml docker-compose up yaml \u89c4\u5219 version: service: nginx: redis: volumes: neworks: configs:","title":"\u300adocker\u300b"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E3%80%8Adocker%E3%80%8B/#docker","text":"\u865a\u62df\u5316\u6280\u672f\uff0cdocker \u5bb9\u5668\u6280\u672f\u3002","title":"\u300adocker\u300b"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E3%80%8Adocker%E3%80%8B/#_1","text":"https://docs.docker.com/get-started/","title":"\u6587\u6863"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E3%80%8Adocker%E3%80%8B/#_2","text":"","title":"\u955c\u50cf\uff1a\u7c7b"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E3%80%8Adocker%E3%80%8B/#container","text":"\u90fd\u662f\u7528\u5bb9\u5668\u6765\u63d0\u4f9b\u670d\u52a1\u7684\uff0c\u4e00\u4e2a\u955c\u50cf\u53ef\u4ee5\u5b9e\u4f8b\u5316\u51fa\u591a\u4e2a\u5bb9\u5668","title":"container\uff1a\u5b9e\u4f8b"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E3%80%8Adocker%E3%80%8B/#_3","text":"\u6709\u56fd\u5185\u955c\u50cf\u6e90","title":"\u4ed3\u5e93\uff1a\u5b58\u653e\u955c\u50cf"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E3%80%8Adocker%E3%80%8B/#docker_1","text":"\u5c31\u6309docs\u7528apt\u5b89\u88c5 \u7ed3\u679c\uff1a","title":"docker \u5b89\u88c5"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E3%80%8Adocker%E3%80%8B/#_4","text":"/var/lib/docker","title":"\u9ed8\u8ba4\u8d44\u6e90\u8def\u5f84"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E3%80%8Adocker%E3%80%8B/#run","text":"\u6211\u4eec\u5728client docker \u4e0a\u4e0e server docker daemon\u4ea4\u4e92\u3002 docker daemon\u5c31\u662f\u6211\u4eec\u7684\u5b88\u62a4\u8fdb\u7a0b \u5b88\u62a4\u8fdb\u7a0b\uff08daemon\uff09\u662f\u751f\u5b58\u671f\u957f\u7684\u4e00\u79cd\u8fdb\u7a0b\uff0c\u6ca1\u6709\u63a7\u5236\u7ec8\u7aef\u3002\u5b83\u4eec\u5e38\u5e38\u5728\u7cfb\u7edf\u5f15\u5bfc\u88c5\u5165\u65f6\u542f\u52a8\uff0c\u4ec5\u5728\u7cfb\u7edf\u5173\u95ed\u65f6\u624d\u7ec8\u6b62","title":"run\u7684\u6d41\u7a0b"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E3%80%8Adocker%E3%80%8B/#docker_2","text":"docker version docker info # \u53ef\u4ee5\u67e5\u770bserver\u7684\u60c5\u51b5 docker \u547d\u4ee4 --help","title":"docker \u57fa\u672c\u547d\u4ee4"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E3%80%8Adocker%E3%80%8B/#image","text":"docker images \u67e5\u770b\u672c\u5730\u4e3b\u673a\u4e0a\u7684\u955c\u50cf docker search mysql \u641c\u7d22mysql\u955c\u50cf docker pull mysql:5.7 \u4e0b\u8f7d\u955c\u50cf\uff0c\u7533\u660e\u7248\u672c\u4e00\u5b9a\u8981supported\uff0c\u5206\u5c42\u4e0b\u8f7d docker rmi -f \u5bb9\u5668id docker rmi -f $(docker images -aq) \u5168\u90e8\u5220\u9664","title":"image"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E3%80%8Adocker%E3%80%8B/#container_1","text":"docker run [\u53ef\u9009\u53c2\u6570] image # \u53c2\u6570 --name = \"name\" -d \u4ee5\u540e\u53f0\u65b9\u5f0f\u8fd0\u884c -it \u4f7f\u7528\u4ea4\u4e92\u65b9\u5f0f\u8fd0\u884c -p \u6307\u5b9a\u5bb9\u5668\u7aef\u53e3 -p \u4e3b\u673a8080:\u5bb9\u56688080 docker run -it centos /bin/bash docker ps \u5217\u51fa\u6240\u6709\u8fd0\u884c\u5bb9\u5668 -a \u6240\u6709\u5bb9\u5668 # \u5728\u4ea4\u4e92\u6a21\u5f0f\u4e0b\uff0c\u9000\u51fa\u5bb9\u5668 ctrl + p +q \u9000\u51fa\u5bb9\u5668\u4e0d\u5173\u95ed exit \u9000\u51fa\u5e76\u5173\u95ed dock rm \u5bb9\u5668id docker start \u5bb9\u5668id docker restart id docker stop \u5bb9\u5668id docker kill \u5bb9\u5668id","title":"container"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E3%80%8Adocker%E3%80%8B/#_5","text":"docker run -d \u5bb9\u5668 \u5bb9\u5668\u4f7f\u7528\u540e\u53f0\u8fd0\u884c\uff0c\u5c31\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u524d\u53f0\u8fdb\u7a0b\uff0cdocker \u53d1\u73b0\u8be5\u5bb9\u5668\u672a\u63d0\u4f9b\u670d\u52a1\uff0c\u5c31\u4f1a\u81ea\u52a8\u505c\u6b62\u3002 # \u663e\u793a\u65e5\u5fd7 docker logs -ft \u5bb9\u5668id # \u67e5\u770b\u5bb9\u5668\u4e2d\u8fdb\u7a0b docker top \u5bb9\u5668id # \u67e5\u770b\u5143\u6570\u636e docker inspect \u5bb9\u5668id # \u8fdb\u5165\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\uff0c\u8fdb\u5165\u5bb9\u5668\u540e\u5f00\u542f\u4e00\u4e2a\u65b0\u7684\u7ec8\u7aef docker exec -it \u5bb9\u5668id /bin/bash # \u8fdb\u5165\u5bb9\u5668\u6b63\u5728\u6267\u884c\u7684\u7ec8\u7aef docker attach \u5bb9\u5668id # \u4ece\u5bb9\u5668\u5185\u62f7\u8d1d\u6587\u4ef6 docker cp \u5bb9\u5668id:/\u5730\u5740 /\u5730\u5740","title":"\u5176\u4ed6\u547d\u4ee4"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E3%80%8Adocker%E3%80%8B/#_6","text":"portainer \u662f\u4e00\u4e2adocker \u56fe\u5f62\u5316\u7ba1\u7406\u754c\u9762 \u6ca1\u6709ssl\u8bc1\u4e66\u7684\u5b89\u88c5\u65b9\u6cd5 docker run -d -p 9000:9000 --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce:latest Rancher","title":"\u53ef\u89c6\u5316"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E3%80%8Adocker%E3%80%8B/#commit","text":"docker commit -m=\"message\" -a=\"author\" \u5bb9\u5668id \u76ee\u6807\u955c\u50cf:tag \u7528\u5bb9\u5668\u751f\u6210\u955c\u50cf","title":"commit \u955c\u50cf"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E3%80%8Adocker%E3%80%8B/#_7","text":"\u5bb9\u5668\u7684\u6301\u4e45\u5316\u548c\u540c\u6b65\u64cd\u4f5c\uff0c\u5bb9\u5668\u95f4\u6570\u636e\u4e5f\u662f\u53ef\u4ee5\u5171\u4eab\u7684\u3002 docker run -v \u4e3b\u673a\u76ee\u5f55:\u5bb9\u5668\u5185\u76ee\u5f55 \u67e5\u770b\u5143\u6587\u4ef6\u7684\u7ed3\u679c\u3002 \u5bb9\u5668\u5185\u90e8\u52a0\u6587\u4ef6--\u4e3b\u673a\u4e5f\u4f1a\u6dfb\u52a0 \u4e3b\u673a\u6dfb\u52a0--\u5bb9\u5668\u5185\u90e8\u4e5f\u6dfb\u52a0 \u53cc\u5411\u7ed1\u5b9a","title":"\u5bb9\u5668\u6570\u636e\u5377"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E3%80%8Adocker%E3%80%8B/#_8","text":"# \u533f\u540d\u6302\u8f7d -v \u53ea\u5199\u5bb9\u5668\u5185\u8def\u5f84 docker run -d -P --name nginx01 -v etc/nginx nginx # \u5177\u540d -v \u5377\u540d: -v \u53ea\u6307\u5b9a\u5bb9\u5668\u5185\u7684\u8def\u5f84\u7684\u8bdd\uff0c\u6570\u636e\u90fd\u88ab\u5b58\u5728\u4e86 var/lib/docker/volumes/ \u4e0b docker volume ls","title":"\u5177\u540d\u6302\u8f7d\uff0c\u533f\u540d\u6302\u8f7d"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E3%80%8Adocker%E3%80%8B/#dockerfile","text":"\u901a\u8fc7\u811a\u672c\u751f\u6210image docker build -f dockerfile","title":"dockerfile"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E3%80%8Adocker%E3%80%8B/#_9","text":"--volumes-from \u5b9e\u73b0\u4e24\u4e2a\u5bb9\u5668\u6570\u636e\u540c\u6b65","title":"\u6570\u636e\u5377\u5bb9\u5668"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E3%80%8Adocker%E3%80%8B/#dockerfile_1","text":"FROM #\u57fa\u7840\u955c\u50cf MAINTAINER #\u7ef4\u62a4\u8005\u4fe1\u606f RUN ADD WORKDIR CMD \u53ea\u6267\u884c\u6700\u540e\u4e00\u4e2a ENTRYPOINT \u8ffd\u52a0\u6267\u884c ENV #\u73af\u5883\u53d8\u91cf docker bulit -f /file -t name:tag .","title":"dockerfile \u547d\u4ee4"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E3%80%8Adocker%E3%80%8B/#docker_3","text":"\u4e09\u4e2a\u7f51\u7edc","title":"docker\u7f51\u7edc"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E3%80%8Adocker%E3%80%8B/#linuxping","text":"\u6bcf\u6b21\u542f\u52a8\u4e00\u4e2a\u5bb9\u5668\uff0c\u4e3b\u673a\u5c31\u4f1a\u591a\u4e00\u4e2adocker0 \u7f51\u5361 \u4e3b\u673a\u4e2d\u7684docker0\u7f51\u5361 \u5bf9\u5e94\u5bb9\u5668\u4e2d\u7684\u7f51\u5361 evth-pair \u662f\u4e00\u5bf9\u865a\u62df\u8bbe\u5907\u63a5\u53e3\uff0c\u6210\u5bf9\u51fa\u73b0\u3002\u76f8\u5f53\u4e8e\u4e00\u4e2a\u6865\u6881 \u6bd4\u5982\uff1a","title":"linux\u53ef\u4ee5ping\u5bb9\u5668\u5185\u90e8"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E3%80%8Adocker%E3%80%8B/#ping","text":"docker0 \u662f\u5bb9\u5668\u7684\u7f51\u6865","title":"\u5bb9\u5668\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92ping\u901a"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E3%80%8Adocker%E3%80%8B/#-link","text":"--link \u5bb9\u5668 \u672c\u8d28\u4e0a\u5c31\u662f\u5728host\u4e2d\u5c06ip\u4e0e\u5bb9\u5668\u540d\u7ed1\u5b9a","title":"--link"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E3%80%8Adocker%E3%80%8B/#docker-compose","text":"\u9ad8\u6548\u7ba1\u7406\u591a\u4e2a\u5bb9\u5668 \u5b9a\u4e49dockerfile \u5b9a\u4e49\u670d\u52a1\uff0c\u7ec4\u7ec7app docker-compose.yml docker-compose up","title":"\u300adocker-compose\u300b"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E3%80%8Adocker%E3%80%8B/#yaml","text":"version: service: nginx: redis: volumes: neworks: configs:","title":"yaml \u89c4\u5219"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E4%BD%BF%E7%94%A8markdown%E5%88%B6%E4%BD%9Cppt/","text":"slide 1 detail description afa afas safas sadf asfas","title":"slide 1"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E4%BD%BF%E7%94%A8markdown%E5%88%B6%E4%BD%9Cppt/#slide-1","text":"","title":"slide 1"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E4%BD%BF%E7%94%A8markdown%E5%88%B6%E4%BD%9Cppt/#detail","text":"","title":"detail"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E4%BD%BF%E7%94%A8markdown%E5%88%B6%E4%BD%9Cppt/#description","text":"afa afas safas sadf asfas","title":"description"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/","text":"\u529b\u6263\u9898\u76ee\u603b\u7ed3 \u529b\u6263\u5237\u9898\u6280\u5de7 \u6570\u7ec4 \u6570\u7ec4\u662f\u5b58\u653e\u5728\u8fde\u7eed\u5185\u5b58\u7a7a\u95f4\u4e0a\u7684\u76f8\u540c\u7c7b\u578b\u6570\u636e\u7684\u96c6\u5408\u3002 \u4e8c\u5206\u67e5\u627e \u4e8c\u5206\u67e5\u627e\u4e00\u5b9a\u662f \u6709\u5e8f\u6570 \uff0c\u590d\u6742\u5ea6\u4e3a O(logn) \u79fb\u9664\u5143\u7d20 \u539f\u5730\u4e00\u5904\u67d0\u4e2a\u6570\u503c\u7684\u5143\u7d20 \u65b9\u6cd51\uff0c\u7b2c\u4e00\u5c42\u5faa\u73af\u627e\u8be5\u6570\u503c\uff0c\u7b2c\u4e8c\u5c42\u5faa\u73af\u628a\u540e\u9762\u7684\u5143\u7d20\u79fb\u52a8\u5230\u524d\u9762\u6765 \u65b9\u6cd52\uff0c\u53cc\u6307\u9488\uff0c\u5de6\u8fb9\u6307\u9488\u627e\uff0c\u53f3\u8fb9\u6307\u9488\u7ef4\u62a4\u4e00\u4e2a[val,val,val] \u6570\u7ec4 \u6709\u5e8f\u6570\u7ec4\u7684\u5e73\u65b9 \u53cc\u6307\u9488\u6cd5 \u7528\u8fc7\u4e00\u4e2a\u989d\u5916\u7684\u7a7a\u95f4\u6765\u50a8\u5b58\u7ed3\u679c \u957f\u5ea6\u6700\u5c0f\u7684\u5b50\u6570\u7ec4 \u6ed1\u52a8\u7a97\u53e3\uff0c\u53cc\u6307\u9488\u6cd5 \u7a97\u53e3\u503c \u5927\u4e8e \u76ee\u6807\u503c\uff0c\u7a97\u53e3\u7f29\u5c0f \u7a97\u53e3\u503c \u5c0f\u4e8e\uff0c\u7a97\u53e3\u589e\u5927 \u87ba\u65cb\u77e9\u9635 \u6309\u5708\u8fed\u4ee3 n = 4\uff0c\u8fed\u4ee3\u4e24\u5708 \u94fe\u8868 \u7c7b\u578b \u5355\u94fe\u8868 \u53cc\u94fe\u8868 \u5faa\u73af\u94fe\u8868 \u79fb\u9664\u94fe\u8868\u5143\u7d20 \u8bbe\u8ba1\u94fe\u8868 \u94fe\u8868\u7684\u529f\u80fd\uff1a \u7ffb\u8f6c\u94fe\u8868 \u53cc\u6307\u9488\u7ef4\u62a4 \u989d\u5916\u7a7a\u95f4\u50a8\u5b58\uff0c\u904d\u5386 \u9012\u5f52 \u54c8\u5e0c\u8868 \u56db\u6570\u76f8\u52a0 \u7528\u54c8\u5e0c\u8868\u505a\u5907\u5fd8\u5f55\u3002 \u4e8c\u53c9\u6811 \u6ee1\u4e8c\u53c9\u6811 \u5b8c\u5168\u4e8c\u53c9\u6811 \u4e8c\u53c9\u641c\u7d22\u6811 \u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811 \u4e8c\u53c9\u6811\u7684\u5b58\u50a8 \u94fe\u5f0f\u5b58\u50a8\uff08\u5e38\u7528\uff09 \u987a\u5e8f\u5b58\u50a8 \u904d\u5386 \u4ec0\u4e48\u5e8f\u6307\u7684\u662f\u6839\u8282\u70b9\u7684\u6392\u4f4d \u524d\u5e8f\u904d\u5386\uff0c\u4e2d\u5e8f\u904d\u5386\uff0c\u540e\u7eed\u904d\u5386 ----> \u6df1\u5ea6\u4f18\u5148\u641c\u7d22 \u5c42\u5e8f ---> \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22 \u9012\u5f52\u904d\u5386 \u975e\u9012\u5f52\u904d\u5386\uff0c\u4f7f\u7528\u6808\u6765\u6a21\u62df\u9012\u5f52\u7684\u8fc7\u7a0b \u53cc\u6307\u9488 \u4f7f\u7528\u53cc\u6307\u9488\u8fdb\u884c\u641c\u7d22\uff0c\u53ef\u4ee5\u51cf\u5c0f\u641c\u7d22\u7a7a\u95f4\u3002\u53cc\u6307\u9488\u7684\u5965\u4e49\u5728\u4e8e\u4f7f\u7528 \u6392\u5e8f \u6765 \u51cf\u5c0f\u641c\u7d22\u7a7a\u95f4 \uff01 \u5728\u6392\u5e8f\u8fc7\u7684\u6570\u7ec4\u4e2d\uff0c\u53cc\u6307\u9488\u627e\u4e24\u6570\u7684 \u548c \u53ea\u7528n\uff0c\u800c\u904d\u5386\u9700\u8981n^2 \u5feb\u6162\u6307\u9488 \u7ef4\u62a4\u6570\u7ec4 \uff0c\u94fe\u8868 \u4e09\u6570\u4e4b\u548c\uff08\u6700\u7ecf\u5178\uff09 \u7b2c\u4e00\u6b65\uff0c\u6392\u5e8f\u3002 \u7b2c\u4e8c\u6b65\uff0c\u53cc\u6307\u9488\u3002 \u6700\u63a5\u8fd1\u7684\u4e09\u6570\u4e4b\u548c \u5982\u524d\u4e00\u9898\uff0c\u4f7f\u7528\u989d\u5916\u7684\u7a7a\u95f4\u6765\u4fdd\u5b58gap\uff0c\u6700\u540e\u6765\u6bd4\u8f83 \u56db\u6570\u4e4b\u548c \u56fa\u5b9a\u4e24\u4e2a\u6570\uff0c\u7136\u540e\u518d\u4f7f\u7528\u53cc\u6307\u9488 \u5220\u9664\u94fe\u8868\u7684\u5012\u6570\u7b2c N \u4e2a\u7ed3\u70b9 \u94fe\u8868\u7684\u64cd\u4f5c dummy node\u7528\u4e8e\u8bb0\u5f55\u5934\u90e8 \u5feb\u6162\u6307\u9488\u7684\u8ddd\u79bb\u6765\u4fdd\u8bc1n \u79fb\u9664\u5143\u7d20 \u4f7f\u7528\u524d\u540e\u6307\u9488\uff0c\u6765\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4\u3002 \u63a5\u96e8\u6c34\uff08\u597d\u9898\uff09 \u5e38\u89c4\u601d\u60f3\uff1a \u5bf9\u6bcf\u4e2a\u4f4d\u7f6ei\uff0cmin(\u5de6\u8fb9\u6700\u9ad8\u7684\u5217\uff0c\u53f3\u8fb9\u6700\u9ad8\u7684\u5217)-height[i]\uff0c\u662f\u8fd9\u4e00\u5217\u7684\u6c34\u91cf \u904d\u5386\uff0c\u6240\u4ee5n^2\u590d\u6742\u5ea6 \u52a8\u6001\u89c4\u5212\uff1a \u5efa\u7acb\u4e00\u4e2a\u6570\u7ec4\uff0c\u8bb0\u5f55\u8be5\u4f4d\u7f6e\uff0c\u5de6\u3001\u53f3\u8fb9\u7684\u6700\u9ad8 \u65f6\u95f4\u590d\u6742\u5ea6\u4e3an \u53cc\u6307\u9488\uff1a \u4f18\u5316\u7a7a\u95f4\u590d\u6742\u5ea6 \u65cb\u8f6c\u94fe\u8868 \u4f7f\u7528\u53cc\u6307\u9488\u6765\u7ef4\u62a4\u94fe\u8868 \u5176\u5b9e\u5c31\u662f\u627e\u5230\u5408\u9002\u7684\u5730\u65b9\uff08\u4f9d\u636ek\uff09\uff0c\u8fdb\u884c\u622a\u65ad\u64cd\u4f5c\u3002 \u79fb\u52a8\u96f6 \u4f7f\u7528\u53cc\u6307\u9488\u6765\u7ef4\u62a4\u6570\u7ec4 \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd \u4f7f\u7528\u53cc\u6307\u9488\u6765\u7ef4\u62a4\u5b57\u7b26\u4e32\u3002 \u65b9\u6cd51\uff1a\u4f7f\u7528\u53cc\u6307\u9488\uff0c\u4f7f\u7528\u989d\u5916\u7684\u4e00\u4e2an\u7684\u7a7a\u95f4\u6765\u5b58\u653e\u65b0\u7684\u5b57\u7b26\u4e32 \u5982\u4f55\u8282\u7ea6n\u5927\u5c0f\u7684\u7a7a\u95f4\u5462\uff1f\u539f\u5730\u64cd\u4f5c\uff0c\u4f46\u662f\u7531\u4e8e python\u7684\u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u7684 \uff0c\u6240\u4ee5\u6ca1\u529e\u6cd5\u8282\u7ea6\u7a7a\u95f4 \u94fe\u8868\u7684\u4e2d\u95f4\u7ed3\u70b9 \u5355\u6307\u9488\uff0c\u904d\u5386 n +2/n \u4e2a\u5143\u7d20\u5c31\u80fd\u627e\u5230 \u5feb\u6162\u6307\u9488\uff0c\u5feb\u7684\u4e24\u4e2a\u4e00\u8d70\uff0c\u6162\u7684\u4e00\u4e2a\u4e00\u8d70\u3002 \u961f\u5217\u548c\u6808 \u7406\u8bba\u57fa\u7840 \u9012\u5f52\u7684\u5b9e\u73b0\u5c31\u662f\uff1a\u6bcf\u4e00\u6b21\u9012\u5f52\u8c03\u7528\u90fd\u4f1a\u628a\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf\u3001\u53c2\u6570\u503c\u548c\u8fd4\u56de\u5730\u5740\u7b49\u538b\u5165\u8c03\u7528\u6808\u4e2d \uff0c\u7136\u540e\u9012\u5f52\u8fd4\u56de\u7684\u65f6\u5019\uff0c\u4ece\u6808\u9876\u5f39\u51fa\u4e0a\u4e00\u6b21\u9012\u5f52\u7684\u5404\u9879\u53c2\u6570\uff0c\u6240\u4ee5\u8fd9\u5c31\u662f\u9012\u5f52\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u8fd4\u56de\u4e0a\u4e00\u5c42\u4f4d\u7f6e\u7684\u539f\u56e0\u3002 \u7528\u6808\u5b9e\u73b0\u961f\u5217 \u80af\u5b9a\u8981\u7528\u4e24\u4e2a\u6808 \u52a0\u5143\u7d20\uff0c\u653e\u5230A \u51fa\u5143\u7d20\uff0cA-B, \u4eceB\u5f39\u51fa \u62ec\u53f7\u5339\u914d \u62ec\u53f7\u5339\u914d\u662f\u4f7f\u7528\u6808\u89e3\u51b3\u7684\u7ecf\u5178\u95ee\u9898 \u9012\u5f52\u7684\u601d\u60f3 \u6808\u7684\u601d\u60f3 \u56de\u6eaf\uff0c\u9012\u5f52 \u7ec4\u5408\u95ee\u9898 \u5207\u5272\u95ee\u9898 \u5b50\u96c6\u95ee\u9898 \u6392\u5217\u95ee\u9898 \u68cb\u76d8\u95ee\u9898 \u6240\u6709\u7684\u56de\u6eaf\u6cd5\u90fd\u53ef\u4ee5\u62bd\u8c61\u4e3a\u4e00\u4e2a\u6811\u5f62\u7ed3\u6784\uff0c\u9012\u5f52\u6765\u505a\u7eb5\u5411\u6df1\u5ea6\uff0c\u6a2a\u5411\u679d\u9009\u62e9\u7528for\u5faa\u73af \u6a21\u677f def backtracking(\u53c2\u6570): if \u7ec8\u6b62\u6761\u4ef6: return \u7ed3\u679c for\uff1a \u51cf\u679d\u64cd\u4f5c \u5904\u7406\u8282\u70b9 backtracking() return \u7ec8\u6b62\u6761\u4ef6\u7528\u4e8e\u5b9a\u4e49\u53f6\u5b50\u8282\u70b9 for\u5faa\u73af\u7528\u4e8e\u751f\u6210\u6bcf\u4e2a\u53f6\u5b50\u4e0b\u9762\u7684\u679d \u65b9\u6cd5\u4e00 \u4f7f\u7528index\u6307\u9488 \u65b9\u6cd5\u4e8c \u4f7f\u7528 used\u6570\u7ec4 for i in [1,0,1,0] \u5728\u5904\u7406\u8282\u70b9\u7684\u65f6\u5019\uff0c \u4e0d\u8981\u8f7b\u6613\u6539\u53d8\u5f53\u524d\u8282\u70b9\u7684\u6570\u636e \uff01\u4f8b\u5982\uff0c\u4e0d\u8981\u4fee\u6539path\uff0c\u800c\u662f\u76f4\u63a5\u5c06\u4fee\u6539\u540e\u7684path\u4f20\u5165\u4e0b\u4e00\u4e2a\u8282\u70b9\uff01 \u7f51\u4e0a\u7684\u6a21\u677f def backtrack(\u8def\u5f84, \u9009\u62e9\u5217\u8868): if \u6ee1\u8db3\u7ed3\u675f\u6761\u4ef6: result.add(\u8def\u5f84) return //\u76f8\u5f53\u4e8e\u591a\u53c9\u6811\u7684\u904d\u5386\uff0ci\u7684\u4e2a\u6570\u4ece2\u53d8\u6210\u4e86n\uff0c\u5e76\u4e14\u5199\u6210\u4e86for\u5faa\u73af\u7684\u5f62\u5f0f for \u9009\u62e9 in \u9009\u62e9\u5217\u8868: if \u9009\u62e9 in \u8def\u5f84\uff1a continue \u8def\u5f84.add(\u9009\u62e9) backtrack(\u8def\u5f84, \u9009\u62e9\u5217\u8868) //\u5c06\u6570\u503c\u6539\u56de\u6210\u539f\u6765\u7684\u72b6\u6001 \u8def\u5f84.remove(\u9009\u62e9) \u7ec8\u6b62\u6761\u4ef6 \u81ea\u6211\u8c03\u7528 \u7ffb\u8f6c\u94fe\u8868 \u7ec4\u5408 \u9012\u5f52\u9700\u8981\u6ce8\u610f\u5404\u79cd\u7ec8\u6b62\u6761\u4ef6 \u5b50\u96c6 \u548c\u6392\u5217\u6709\u4e9b\u76f8\u4f3c\uff0c\u76f8\u5f53\u4e8e\u5728 \u6bcf\u4e2a\u8282\u70b9\u90fd\u4f1a\u6dfb\u52a0result \u5168\u6392\u5217 \u4f7f\u7528\u56de\u6eaf\u7b97\u6cd5 \u56de\u6eaf\u6cd5 \u91c7\u7528\u8bd5\u9519\u7684\u601d\u60f3\uff0c\u5b83\u5c1d\u8bd5\u5206\u6b65\u7684\u53bb\u89e3\u51b3\u4e00\u4e2a\u95ee\u9898\u3002\u5728\u5206\u6b65\u89e3\u51b3\u95ee\u9898\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5f53\u5b83\u901a\u8fc7\u5c1d\u8bd5\u53d1\u73b0\u73b0\u6709\u7684\u5206\u6b65\u7b54\u6848\u4e0d\u80fd\u5f97\u5230\u6709\u6548\u7684\u6b63\u786e\u7684\u89e3\u7b54\u7684\u65f6\u5019\uff0c\u5b83\u5c06\u53d6\u6d88\u4e0a\u4e00\u6b65\u751a\u81f3\u662f\u4e0a\u51e0\u6b65\u7684\u8ba1\u7b97\uff0c\u518d\u901a\u8fc7\u5176\u5b83\u7684\u53ef\u80fd\u7684\u5206\u6b65\u89e3\u7b54\u518d\u6b21\u5c1d\u8bd5\u5bfb\u627e\u95ee\u9898\u7684\u7b54\u6848\u3002\u56de\u6eaf\u6cd5\u901a\u5e38\u7528\u6700\u7b80\u5355\u7684\u9012\u5f52\u65b9\u6cd5\u6765\u5b9e\u73b0\uff0c\u5728\u53cd\u590d\u91cd\u590d\u4e0a\u8ff0\u7684\u6b65\u9aa4\u540e\u53ef\u80fd\u51fa\u73b0\u4e24\u79cd\u60c5\u51b5\uff1a \u627e\u5230\u4e00\u4e2a\u53ef\u80fd\u5b58\u5728\u7684\u6b63\u786e\u7684\u7b54\u6848\uff1b \u5728\u5c1d\u8bd5\u4e86\u6240\u6709\u53ef\u80fd\u7684\u5206\u6b65\u65b9\u6cd5\u540e\u5ba3\u544a\u8be5\u95ee\u9898\u6ca1\u6709\u7b54\u6848\u3002 \uff081\uff0c2\uff0c3\uff09\u7684\u5168\u6392\u5217\u662f 1+\uff082\uff0c3\uff09\u7684\u5168\u6392\u5217 class Solution: def permute(self, nums): \"\"\" :type nums: List[int] :rtype: List[List[int]] \"\"\" def backtrack(first = 0): # \u6240\u6709\u6570\u90fd\u586b\u5b8c\u4e86 if first == n: res.append(nums[:]) for i in range(first, n): # \u52a8\u6001\u7ef4\u62a4\u6570\u7ec4 nums[first], nums[i] = nums[i], nums[first] # \u7ee7\u7eed\u9012\u5f52\u586b\u4e0b\u4e00\u4e2a\u6570 backtrack(first + 1) # \u64a4\u9500\u64cd\u4f5c nums[first], nums[i] = nums[i], nums[first] n = len(nums) res = [] backtrack() return res \u5168\u6392\u52172 \u7531\u4e8e\u91cd\u590d\u5143\u7d20\uff0c\u6d89\u53ca\u5230\u53bb\u91cd\uff0c\u9700\u8981\u51cf\u679d\u64cd\u4f5c N\u7687\u540e \u6df1\u5ea6\u4f18\u5148\u641c\u7d22/ \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22 \u56de\u6eaf\u7b97\u6cd5\u5176\u5b9e\u5c31\u662f\u6df1\u5ea6\u4f18\u5148\u7b97\u6cd5 \u56fe\u50cf\u6e32\u67d3 \u5e7f\u5ea6\u4f18\u5148\u7b97\u6cd5\u4f9d\u9760\u961f\u5217\u6765\u5b9e\u73b0\uff1a class Solution: def floodFill(self, image: List[List[int]], sr: int, sc: int, newColor: int) -> List[List[int]]: # \u7279\u6b8a\u60c5\u51b5 currColor = image[sr][sc] if currColor == newColor: return image n, m = len(image), len(image[0]) que = collections.deque([(sr, sc)]) image[sr][sc] = newColor while que: x, y = que.popleft() for mx, my in [(x - 1, y), (x + 1, y), (x, y - 1), (x, y + 1)]: if 0 <= mx < n and 0 <= my < m and image[mx][my] == currColor: que.append((mx, my)) image[mx][my] = newColor return image \u5229\u7528\u961f\u5217\u7684\u5148\u8fdb\u5148\u51fa \u6a21\u677f\uff1a while queue \u4e0d\u7a7a\uff1a cur = queue.pop() for \u8282\u70b9 in cur\u7684\u6240\u6709\u76f8\u90bb\u8282\u70b9\uff1a if \u8be5\u8282\u70b9\u6709\u6548\u4e14\u672a\u8bbf\u95ee\u8fc7\uff1a queue.push(\u8be5\u8282\u70b9) depth = 0 while queue \u4e0d\u7a7a\uff1a size = queue.size() for i in rang(size): # \u53d6\u51fa\u8fd9\u4e00\u5c42\u7684\u5143\u7d20 cur = queue.popleft() for \u8282\u70b9 in cur\u7684\u6240\u6709\u76f8\u90bb\u8282\u70b9\uff1a if \u6709\u6548 and \u672a\u88ab\u8bbf\u95ee\uff1a queue.append(\u8282\u70b9) optional\uff1a\u5904\u7406\u8be5\u8282\u70b9 depth += 1 01\u77e9\u9635 \u52a8\u6001\u89c4\u5212 \u95ee\u9898\uff1a \u6590\u6ce2\u90a3\u5951\u989d\u6570\u5217 \u8df3\u53f0\u9636 \u80cc\u5305\u95ee\u9898 \u6253\u5bb6\u52ab\u820d \u80a1\u7968\u95ee\u9898 \u5b50\u5e8f\u5217\u95ee\u9898 \u9ad8\u96be\u5ea6\u95ee\u9898\uff1a\u533a\u95f4dp\uff0c\u6982\u7387dp\u3002 dp\u6570\u7ec4\u4ee5\u53ca\u5176\u4e0b\u6807\u7684\u542b\u4e49 \u9012\u63a8\u516c\u5f0f dp\u6570\u7ec4\u5982\u4f55\u521d\u59cb\u5316 \u904d\u5386\u987a\u5e8f \u6253\u5370dp\u6570\u7ec4 \u722c\u697c\u68af\uff08\u7ecf\u5178\uff09 $$ f(n) = f(n-1)+f(n-2) $$ \u4e94\u6b65\u6cd5\uff1a \u786e\u5b9adp\u6570\u7ec4\u7684\u542b\u4e49 \u786e\u5b9a\u9012\u5f52\u516c\u5f0f \u521d\u59cb\u5316dp\u6570\u7ec4 \u786e\u5b9a\u904d\u5386\u987a\u5e8f dp\u6570\u7ec4\uff0cdp[i]\u8fbe\u5230i\u9636\u6709dp[i]\u79cd\u65b9\u6cd5 dp[i] = dp[i-2]+dp[i-1] 01\u80cc\u5305\uff08\u7ecf\u5178\uff0c\u57fa\u7840\uff09 \u200b \u7269\u54c1 \u91cd\u91cf \u4ef7\u503c 0 1 15 1 3 20 2 4 30 \u80cc\u5305\u6700\u5927\u80fd\u88c54\u3002 \u5982\u679c\u4f7f\u7528\u56de\u6eaf\u7b97\u6cd5\uff0c\u90a3\u4e482^3\u79cd\u60c5\u51b5\u8981\u904d\u5386\uff0c\u662f\u66b4\u529b\u904d\u5386\u3002 \u5b9a\u4e49\u4e8c\u7ef4dp[i][j]\u6570\u7ec4\u3002 [0:i]\u7684\u7269\u54c1\u4efb\u53d6\u653e\u5230\u5bb9\u91cf\u4e3aj\u7684\u80cc\u5305\u5185\u7684\u6700\u5927\u4ef7\u503c dp[i][j]=max(dp[i-1][j], dp[i-1][j-weight[i]]+weight[i]) \u521d\u59cb\u5316\uff0c\u628a\u8868\u753b\u51fa\u6765\u770b\u770b\uff1a \u6ce8\u610f\u904d\u5386\u987a\u5e8f\uff0c\u867d\u7136\u5728\u8fd9\u91cc\u53ef\u4ee5\u98a0\u5012\u3002 \u5b8c\u5168\u80cc\u5305 \u6253\u5bb6\u52ab\u820d $$ d p[i]=\\max (d p[i-2]+n u m s[i], d p[i-1]) $$ dp[i] \u6307\u7684\u662f 0:i \u5bb6\u53ef\u4ee5\u5077\u5230\u7684\u6700\u591a\u94b1 \u6700\u957f\u56de\u6587\u4e32 \u5efa\u7acb\u4e8c\u7ef4\u6570\u7ec4 dp[i][j] = 1 \u5982\u679c s[i:j]\u662f\u56de\u6587\u4e32 \u6570\u636e\u7ed3\u6784 \u7528\u4e24\u4e2a\u6808\u5b9e\u73b0\u961f\u5217 \u4e00\u4e2a\u6808\u7528\u4e8e\u50a8\u5b58 \u4e00\u4e2a\u6808\u7528\u8f85\u52a9\u64cd\u4f5c \u5305\u542bmin\u51fd\u6570\u7684\u6808 \u4e00\u4e2a\u6808\u7528\u4e8e\u50a8\u5b58\u6570\u636e \u4e00\u4e2a\u6808\u7528\u4e8e\u4fdd\u5b58min \u6ce8\u610fpop\u4f1a\u5bfc\u81f4min\u7684\u6539\u53d8 \u5176\u4ed6\u7c7b\u578b \u989c\u8272\u5206\u7c7b \u5feb\u901f\u6392\u5e8f \u4e0b\u4e00\u4e2a\u6392\u5217 \u5c06\u540e\u9762\u7684\u5927\u6570\u653e\u5230\u524d\u9762 \u4e3a\u4e86\u4fdd\u8bc1\u589e\u52a0\u5e45\u5ea6\u5c0f\uff0c\u5927\u6570\u8981\u9760\u53f3 \u6362\u4f4d\u540e\uff0c\u5c06\u5927\u6570\u540e\u9762\u7684\u90a3\u90e8\u5206\u6539\u4e3a\u5347\u5e8f\uff0c\u4ee5\u4f7f\u5b83\u6700\u5c0f \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd \u8fd9\u9898\u9700\u8981\u6ce8\u610f\u7684\u662fpython\u7684\u5b57\u7b26\u4e32\u4e0d\u53ef\u53d8\uff0c\u4e0d\u80fd\u539f\u5730\u64cd\u4f5c \u4f7f\u7528str.split\u8fdb\u884c\u64cd\u4f5c\u4f1a\u5f88\u7b80\u5355","title":"\u529b\u6263\u9898\u76ee\u603b\u7ed3"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_1","text":"","title":"\u529b\u6263\u9898\u76ee\u603b\u7ed3"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_2","text":"","title":"\u529b\u6263\u5237\u9898\u6280\u5de7"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_3","text":"\u6570\u7ec4\u662f\u5b58\u653e\u5728\u8fde\u7eed\u5185\u5b58\u7a7a\u95f4\u4e0a\u7684\u76f8\u540c\u7c7b\u578b\u6570\u636e\u7684\u96c6\u5408\u3002","title":"\u6570\u7ec4"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_4","text":"\u4e8c\u5206\u67e5\u627e\u4e00\u5b9a\u662f \u6709\u5e8f\u6570 \uff0c\u590d\u6742\u5ea6\u4e3a O(logn)","title":"\u4e8c\u5206\u67e5\u627e"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_5","text":"\u539f\u5730\u4e00\u5904\u67d0\u4e2a\u6570\u503c\u7684\u5143\u7d20 \u65b9\u6cd51\uff0c\u7b2c\u4e00\u5c42\u5faa\u73af\u627e\u8be5\u6570\u503c\uff0c\u7b2c\u4e8c\u5c42\u5faa\u73af\u628a\u540e\u9762\u7684\u5143\u7d20\u79fb\u52a8\u5230\u524d\u9762\u6765 \u65b9\u6cd52\uff0c\u53cc\u6307\u9488\uff0c\u5de6\u8fb9\u6307\u9488\u627e\uff0c\u53f3\u8fb9\u6307\u9488\u7ef4\u62a4\u4e00\u4e2a[val,val,val] \u6570\u7ec4","title":"\u79fb\u9664\u5143\u7d20"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_6","text":"\u53cc\u6307\u9488\u6cd5 \u7528\u8fc7\u4e00\u4e2a\u989d\u5916\u7684\u7a7a\u95f4\u6765\u50a8\u5b58\u7ed3\u679c","title":"\u6709\u5e8f\u6570\u7ec4\u7684\u5e73\u65b9"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_7","text":"\u6ed1\u52a8\u7a97\u53e3\uff0c\u53cc\u6307\u9488\u6cd5 \u7a97\u53e3\u503c \u5927\u4e8e \u76ee\u6807\u503c\uff0c\u7a97\u53e3\u7f29\u5c0f \u7a97\u53e3\u503c \u5c0f\u4e8e\uff0c\u7a97\u53e3\u589e\u5927","title":"\u957f\u5ea6\u6700\u5c0f\u7684\u5b50\u6570\u7ec4"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_8","text":"\u6309\u5708\u8fed\u4ee3 n = 4\uff0c\u8fed\u4ee3\u4e24\u5708","title":"\u87ba\u65cb\u77e9\u9635"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_9","text":"\u7c7b\u578b \u5355\u94fe\u8868 \u53cc\u94fe\u8868 \u5faa\u73af\u94fe\u8868","title":"\u94fe\u8868"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_10","text":"","title":"\u79fb\u9664\u94fe\u8868\u5143\u7d20"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_11","text":"\u94fe\u8868\u7684\u529f\u80fd\uff1a","title":"\u8bbe\u8ba1\u94fe\u8868"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_12","text":"\u53cc\u6307\u9488\u7ef4\u62a4 \u989d\u5916\u7a7a\u95f4\u50a8\u5b58\uff0c\u904d\u5386 \u9012\u5f52","title":"\u7ffb\u8f6c\u94fe\u8868"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_13","text":"","title":"\u54c8\u5e0c\u8868"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_14","text":"\u7528\u54c8\u5e0c\u8868\u505a\u5907\u5fd8\u5f55\u3002","title":"\u56db\u6570\u76f8\u52a0"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_15","text":"\u6ee1\u4e8c\u53c9\u6811 \u5b8c\u5168\u4e8c\u53c9\u6811 \u4e8c\u53c9\u641c\u7d22\u6811 \u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811","title":"\u4e8c\u53c9\u6811"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_16","text":"\u94fe\u5f0f\u5b58\u50a8\uff08\u5e38\u7528\uff09 \u987a\u5e8f\u5b58\u50a8","title":"\u4e8c\u53c9\u6811\u7684\u5b58\u50a8"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_17","text":"\u4ec0\u4e48\u5e8f\u6307\u7684\u662f\u6839\u8282\u70b9\u7684\u6392\u4f4d \u524d\u5e8f\u904d\u5386\uff0c\u4e2d\u5e8f\u904d\u5386\uff0c\u540e\u7eed\u904d\u5386 ----> \u6df1\u5ea6\u4f18\u5148\u641c\u7d22 \u5c42\u5e8f ---> \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22 \u9012\u5f52\u904d\u5386 \u975e\u9012\u5f52\u904d\u5386\uff0c\u4f7f\u7528\u6808\u6765\u6a21\u62df\u9012\u5f52\u7684\u8fc7\u7a0b","title":"\u904d\u5386"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_18","text":"\u4f7f\u7528\u53cc\u6307\u9488\u8fdb\u884c\u641c\u7d22\uff0c\u53ef\u4ee5\u51cf\u5c0f\u641c\u7d22\u7a7a\u95f4\u3002\u53cc\u6307\u9488\u7684\u5965\u4e49\u5728\u4e8e\u4f7f\u7528 \u6392\u5e8f \u6765 \u51cf\u5c0f\u641c\u7d22\u7a7a\u95f4 \uff01 \u5728\u6392\u5e8f\u8fc7\u7684\u6570\u7ec4\u4e2d\uff0c\u53cc\u6307\u9488\u627e\u4e24\u6570\u7684 \u548c \u53ea\u7528n\uff0c\u800c\u904d\u5386\u9700\u8981n^2 \u5feb\u6162\u6307\u9488 \u7ef4\u62a4\u6570\u7ec4 \uff0c\u94fe\u8868","title":"\u53cc\u6307\u9488"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_19","text":"\u7b2c\u4e00\u6b65\uff0c\u6392\u5e8f\u3002 \u7b2c\u4e8c\u6b65\uff0c\u53cc\u6307\u9488\u3002","title":"\u4e09\u6570\u4e4b\u548c\uff08\u6700\u7ecf\u5178\uff09"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_20","text":"\u5982\u524d\u4e00\u9898\uff0c\u4f7f\u7528\u989d\u5916\u7684\u7a7a\u95f4\u6765\u4fdd\u5b58gap\uff0c\u6700\u540e\u6765\u6bd4\u8f83","title":"\u6700\u63a5\u8fd1\u7684\u4e09\u6570\u4e4b\u548c"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_21","text":"\u56fa\u5b9a\u4e24\u4e2a\u6570\uff0c\u7136\u540e\u518d\u4f7f\u7528\u53cc\u6307\u9488","title":"\u56db\u6570\u4e4b\u548c"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#n","text":"\u94fe\u8868\u7684\u64cd\u4f5c dummy node\u7528\u4e8e\u8bb0\u5f55\u5934\u90e8 \u5feb\u6162\u6307\u9488\u7684\u8ddd\u79bb\u6765\u4fdd\u8bc1n","title":"\u5220\u9664\u94fe\u8868\u7684\u5012\u6570\u7b2c N \u4e2a\u7ed3\u70b9"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_22","text":"\u4f7f\u7528\u524d\u540e\u6307\u9488\uff0c\u6765\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4\u3002","title":"\u79fb\u9664\u5143\u7d20"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_23","text":"\u5e38\u89c4\u601d\u60f3\uff1a \u5bf9\u6bcf\u4e2a\u4f4d\u7f6ei\uff0cmin(\u5de6\u8fb9\u6700\u9ad8\u7684\u5217\uff0c\u53f3\u8fb9\u6700\u9ad8\u7684\u5217)-height[i]\uff0c\u662f\u8fd9\u4e00\u5217\u7684\u6c34\u91cf \u904d\u5386\uff0c\u6240\u4ee5n^2\u590d\u6742\u5ea6 \u52a8\u6001\u89c4\u5212\uff1a \u5efa\u7acb\u4e00\u4e2a\u6570\u7ec4\uff0c\u8bb0\u5f55\u8be5\u4f4d\u7f6e\uff0c\u5de6\u3001\u53f3\u8fb9\u7684\u6700\u9ad8 \u65f6\u95f4\u590d\u6742\u5ea6\u4e3an \u53cc\u6307\u9488\uff1a \u4f18\u5316\u7a7a\u95f4\u590d\u6742\u5ea6","title":"\u63a5\u96e8\u6c34\uff08\u597d\u9898\uff09"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_24","text":"\u4f7f\u7528\u53cc\u6307\u9488\u6765\u7ef4\u62a4\u94fe\u8868 \u5176\u5b9e\u5c31\u662f\u627e\u5230\u5408\u9002\u7684\u5730\u65b9\uff08\u4f9d\u636ek\uff09\uff0c\u8fdb\u884c\u622a\u65ad\u64cd\u4f5c\u3002","title":"\u65cb\u8f6c\u94fe\u8868"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_25","text":"\u4f7f\u7528\u53cc\u6307\u9488\u6765\u7ef4\u62a4\u6570\u7ec4","title":"\u79fb\u52a8\u96f6"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_26","text":"\u4f7f\u7528\u53cc\u6307\u9488\u6765\u7ef4\u62a4\u5b57\u7b26\u4e32\u3002 \u65b9\u6cd51\uff1a\u4f7f\u7528\u53cc\u6307\u9488\uff0c\u4f7f\u7528\u989d\u5916\u7684\u4e00\u4e2an\u7684\u7a7a\u95f4\u6765\u5b58\u653e\u65b0\u7684\u5b57\u7b26\u4e32 \u5982\u4f55\u8282\u7ea6n\u5927\u5c0f\u7684\u7a7a\u95f4\u5462\uff1f\u539f\u5730\u64cd\u4f5c\uff0c\u4f46\u662f\u7531\u4e8e python\u7684\u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u7684 \uff0c\u6240\u4ee5\u6ca1\u529e\u6cd5\u8282\u7ea6\u7a7a\u95f4","title":"\u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_27","text":"\u5355\u6307\u9488\uff0c\u904d\u5386 n +2/n \u4e2a\u5143\u7d20\u5c31\u80fd\u627e\u5230 \u5feb\u6162\u6307\u9488\uff0c\u5feb\u7684\u4e24\u4e2a\u4e00\u8d70\uff0c\u6162\u7684\u4e00\u4e2a\u4e00\u8d70\u3002","title":"\u94fe\u8868\u7684\u4e2d\u95f4\u7ed3\u70b9"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_28","text":"","title":"\u961f\u5217\u548c\u6808"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_29","text":"\u9012\u5f52\u7684\u5b9e\u73b0\u5c31\u662f\uff1a\u6bcf\u4e00\u6b21\u9012\u5f52\u8c03\u7528\u90fd\u4f1a\u628a\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf\u3001\u53c2\u6570\u503c\u548c\u8fd4\u56de\u5730\u5740\u7b49\u538b\u5165\u8c03\u7528\u6808\u4e2d \uff0c\u7136\u540e\u9012\u5f52\u8fd4\u56de\u7684\u65f6\u5019\uff0c\u4ece\u6808\u9876\u5f39\u51fa\u4e0a\u4e00\u6b21\u9012\u5f52\u7684\u5404\u9879\u53c2\u6570\uff0c\u6240\u4ee5\u8fd9\u5c31\u662f\u9012\u5f52\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u8fd4\u56de\u4e0a\u4e00\u5c42\u4f4d\u7f6e\u7684\u539f\u56e0\u3002","title":"\u7406\u8bba\u57fa\u7840"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_30","text":"\u80af\u5b9a\u8981\u7528\u4e24\u4e2a\u6808 \u52a0\u5143\u7d20\uff0c\u653e\u5230A \u51fa\u5143\u7d20\uff0cA-B, \u4eceB\u5f39\u51fa","title":"\u7528\u6808\u5b9e\u73b0\u961f\u5217"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_31","text":"\u62ec\u53f7\u5339\u914d\u662f\u4f7f\u7528\u6808\u89e3\u51b3\u7684\u7ecf\u5178\u95ee\u9898 \u9012\u5f52\u7684\u601d\u60f3 \u6808\u7684\u601d\u60f3","title":"\u62ec\u53f7\u5339\u914d"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_32","text":"\u7ec4\u5408\u95ee\u9898 \u5207\u5272\u95ee\u9898 \u5b50\u96c6\u95ee\u9898 \u6392\u5217\u95ee\u9898 \u68cb\u76d8\u95ee\u9898 \u6240\u6709\u7684\u56de\u6eaf\u6cd5\u90fd\u53ef\u4ee5\u62bd\u8c61\u4e3a\u4e00\u4e2a\u6811\u5f62\u7ed3\u6784\uff0c\u9012\u5f52\u6765\u505a\u7eb5\u5411\u6df1\u5ea6\uff0c\u6a2a\u5411\u679d\u9009\u62e9\u7528for\u5faa\u73af","title":"\u56de\u6eaf\uff0c\u9012\u5f52"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_33","text":"def backtracking(\u53c2\u6570): if \u7ec8\u6b62\u6761\u4ef6: return \u7ed3\u679c for\uff1a \u51cf\u679d\u64cd\u4f5c \u5904\u7406\u8282\u70b9 backtracking() return \u7ec8\u6b62\u6761\u4ef6\u7528\u4e8e\u5b9a\u4e49\u53f6\u5b50\u8282\u70b9 for\u5faa\u73af\u7528\u4e8e\u751f\u6210\u6bcf\u4e2a\u53f6\u5b50\u4e0b\u9762\u7684\u679d \u65b9\u6cd5\u4e00 \u4f7f\u7528index\u6307\u9488 \u65b9\u6cd5\u4e8c \u4f7f\u7528 used\u6570\u7ec4 for i in [1,0,1,0] \u5728\u5904\u7406\u8282\u70b9\u7684\u65f6\u5019\uff0c \u4e0d\u8981\u8f7b\u6613\u6539\u53d8\u5f53\u524d\u8282\u70b9\u7684\u6570\u636e \uff01\u4f8b\u5982\uff0c\u4e0d\u8981\u4fee\u6539path\uff0c\u800c\u662f\u76f4\u63a5\u5c06\u4fee\u6539\u540e\u7684path\u4f20\u5165\u4e0b\u4e00\u4e2a\u8282\u70b9\uff01 \u7f51\u4e0a\u7684\u6a21\u677f def backtrack(\u8def\u5f84, \u9009\u62e9\u5217\u8868): if \u6ee1\u8db3\u7ed3\u675f\u6761\u4ef6: result.add(\u8def\u5f84) return //\u76f8\u5f53\u4e8e\u591a\u53c9\u6811\u7684\u904d\u5386\uff0ci\u7684\u4e2a\u6570\u4ece2\u53d8\u6210\u4e86n\uff0c\u5e76\u4e14\u5199\u6210\u4e86for\u5faa\u73af\u7684\u5f62\u5f0f for \u9009\u62e9 in \u9009\u62e9\u5217\u8868: if \u9009\u62e9 in \u8def\u5f84\uff1a continue \u8def\u5f84.add(\u9009\u62e9) backtrack(\u8def\u5f84, \u9009\u62e9\u5217\u8868) //\u5c06\u6570\u503c\u6539\u56de\u6210\u539f\u6765\u7684\u72b6\u6001 \u8def\u5f84.remove(\u9009\u62e9) \u7ec8\u6b62\u6761\u4ef6 \u81ea\u6211\u8c03\u7528","title":"\u6a21\u677f"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_34","text":"","title":"\u7ffb\u8f6c\u94fe\u8868"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_35","text":"\u9012\u5f52\u9700\u8981\u6ce8\u610f\u5404\u79cd\u7ec8\u6b62\u6761\u4ef6","title":"\u7ec4\u5408"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_36","text":"\u548c\u6392\u5217\u6709\u4e9b\u76f8\u4f3c\uff0c\u76f8\u5f53\u4e8e\u5728 \u6bcf\u4e2a\u8282\u70b9\u90fd\u4f1a\u6dfb\u52a0result","title":"\u5b50\u96c6"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_37","text":"\u4f7f\u7528\u56de\u6eaf\u7b97\u6cd5 \u56de\u6eaf\u6cd5 \u91c7\u7528\u8bd5\u9519\u7684\u601d\u60f3\uff0c\u5b83\u5c1d\u8bd5\u5206\u6b65\u7684\u53bb\u89e3\u51b3\u4e00\u4e2a\u95ee\u9898\u3002\u5728\u5206\u6b65\u89e3\u51b3\u95ee\u9898\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5f53\u5b83\u901a\u8fc7\u5c1d\u8bd5\u53d1\u73b0\u73b0\u6709\u7684\u5206\u6b65\u7b54\u6848\u4e0d\u80fd\u5f97\u5230\u6709\u6548\u7684\u6b63\u786e\u7684\u89e3\u7b54\u7684\u65f6\u5019\uff0c\u5b83\u5c06\u53d6\u6d88\u4e0a\u4e00\u6b65\u751a\u81f3\u662f\u4e0a\u51e0\u6b65\u7684\u8ba1\u7b97\uff0c\u518d\u901a\u8fc7\u5176\u5b83\u7684\u53ef\u80fd\u7684\u5206\u6b65\u89e3\u7b54\u518d\u6b21\u5c1d\u8bd5\u5bfb\u627e\u95ee\u9898\u7684\u7b54\u6848\u3002\u56de\u6eaf\u6cd5\u901a\u5e38\u7528\u6700\u7b80\u5355\u7684\u9012\u5f52\u65b9\u6cd5\u6765\u5b9e\u73b0\uff0c\u5728\u53cd\u590d\u91cd\u590d\u4e0a\u8ff0\u7684\u6b65\u9aa4\u540e\u53ef\u80fd\u51fa\u73b0\u4e24\u79cd\u60c5\u51b5\uff1a \u627e\u5230\u4e00\u4e2a\u53ef\u80fd\u5b58\u5728\u7684\u6b63\u786e\u7684\u7b54\u6848\uff1b \u5728\u5c1d\u8bd5\u4e86\u6240\u6709\u53ef\u80fd\u7684\u5206\u6b65\u65b9\u6cd5\u540e\u5ba3\u544a\u8be5\u95ee\u9898\u6ca1\u6709\u7b54\u6848\u3002 \uff081\uff0c2\uff0c3\uff09\u7684\u5168\u6392\u5217\u662f 1+\uff082\uff0c3\uff09\u7684\u5168\u6392\u5217 class Solution: def permute(self, nums): \"\"\" :type nums: List[int] :rtype: List[List[int]] \"\"\" def backtrack(first = 0): # \u6240\u6709\u6570\u90fd\u586b\u5b8c\u4e86 if first == n: res.append(nums[:]) for i in range(first, n): # \u52a8\u6001\u7ef4\u62a4\u6570\u7ec4 nums[first], nums[i] = nums[i], nums[first] # \u7ee7\u7eed\u9012\u5f52\u586b\u4e0b\u4e00\u4e2a\u6570 backtrack(first + 1) # \u64a4\u9500\u64cd\u4f5c nums[first], nums[i] = nums[i], nums[first] n = len(nums) res = [] backtrack() return res","title":"\u5168\u6392\u5217"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#2","text":"\u7531\u4e8e\u91cd\u590d\u5143\u7d20\uff0c\u6d89\u53ca\u5230\u53bb\u91cd\uff0c\u9700\u8981\u51cf\u679d\u64cd\u4f5c","title":"\u5168\u6392\u52172"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#n_1","text":"","title":"N\u7687\u540e"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_38","text":"\u56de\u6eaf\u7b97\u6cd5\u5176\u5b9e\u5c31\u662f\u6df1\u5ea6\u4f18\u5148\u7b97\u6cd5","title":"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22/ \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_39","text":"\u5e7f\u5ea6\u4f18\u5148\u7b97\u6cd5\u4f9d\u9760\u961f\u5217\u6765\u5b9e\u73b0\uff1a class Solution: def floodFill(self, image: List[List[int]], sr: int, sc: int, newColor: int) -> List[List[int]]: # \u7279\u6b8a\u60c5\u51b5 currColor = image[sr][sc] if currColor == newColor: return image n, m = len(image), len(image[0]) que = collections.deque([(sr, sc)]) image[sr][sc] = newColor while que: x, y = que.popleft() for mx, my in [(x - 1, y), (x + 1, y), (x, y - 1), (x, y + 1)]: if 0 <= mx < n and 0 <= my < m and image[mx][my] == currColor: que.append((mx, my)) image[mx][my] = newColor return image \u5229\u7528\u961f\u5217\u7684\u5148\u8fdb\u5148\u51fa \u6a21\u677f\uff1a while queue \u4e0d\u7a7a\uff1a cur = queue.pop() for \u8282\u70b9 in cur\u7684\u6240\u6709\u76f8\u90bb\u8282\u70b9\uff1a if \u8be5\u8282\u70b9\u6709\u6548\u4e14\u672a\u8bbf\u95ee\u8fc7\uff1a queue.push(\u8be5\u8282\u70b9) depth = 0 while queue \u4e0d\u7a7a\uff1a size = queue.size() for i in rang(size): # \u53d6\u51fa\u8fd9\u4e00\u5c42\u7684\u5143\u7d20 cur = queue.popleft() for \u8282\u70b9 in cur\u7684\u6240\u6709\u76f8\u90bb\u8282\u70b9\uff1a if \u6709\u6548 and \u672a\u88ab\u8bbf\u95ee\uff1a queue.append(\u8282\u70b9) optional\uff1a\u5904\u7406\u8be5\u8282\u70b9 depth += 1","title":"\u56fe\u50cf\u6e32\u67d3"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#01","text":"","title":"01\u77e9\u9635"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_40","text":"\u95ee\u9898\uff1a \u6590\u6ce2\u90a3\u5951\u989d\u6570\u5217 \u8df3\u53f0\u9636 \u80cc\u5305\u95ee\u9898 \u6253\u5bb6\u52ab\u820d \u80a1\u7968\u95ee\u9898 \u5b50\u5e8f\u5217\u95ee\u9898 \u9ad8\u96be\u5ea6\u95ee\u9898\uff1a\u533a\u95f4dp\uff0c\u6982\u7387dp\u3002 dp\u6570\u7ec4\u4ee5\u53ca\u5176\u4e0b\u6807\u7684\u542b\u4e49 \u9012\u63a8\u516c\u5f0f dp\u6570\u7ec4\u5982\u4f55\u521d\u59cb\u5316 \u904d\u5386\u987a\u5e8f \u6253\u5370dp\u6570\u7ec4","title":"\u52a8\u6001\u89c4\u5212"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_41","text":"$$ f(n) = f(n-1)+f(n-2) $$ \u4e94\u6b65\u6cd5\uff1a \u786e\u5b9adp\u6570\u7ec4\u7684\u542b\u4e49 \u786e\u5b9a\u9012\u5f52\u516c\u5f0f \u521d\u59cb\u5316dp\u6570\u7ec4 \u786e\u5b9a\u904d\u5386\u987a\u5e8f dp\u6570\u7ec4\uff0cdp[i]\u8fbe\u5230i\u9636\u6709dp[i]\u79cd\u65b9\u6cd5 dp[i] = dp[i-2]+dp[i-1]","title":"\u722c\u697c\u68af\uff08\u7ecf\u5178\uff09"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#01_1","text":"\u200b \u7269\u54c1 \u91cd\u91cf \u4ef7\u503c 0 1 15 1 3 20 2 4 30 \u80cc\u5305\u6700\u5927\u80fd\u88c54\u3002 \u5982\u679c\u4f7f\u7528\u56de\u6eaf\u7b97\u6cd5\uff0c\u90a3\u4e482^3\u79cd\u60c5\u51b5\u8981\u904d\u5386\uff0c\u662f\u66b4\u529b\u904d\u5386\u3002 \u5b9a\u4e49\u4e8c\u7ef4dp[i][j]\u6570\u7ec4\u3002 [0:i]\u7684\u7269\u54c1\u4efb\u53d6\u653e\u5230\u5bb9\u91cf\u4e3aj\u7684\u80cc\u5305\u5185\u7684\u6700\u5927\u4ef7\u503c dp[i][j]=max(dp[i-1][j], dp[i-1][j-weight[i]]+weight[i]) \u521d\u59cb\u5316\uff0c\u628a\u8868\u753b\u51fa\u6765\u770b\u770b\uff1a \u6ce8\u610f\u904d\u5386\u987a\u5e8f\uff0c\u867d\u7136\u5728\u8fd9\u91cc\u53ef\u4ee5\u98a0\u5012\u3002","title":"01\u80cc\u5305\uff08\u7ecf\u5178\uff0c\u57fa\u7840\uff09"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_42","text":"","title":"\u5b8c\u5168\u80cc\u5305"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_43","text":"$$ d p[i]=\\max (d p[i-2]+n u m s[i], d p[i-1]) $$ dp[i] \u6307\u7684\u662f 0:i \u5bb6\u53ef\u4ee5\u5077\u5230\u7684\u6700\u591a\u94b1","title":"\u6253\u5bb6\u52ab\u820d"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_44","text":"\u5efa\u7acb\u4e8c\u7ef4\u6570\u7ec4 dp[i][j] = 1 \u5982\u679c s[i:j]\u662f\u56de\u6587\u4e32","title":"\u6700\u957f\u56de\u6587\u4e32"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_45","text":"","title":"\u6570\u636e\u7ed3\u6784"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_46","text":"\u4e00\u4e2a\u6808\u7528\u4e8e\u50a8\u5b58 \u4e00\u4e2a\u6808\u7528\u8f85\u52a9\u64cd\u4f5c","title":"\u7528\u4e24\u4e2a\u6808\u5b9e\u73b0\u961f\u5217"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#min","text":"\u4e00\u4e2a\u6808\u7528\u4e8e\u50a8\u5b58\u6570\u636e \u4e00\u4e2a\u6808\u7528\u4e8e\u4fdd\u5b58min \u6ce8\u610fpop\u4f1a\u5bfc\u81f4min\u7684\u6539\u53d8","title":"\u5305\u542bmin\u51fd\u6570\u7684\u6808"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_47","text":"","title":"\u5176\u4ed6\u7c7b\u578b"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_48","text":"\u5feb\u901f\u6392\u5e8f","title":"\u989c\u8272\u5206\u7c7b"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_49","text":"\u5c06\u540e\u9762\u7684\u5927\u6570\u653e\u5230\u524d\u9762 \u4e3a\u4e86\u4fdd\u8bc1\u589e\u52a0\u5e45\u5ea6\u5c0f\uff0c\u5927\u6570\u8981\u9760\u53f3 \u6362\u4f4d\u540e\uff0c\u5c06\u5927\u6570\u540e\u9762\u7684\u90a3\u90e8\u5206\u6539\u4e3a\u5347\u5e8f\uff0c\u4ee5\u4f7f\u5b83\u6700\u5c0f","title":"\u4e0b\u4e00\u4e2a\u6392\u5217"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/#_50","text":"\u8fd9\u9898\u9700\u8981\u6ce8\u610f\u7684\u662fpython\u7684\u5b57\u7b26\u4e32\u4e0d\u53ef\u53d8\uff0c\u4e0d\u80fd\u539f\u5730\u64cd\u4f5c \u4f7f\u7528str.split\u8fdb\u884c\u64cd\u4f5c\u4f1a\u5f88\u7b80\u5355","title":"\u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8F%82%E6%95%B0%E7%9A%84%E4%BC%A0%E9%80%92/","text":"\u53c2\u6570\u7684\u4f20\u9012 \u5b9a\u4e49\u51fd\u6570\uff1a \u5173\u952e\u5b57 def \u5f15\u5165\u4e00\u4e2a\u51fd\u6570 \u5b9a\u4e49 \u3002\u5b83\u5fc5\u987b\u540e\u8ddf\u51fd\u6570\u540d\u79f0\u548c\u5e26\u62ec\u53f7\u7684\u5f62\u5f0f\u53c2\u6570\u5217\u8868\u3002\u6784\u6210\u51fd\u6570\u4f53\u7684\u8bed\u53e5\u4ece\u4e0b\u4e00\u884c\u5f00\u59cb\uff0c\u5e76\u4e14\u5fc5\u987b\u7f29\u8fdb\u3002 \u8c03\u7528\u51fd\u6570\u7684\u65f6\u5019\u80fd\u591f\u63d0\u4f9b \u4f4d\u7f6e\u53c2\u6570 \u548c \u5173\u952e\u5b57\u53c2\u6570 def f(pos1, pos2, /, pos_or_kwd, *, kwd1, kwd2): ----------- ---------- ---------- | | | | Positional or keyword | | - Keyword only -- Positional only \u53ef\u53d8\u53c2\u6570 \u6709\u4e00\u4e9b\u51fd\u6570\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u6570\u91cf\u7684\u53c2\u6570\u8c03\u7528\u51fd\u6570 *args \u548c **kwargs *args\u5c31\u4ee3\u8868\u591a\u4e2a\u4f4d\u7f6e\u53c2\u6570 **kwargs\u5c31\u4ee3\u8868\u591a\u4e2a\u5173\u952e\u5b57\u53c2\u6570 def func1(c, *args, **kwargs): print(c) print(args) print(kwargs) func1(1,2,3,4,5,b=1,a=3) >>> 1 (2, 3, 4, 5) {'b': 1, 'a': 3}","title":"\u53c2\u6570\u7684\u4f20\u9012"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8F%82%E6%95%B0%E7%9A%84%E4%BC%A0%E9%80%92/#_1","text":"","title":"\u53c2\u6570\u7684\u4f20\u9012"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8F%82%E6%95%B0%E7%9A%84%E4%BC%A0%E9%80%92/#_2","text":"\u5173\u952e\u5b57 def \u5f15\u5165\u4e00\u4e2a\u51fd\u6570 \u5b9a\u4e49 \u3002\u5b83\u5fc5\u987b\u540e\u8ddf\u51fd\u6570\u540d\u79f0\u548c\u5e26\u62ec\u53f7\u7684\u5f62\u5f0f\u53c2\u6570\u5217\u8868\u3002\u6784\u6210\u51fd\u6570\u4f53\u7684\u8bed\u53e5\u4ece\u4e0b\u4e00\u884c\u5f00\u59cb\uff0c\u5e76\u4e14\u5fc5\u987b\u7f29\u8fdb\u3002 \u8c03\u7528\u51fd\u6570\u7684\u65f6\u5019\u80fd\u591f\u63d0\u4f9b \u4f4d\u7f6e\u53c2\u6570 \u548c \u5173\u952e\u5b57\u53c2\u6570 def f(pos1, pos2, /, pos_or_kwd, *, kwd1, kwd2): ----------- ---------- ---------- | | | | Positional or keyword | | - Keyword only -- Positional only","title":"\u5b9a\u4e49\u51fd\u6570\uff1a"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8F%82%E6%95%B0%E7%9A%84%E4%BC%A0%E9%80%92/#_3","text":"\u6709\u4e00\u4e9b\u51fd\u6570\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u6570\u91cf\u7684\u53c2\u6570\u8c03\u7528\u51fd\u6570","title":"\u53ef\u53d8\u53c2\u6570"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%8F%82%E6%95%B0%E7%9A%84%E4%BC%A0%E9%80%92/#args-kwargs","text":"*args\u5c31\u4ee3\u8868\u591a\u4e2a\u4f4d\u7f6e\u53c2\u6570 **kwargs\u5c31\u4ee3\u8868\u591a\u4e2a\u5173\u952e\u5b57\u53c2\u6570 def func1(c, *args, **kwargs): print(c) print(args) print(kwargs) func1(1,2,3,4,5,b=1,a=3) >>> 1 (2, 3, 4, 5) {'b': 1, 'a': 3}","title":"*args \u548c **kwargs"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/","text":"\u5f3a\u5316\u5b66\u4e60 \u65e0\u76d1\u7763\u5b66\u4e60 \u6709\u76d1\u7763\u5b66\u4e60 \u5f3a\u5316\u5b66\u4e60 \u9a6c\u5c14\u79d1\u592b\u6027 \u9a6c\u5c14\u53ef\u592b\u6027\u6307\u7684\u662f\u7cfb\u7edf\u7684\u4e0b\u4e00\u4e2a\u72b6\u6001$s_{t+1}$\u4ec5\u4e0e\u5f53\u524d\u72b6\u6001$s_{t}$\u6709\u5173\uff0c\u800c\u4e0e\u4ee5\u524d\u7684\u72b6\u6001\u65e0\u5173\u3002 $$ p(s_{t+1}|s_t)=p(s_{t+1}|s_1,...,s_t) $$ \u9a6c\u5c14\u79d1\u592b\u8fc7\u7a0b \u9a6c\u5c14\u79d1\u592b\u8fc7\u7a0b\u662f\u4e00\u4e2a\u4e8c\u5143\u7ec4$(S,P)$, \u4e14\u6ee1\u8db3\uff1as\u662f\u6709\u9650\u72b6\u6001\u96c6\u5408\uff0cp\u662f\u72b6\u6001\u8f6c\u79fb\u6982\u7387\u3002\u72b6\u6001\u8f6c\u79fb\u77e9\u9635\u4e3a\uff1a $$ P=\\left[\\begin{array}{ccc} P_{11} & \\cdots & P_{1 n} \\ \\vdots & \\vdots & \\vdots \\ P_{n 1} & \\cdots & P_{n n} \\end{array}\\right] $$ \u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b $(S,A,P,R,\\lambda)$ (\u72b6\u6001\u96c6\uff0c\u52a8\u4f5c\u96c6\uff0c\u72b6\u6001\u8f6c\u79fb\u77e9\u9635\uff0c\u56de\u62a5\u51fd\u6570\uff0c\u6298\u6263\u56e0\u5b50) \u5f3a\u5316\u5b66\u4e60\u7684\u76ee\u7684\u662f\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u9a6c\u5c14\u79d1\u592b\u51b3\u7b56\u8fc7\u7a0b\uff0c\u52cb\u7ae0\u6700\u4f18\u7b56\u7565\uff0c\u901a\u5e38\u7528$\\pi$\u8868\u793a\u3002 \u6a21\u578b \u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b -----\u6838\u5fc3 \u200b -\u52a8\u6001\u89c4\u5212 Neuro-Dynamic Programming \u200b -\u8fd1\u4f3c\u52a8\u6001\u89c4\u5212 Approximate dynamic programming \u200b -\u8499\u7279\u5361\u6d1b \u9690\u9a6c\u5c14\u79d1\u592b\u6a21\u578b \u5f3a\u5316\u5b66\u4e60\u9002\u7528\u7684\u573a\u666f \u8bd5\u9519\u63a2\u7d22\uff0c\u9700\u8981\u63a2\u7d22\u73af\u5883\u6765\u83b7\u53d6\u5bf9\u73af\u5883\u7684\u7406\u89e3 agent\u4f1a\u4ece\u73af\u5883\u4e2d\u83b7\u5f97\u5ef6\u8fdf\u7684\u5956\u52b1 \u6570\u636e\u662f\u65f6\u95f4\u5e8f\u5217\u7684\uff0c\u800c\u4e0d\u662f\u72ec\u7acb\u540c\u5206\u5e03\u7684 agent\u7684\u884c\u4e3a\u4f1a\u5f71\u54cd\u5b83\u968f\u540e\u5f97\u5230\u7684\u6570\u636e \u5f3a\u5316\u5b66\u4e60\u4e2d\u7684\u57fa\u672c\u6982\u5ff5 t\u65f6\u523b\u7684\u72b6\u6001\uff1a $$ s_t $$ t\u65f6\u523b\u7684\u52a8\u4f5c\uff1a $$ a_t $$ t\u65f6\u523b\u91c7\u53d6\u4e86\u52a8\u4f5c\u4ee5\u540e\uff0c\u83b7\u5f97\u7684\u5956\u52b1\uff1a $$ r_t $$ \u56de\u62a5 \uff1a\u56de\u62a5\u662f\u5bf9\u4e8e\u5f53\u524d\u65f6\u523bt\u6765\u8bf4\uff0c\u672a\u6765\u83b7\u5f97\u7684\u6240\u6709\u5956\u52b1\u7684\u603b\u548c\uff0c\u53ea\u6709\u7ed9\u5b9a\u4e86policy\u624d\u662f\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6765\u7684\u3002 $$ U_t = r_t+r_{t+1}+r_{t+2}+... $$ policy\uff1a\u52a8\u4f5c\u7b56\u7565\u51fd\u6570 $$ \\pi(s) $$ \u4ef7\u503c\u51fd\u6570 \uff1aq-function\uff0cvalue-function $$ Q_{\\pi}\\left(s_{t}, a_{t}\\right)=\\mathbb{E}\\left[U_{t} \\mid S_{t}=s_{t}, A_{t}=a_{t}\\right] $$ \u4ef7\u503c\u51fd\u6570\u672c\u8d28\u4e0a\u662f\u4e0epolicy\u76f8\u5173\u8054\u7684\uff0c\u56e0\u4e3a\u56de\u62a5\u7684\u8ba1\u7b97\u662f\u9700\u8981\u6307\u5b9apolicy\u7684\u3002\u7531\u4e8e\u72b6\u6001\u53d8\u5316\u7684\u968f\u673a\u6027\uff0c\u548cpolicy\u51fd\u6570\u7684\u968f\u673a\u6027\uff0c\u4e00\u822c\u5199\u4e3a\u671f\u671b\u7684\u5f62\u5f0f\u3002 \u72b6\u6001\u4ef7\u503c\u51fd\u6570 \uff1astate-value function $$ V(s ; \\boldsymbol{\\theta})=\\sum_{a} \\pi\\left(\\left.a\\right| {s} ; \\boldsymbol{\\theta}\\right) \\cdot Q {\\pi}(s, a) $$ \u72b6\u6001\u4ef7\u503c\u51fd\u6570\u4e5f\u662f\u540c\u7406\uff0c\u5176\u5b9e\u672c\u8d28\u4e0a\u662f\u4e0epolicy\u51fd\u6570\u6709\u6240\u5173\u8054\u7684\u3002 \u667a\u80fd\u4f53\u7c7b\u578b\uff1a value-based\uff1a \u663e\u5f0f\u5730\u62df\u5408q-function\uff0cpolicy\u53ef\u4ee5\u901a\u8fc7q-function\u5f97\u5230 policy-based\uff1a\u663e\u5f0f\u5730\u62df\u5408\u72b6\u6001\u4ef7\u503c\u51fd\u6570 actor-critic: \u663e\u5f0f\u5730\u62df\u5408policy\u4e0evalue\uff0c\u4e5f\u662f\u76ee\u524d\u6700\u5e38\u7528\u7684\u3002 \u52a8\u4f5c\u8f68\u8ff9 s, a, r, s, a, r ... return \u8003\u8651\u5bf9\u672a\u6765\u7684\u4f30\u8ba1 \u6ce8\u610fR\u4e5f\u662f\u5177\u6709\u968f\u673a\u6027\u7684\u3002 value function \u56e0\u4e3a$U_t$\u5177\u6709\u968f\u673a\u6027\uff0c\u5e76\u4e0d\u80fd\u5728t\u65f6\u523b\u51c6\u786e\u8ba1\u7b97\u51fa\u4e86\uff0c\u6211\u4eec\u5bf9\u5176\u6c42\u671f\u671b\uff0c\u5219\u5f97\u5230\uff1a Q-\u51fd\u6570\u975e\u5e38\u91cd\u8981\u3002 AI\u5982\u4f55\u63a7\u5236agent \u5b66\u4e60 policy $\\pi$ \u5b66\u4e60 q-\u51fd\u6570 q-\u51fd\u6570\uff0c\u5982\u4f55\u5f97\u5230q-\u51fd\u6570\uff1f \u53ef\u4ee5\u7528\u795e\u7ecf\u7f51\u7edc\u8fd1\u4f3cQ-\u51fd\u6570 DQN \u5982\u4f55\u8bad\u7ec3DQN\uff1f\u4f7f\u7528TD\u7b97\u6cd5 \u7b56\u7565\u51fd\u6570 \u7ed9\u5b9a\u72b6\u6001\uff0c\u52a8\u4f5c\u7684\u5206\u5e03\u6982\u7387\u3002 $$ \\pi(a \\mid s) $$ \u5982\u679cs\u6709\u9650\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528\u8868\u683c\u7684\u65b9\u5f0f\u8fdb\u884c\u8bad\u7ec3\u3002\u4f46\u662fs\u7684\u72b6\u6001\u7a7a\u95f4\u975e\u5e38\u5e9e\u5927\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u91c7\u7528\u8fd1\u4f3c\u7684\u65b9\u6cd5\u3002 \u52a8\u4f5c\u4ef7\u503c\u51fd\u6570 \u72b6\u6001\u4ef7\u503c\u51fd\u6570 \u5b66\u4e60\u7b56\u7565\u51fd\u6570 \u7b56\u7565\u68af\u5ea6 policy gradient actor-critic \u7b97\u6cd5 \u7528\u4e24\u4e2a\u795e\u7ecf\u7f51\u7edc\u5206\u522b\u8fd1\u4f3c \u4ef7\u503c\u51fd\u6570\uff0c\u7b56\u7565\u51fd\u6570\u3002 actor\uff1a critic critic \u8f93\u51fa\u5b9e\u6570\u3002 V(s) \u72b6\u6001\u4ef7\u503c\u51fd\u6570\uff1a\u7528\u4e8e\u8bc4\u4ef7\u5f53\u524d\u72b6\u6001\u4e0b\u7684\u7b56\u7565\u51fd\u6570\uff0c\u5176\u4e2d\u7b56\u7565\u51fd\u6570\u53ef\u4ee5\u5199\u4e3a\uff1a $$ \\pi(a \\mid s ; \\boldsymbol{\\theta}) $$ \u5b83\u7684\u53c2\u6570\u4e3a$\\theta$ \u3002\u7136\u540eV(s)\u662f\u6839\u636eq\u51fd\u6570\u6765\u8bc4\u4ef7\u7b56\u7565\u51fd\u6570\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u5e0c\u671b\u83b7\u5f97\u4e00\u4e2a\u51c6\u786e\u7684q\u51fd\u6570\uff1a $$ q(s, a ; \\mathbf{w}) $$ q\u51fd\u6570\u4e5f\u662f\u8981\u901a\u8fc7\u8bad\u7ec3\u7684\uff0cq\u51fd\u6570\u9700\u8981\u4ece\u73af\u5883\u4e2d\u5f97\u5230\u8bad\u7ec3\u3002 \u603b\u7684\u8fc7\u7a0b\u53ef\u4ee5\u7406\u89e3\u4e3a\uff1a\u73af\u5883\u4e0eagent\u4ea4\u4e92\u6240\u4ea7\u751f\u7684\u6570\u636e\u8bad\u7ec3\u51fa\u4e00\u4e2a\u8d8a\u6765\u8d8a\u51c6\u786e\u7684q\u51fd\u6570\uff0c\u901a\u8fc7q\u51fd\u6570\u4e0d\u65ad\u5730\u4f18\u5316$\\pi()$\u7b56\u7565\u51fd\u6570\u3002 \u8bad\u7ec3\u8fc7\u7a0b \u89c2\u5bdf\u72b6\u6001 $S_t$ \u6839\u636e\u5f53\u524d\u7b56\u7565\u51fd\u6570\u5f97\u5230$a_t$\uff0c\u4e0e$r_t$ \u4e00\u76f4\u6267\u884c\u4e0b\u53bb\uff0c\u76f4\u5230\u5f97\u5230\u6240\u6709\u7684$r_t,r_{t+1},...,r_{n}=U_t$ \u5df2\u7ecf\u6709\u4e86 $U_t$ \uff0c\u90a3\u4e48\u66f4\u65b0 \u53c2\u6570 w \u518d\u7528\u65b0\u7684q\u51fd\u6570\u53bb\u4f18\u5316 $\\pi()$\u7b56\u7565\u51fd\u6570\u3002 \u68af\u5ea6\u8ba1\u7b97\u4e0e\u6570\u5b66\u63a8\u5bfc \u6682\u65f6\u4e0d\u8003\u8651\uff0c\u5148\u4e86\u89e3\u6846\u67b6 \u8499\u7279\u5361\u6d1b\u7b97\u6cd5 \u901a\u8fc7\u968f\u673a\u6837\u672c\u4f30\u8ba1\u771f\u5b9e\u503c\u3002 \u5927\u6570\u5b9a\u5f8b\u662f\u7406\u8bba\u57fa\u7840\u3002 \u4e24\u5927\u529f\u80fd\uff1a1. \u6c42\u671f\u671b\u30022. \u6c42\u79ef\u5206 \u6c42\u79ef\u5206 \u6c42\u5b9a\u79ef\u5206\u7684\u65f6\u5019\u5c31\u76f4\u63a5\u53ef\u4ee5\u7528\u8499\u7279\u5361\u6d1b\u7b97\u6cd5\u6c42\u89e3\u3002 \u8be5\u6848\u4f8b\u53ea\u8bf4\u660e\u4e86\u4e00\u5143\u51fd\u6570\uff0c\u5b9e\u9645\u4e0a\u591a\u5143\u51fd\u6570\u540c\u6837\u9002\u7528\u3002 \u4e00\u822c\u8981\u6c42$\\Omega$\u7684\u4f53\u79ef\u597d\u6c42\u3002 \u8ba1\u7b97\u671f\u671b \u6982\u7387\u5bc6\u5ea6\u51fd\u6570 $$ p(x) $$ \u5982\u679c$f(x)$\u662fx\u7684\u51fd\u6570\uff0c\u90a3\u4e48$f(x)$\u7684\u671f\u671b\u53ef\u4ee5\u5199\u4e3a\uff1a $$ \\mathbb{E} {X \\sim p}[f(X)]=\\int {\\mathbb{R}^{d}} f(\\mathbf{x}) \\cdot p(\\mathbf{x}) d \\mathbf{x} $$ \u8fd9\u5c31\u9700\u8981\u4f7f\u7528\u8499\u7279\u5361\u7f57\u65b9\u6cd5\u3002 \u6570\u5b66\u63a8\u5bfc \u8499\u7279\u5361\u6d1b\u65b9\u6cd5\u662f\u4e00\u79cd\u53ef\u4ee5\u8fd1\u4f3c\u8ba1\u7b97\u4efb\u610f\u51fd\u6570\u79ef\u5206\u7684\u6570\u503c\u65b9\u6cd5\uff0c\u5e76\u4e0d\u662f\u4e00\u4e2a\u6c42\u671f\u671b\u7684\u65b9\u6cd5\uff08\u53ea\u662f\u5b83\u5e38\u7528\u4e8e\u6c42\u671f\u671b\uff09\u3002 \u6839\u636e\u5927\u6570\u5b9a\u5f8b\uff0c\u6837\u672c\u5747\u503c \u4f9d\u6982\u7387\u6536\u655b \u4e8e\u671f\u671b\u503c\u3002\u5f97\u5230 $$ E[f(x)]=\\int_{x \\in S} f(x) p(x) d x \\approx \\frac{1}{N} \\sum_{i=1}^{N} f\\left(x^{i}\\right) $$ \u8bb0$g(x)=f(x)p(x)$ , \u5e26\u5165\u53ef\u5f97\uff1a $$ \\int_{x \\in S} g(x) d x \\approx \\frac{1}{N} \\sum_{i=1}^{N} \\frac{g\\left(x^{i}\\right)}{p\\left(x^{i}\\right)} $$ $E[g(x)]$\u4e3a\uff1a $$ \\begin{aligned} E\\left[\\frac{1}{N} \\sum_{i=1}^{N} \\frac{g\\left(x^{i}\\right)}{p\\left(x^{i}\\right)}\\right] &=\\frac{1}{N} E\\left[\\sum_{i=1}^{N} \\frac{g\\left(x^{i}\\right)}{p\\left(x^{i}\\right)}\\right] \\ &=\\frac{1}{N} N \\times \\int \\frac{g(x)}{p(x)} p(x) d x \\ &=\\int g(x) d x \\end{aligned} $$ \u5f97\u5230\uff1a $$ E[g(x)] =\\frac {1}{N} \\sum_{i=1}^{N} g\\left(x^{i}\\right)=\\int g(x) d x $$ \u6982\u5ff5 Sequential Decision Making \u5e8f\u5217\u51b3\u7b56\u8fc7\u7a0b agent\u4e0eenvironment\u8fdb\u884c\u4ea4\u4e92\uff0c\u5f97\u5230\u4e00\u4e2a\u5386\u53f2\uff1a $$ \\mathrm{H} {\\mathrm{t}}=\\mathrm{O} {1}, \\mathrm{R} {1}, \\mathrm{~A} {1}, \\ldots, \\mathrm{A} {\\mathrm{t}-1}, \\mathrm{O} {\\mathrm{t}}, \\mathrm{R} {\\mathrm{t}} $$ \u72b6\u6001\u662f\u5386\u53f2\u7684\u51fd\u6570\uff1a $$ \\mathrm{S} {\\mathrm{t}}=\\mathrm{f}\\left(\\mathrm{H}_{\\mathrm{t}}\\right) $$ \u901a\u5e38\uff0c\u89c2\u6d4b\u662f\u4e00\u4e2a\u5b9e\u503c\u5411\u91cf\uff0c\u77e9\u9635\u3002 \u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b \u73af\u5883\u662f\u5b8c\u5168\u53ef\u89c2\u6d4b\u7684\u3002 action spaces \u79bb\u6563\u52a8\u4f5c\u7a7a\u95f4 \u8fde\u7eed\u52a8\u4f5c\u7a7a\u95f4 \u5f3a\u5316\u5b66\u4e60\u7684\u4e3b\u8981\u7ec4\u6210\u6210\u5206 \u7b56\u7565\u51fd\u6570\uff0cagent\u4f1a\u7528\u8fd9\u4e2a\u51fd\u6570\u6765\u9009\u53d6\u4e0b\u4e00\u6b65\u7684\u52a8\u4f5c\u3002 \u4ef7\u503c\u51fd\u6570\uff0c\u7528\u4ef7\u503c\u51fd\u6570\u6765\u8bc4\u4f30\u5f53\u524d\u72b6\u6001\u3002agent \u73b0\u5728\u8fdb\u5165\u8fd9\u4e2a\u72b6\u6001\uff0c\u5bf9\u4f60\u540e\u9762\u7684\u6536\u76ca\u80fd\u5e26\u6765\u591a\u5927\u7684\u5f71\u54cd\u3002 \u6a21\u578b\uff0c\u7528\u4e8e\u8868\u793aagent\u5bf9\u73af\u5883\u7684\u7406\u89e3\u3002 policy policy\u662fagent\u7684\u884c\u4e3a\u6a21\u578b\uff0c\u5b83\u51b3\u5b9a\u4e86\u8fd9\u4e2aagent\u7684\u884c\u4e3a\uff0c\u5206\u4e3a\u4e24\u79cd\uff1a \u968f\u673a\u7b56\u7565 \u51b3\u5b9a\u6027\u7b56\u7565 value function \u4ef7\u503c\u51fd\u6570\u662f\u5bf9\u672a\u6765\u5956\u52b1\u7684\u4f30\u8ba1\uff0c\u7528\u4e8e\u5224\u65adagent \u73b0\u5728\u8fdb\u5165\u8be5\u72b6\u6001\u80fd\u83b7\u5f97\u591a\u5927\u7684\u6536\u76ca\u3002 eg. q-\u51fd\u6570 model \u6a21\u578b\u51b3\u5b9a\u4e86\u4e0b\u4e00\u4e2a\u72b6\u6001\u662f\u600e\u4e48\u6837\u7684\u3002 agent \u5206\u7c7b \u57fa\u4e8e\u4ef7\u503c\u7684 \u57fa\u4e8e\u7b56\u7565\u7684 \u6df7\u5408 actor-critic agent model \u6709\u6a21\u578b \u514d\u6a21\u578b \u5bf9\u4e8e\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\uff0c\u56db\u5143\u7ec4\uff1a\u72b6\u6001\uff0c\u52a8\u4f5c\uff0c\u8f6c\u79fb\u51fd\u6570\uff0c\u5956\u52b1\u51fd\u6570\u3002\u5982\u679cagent\u77e5\u9053\u8f6c\u79fb\u51fd\u6570\u548c\u5956\u52b1\u51fd\u6570\uff0c\u90a3\u4e48\u5c31\u662f\u6709\u578b\u5b66\u4e60\u3002 $$ <\\mathrm{S}, \\mathrm{A}, \\mathrm{P}, \\mathrm{R}> $$ \u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b \u8be6\u89e3 \u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b \u9a6c\u5c14\u53ef\u592b\u6027\u8d28\uff1a\u5982\u679c\u4e00\u4e2a\u72b6\u6001\u8f6c\u79fb\u662f\u7b26\u5408\u9a6c\u5c14\u53ef\u592b\u7684\uff0c\u90a3\u5c31\u662f\u8bf4\u4e00\u4e2a\u72b6\u6001\u7684\u4e0b\u4e00\u4e2a\u72b6\u6001\u53ea\u53d6\u51b3\u4e8e\u5b83\u5f53\u524d\u72b6\u6001\uff0c\u800c\u8ddf\u5b83\u5f53\u524d\u72b6\u6001\u4e4b\u524d\u7684\u72b6\u6001\u90fd\u6ca1\u6709\u5173\u7cfb\u3002 $$ \\mathrm{p}\\left(\\mathrm{s} {\\mathrm{t}+1} \\mid \\mathrm{s} {\\mathrm{t}}\\right)=\\mathrm{p}\\left(\\mathrm{s} {\\mathrm{t}+1} \\mid \\mathrm{h} {\\mathrm{t}}\\right) $$ \u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b \u7528\u72b6\u6001\u8f6c\u79fb\u77e9\u9635\u6765\u63cf\u8ff0\u5404\u4e2a\u72b6\u6001\u4e4b\u95f4\u7684\u53d8\u5316\uff1a \u9a6c\u5c14\u53ef\u592b\u5956\u52b1\u8fc7\u7a0b \u5f53\u8fbe\u5230\u4e00\u4e2a\u72b6\u6001\u65f6\uff0c\u53ef\u4ee5\u83b7\u5f97\u76f8\u5e94\u7684\u5956\u52b1 Bellman Equation s\u2032 \u53ef\u4ee5\u770b\u6210\u672a\u6765\u7684\u6240\u6709\u72b6\u6001\u3002 \u8f6c\u79fb P(s'|s)P(s\u2032\u2223s) \u662f\u6307\u4ece\u5f53\u524d\u72b6\u6001\u8f6c\u79fb\u5230\u672a\u6765\u72b6\u6001\u7684\u6982\u7387\u3002 V(s')V(s\u2032) \u4ee3\u8868\u7684\u662f\u672a\u6765\u67d0\u4e00\u4e2a\u72b6\u6001\u7684\u4ef7\u503c\u3002\u6211\u4eec\u4ece\u5f53\u524d\u8fd9\u4e2a\u4f4d\u7f6e\u5f00\u59cb\uff0c\u6709\u4e00\u5b9a\u7684\u6982\u7387\u53bb\u5230\u672a\u6765\u7684\u6240\u6709\u72b6\u6001\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u628a\u8fd9\u4e2a\u6982\u7387\u4e5f\u5199\u4e0a\u53bb\uff0c\u8fd9\u4e2a\u8f6c\u79fb\u77e9\u9635\u4e5f\u5199\u4e0a\u53bb\uff0c\u7136\u540e\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u672a\u6765\u72b6\u6001\uff0c\u7136\u540e\u518d\u4e58\u4ee5\u4e00\u4e2a \u03b3\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u672a\u6765\u7684\u5956\u52b1\u6253\u6298\u6263\u3002 \u7b2c\u4e8c\u90e8\u5206\u53ef\u4ee5\u770b\u6210\u662f\u672a\u6765\u5956\u52b1\u7684\u6298\u6263\u603b\u548c(Discounted sum of future reward)\u3002 Bellman Equation \u5b9a\u4e49\u4e86\u5f53\u524d\u72b6\u6001\u4e0e\u672a\u6765\u72b6\u6001\u7684\u8fed\u4ee3\u5173\u7cfb\u3002 \u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b \u72b6\u6001\u8f6c\u79fb\u77e9\u9635\uff1a $$ \\mathrm{P}\\left(\\mathrm{s} {\\mathrm{t}+1}=\\mathrm{s}^{\\prime} \\mid \\mathrm{s} {\\mathrm{t}}=\\mathrm{s}, \\mathrm{a} {\\mathrm{t}}=\\mathrm{a}\\right) $$ \u4ef7\u503c\u51fd\u6570\u4e5f\u6539\u5199\u4e3a\uff1a $$ \\mathrm{R}\\left(\\mathrm{s} {\\mathrm{t}}=\\mathrm{s}, \\mathrm{a} {\\mathrm{t}}=\\mathrm{a}\\right)=\\mathbb{E}\\left[\\mathrm{r} {\\mathrm{t}} \\mid \\mathrm{s} {\\mathrm{t}}=\\mathrm{s}, \\mathrm{a} {\\mathrm{t}}=\\mathrm{a}\\right] $$ policy $$ \\pi(\\mathrm{a} \\mid \\mathrm{s})=\\mathrm{P}\\left(\\mathrm{a} {\\mathrm{t}}=\\mathrm{a} \\mid \\mathrm{s} {\\mathrm{t}}=\\mathrm{s}\\right) $$ MRP\u4e0eMDP\u6bd4\u8f83\uff1a","title":"\u5f3a\u5316\u5b66\u4e60"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_1","text":"\u65e0\u76d1\u7763\u5b66\u4e60 \u6709\u76d1\u7763\u5b66\u4e60 \u5f3a\u5316\u5b66\u4e60","title":"\u5f3a\u5316\u5b66\u4e60"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_2","text":"\u9a6c\u5c14\u53ef\u592b\u6027\u6307\u7684\u662f\u7cfb\u7edf\u7684\u4e0b\u4e00\u4e2a\u72b6\u6001$s_{t+1}$\u4ec5\u4e0e\u5f53\u524d\u72b6\u6001$s_{t}$\u6709\u5173\uff0c\u800c\u4e0e\u4ee5\u524d\u7684\u72b6\u6001\u65e0\u5173\u3002 $$ p(s_{t+1}|s_t)=p(s_{t+1}|s_1,...,s_t) $$","title":"\u9a6c\u5c14\u79d1\u592b\u6027"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_3","text":"\u9a6c\u5c14\u79d1\u592b\u8fc7\u7a0b\u662f\u4e00\u4e2a\u4e8c\u5143\u7ec4$(S,P)$, \u4e14\u6ee1\u8db3\uff1as\u662f\u6709\u9650\u72b6\u6001\u96c6\u5408\uff0cp\u662f\u72b6\u6001\u8f6c\u79fb\u6982\u7387\u3002\u72b6\u6001\u8f6c\u79fb\u77e9\u9635\u4e3a\uff1a $$ P=\\left[\\begin{array}{ccc} P_{11} & \\cdots & P_{1 n} \\ \\vdots & \\vdots & \\vdots \\ P_{n 1} & \\cdots & P_{n n} \\end{array}\\right] $$","title":"\u9a6c\u5c14\u79d1\u592b\u8fc7\u7a0b"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_4","text":"$(S,A,P,R,\\lambda)$ (\u72b6\u6001\u96c6\uff0c\u52a8\u4f5c\u96c6\uff0c\u72b6\u6001\u8f6c\u79fb\u77e9\u9635\uff0c\u56de\u62a5\u51fd\u6570\uff0c\u6298\u6263\u56e0\u5b50) \u5f3a\u5316\u5b66\u4e60\u7684\u76ee\u7684\u662f\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u9a6c\u5c14\u79d1\u592b\u51b3\u7b56\u8fc7\u7a0b\uff0c\u52cb\u7ae0\u6700\u4f18\u7b56\u7565\uff0c\u901a\u5e38\u7528$\\pi$\u8868\u793a\u3002","title":"\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_5","text":"\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b -----\u6838\u5fc3 \u200b -\u52a8\u6001\u89c4\u5212 Neuro-Dynamic Programming \u200b -\u8fd1\u4f3c\u52a8\u6001\u89c4\u5212 Approximate dynamic programming \u200b -\u8499\u7279\u5361\u6d1b \u9690\u9a6c\u5c14\u79d1\u592b\u6a21\u578b","title":"\u6a21\u578b"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_6","text":"\u8bd5\u9519\u63a2\u7d22\uff0c\u9700\u8981\u63a2\u7d22\u73af\u5883\u6765\u83b7\u53d6\u5bf9\u73af\u5883\u7684\u7406\u89e3 agent\u4f1a\u4ece\u73af\u5883\u4e2d\u83b7\u5f97\u5ef6\u8fdf\u7684\u5956\u52b1 \u6570\u636e\u662f\u65f6\u95f4\u5e8f\u5217\u7684\uff0c\u800c\u4e0d\u662f\u72ec\u7acb\u540c\u5206\u5e03\u7684 agent\u7684\u884c\u4e3a\u4f1a\u5f71\u54cd\u5b83\u968f\u540e\u5f97\u5230\u7684\u6570\u636e","title":"\u5f3a\u5316\u5b66\u4e60\u9002\u7528\u7684\u573a\u666f"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_7","text":"t\u65f6\u523b\u7684\u72b6\u6001\uff1a $$ s_t $$ t\u65f6\u523b\u7684\u52a8\u4f5c\uff1a $$ a_t $$ t\u65f6\u523b\u91c7\u53d6\u4e86\u52a8\u4f5c\u4ee5\u540e\uff0c\u83b7\u5f97\u7684\u5956\u52b1\uff1a $$ r_t $$ \u56de\u62a5 \uff1a\u56de\u62a5\u662f\u5bf9\u4e8e\u5f53\u524d\u65f6\u523bt\u6765\u8bf4\uff0c\u672a\u6765\u83b7\u5f97\u7684\u6240\u6709\u5956\u52b1\u7684\u603b\u548c\uff0c\u53ea\u6709\u7ed9\u5b9a\u4e86policy\u624d\u662f\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6765\u7684\u3002 $$ U_t = r_t+r_{t+1}+r_{t+2}+... $$ policy\uff1a\u52a8\u4f5c\u7b56\u7565\u51fd\u6570 $$ \\pi(s) $$ \u4ef7\u503c\u51fd\u6570 \uff1aq-function\uff0cvalue-function $$ Q_{\\pi}\\left(s_{t}, a_{t}\\right)=\\mathbb{E}\\left[U_{t} \\mid S_{t}=s_{t}, A_{t}=a_{t}\\right] $$ \u4ef7\u503c\u51fd\u6570\u672c\u8d28\u4e0a\u662f\u4e0epolicy\u76f8\u5173\u8054\u7684\uff0c\u56e0\u4e3a\u56de\u62a5\u7684\u8ba1\u7b97\u662f\u9700\u8981\u6307\u5b9apolicy\u7684\u3002\u7531\u4e8e\u72b6\u6001\u53d8\u5316\u7684\u968f\u673a\u6027\uff0c\u548cpolicy\u51fd\u6570\u7684\u968f\u673a\u6027\uff0c\u4e00\u822c\u5199\u4e3a\u671f\u671b\u7684\u5f62\u5f0f\u3002 \u72b6\u6001\u4ef7\u503c\u51fd\u6570 \uff1astate-value function $$ V(s ; \\boldsymbol{\\theta})=\\sum_{a} \\pi\\left(\\left.a\\right| {s} ; \\boldsymbol{\\theta}\\right) \\cdot Q {\\pi}(s, a) $$ \u72b6\u6001\u4ef7\u503c\u51fd\u6570\u4e5f\u662f\u540c\u7406\uff0c\u5176\u5b9e\u672c\u8d28\u4e0a\u662f\u4e0epolicy\u51fd\u6570\u6709\u6240\u5173\u8054\u7684\u3002 \u667a\u80fd\u4f53\u7c7b\u578b\uff1a value-based\uff1a \u663e\u5f0f\u5730\u62df\u5408q-function\uff0cpolicy\u53ef\u4ee5\u901a\u8fc7q-function\u5f97\u5230 policy-based\uff1a\u663e\u5f0f\u5730\u62df\u5408\u72b6\u6001\u4ef7\u503c\u51fd\u6570 actor-critic: \u663e\u5f0f\u5730\u62df\u5408policy\u4e0evalue\uff0c\u4e5f\u662f\u76ee\u524d\u6700\u5e38\u7528\u7684\u3002","title":"\u5f3a\u5316\u5b66\u4e60\u4e2d\u7684\u57fa\u672c\u6982\u5ff5"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_8","text":"s, a, r, s, a, r ...","title":"\u52a8\u4f5c\u8f68\u8ff9"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#return","text":"\u8003\u8651\u5bf9\u672a\u6765\u7684\u4f30\u8ba1 \u6ce8\u610fR\u4e5f\u662f\u5177\u6709\u968f\u673a\u6027\u7684\u3002","title":"return"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#value-function","text":"\u56e0\u4e3a$U_t$\u5177\u6709\u968f\u673a\u6027\uff0c\u5e76\u4e0d\u80fd\u5728t\u65f6\u523b\u51c6\u786e\u8ba1\u7b97\u51fa\u4e86\uff0c\u6211\u4eec\u5bf9\u5176\u6c42\u671f\u671b\uff0c\u5219\u5f97\u5230\uff1a Q-\u51fd\u6570\u975e\u5e38\u91cd\u8981\u3002","title":"value function"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#aiagent","text":"\u5b66\u4e60 policy $\\pi$ \u5b66\u4e60 q-\u51fd\u6570","title":"AI\u5982\u4f55\u63a7\u5236agent"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#q-q-","text":"\u53ef\u4ee5\u7528\u795e\u7ecf\u7f51\u7edc\u8fd1\u4f3cQ-\u51fd\u6570","title":"q-\u51fd\u6570\uff0c\u5982\u4f55\u5f97\u5230q-\u51fd\u6570\uff1f"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#dqn","text":"","title":"DQN"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#dqntd","text":"","title":"\u5982\u4f55\u8bad\u7ec3DQN\uff1f\u4f7f\u7528TD\u7b97\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_9","text":"\u7ed9\u5b9a\u72b6\u6001\uff0c\u52a8\u4f5c\u7684\u5206\u5e03\u6982\u7387\u3002 $$ \\pi(a \\mid s) $$ \u5982\u679cs\u6709\u9650\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528\u8868\u683c\u7684\u65b9\u5f0f\u8fdb\u884c\u8bad\u7ec3\u3002\u4f46\u662fs\u7684\u72b6\u6001\u7a7a\u95f4\u975e\u5e38\u5e9e\u5927\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u91c7\u7528\u8fd1\u4f3c\u7684\u65b9\u6cd5\u3002","title":"\u7b56\u7565\u51fd\u6570"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_10","text":"","title":"\u52a8\u4f5c\u4ef7\u503c\u51fd\u6570"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_11","text":"","title":"\u72b6\u6001\u4ef7\u503c\u51fd\u6570"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_12","text":"\u7b56\u7565\u68af\u5ea6 policy gradient","title":"\u5b66\u4e60\u7b56\u7565\u51fd\u6570"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#actor-critic","text":"\u7528\u4e24\u4e2a\u795e\u7ecf\u7f51\u7edc\u5206\u522b\u8fd1\u4f3c \u4ef7\u503c\u51fd\u6570\uff0c\u7b56\u7565\u51fd\u6570\u3002 actor\uff1a critic critic \u8f93\u51fa\u5b9e\u6570\u3002 V(s) \u72b6\u6001\u4ef7\u503c\u51fd\u6570\uff1a\u7528\u4e8e\u8bc4\u4ef7\u5f53\u524d\u72b6\u6001\u4e0b\u7684\u7b56\u7565\u51fd\u6570\uff0c\u5176\u4e2d\u7b56\u7565\u51fd\u6570\u53ef\u4ee5\u5199\u4e3a\uff1a $$ \\pi(a \\mid s ; \\boldsymbol{\\theta}) $$ \u5b83\u7684\u53c2\u6570\u4e3a$\\theta$ \u3002\u7136\u540eV(s)\u662f\u6839\u636eq\u51fd\u6570\u6765\u8bc4\u4ef7\u7b56\u7565\u51fd\u6570\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u5e0c\u671b\u83b7\u5f97\u4e00\u4e2a\u51c6\u786e\u7684q\u51fd\u6570\uff1a $$ q(s, a ; \\mathbf{w}) $$ q\u51fd\u6570\u4e5f\u662f\u8981\u901a\u8fc7\u8bad\u7ec3\u7684\uff0cq\u51fd\u6570\u9700\u8981\u4ece\u73af\u5883\u4e2d\u5f97\u5230\u8bad\u7ec3\u3002 \u603b\u7684\u8fc7\u7a0b\u53ef\u4ee5\u7406\u89e3\u4e3a\uff1a\u73af\u5883\u4e0eagent\u4ea4\u4e92\u6240\u4ea7\u751f\u7684\u6570\u636e\u8bad\u7ec3\u51fa\u4e00\u4e2a\u8d8a\u6765\u8d8a\u51c6\u786e\u7684q\u51fd\u6570\uff0c\u901a\u8fc7q\u51fd\u6570\u4e0d\u65ad\u5730\u4f18\u5316$\\pi()$\u7b56\u7565\u51fd\u6570\u3002","title":"actor-critic \u7b97\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_13","text":"\u89c2\u5bdf\u72b6\u6001 $S_t$ \u6839\u636e\u5f53\u524d\u7b56\u7565\u51fd\u6570\u5f97\u5230$a_t$\uff0c\u4e0e$r_t$ \u4e00\u76f4\u6267\u884c\u4e0b\u53bb\uff0c\u76f4\u5230\u5f97\u5230\u6240\u6709\u7684$r_t,r_{t+1},...,r_{n}=U_t$ \u5df2\u7ecf\u6709\u4e86 $U_t$ \uff0c\u90a3\u4e48\u66f4\u65b0 \u53c2\u6570 w \u518d\u7528\u65b0\u7684q\u51fd\u6570\u53bb\u4f18\u5316 $\\pi()$\u7b56\u7565\u51fd\u6570\u3002","title":"\u8bad\u7ec3\u8fc7\u7a0b"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_14","text":"\u6682\u65f6\u4e0d\u8003\u8651\uff0c\u5148\u4e86\u89e3\u6846\u67b6","title":"\u68af\u5ea6\u8ba1\u7b97\u4e0e\u6570\u5b66\u63a8\u5bfc"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_15","text":"\u901a\u8fc7\u968f\u673a\u6837\u672c\u4f30\u8ba1\u771f\u5b9e\u503c\u3002 \u5927\u6570\u5b9a\u5f8b\u662f\u7406\u8bba\u57fa\u7840\u3002 \u4e24\u5927\u529f\u80fd\uff1a1. \u6c42\u671f\u671b\u30022. \u6c42\u79ef\u5206","title":"\u8499\u7279\u5361\u6d1b\u7b97\u6cd5"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_16","text":"\u6c42\u5b9a\u79ef\u5206\u7684\u65f6\u5019\u5c31\u76f4\u63a5\u53ef\u4ee5\u7528\u8499\u7279\u5361\u6d1b\u7b97\u6cd5\u6c42\u89e3\u3002 \u8be5\u6848\u4f8b\u53ea\u8bf4\u660e\u4e86\u4e00\u5143\u51fd\u6570\uff0c\u5b9e\u9645\u4e0a\u591a\u5143\u51fd\u6570\u540c\u6837\u9002\u7528\u3002 \u4e00\u822c\u8981\u6c42$\\Omega$\u7684\u4f53\u79ef\u597d\u6c42\u3002 \u8ba1\u7b97\u671f\u671b \u6982\u7387\u5bc6\u5ea6\u51fd\u6570 $$ p(x) $$ \u5982\u679c$f(x)$\u662fx\u7684\u51fd\u6570\uff0c\u90a3\u4e48$f(x)$\u7684\u671f\u671b\u53ef\u4ee5\u5199\u4e3a\uff1a $$ \\mathbb{E} {X \\sim p}[f(X)]=\\int {\\mathbb{R}^{d}} f(\\mathbf{x}) \\cdot p(\\mathbf{x}) d \\mathbf{x} $$ \u8fd9\u5c31\u9700\u8981\u4f7f\u7528\u8499\u7279\u5361\u7f57\u65b9\u6cd5\u3002","title":"\u6c42\u79ef\u5206"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_17","text":"\u8499\u7279\u5361\u6d1b\u65b9\u6cd5\u662f\u4e00\u79cd\u53ef\u4ee5\u8fd1\u4f3c\u8ba1\u7b97\u4efb\u610f\u51fd\u6570\u79ef\u5206\u7684\u6570\u503c\u65b9\u6cd5\uff0c\u5e76\u4e0d\u662f\u4e00\u4e2a\u6c42\u671f\u671b\u7684\u65b9\u6cd5\uff08\u53ea\u662f\u5b83\u5e38\u7528\u4e8e\u6c42\u671f\u671b\uff09\u3002 \u6839\u636e\u5927\u6570\u5b9a\u5f8b\uff0c\u6837\u672c\u5747\u503c \u4f9d\u6982\u7387\u6536\u655b \u4e8e\u671f\u671b\u503c\u3002\u5f97\u5230 $$ E[f(x)]=\\int_{x \\in S} f(x) p(x) d x \\approx \\frac{1}{N} \\sum_{i=1}^{N} f\\left(x^{i}\\right) $$ \u8bb0$g(x)=f(x)p(x)$ , \u5e26\u5165\u53ef\u5f97\uff1a $$ \\int_{x \\in S} g(x) d x \\approx \\frac{1}{N} \\sum_{i=1}^{N} \\frac{g\\left(x^{i}\\right)}{p\\left(x^{i}\\right)} $$ $E[g(x)]$\u4e3a\uff1a $$ \\begin{aligned} E\\left[\\frac{1}{N} \\sum_{i=1}^{N} \\frac{g\\left(x^{i}\\right)}{p\\left(x^{i}\\right)}\\right] &=\\frac{1}{N} E\\left[\\sum_{i=1}^{N} \\frac{g\\left(x^{i}\\right)}{p\\left(x^{i}\\right)}\\right] \\ &=\\frac{1}{N} N \\times \\int \\frac{g(x)}{p(x)} p(x) d x \\ &=\\int g(x) d x \\end{aligned} $$ \u5f97\u5230\uff1a $$ E[g(x)] =\\frac {1}{N} \\sum_{i=1}^{N} g\\left(x^{i}\\right)=\\int g(x) d x $$","title":"\u6570\u5b66\u63a8\u5bfc"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_18","text":"","title":"\u6982\u5ff5"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#sequential-decision-making","text":"\u5e8f\u5217\u51b3\u7b56\u8fc7\u7a0b agent\u4e0eenvironment\u8fdb\u884c\u4ea4\u4e92\uff0c\u5f97\u5230\u4e00\u4e2a\u5386\u53f2\uff1a $$ \\mathrm{H} {\\mathrm{t}}=\\mathrm{O} {1}, \\mathrm{R} {1}, \\mathrm{~A} {1}, \\ldots, \\mathrm{A} {\\mathrm{t}-1}, \\mathrm{O} {\\mathrm{t}}, \\mathrm{R} {\\mathrm{t}} $$ \u72b6\u6001\u662f\u5386\u53f2\u7684\u51fd\u6570\uff1a $$ \\mathrm{S} {\\mathrm{t}}=\\mathrm{f}\\left(\\mathrm{H}_{\\mathrm{t}}\\right) $$ \u901a\u5e38\uff0c\u89c2\u6d4b\u662f\u4e00\u4e2a\u5b9e\u503c\u5411\u91cf\uff0c\u77e9\u9635\u3002","title":"Sequential Decision Making"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_19","text":"\u73af\u5883\u662f\u5b8c\u5168\u53ef\u89c2\u6d4b\u7684\u3002","title":"\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#action-spaces","text":"\u79bb\u6563\u52a8\u4f5c\u7a7a\u95f4 \u8fde\u7eed\u52a8\u4f5c\u7a7a\u95f4","title":"action spaces"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_20","text":"\u7b56\u7565\u51fd\u6570\uff0cagent\u4f1a\u7528\u8fd9\u4e2a\u51fd\u6570\u6765\u9009\u53d6\u4e0b\u4e00\u6b65\u7684\u52a8\u4f5c\u3002 \u4ef7\u503c\u51fd\u6570\uff0c\u7528\u4ef7\u503c\u51fd\u6570\u6765\u8bc4\u4f30\u5f53\u524d\u72b6\u6001\u3002agent \u73b0\u5728\u8fdb\u5165\u8fd9\u4e2a\u72b6\u6001\uff0c\u5bf9\u4f60\u540e\u9762\u7684\u6536\u76ca\u80fd\u5e26\u6765\u591a\u5927\u7684\u5f71\u54cd\u3002 \u6a21\u578b\uff0c\u7528\u4e8e\u8868\u793aagent\u5bf9\u73af\u5883\u7684\u7406\u89e3\u3002","title":"\u5f3a\u5316\u5b66\u4e60\u7684\u4e3b\u8981\u7ec4\u6210\u6210\u5206"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#policy","text":"policy\u662fagent\u7684\u884c\u4e3a\u6a21\u578b\uff0c\u5b83\u51b3\u5b9a\u4e86\u8fd9\u4e2aagent\u7684\u884c\u4e3a\uff0c\u5206\u4e3a\u4e24\u79cd\uff1a \u968f\u673a\u7b56\u7565 \u51b3\u5b9a\u6027\u7b56\u7565","title":"policy"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#value-function_1","text":"\u4ef7\u503c\u51fd\u6570\u662f\u5bf9\u672a\u6765\u5956\u52b1\u7684\u4f30\u8ba1\uff0c\u7528\u4e8e\u5224\u65adagent \u73b0\u5728\u8fdb\u5165\u8be5\u72b6\u6001\u80fd\u83b7\u5f97\u591a\u5927\u7684\u6536\u76ca\u3002 eg. q-\u51fd\u6570","title":"value function"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#model","text":"\u6a21\u578b\u51b3\u5b9a\u4e86\u4e0b\u4e00\u4e2a\u72b6\u6001\u662f\u600e\u4e48\u6837\u7684\u3002","title":"model"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#agent","text":"\u57fa\u4e8e\u4ef7\u503c\u7684 \u57fa\u4e8e\u7b56\u7565\u7684 \u6df7\u5408 actor-critic agent","title":"agent \u5206\u7c7b"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#model_1","text":"\u6709\u6a21\u578b \u514d\u6a21\u578b \u5bf9\u4e8e\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\uff0c\u56db\u5143\u7ec4\uff1a\u72b6\u6001\uff0c\u52a8\u4f5c\uff0c\u8f6c\u79fb\u51fd\u6570\uff0c\u5956\u52b1\u51fd\u6570\u3002\u5982\u679cagent\u77e5\u9053\u8f6c\u79fb\u51fd\u6570\u548c\u5956\u52b1\u51fd\u6570\uff0c\u90a3\u4e48\u5c31\u662f\u6709\u578b\u5b66\u4e60\u3002 $$ <\\mathrm{S}, \\mathrm{A}, \\mathrm{P}, \\mathrm{R}> $$","title":"model"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_21","text":"","title":"\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b \u8be6\u89e3"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_22","text":"\u9a6c\u5c14\u53ef\u592b\u6027\u8d28\uff1a\u5982\u679c\u4e00\u4e2a\u72b6\u6001\u8f6c\u79fb\u662f\u7b26\u5408\u9a6c\u5c14\u53ef\u592b\u7684\uff0c\u90a3\u5c31\u662f\u8bf4\u4e00\u4e2a\u72b6\u6001\u7684\u4e0b\u4e00\u4e2a\u72b6\u6001\u53ea\u53d6\u51b3\u4e8e\u5b83\u5f53\u524d\u72b6\u6001\uff0c\u800c\u8ddf\u5b83\u5f53\u524d\u72b6\u6001\u4e4b\u524d\u7684\u72b6\u6001\u90fd\u6ca1\u6709\u5173\u7cfb\u3002 $$ \\mathrm{p}\\left(\\mathrm{s} {\\mathrm{t}+1} \\mid \\mathrm{s} {\\mathrm{t}}\\right)=\\mathrm{p}\\left(\\mathrm{s} {\\mathrm{t}+1} \\mid \\mathrm{h} {\\mathrm{t}}\\right) $$ \u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b \u7528\u72b6\u6001\u8f6c\u79fb\u77e9\u9635\u6765\u63cf\u8ff0\u5404\u4e2a\u72b6\u6001\u4e4b\u95f4\u7684\u53d8\u5316\uff1a","title":"\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_23","text":"\u5f53\u8fbe\u5230\u4e00\u4e2a\u72b6\u6001\u65f6\uff0c\u53ef\u4ee5\u83b7\u5f97\u76f8\u5e94\u7684\u5956\u52b1","title":"\u9a6c\u5c14\u53ef\u592b\u5956\u52b1\u8fc7\u7a0b"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#bellman-equation","text":"s\u2032 \u53ef\u4ee5\u770b\u6210\u672a\u6765\u7684\u6240\u6709\u72b6\u6001\u3002 \u8f6c\u79fb P(s'|s)P(s\u2032\u2223s) \u662f\u6307\u4ece\u5f53\u524d\u72b6\u6001\u8f6c\u79fb\u5230\u672a\u6765\u72b6\u6001\u7684\u6982\u7387\u3002 V(s')V(s\u2032) \u4ee3\u8868\u7684\u662f\u672a\u6765\u67d0\u4e00\u4e2a\u72b6\u6001\u7684\u4ef7\u503c\u3002\u6211\u4eec\u4ece\u5f53\u524d\u8fd9\u4e2a\u4f4d\u7f6e\u5f00\u59cb\uff0c\u6709\u4e00\u5b9a\u7684\u6982\u7387\u53bb\u5230\u672a\u6765\u7684\u6240\u6709\u72b6\u6001\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u628a\u8fd9\u4e2a\u6982\u7387\u4e5f\u5199\u4e0a\u53bb\uff0c\u8fd9\u4e2a\u8f6c\u79fb\u77e9\u9635\u4e5f\u5199\u4e0a\u53bb\uff0c\u7136\u540e\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u672a\u6765\u72b6\u6001\uff0c\u7136\u540e\u518d\u4e58\u4ee5\u4e00\u4e2a \u03b3\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u672a\u6765\u7684\u5956\u52b1\u6253\u6298\u6263\u3002 \u7b2c\u4e8c\u90e8\u5206\u53ef\u4ee5\u770b\u6210\u662f\u672a\u6765\u5956\u52b1\u7684\u6298\u6263\u603b\u548c(Discounted sum of future reward)\u3002 Bellman Equation \u5b9a\u4e49\u4e86\u5f53\u524d\u72b6\u6001\u4e0e\u672a\u6765\u72b6\u6001\u7684\u8fed\u4ee3\u5173\u7cfb\u3002","title":"Bellman Equation"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_24","text":"\u72b6\u6001\u8f6c\u79fb\u77e9\u9635\uff1a $$ \\mathrm{P}\\left(\\mathrm{s} {\\mathrm{t}+1}=\\mathrm{s}^{\\prime} \\mid \\mathrm{s} {\\mathrm{t}}=\\mathrm{s}, \\mathrm{a} {\\mathrm{t}}=\\mathrm{a}\\right) $$ \u4ef7\u503c\u51fd\u6570\u4e5f\u6539\u5199\u4e3a\uff1a $$ \\mathrm{R}\\left(\\mathrm{s} {\\mathrm{t}}=\\mathrm{s}, \\mathrm{a} {\\mathrm{t}}=\\mathrm{a}\\right)=\\mathbb{E}\\left[\\mathrm{r} {\\mathrm{t}} \\mid \\mathrm{s} {\\mathrm{t}}=\\mathrm{s}, \\mathrm{a} {\\mathrm{t}}=\\mathrm{a}\\right] $$ policy $$ \\pi(\\mathrm{a} \\mid \\mathrm{s})=\\mathrm{P}\\left(\\mathrm{a} {\\mathrm{t}}=\\mathrm{a} \\mid \\mathrm{s} {\\mathrm{t}}=\\mathrm{s}\\right) $$","title":"\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#mrpmdp","text":"","title":"MRP\u4e0eMDP\u6bd4\u8f83\uff1a"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E6%96%87%E4%BB%B6%E7%9A%84io/","text":"\u6587\u4ef6\u7684io open() \u9996\u5148\u901a\u8fc7open\u51fd\u6570\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\uff0c\u521b\u5efa\u4e00\u4e2afile\u5bf9\u8c61 file object = open(file_name [, access_mode][, buffering]) \u6587\u4ef6\u540d\uff0c\u53ef\u4ee5\u662f\u7edd\u5bf9\u8def\u5f84 \u6a21\u5f0f\uff1a buffering\u5bc4\u5b58\uff1a\u4e0d\u61c2 \u5176\u4e2dtruncate\u4ee3\u8868\u662f\u5426\u8986\u76d6 file.close() \u5173\u95ed\u6587\u4ef6\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4e60\u60ef\uff0c\u5f53file\u5bf9\u8c61\u88ab\u91cd\u65b0\u6307\u5b9a\u4e3a\u53e6\u4e00\u4e2a\u6587\u4ef6\u65f6\u4e5f\u4f1a\u81ea\u52a8\u5173\u95ed\u3002 file.write()","title":"\u6587\u4ef6\u7684io"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E6%96%87%E4%BB%B6%E7%9A%84io/#io","text":"","title":"\u6587\u4ef6\u7684io"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E6%96%87%E4%BB%B6%E7%9A%84io/#open","text":"\u9996\u5148\u901a\u8fc7open\u51fd\u6570\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\uff0c\u521b\u5efa\u4e00\u4e2afile\u5bf9\u8c61 file object = open(file_name [, access_mode][, buffering]) \u6587\u4ef6\u540d\uff0c\u53ef\u4ee5\u662f\u7edd\u5bf9\u8def\u5f84 \u6a21\u5f0f\uff1a buffering\u5bc4\u5b58\uff1a\u4e0d\u61c2 \u5176\u4e2dtruncate\u4ee3\u8868\u662f\u5426\u8986\u76d6","title":"open()"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E6%96%87%E4%BB%B6%E7%9A%84io/#fileclose","text":"\u5173\u95ed\u6587\u4ef6\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4e60\u60ef\uff0c\u5f53file\u5bf9\u8c61\u88ab\u91cd\u65b0\u6307\u5b9a\u4e3a\u53e6\u4e00\u4e2a\u6587\u4ef6\u65f6\u4e5f\u4f1a\u81ea\u52a8\u5173\u95ed\u3002","title":"file.close()"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E6%96%87%E4%BB%B6%E7%9A%84io/#filewrite","text":"","title":"file.write()"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/","text":"\u7ebf\u6027\u4ee3\u6570 \u5411\u91cf \u4e58\u6cd5-->\u5bf9\u5411\u91cf\u8fdb\u884c\u65cb\u8f6c\u526a\u5207\u7b49\u64cd\u4f5c \u884c\u5217\u5f0f-->\u9762\u79ef/\u4f53\u79ef\u7684\u7f29\u653e \u7ebf\u6027\u65b9\u7a0b--->$Ax=b$ \u5bf9$x$\u8fdb\u884c\u7a7a\u95f4\u53d8\u6362\uff0c\u4f7f\u4e4b\u4e3a$b$ \u3002\u82e5$A$\u7684\u884c\u5217\u5f0f\u4e3a0\uff0c\u90a3\u4e48\u5c31\u4f1a\u628a\u7a7a\u95f4\u538b\u7f29\u4e3a\u4f4e\u7ef4\u7a7a\u95f4 \u79e9-->\u53d8\u6362\u540e\u7a7a\u95f4\u7684\u7ef4\u6570 \u5217\u7a7a\u95f4-->\u5217\u6240\u5f20\u6210\u7684\u7a7a\u95f4 \u975e\u65b9\u9635-->\u4e0d\u540c\u7ef4\u5ea6\u7684\u7a7a\u95f4\u4e4b\u95f4\u7684\u53d8\u6362 \u70b9\u79ef-->\u5411\u91cf\u6295\u5f71\u5e76\u4e14\u957f\u5ea6\u76f8\u4e58\uff08$|a||b|cos\\theta$\uff09 \u53c9\u79ef-->\u5411\u91cf\uff1a\u4e24\u4e2a\u5411\u91cf\u5f20\u6210\u7684\u9762\u79ef\uff0c\u65b9\u5411\uff1a\u5782\u76f4\u4e8e\u8fd9\u4e2a\u9762 \u5bf9\u89d2\u77e9\u9635-->\u76f4\u63a5\u663e\u793a\u51fa\u4e86\u7279\u5f81\u503c","title":"\u7ebf\u6027\u4ee3\u6570"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/#_1","text":"\u5411\u91cf \u4e58\u6cd5-->\u5bf9\u5411\u91cf\u8fdb\u884c\u65cb\u8f6c\u526a\u5207\u7b49\u64cd\u4f5c \u884c\u5217\u5f0f-->\u9762\u79ef/\u4f53\u79ef\u7684\u7f29\u653e \u7ebf\u6027\u65b9\u7a0b--->$Ax=b$ \u5bf9$x$\u8fdb\u884c\u7a7a\u95f4\u53d8\u6362\uff0c\u4f7f\u4e4b\u4e3a$b$ \u3002\u82e5$A$\u7684\u884c\u5217\u5f0f\u4e3a0\uff0c\u90a3\u4e48\u5c31\u4f1a\u628a\u7a7a\u95f4\u538b\u7f29\u4e3a\u4f4e\u7ef4\u7a7a\u95f4 \u79e9-->\u53d8\u6362\u540e\u7a7a\u95f4\u7684\u7ef4\u6570 \u5217\u7a7a\u95f4-->\u5217\u6240\u5f20\u6210\u7684\u7a7a\u95f4 \u975e\u65b9\u9635-->\u4e0d\u540c\u7ef4\u5ea6\u7684\u7a7a\u95f4\u4e4b\u95f4\u7684\u53d8\u6362 \u70b9\u79ef-->\u5411\u91cf\u6295\u5f71\u5e76\u4e14\u957f\u5ea6\u76f8\u4e58\uff08$|a||b|cos\\theta$\uff09 \u53c9\u79ef-->\u5411\u91cf\uff1a\u4e24\u4e2a\u5411\u91cf\u5f20\u6210\u7684\u9762\u79ef\uff0c\u65b9\u5411\uff1a\u5782\u76f4\u4e8e\u8fd9\u4e2a\u9762 \u5bf9\u89d2\u77e9\u9635-->\u76f4\u63a5\u663e\u793a\u51fa\u4e86\u7279\u5f81\u503c","title":"\u7ebf\u6027\u4ee3\u6570"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E7%BA%BF%E7%A8%8B%E4%B8%8E%E8%BF%9B%E7%A8%8B/","text":"\u7ebf\u7a0b\u4e0e\u8fdb\u7a0b \u4e00\u4e2a\u4efb\u52a1\u79f0\u4e3a\u4e00\u4e2a\u8fdb\u7a0b \u4e00\u4e2a\u8fdb\u7a0b\u5185\u90e8\u7684\u5b50\u4efb\u52a1\u79f0\u4e3a\u7ebf\u7a0b \u8fdb\u7a0b\u662f \u8d44\u6e90\u5206\u914d \u7684\u6700\u5c0f\u5355\u4f4d\u3002 \u4efb\u610f\u65f6\u523b\uff0cCPU\u7684\u4e00\u4e2a\u6838\u5fc3\u603b\u662f\u8fd0\u884c\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u91cc\u9762\u53ef\u4ee5\u591a\u4e2a\u7ebf\u7a0b \u7ebf\u7a0b\u662f\u7a0b\u5e8f\u6267\u884c\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u800c\u8fdb\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u5206\u914d\u8d44\u6e90\u7684\u6700\u5c0f\u5355\u4f4d\uff1b \u7ebf\u7a0b\u662f\u7a0b\u5e8f\u6267\u884c\u4e2d\u4e00\u4e2a\u5355\u4e00\u7684\u987a\u5e8f\u63a7\u5236\u6d41\u7a0b\uff0c\u662f\u7a0b\u5e8f\u6267\u884c\u6d41\u7684\u6700\u5c0f\u5355\u5143\uff0c\u662f\u5904\u7406\u5668\u8c03\u5ea6\u548c\u5206\u6d3e\u7684\u57fa\u672c\u5355\u4f4d\u3002\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u7ebf\u7a0b\uff0c\u5404\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\u7a0b\u5e8f\u7684\u5185\u5b58\u7a7a\u95f4(\u4e5f\u5c31\u662f\u6240\u5728\u8fdb\u7a0b\u7684\u5185\u5b58\u7a7a\u95f4)\u3002\u4e00\u4e2a\u6807\u51c6\u7684\u7ebf\u7a0b\u7531\u7ebf\u7a0bID\u3001\u5f53\u524d\u6307\u4ee4\u6307\u9488(PC)\u3001\u5bc4\u5b58\u5668\u548c\u5806\u6808\u7ec4\u6210\u3002\u800c\u8fdb\u7a0b\u7531\u5185\u5b58\u7a7a\u95f4(\u4ee3\u7801\u3001\u6570\u636e\u3001\u8fdb\u7a0b\u7a7a\u95f4\u3001\u6253\u5f00\u7684\u6587\u4ef6)\u548c\u4e00\u4e2a\u6216\u591a\u4e2a\u7ebf\u7a0b\u7ec4\u6210\u3002 \u8fdb\u7a0b\u7684\u8fd0\u884c \u521b\u5efa\u8fdb\u7a0b \u5c31\u7eea\u8fdb\u7a0b \u8fd0\u884c\u8fdb\u7a0b \u963b\u585e\u8fdb\u7a0b \u9000\u51fa\u8fdb\u7a0b Process \u8fdb\u7a0b\u7c7b\uff0c\u521b\u5efa\u4e00\u4e2a\u8fdb\u7a0b\u5bf9\u8c61\uff0c\u7528start()\u65b9\u6cd5\u6765\u751f\u6210\u8fdb\u7a0b start() join()","title":"\u7ebf\u7a0b\u4e0e\u8fdb\u7a0b"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E7%BA%BF%E7%A8%8B%E4%B8%8E%E8%BF%9B%E7%A8%8B/#_1","text":"\u4e00\u4e2a\u4efb\u52a1\u79f0\u4e3a\u4e00\u4e2a\u8fdb\u7a0b \u4e00\u4e2a\u8fdb\u7a0b\u5185\u90e8\u7684\u5b50\u4efb\u52a1\u79f0\u4e3a\u7ebf\u7a0b \u8fdb\u7a0b\u662f \u8d44\u6e90\u5206\u914d \u7684\u6700\u5c0f\u5355\u4f4d\u3002 \u4efb\u610f\u65f6\u523b\uff0cCPU\u7684\u4e00\u4e2a\u6838\u5fc3\u603b\u662f\u8fd0\u884c\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u91cc\u9762\u53ef\u4ee5\u591a\u4e2a\u7ebf\u7a0b \u7ebf\u7a0b\u662f\u7a0b\u5e8f\u6267\u884c\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u800c\u8fdb\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u5206\u914d\u8d44\u6e90\u7684\u6700\u5c0f\u5355\u4f4d\uff1b \u7ebf\u7a0b\u662f\u7a0b\u5e8f\u6267\u884c\u4e2d\u4e00\u4e2a\u5355\u4e00\u7684\u987a\u5e8f\u63a7\u5236\u6d41\u7a0b\uff0c\u662f\u7a0b\u5e8f\u6267\u884c\u6d41\u7684\u6700\u5c0f\u5355\u5143\uff0c\u662f\u5904\u7406\u5668\u8c03\u5ea6\u548c\u5206\u6d3e\u7684\u57fa\u672c\u5355\u4f4d\u3002\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u7ebf\u7a0b\uff0c\u5404\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\u7a0b\u5e8f\u7684\u5185\u5b58\u7a7a\u95f4(\u4e5f\u5c31\u662f\u6240\u5728\u8fdb\u7a0b\u7684\u5185\u5b58\u7a7a\u95f4)\u3002\u4e00\u4e2a\u6807\u51c6\u7684\u7ebf\u7a0b\u7531\u7ebf\u7a0bID\u3001\u5f53\u524d\u6307\u4ee4\u6307\u9488(PC)\u3001\u5bc4\u5b58\u5668\u548c\u5806\u6808\u7ec4\u6210\u3002\u800c\u8fdb\u7a0b\u7531\u5185\u5b58\u7a7a\u95f4(\u4ee3\u7801\u3001\u6570\u636e\u3001\u8fdb\u7a0b\u7a7a\u95f4\u3001\u6253\u5f00\u7684\u6587\u4ef6)\u548c\u4e00\u4e2a\u6216\u591a\u4e2a\u7ebf\u7a0b\u7ec4\u6210\u3002","title":"\u7ebf\u7a0b\u4e0e\u8fdb\u7a0b"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E7%BA%BF%E7%A8%8B%E4%B8%8E%E8%BF%9B%E7%A8%8B/#_2","text":"\u521b\u5efa\u8fdb\u7a0b \u5c31\u7eea\u8fdb\u7a0b \u8fd0\u884c\u8fdb\u7a0b \u963b\u585e\u8fdb\u7a0b \u9000\u51fa\u8fdb\u7a0b","title":"\u8fdb\u7a0b\u7684\u8fd0\u884c"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E7%BA%BF%E7%A8%8B%E4%B8%8E%E8%BF%9B%E7%A8%8B/#process","text":"\u8fdb\u7a0b\u7c7b\uff0c\u521b\u5efa\u4e00\u4e2a\u8fdb\u7a0b\u5bf9\u8c61\uff0c\u7528start()\u65b9\u6cd5\u6765\u751f\u6210\u8fdb\u7a0b start() join()","title":"Process"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E2%80%94%E2%80%94%E5%88%9D%E8%AF%86/","text":"\u7f51\u7edc\u534f\u8bae\u2014\u2014\u521d\u8bc6 \u5e94\u7528\u5c42\u6307\u7684\u662f\u5ba2\u6237\u4e00\u7aef\uff0c\u7269\u7406\u5c42\u6307\u7684\u662f\u7535\u538b01\uff0c\u4e5f\u5c31\u662f\u6700\u8fdc\u79bb\u7528\u6237\u7684\u4e00\u7aef\u3002 \u7269\u7406\u5c42 \u7269\u7406\u5c42\u7684\u5b9e\u73b0\u4e3b\u8981\u662f\u501f\u52a9\u5149\u7f06\uff0c\u7535\u7f06\uff0c\u53cc\u7ede\u7ebf\u5b9e\u73b0\u7684\u7535\u538b10101010\u3002 \u6570\u636e\u94fe\u5c42 \u5355\u7eaf\u768401001010\u6ca1\u6709\u610f\u4e49\u3002 \u6240\u4ee5\u5927\u5bb6\u5f62\u6210\u4e86\u7edf\u4e00\u7684\u6807\u51c6--\u4ee5\u592a\u7f51\u534f\u8baeEthernet head\u4e2d\u5305\u542b\u7684\u6e90\u548c\u76ee\u6807\u5730\u5740\u7531\u6765\uff1aethernet\u89c4\u5b9a\u63a5\u5165internet\u7684\u8bbe\u5907\u90fd\u5fc5\u987b\u5177\u5907\u7f51\u5361\uff0c\u53d1\u9001\u7aef\u548c\u63a5\u6536\u7aef\u7684\u5730\u5740\u4fbf\u662f\u6307\u7f51\u5361\u7684\u5730\u5740\uff0c\u5373mac\u5730\u5740 mac\u5730\u5740\uff1a\u6bcf\u5757\u7f51\u5361\u51fa\u5382\u65f6\u90fd\u88ab\u70e7\u5236\u4e0a\u4e00\u4e2a\u4e16\u754c\u552f\u4e00\u7684mac\u5730\u5740\uff0c\u957f\u5ea6\u4e3a48\u4f4d2\u8fdb\u5236\uff0c\u901a\u5e38\u753112\u4f4d16\u8fdb\u5236\u6570\u8868\u793a\uff08\u524d\u516d\u4f4d\u662f\u5382\u5546\u7f16\u53f7\uff0c\u540e\u516d\u4f4d\u662f\u6d41\u6c34\u7ebf\u53f7\uff09 \u5e7f\u64ad\uff1a\u6709\u4e86mac\u5730\u5740\uff0c\u540c\u4e00\u7f51\u7edc\u5185\u7684\u4e24\u53f0\u4e3b\u673a\u5c31\u53ef\u4ee5\u901a\u4fe1\u4e86\uff08\u4e00\u53f0\u4e3b\u673a\u901a\u8fc7arp\u534f\u8bae\u83b7\u53d6\u53e6\u5916\u4e00\u53f0\u4e3b\u673a\u7684mac\u5730\u5740\uff09 ethernet\u91c7\u7528\u6700\u539f\u59cb\u7684\u65b9\u5f0f\uff0c\u5e7f\u64ad\u7684\u65b9\u5f0f\u8fdb\u884c\u901a\u4fe1\uff0c\u5373\u8ba1\u7b97\u673a\u901a\u4fe1\u57fa\u672c\u9760\u543c \u7f51\u7edc\u5c42 \u5e7f\u64ad\u662f\u4e2a\u4f4e\u6548\u7684\u65b9\u6cd5\uff1a\u56e0\u4e3a\u5b83\u4f1a\u4f20\u8f93\u7ed9\u6240\u6709\u8054\u7f51\u7684\u8ba1\u7b97\u673a\u3002\u6240\u4ee5\u8981\u628a\u8ba1\u7b97\u673a\u5206\u7ec4\uff0c\u91c7\u7528 \u8def\u7531 \u7684\u65b9\u5f0f\u6765\u76f8\u4e0d\u540c\u7684\u5e7f\u64ad\u57df/\u5b50\u7f51\u3002 IP\u534f\u8bae\uff1a \u89c4\u5b9a\u7f51\u7edc\u5730\u5740\u7684\u534f\u8bae\u53ebip\u534f\u8bae\uff0c\u5b83\u5b9a\u4e49\u7684\u5730\u5740\u79f0\u4e4b\u4e3aip\u5730\u5740\uff0c\u5e7f\u6cdb\u91c7\u7528\u7684v4\u7248\u672c\u5373ipv4\uff0c\u5b83\u89c4\u5b9a\u7f51\u7edc\u5730\u5740\u753132\u4f4d2\u8fdb\u5236\u8868\u793a \u8303\u56f40.0.0.0-255.255.255.255 \u4e00\u4e2aip\u5730\u5740\u901a\u5e38\u5199\u6210\u56db\u6bb5\u5341\u8fdb\u5236\u6570\uff0c\u4f8b\uff1a172.16.10.1 ip\u5730\u5740\u5206\u6210\u4e24\u90e8\u5206 \u7f51\u7edc\u90e8\u5206\uff1a\u6807\u8bc6\u5b50\u7f51 \u4e3b\u673a\u90e8\u5206\uff1a\u6807\u8bc6\u4e3b\u673a \u6ce8\u610f\uff1a\u5355\u7eaf\u7684ip\u5730\u5740\u6bb5\u53ea\u662f\u6807\u8bc6\u4e86ip\u5730\u5740\u7684\u79cd\u7c7b\uff0c\u4ece\u7f51\u7edc\u90e8\u5206\u6216\u4e3b\u673a\u90e8\u5206\u90fd\u65e0\u6cd5\u8fa8\u8bc6\u4e00\u4e2aip\u6240\u5904\u7684\u5b50\u7f51 \u4f8b\uff1a172.16.10.1\u4e0e172.16.10.2\u5e76\u4e0d\u80fd\u786e\u5b9a\u4e8c\u8005\u5904\u4e8e\u540c\u4e00\u5b50\u7f51 \u7136\u540e\u7ee7\u7eed\u5c06\u6570\u636e\u6253\u5305\uff0c\u653e\u5165\u5230\u524d\u9762\u6570\u636e\u94fe\u5c42\u7684data\u90e8\u5206\u3002\u6240\u4ee5\uff1a \u603b\u7ed3\u4e0a\u4e24\u5c42 ARP\uff08Address Resolution Protocol\uff09\u5373\u5730\u5740\u89e3\u6790\u534f\u8bae\uff0c \u7528\u4e8e\u5b9e\u73b0\u4ece IP \u5730\u5740\u5230 MAC \u5730\u5740\u7684\u6620\u5c04\uff0c\u5373\u8be2\u95ee\u76ee\u6807IP\u5bf9\u5e94\u7684MAC\u5730\u5740 \u3002\u53d1\u6325\u4e86\u5de8\u5927\u7684\u4f5c\u7528\uff1a","title":"\u7f51\u7edc\u534f\u8bae\u2014\u2014\u521d\u8bc6"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E2%80%94%E2%80%94%E5%88%9D%E8%AF%86/#_1","text":"\u5e94\u7528\u5c42\u6307\u7684\u662f\u5ba2\u6237\u4e00\u7aef\uff0c\u7269\u7406\u5c42\u6307\u7684\u662f\u7535\u538b01\uff0c\u4e5f\u5c31\u662f\u6700\u8fdc\u79bb\u7528\u6237\u7684\u4e00\u7aef\u3002","title":"\u7f51\u7edc\u534f\u8bae\u2014\u2014\u521d\u8bc6"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E2%80%94%E2%80%94%E5%88%9D%E8%AF%86/#_2","text":"\u7269\u7406\u5c42\u7684\u5b9e\u73b0\u4e3b\u8981\u662f\u501f\u52a9\u5149\u7f06\uff0c\u7535\u7f06\uff0c\u53cc\u7ede\u7ebf\u5b9e\u73b0\u7684\u7535\u538b10101010\u3002","title":"\u7269\u7406\u5c42"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E2%80%94%E2%80%94%E5%88%9D%E8%AF%86/#_3","text":"\u5355\u7eaf\u768401001010\u6ca1\u6709\u610f\u4e49\u3002 \u6240\u4ee5\u5927\u5bb6\u5f62\u6210\u4e86\u7edf\u4e00\u7684\u6807\u51c6--\u4ee5\u592a\u7f51\u534f\u8baeEthernet head\u4e2d\u5305\u542b\u7684\u6e90\u548c\u76ee\u6807\u5730\u5740\u7531\u6765\uff1aethernet\u89c4\u5b9a\u63a5\u5165internet\u7684\u8bbe\u5907\u90fd\u5fc5\u987b\u5177\u5907\u7f51\u5361\uff0c\u53d1\u9001\u7aef\u548c\u63a5\u6536\u7aef\u7684\u5730\u5740\u4fbf\u662f\u6307\u7f51\u5361\u7684\u5730\u5740\uff0c\u5373mac\u5730\u5740 mac\u5730\u5740\uff1a\u6bcf\u5757\u7f51\u5361\u51fa\u5382\u65f6\u90fd\u88ab\u70e7\u5236\u4e0a\u4e00\u4e2a\u4e16\u754c\u552f\u4e00\u7684mac\u5730\u5740\uff0c\u957f\u5ea6\u4e3a48\u4f4d2\u8fdb\u5236\uff0c\u901a\u5e38\u753112\u4f4d16\u8fdb\u5236\u6570\u8868\u793a\uff08\u524d\u516d\u4f4d\u662f\u5382\u5546\u7f16\u53f7\uff0c\u540e\u516d\u4f4d\u662f\u6d41\u6c34\u7ebf\u53f7\uff09 \u5e7f\u64ad\uff1a\u6709\u4e86mac\u5730\u5740\uff0c\u540c\u4e00\u7f51\u7edc\u5185\u7684\u4e24\u53f0\u4e3b\u673a\u5c31\u53ef\u4ee5\u901a\u4fe1\u4e86\uff08\u4e00\u53f0\u4e3b\u673a\u901a\u8fc7arp\u534f\u8bae\u83b7\u53d6\u53e6\u5916\u4e00\u53f0\u4e3b\u673a\u7684mac\u5730\u5740\uff09 ethernet\u91c7\u7528\u6700\u539f\u59cb\u7684\u65b9\u5f0f\uff0c\u5e7f\u64ad\u7684\u65b9\u5f0f\u8fdb\u884c\u901a\u4fe1\uff0c\u5373\u8ba1\u7b97\u673a\u901a\u4fe1\u57fa\u672c\u9760\u543c","title":"\u6570\u636e\u94fe\u5c42"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E2%80%94%E2%80%94%E5%88%9D%E8%AF%86/#_4","text":"\u5e7f\u64ad\u662f\u4e2a\u4f4e\u6548\u7684\u65b9\u6cd5\uff1a\u56e0\u4e3a\u5b83\u4f1a\u4f20\u8f93\u7ed9\u6240\u6709\u8054\u7f51\u7684\u8ba1\u7b97\u673a\u3002\u6240\u4ee5\u8981\u628a\u8ba1\u7b97\u673a\u5206\u7ec4\uff0c\u91c7\u7528 \u8def\u7531 \u7684\u65b9\u5f0f\u6765\u76f8\u4e0d\u540c\u7684\u5e7f\u64ad\u57df/\u5b50\u7f51\u3002 IP\u534f\u8bae\uff1a \u89c4\u5b9a\u7f51\u7edc\u5730\u5740\u7684\u534f\u8bae\u53ebip\u534f\u8bae\uff0c\u5b83\u5b9a\u4e49\u7684\u5730\u5740\u79f0\u4e4b\u4e3aip\u5730\u5740\uff0c\u5e7f\u6cdb\u91c7\u7528\u7684v4\u7248\u672c\u5373ipv4\uff0c\u5b83\u89c4\u5b9a\u7f51\u7edc\u5730\u5740\u753132\u4f4d2\u8fdb\u5236\u8868\u793a \u8303\u56f40.0.0.0-255.255.255.255 \u4e00\u4e2aip\u5730\u5740\u901a\u5e38\u5199\u6210\u56db\u6bb5\u5341\u8fdb\u5236\u6570\uff0c\u4f8b\uff1a172.16.10.1 ip\u5730\u5740\u5206\u6210\u4e24\u90e8\u5206 \u7f51\u7edc\u90e8\u5206\uff1a\u6807\u8bc6\u5b50\u7f51 \u4e3b\u673a\u90e8\u5206\uff1a\u6807\u8bc6\u4e3b\u673a \u6ce8\u610f\uff1a\u5355\u7eaf\u7684ip\u5730\u5740\u6bb5\u53ea\u662f\u6807\u8bc6\u4e86ip\u5730\u5740\u7684\u79cd\u7c7b\uff0c\u4ece\u7f51\u7edc\u90e8\u5206\u6216\u4e3b\u673a\u90e8\u5206\u90fd\u65e0\u6cd5\u8fa8\u8bc6\u4e00\u4e2aip\u6240\u5904\u7684\u5b50\u7f51 \u4f8b\uff1a172.16.10.1\u4e0e172.16.10.2\u5e76\u4e0d\u80fd\u786e\u5b9a\u4e8c\u8005\u5904\u4e8e\u540c\u4e00\u5b50\u7f51 \u7136\u540e\u7ee7\u7eed\u5c06\u6570\u636e\u6253\u5305\uff0c\u653e\u5165\u5230\u524d\u9762\u6570\u636e\u94fe\u5c42\u7684data\u90e8\u5206\u3002\u6240\u4ee5\uff1a","title":"\u7f51\u7edc\u5c42"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E2%80%94%E2%80%94%E5%88%9D%E8%AF%86/#_5","text":"ARP\uff08Address Resolution Protocol\uff09\u5373\u5730\u5740\u89e3\u6790\u534f\u8bae\uff0c \u7528\u4e8e\u5b9e\u73b0\u4ece IP \u5730\u5740\u5230 MAC \u5730\u5740\u7684\u6620\u5c04\uff0c\u5373\u8be2\u95ee\u76ee\u6807IP\u5bf9\u5e94\u7684MAC\u5730\u5740 \u3002\u53d1\u6325\u4e86\u5de8\u5927\u7684\u4f5c\u7528\uff1a","title":"\u603b\u7ed3\u4e0a\u4e24\u5c42"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E7%BD%91%E9%A1%B5%E7%9A%84%E7%BB%84%E6%88%90/","text":"\u7f51\u9875\u7684\u7ec4\u6210 \u4e09\u5927\u90e8\u5206\u7ec4\u6210 HTML CSS JS HTML \u57fa\u7840\u6846\u67b6 \u7f51\u9875\u7684\u9aa8\u67b6 \u5e38\u89c1\u6807\u7b7e head body \u5206\u5757\u6807\u7b7e\uff0c\u7ed3\u5408id=*** \u6765\u4e0ecss\u7ed3\u5408 ## CSS #head_wrapper.s-ps-islite .s-p-top { position: absolute; bottom: 40px; width: 100%; height: 181px; } \u5c31\u662f\u4e00\u4e2a CSS \u6837\u5f0f\u3002\u5927\u62ec\u53f7\u524d\u9762\u662f\u4e00\u4e2a CSS \u9009\u62e9\u5668\uff0c\u6b64\u9009\u62e9\u5668\u7684\u610f\u601d\u662f\u9996\u5148\u9009\u4e2d `id` \u4e3a `head_wrapper` \u4e14 `class` \u4e3a `s-ps-islite` \u7684\u8282\u70b9\uff0c\u7136\u540e\u518d\u9009\u4e2d\u5176\u5185\u90e8\u7684 `class` \u4e3a `s-p-top` \u7684\u8282\u70b9\u3002\u5927\u62ec\u53f7\u5185\u90e8\u5199\u7684\u5c31\u662f\u4e00\u6761\u6761\u6837\u5f0f\u89c4\u5219\uff0c\u4f8b\u5982 `position` \u6307\u5b9a\u4e86\u8fd9\u4e2a\u5143\u7d20\u7684\u5e03\u5c40\u65b9\u5f0f\u4e3a\u7edd\u5bf9\u5e03\u5c40\uff0c`bottom` \u6307\u5b9a\u5143\u7d20\u7684\u4e0b\u8fb9\u8ddd\u4e3a 40 \u50cf\u7d20\uff0c`width` \u6307\u5b9a\u4e86\u5bbd\u5ea6\u4e3a 100% \u5360\u6ee1\u7236\u5143\u7d20\uff0c`height` \u5219\u6307\u5b9a\u4e86\u5143\u7d20\u7684\u9ad8\u5ea6\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5c06\u4f4d\u7f6e\u3001\u5bbd\u5ea6\u3001\u9ad8\u5ea6\u7b49\u6837\u5f0f\u914d\u7f6e\u7edf\u4e00\u5199\u6210\u8fd9\u6837\u7684\u5f62\u5f0f\uff0c\u7136\u540e\u7528\u5927\u62ec\u53f7\u62ec\u8d77\u6765\uff0c\u63a5\u7740\u5728\u5f00\u5934\u518d\u52a0\u4e0a CSS \u9009\u62e9\u5668\uff0c\u8fd9\u5c31\u4ee3\u8868\u8fd9\u4e2a\u6837\u5f0f\u5bf9 CSS \u9009\u62e9\u5668\u9009\u4e2d\u7684\u5143\u7d20\u751f\u6548\uff0c\u5143\u7d20\u5c31\u4f1a\u6839\u636e\u6b64\u6837\u5f0f\u6765\u5c55\u793a\u4e86\u3002 ## javaScript \u5728HTML\u4e2d\u7528 <script src=\"jquery-2.1.0.js\"></script> \u5f15\u5165 ## \u8282\u70b9\u6811 ![img](\u7f51\u9875\u7684\u7ec4\u6210.assets/2-12.jpg)","title":"\u7f51\u9875\u7684\u7ec4\u6210"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E7%BD%91%E9%A1%B5%E7%9A%84%E7%BB%84%E6%88%90/#_1","text":"\u4e09\u5927\u90e8\u5206\u7ec4\u6210 HTML CSS JS","title":"\u7f51\u9875\u7684\u7ec4\u6210"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E7%BD%91%E9%A1%B5%E7%9A%84%E7%BB%84%E6%88%90/#html","text":"\u57fa\u7840\u6846\u67b6 \u7f51\u9875\u7684\u9aa8\u67b6 \u5e38\u89c1\u6807\u7b7e head body \u5206\u5757\u6807\u7b7e\uff0c\u7ed3\u5408id=*** \u6765\u4e0ecss\u7ed3\u5408 ## CSS #head_wrapper.s-ps-islite .s-p-top { position: absolute; bottom: 40px; width: 100%; height: 181px; } \u5c31\u662f\u4e00\u4e2a CSS \u6837\u5f0f\u3002\u5927\u62ec\u53f7\u524d\u9762\u662f\u4e00\u4e2a CSS \u9009\u62e9\u5668\uff0c\u6b64\u9009\u62e9\u5668\u7684\u610f\u601d\u662f\u9996\u5148\u9009\u4e2d `id` \u4e3a `head_wrapper` \u4e14 `class` \u4e3a `s-ps-islite` \u7684\u8282\u70b9\uff0c\u7136\u540e\u518d\u9009\u4e2d\u5176\u5185\u90e8\u7684 `class` \u4e3a `s-p-top` \u7684\u8282\u70b9\u3002\u5927\u62ec\u53f7\u5185\u90e8\u5199\u7684\u5c31\u662f\u4e00\u6761\u6761\u6837\u5f0f\u89c4\u5219\uff0c\u4f8b\u5982 `position` \u6307\u5b9a\u4e86\u8fd9\u4e2a\u5143\u7d20\u7684\u5e03\u5c40\u65b9\u5f0f\u4e3a\u7edd\u5bf9\u5e03\u5c40\uff0c`bottom` \u6307\u5b9a\u5143\u7d20\u7684\u4e0b\u8fb9\u8ddd\u4e3a 40 \u50cf\u7d20\uff0c`width` \u6307\u5b9a\u4e86\u5bbd\u5ea6\u4e3a 100% \u5360\u6ee1\u7236\u5143\u7d20\uff0c`height` \u5219\u6307\u5b9a\u4e86\u5143\u7d20\u7684\u9ad8\u5ea6\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5c06\u4f4d\u7f6e\u3001\u5bbd\u5ea6\u3001\u9ad8\u5ea6\u7b49\u6837\u5f0f\u914d\u7f6e\u7edf\u4e00\u5199\u6210\u8fd9\u6837\u7684\u5f62\u5f0f\uff0c\u7136\u540e\u7528\u5927\u62ec\u53f7\u62ec\u8d77\u6765\uff0c\u63a5\u7740\u5728\u5f00\u5934\u518d\u52a0\u4e0a CSS \u9009\u62e9\u5668\uff0c\u8fd9\u5c31\u4ee3\u8868\u8fd9\u4e2a\u6837\u5f0f\u5bf9 CSS \u9009\u62e9\u5668\u9009\u4e2d\u7684\u5143\u7d20\u751f\u6548\uff0c\u5143\u7d20\u5c31\u4f1a\u6839\u636e\u6b64\u6837\u5f0f\u6765\u5c55\u793a\u4e86\u3002 ## javaScript \u5728HTML\u4e2d\u7528 <script src=\"jquery-2.1.0.js\"></script> \u5f15\u5165 ## \u8282\u70b9\u6811 ![img](\u7f51\u9875\u7684\u7ec4\u6210.assets/2-12.jpg)","title":"HTML"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E8%8D%89%E7%A8%BF%E6%9C%AC/","text":"Draft $$ Score(G,D,E) = Likelihood(G,D)+Prior(G,E) $$ Since the decomposability, $$ Prior = \\sum_{i=1,2,...,n}f(x_i,E) $$ $$ \\textbf{e} = [e_1,e_2,...,e_m]\\ \\textbf{c} = [c_1,c_2,...,c_m] $$ $$ f(x_i,E) = \\sum_{j=1,2,..,m,j\\neq{i}} {\\sigma_{i,j}(G_{i,j},E_{i,j})} $$ $$ {\\sigma_{i,j}(G_{i,j},E_{i,j})} = \\ \\text{if }G_{i,j}==1, E_{i,j};\\ \\text{if }G_{i,j}==0, 1-E_{i,j}; $$ where, $$ E = g(\\textbf{e},\\textbf{c}) $$ $$ E_{i,j} = c_1[e_1] {ij}+c_2[e_2] {ij}+...+c_k[e_k]_{ij} $$ summarize it: $$ Score = Score(G,D,\\textbf{e},\\textbf{c}) $$ the problem is: if $G,\\textbf{c}$ are not given: $$ \\max {G,\\textbf{c}}Score(G,D,\\textbf{e},\\textbf{c}) $$ if only $G$ are not given: $$ \\max {G}Score(G,D,\\textbf{e},\\textbf{c}) $$ \u8bba\u6587\u5b9e\u9a8c\u8ba1\u5212 https://www.bnlearn.com/bnrepository/ \u6570\u636e\u96c6 nodes \u5c0f\u578b\u6570\u636e\u96c6 ASIA 8 \u4e2d\u578b\u6570\u636e\u96c6ALARM 37 \u4e2d\u578b\u6570\u636e\u96c6INSURANCE 27 \u5927\u578b\u6570\u636e\u96c6HAILFINDER 56 \u53c2\u8003\u6587\u732e\uff1a S. Lauritzen, D. Spiegelhalter. Local Computation with Probabilities on Graphical Structures and their Application to Expert Systems (with discussion). Journal of the Royal Statistical Society: Series B (Statistical Methodology), 50(2):157-224, 1988. I. A. Beinlich, H. J. Suermondt, R. M. Chavez, and G. F. Cooper. The ALARM Monitoring System: A Case Study with Two Probabilistic Inference Techniques for Belief Networks. In Proceedings of the 2nd European Conference on Artificial Intelligence in Medicine, pages 247-256. Springer-Verlag, 1989. J. Binder, D. Koller, S. Russell, and K. Kanazawa. Adaptive Probabilistic Networks with Hidden Variables. Machine Learning, 29(2-3):213-244, 1997. B. Abramson, J. Brown, W. Edwards, A. Murphy, and R. L. Winkler. Hailfinder: A Bayesian system for forecasting severe weather. International Journal of Forecasting, 12(1):57-71, 1996. \u7b97\u6cd5 \u51c6\u786e\u7b97\u6cd5 \u722c\u5c71\u7b97\u6cd5 tabu\u641c\u7d22 mmhc GA KBNL","title":"Draft"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E8%8D%89%E7%A8%BF%E6%9C%AC/#draft","text":"$$ Score(G,D,E) = Likelihood(G,D)+Prior(G,E) $$ Since the decomposability, $$ Prior = \\sum_{i=1,2,...,n}f(x_i,E) $$ $$ \\textbf{e} = [e_1,e_2,...,e_m]\\ \\textbf{c} = [c_1,c_2,...,c_m] $$ $$ f(x_i,E) = \\sum_{j=1,2,..,m,j\\neq{i}} {\\sigma_{i,j}(G_{i,j},E_{i,j})} $$ $$ {\\sigma_{i,j}(G_{i,j},E_{i,j})} = \\ \\text{if }G_{i,j}==1, E_{i,j};\\ \\text{if }G_{i,j}==0, 1-E_{i,j}; $$ where, $$ E = g(\\textbf{e},\\textbf{c}) $$ $$ E_{i,j} = c_1[e_1] {ij}+c_2[e_2] {ij}+...+c_k[e_k]_{ij} $$ summarize it: $$ Score = Score(G,D,\\textbf{e},\\textbf{c}) $$ the problem is: if $G,\\textbf{c}$ are not given: $$ \\max {G,\\textbf{c}}Score(G,D,\\textbf{e},\\textbf{c}) $$ if only $G$ are not given: $$ \\max {G}Score(G,D,\\textbf{e},\\textbf{c}) $$","title":"Draft"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E8%8D%89%E7%A8%BF%E6%9C%AC/#_1","text":"https://www.bnlearn.com/bnrepository/ \u6570\u636e\u96c6 nodes \u5c0f\u578b\u6570\u636e\u96c6 ASIA 8 \u4e2d\u578b\u6570\u636e\u96c6ALARM 37 \u4e2d\u578b\u6570\u636e\u96c6INSURANCE 27 \u5927\u578b\u6570\u636e\u96c6HAILFINDER 56 \u53c2\u8003\u6587\u732e\uff1a S. Lauritzen, D. Spiegelhalter. Local Computation with Probabilities on Graphical Structures and their Application to Expert Systems (with discussion). Journal of the Royal Statistical Society: Series B (Statistical Methodology), 50(2):157-224, 1988. I. A. Beinlich, H. J. Suermondt, R. M. Chavez, and G. F. Cooper. The ALARM Monitoring System: A Case Study with Two Probabilistic Inference Techniques for Belief Networks. In Proceedings of the 2nd European Conference on Artificial Intelligence in Medicine, pages 247-256. Springer-Verlag, 1989. J. Binder, D. Koller, S. Russell, and K. Kanazawa. Adaptive Probabilistic Networks with Hidden Variables. Machine Learning, 29(2-3):213-244, 1997. B. Abramson, J. Brown, W. Edwards, A. Murphy, and R. L. Winkler. Hailfinder: A Bayesian system for forecasting severe weather. International Journal of Forecasting, 12(1):57-71, 1996. \u7b97\u6cd5 \u51c6\u786e\u7b97\u6cd5 \u722c\u5c71\u7b97\u6cd5 tabu\u641c\u7d22 mmhc GA KBNL","title":"\u8bba\u6587\u5b9e\u9a8c\u8ba1\u5212"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/","text":"\u8ba1\u7b97\u673a\u7f51\u7edc \u5e94\u7528\u5c42 \u8868\u793a\u5c42 \u4f1a\u8bdd\u5c42 \u4f20\u8f93\u5c42 \u7f51\u7edc\u5c42 \u6570\u636e\u94fe\u8def\u5c42 \u7269\u7406\u5c42","title":"\u8ba1\u7b97\u673a\u7f51\u7edc"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/#_1","text":"\u5e94\u7528\u5c42 \u8868\u793a\u5c42 \u4f1a\u8bdd\u5c42 \u4f20\u8f93\u5c42 \u7f51\u7edc\u5c42 \u6570\u636e\u94fe\u8def\u5c42 \u7269\u7406\u5c42","title":"\u8ba1\u7b97\u673a\u7f51\u7edc"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/","text":"\u8bbe\u8ba1\u6a21\u5f0f https://www.guanguans.cn/design-patterns-for-humans-cn/#%E4%BB%8B%E7%BB%8D https://www.bilibili.com/video/BV19541167cn?from=search&seid=17009022369738776581&spm_id_from=333.337.0.0 \u8f6f\u4ef6\u5de5\u7a0b\u57fa\u7840\uff0c\u7528\u4e8e\u8bbe\u8ba1\u4e00\u4e2a\u5927\u578b\u9879\u76ee\u5e94\u8be5\u5982\u4f55coding\u3002 \u9762\u5411\u5bf9\u8c61 \u5c01\u88c5\uff1a\u628a\u6570\u636e\u5c01\u88c5\u5230\u4e00\u4e2a\u7c7b\u91cc\uff0c\u79c1\u6709\u4e0e\u5171\u6709 \u7ee7\u627f\uff1a \u591a\u6001\uff1a \u63a5\u53e3\uff1a\u82e5\u5e72\u62bd\u8c61\u65b9\u6cd5\u7684\u96c6\u5408\u3002 \u200b \u4f5c\u7528\uff1a\u9650\u5236\u5b9e\u73b0\u7ed3\u6784\u7684\u7c7b\u5fc5\u987b\u6309\u7167\u6307\u5b9a\u7684\u65b9\u5f0f\u5b9e\u73b0\u8fd9\u4e9b\u65b9\u6cd5\u3002 from abc import ABCMeta, abstractmethod # \u5177\u6709\u62bd\u8c61\u65b9\u6cd5\u7684\u7c7b\u5c31\u662f\u63a5\u53e3\u7c7b # \u5b9a\u4e49\u4e86\u8fd9\u4e2a\u7c7b\u5e94\u8be5\u534f\u7a0b\u4ec0\u4e48\u6837\u5b50 class Payment(metaclass=ABCMeta): @abstractmethod def pay(self, money): \"\"\" \u62bd\u8c61\u65b9\u6cd5\uff0c\u5728\u5b9e\u73b0\u7684\u7c7b\u4e2d\u5fc5\u987b\u5b9e\u73b0\u7684\u65b9\u6cd5\u3002\u9650\u5236\u5b9e\u73b0\u63a5\u53e3\u7684\u7c7b\u5fc5\u987b\u6309\u7167\u63a5\u53e3\u7ed9\u5b9a\u7684\u8c03\u7528\u65b9\u5f0f\u5b9e\u73b0\u8fd9\u4e9b\u65b9\u6cd5 :param money: :return: \"\"\" pass # \u4e0d\u80fd\u8bf4\u662f\u7ee7\u627f\u63a5\u53e3\u7c7b\uff0c\u5e94\u8be5\u8bf4\u662f\u5b9e\u73b0\u63a5\u53e3 class Alipay(Payment): def pay(self, money): \"\"\" \u5b9e\u73b0\u63a5\u53e3\u7c7b\u4e2d\u7684\u5fc5\u987b\u5b9e\u73b0\u7684\u65b9\u6cd5 :param money: :return: \"\"\" print(\"\u652f\u4ed8\u5b9d\u652f\u4ed8\u4e86{0}\u5143!\".format(money)) class WechatPay(Payment): def pay(self, money): \"\"\" \u5b9e\u73b0\u63a5\u53e3\u7c7b\u4e2d\u7684\u5fc5\u987b\u5b9e\u73b0\u7684\u65b9\u6cd5 :param money: :return: \"\"\" print(\"\u5fae\u4fe1\u652f\u4ed8\u4e86%d\u5143!\" % (money)) # \u4e0b\u9762\u662f\u9ad8\u5c42\u4ee3\u7801\uff0c\u5728\u8c03\u7528\u7684\u65f6\u5019\u662f\u770b\u4e0d\u5230\u5e95\u5c42\u7c7b\u7684\u5185\u90e8\u5b9e\u73b0 a = Alipay() w = WechatPay() a.pay(100) w.pay(100) \u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1SOLID\u539f\u5219 \u5f00\u653e\u5c01\u95ed\u539f\u5219\uff1a\u4e00\u4e2a\u8f6f\u4ef6\u5b9e\u4f53\u5982\u7c7b\uff0c\u6a21\u5757\u7b49\uff0c\u5bf9\u6269\u5c55\u5f00\u653e\uff0c\u5bf9\u4fee\u6539\u5173\u95ed \u91cc\u6c0f\u66ff\u6362\u539f\u5219\uff1a\u6240\u6709\u5f15\u7528\u7236\u7c7b\u7684\u5730\u65b9\u5fc5\u987b\u80fd\u591f\u4f7f\u7528\u5176\u5b50\u7c7b\u7684\u5bf9\u8c61 \u4f9d\u8d56\u5012\u7f6e\u539f\u5219\uff1a\u9ad8\u5c42\u6a21\u5757\u4e0d\u5e94\u8be5\u4f9d\u8d56\u5e95\u5c42\u6a21\u5757\u3002\u5373\u8981\u9488\u5bf9\u63a5\u53e3\u7f16\u7a0b\uff0c\u800c\u4e0d\u662f\u9488\u5bf9\u5b9e\u73b0\u7f16\u7a0b\u3002 \u7ed3\u6784\u9694\u79bb\u539f\u5219\uff1a\u4f7f\u7528\u591a\u4e2a\u4e13\u95e8\u7684\u63a5\u53e3\uff0c\u4e0d\u5e94\u8be5\u4f7f\u7528\u5355\u4e00\u7684\u63a5\u53e3\u3002 \u7b80\u5355\u5de5\u5382\u6a21\u5f0f from abc import ABCMeta, abstractmethod # \u62bd\u8c61\u4ea7\u54c1\u89d2\u8272 class Payment(metaclass=ABCMeta): @abstractmethod def pay(self, money): pass # \u5177\u4f53\u4ea7\u54c1\u89d2\u8272 class Alipay(Payment): def __init__(self, use_huabei=False): self.use_huabei = use_huabei def pay(self, money): if self.use_huabei == True: print(\"\u82b1\u5457\u652f\u4ed8\u4e86{0}\u5143!\".format(money)) else: print(\"\u652f\u4ed8\u5b9d\u4f59\u989d\u652f\u4ed8\u4e86{0}\u5143!\".format(money)) class WechatPay(Payment): def pay(self, money): print(\"\u5fae\u4fe1\u652f\u4ed8\u4e86%d\u5143!\" % (money)) # \u62bd\u8c61\u5de5\u5382\u89d2\u8272 class PaymentFactory(metaclass=ABCMeta): @abstractmethod def create_payment(self): pass # \u5177\u4f53\u5de5\u5382\u89d2\u8272 class AlipayFactory(PaymentFactory): def create_payment(self): return Alipay() class WechatPayFactory(PaymentFactory): def create_payment(self): return Alipay() class HuabeiFactory(PaymentFactory): def create_payment(self): return Alipay(use_huabei=True) hfp = HuabeiFactory().create_payment() hfp.pay(100) # \u82b1\u5457\u652f\u4ed8\u4e86100\u5143! \u89d2\u8272\u5305\u62ec\uff1a \u5de5\u5382\u89d2\u8272 \u62bd\u8c61\u4ea7\u54c1\u89d2\u8272(\u62bd\u8c61\u7c7b) \u5177\u4f53\u4ea7\u54c1\u89d2\u8272 \u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f \u5de5\u5382\u57fa\u7c7b\uff1a\u5b9a\u4e49\u4e00\u4e2a\u521b\u5efa\u5b50\u7c7b\u7684\u63a5\u53e3 \u8ba9\u5b50\u7c7b\u51b3\u5b9a\u5b9e\u4f8b\u5316\u4ec0\u4e48\u6837\u7684\u4ea7\u54c1\u7c7b","title":"\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_1","text":"https://www.guanguans.cn/design-patterns-for-humans-cn/#%E4%BB%8B%E7%BB%8D https://www.bilibili.com/video/BV19541167cn?from=search&seid=17009022369738776581&spm_id_from=333.337.0.0 \u8f6f\u4ef6\u5de5\u7a0b\u57fa\u7840\uff0c\u7528\u4e8e\u8bbe\u8ba1\u4e00\u4e2a\u5927\u578b\u9879\u76ee\u5e94\u8be5\u5982\u4f55coding\u3002","title":"\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_2","text":"\u5c01\u88c5\uff1a\u628a\u6570\u636e\u5c01\u88c5\u5230\u4e00\u4e2a\u7c7b\u91cc\uff0c\u79c1\u6709\u4e0e\u5171\u6709 \u7ee7\u627f\uff1a \u591a\u6001\uff1a","title":"\u9762\u5411\u5bf9\u8c61"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_3","text":"\u200b \u4f5c\u7528\uff1a\u9650\u5236\u5b9e\u73b0\u7ed3\u6784\u7684\u7c7b\u5fc5\u987b\u6309\u7167\u6307\u5b9a\u7684\u65b9\u5f0f\u5b9e\u73b0\u8fd9\u4e9b\u65b9\u6cd5\u3002 from abc import ABCMeta, abstractmethod # \u5177\u6709\u62bd\u8c61\u65b9\u6cd5\u7684\u7c7b\u5c31\u662f\u63a5\u53e3\u7c7b # \u5b9a\u4e49\u4e86\u8fd9\u4e2a\u7c7b\u5e94\u8be5\u534f\u7a0b\u4ec0\u4e48\u6837\u5b50 class Payment(metaclass=ABCMeta): @abstractmethod def pay(self, money): \"\"\" \u62bd\u8c61\u65b9\u6cd5\uff0c\u5728\u5b9e\u73b0\u7684\u7c7b\u4e2d\u5fc5\u987b\u5b9e\u73b0\u7684\u65b9\u6cd5\u3002\u9650\u5236\u5b9e\u73b0\u63a5\u53e3\u7684\u7c7b\u5fc5\u987b\u6309\u7167\u63a5\u53e3\u7ed9\u5b9a\u7684\u8c03\u7528\u65b9\u5f0f\u5b9e\u73b0\u8fd9\u4e9b\u65b9\u6cd5 :param money: :return: \"\"\" pass # \u4e0d\u80fd\u8bf4\u662f\u7ee7\u627f\u63a5\u53e3\u7c7b\uff0c\u5e94\u8be5\u8bf4\u662f\u5b9e\u73b0\u63a5\u53e3 class Alipay(Payment): def pay(self, money): \"\"\" \u5b9e\u73b0\u63a5\u53e3\u7c7b\u4e2d\u7684\u5fc5\u987b\u5b9e\u73b0\u7684\u65b9\u6cd5 :param money: :return: \"\"\" print(\"\u652f\u4ed8\u5b9d\u652f\u4ed8\u4e86{0}\u5143!\".format(money)) class WechatPay(Payment): def pay(self, money): \"\"\" \u5b9e\u73b0\u63a5\u53e3\u7c7b\u4e2d\u7684\u5fc5\u987b\u5b9e\u73b0\u7684\u65b9\u6cd5 :param money: :return: \"\"\" print(\"\u5fae\u4fe1\u652f\u4ed8\u4e86%d\u5143!\" % (money)) # \u4e0b\u9762\u662f\u9ad8\u5c42\u4ee3\u7801\uff0c\u5728\u8c03\u7528\u7684\u65f6\u5019\u662f\u770b\u4e0d\u5230\u5e95\u5c42\u7c7b\u7684\u5185\u90e8\u5b9e\u73b0 a = Alipay() w = WechatPay() a.pay(100) w.pay(100)","title":"\u63a5\u53e3\uff1a\u82e5\u5e72\u62bd\u8c61\u65b9\u6cd5\u7684\u96c6\u5408\u3002"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#solid","text":"\u5f00\u653e\u5c01\u95ed\u539f\u5219\uff1a\u4e00\u4e2a\u8f6f\u4ef6\u5b9e\u4f53\u5982\u7c7b\uff0c\u6a21\u5757\u7b49\uff0c\u5bf9\u6269\u5c55\u5f00\u653e\uff0c\u5bf9\u4fee\u6539\u5173\u95ed \u91cc\u6c0f\u66ff\u6362\u539f\u5219\uff1a\u6240\u6709\u5f15\u7528\u7236\u7c7b\u7684\u5730\u65b9\u5fc5\u987b\u80fd\u591f\u4f7f\u7528\u5176\u5b50\u7c7b\u7684\u5bf9\u8c61 \u4f9d\u8d56\u5012\u7f6e\u539f\u5219\uff1a\u9ad8\u5c42\u6a21\u5757\u4e0d\u5e94\u8be5\u4f9d\u8d56\u5e95\u5c42\u6a21\u5757\u3002\u5373\u8981\u9488\u5bf9\u63a5\u53e3\u7f16\u7a0b\uff0c\u800c\u4e0d\u662f\u9488\u5bf9\u5b9e\u73b0\u7f16\u7a0b\u3002 \u7ed3\u6784\u9694\u79bb\u539f\u5219\uff1a\u4f7f\u7528\u591a\u4e2a\u4e13\u95e8\u7684\u63a5\u53e3\uff0c\u4e0d\u5e94\u8be5\u4f7f\u7528\u5355\u4e00\u7684\u63a5\u53e3\u3002","title":"\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1SOLID\u539f\u5219"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_4","text":"from abc import ABCMeta, abstractmethod # \u62bd\u8c61\u4ea7\u54c1\u89d2\u8272 class Payment(metaclass=ABCMeta): @abstractmethod def pay(self, money): pass # \u5177\u4f53\u4ea7\u54c1\u89d2\u8272 class Alipay(Payment): def __init__(self, use_huabei=False): self.use_huabei = use_huabei def pay(self, money): if self.use_huabei == True: print(\"\u82b1\u5457\u652f\u4ed8\u4e86{0}\u5143!\".format(money)) else: print(\"\u652f\u4ed8\u5b9d\u4f59\u989d\u652f\u4ed8\u4e86{0}\u5143!\".format(money)) class WechatPay(Payment): def pay(self, money): print(\"\u5fae\u4fe1\u652f\u4ed8\u4e86%d\u5143!\" % (money)) # \u62bd\u8c61\u5de5\u5382\u89d2\u8272 class PaymentFactory(metaclass=ABCMeta): @abstractmethod def create_payment(self): pass # \u5177\u4f53\u5de5\u5382\u89d2\u8272 class AlipayFactory(PaymentFactory): def create_payment(self): return Alipay() class WechatPayFactory(PaymentFactory): def create_payment(self): return Alipay() class HuabeiFactory(PaymentFactory): def create_payment(self): return Alipay(use_huabei=True) hfp = HuabeiFactory().create_payment() hfp.pay(100) # \u82b1\u5457\u652f\u4ed8\u4e86100\u5143! \u89d2\u8272\u5305\u62ec\uff1a \u5de5\u5382\u89d2\u8272 \u62bd\u8c61\u4ea7\u54c1\u89d2\u8272(\u62bd\u8c61\u7c7b) \u5177\u4f53\u4ea7\u54c1\u89d2\u8272","title":"\u7b80\u5355\u5de5\u5382\u6a21\u5f0f"},{"location":"%E5%86%85%E5%AE%B9/%E5%85%B6%E4%BB%96/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_5","text":"\u5de5\u5382\u57fa\u7c7b\uff1a\u5b9a\u4e49\u4e00\u4e2a\u521b\u5efa\u5b50\u7c7b\u7684\u63a5\u53e3 \u8ba9\u5b50\u7c7b\u51b3\u5b9a\u5b9e\u4f8b\u5316\u4ec0\u4e48\u6837\u7684\u4ea7\u54c1\u7c7b","title":"\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f"}]}